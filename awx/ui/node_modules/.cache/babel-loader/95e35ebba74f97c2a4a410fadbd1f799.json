{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{useState,useEffect}from'react';import useWebsocket from'hooks/useWebsocket';import{ProjectsAPI}from'api';export default function useWsProjects(initialProject){var _useState=useState(initialProject),_useState2=_slicedToArray(_useState,2),project=_useState2[0],setProject=_useState2[1];var lastMessage=useWebsocket({jobs:['status_changed'],control:['limit_reached_1']});var refreshProject=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$ProjectsAPI$re,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return ProjectsAPI.readDetail(project.id);case 2:_yield$ProjectsAPI$re=_context.sent;data=_yield$ProjectsAPI$re.data;setProject(data);case 5:case\"end\":return _context.stop();}}},_callee);}));return function refreshProject(){return _ref.apply(this,arguments);};}();useEffect(function(){setProject(initialProject);},[initialProject]);useEffect(function(){if(!project||!(lastMessage!==null&&lastMessage!==void 0&&lastMessage.unified_job_id)||lastMessage.type!=='project_update'){return;}if(lastMessage.finished){refreshProject();return;}var updatedProject=_objectSpread(_objectSpread({},project),{},{summary_fields:_objectSpread(_objectSpread({},project.summary_fields),{},{current_job:{id:lastMessage.unified_job_id,status:lastMessage.status,finished:lastMessage.finished}})});setProject(updatedProject);},[lastMessage]// eslint-disable-line react-hooks/exhaustive-deps\n);return project;}","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Project/ProjectDetail/useWsProject.js"],"names":["useState","useEffect","useWebsocket","ProjectsAPI","useWsProjects","initialProject","project","setProject","lastMessage","jobs","control","refreshProject","readDetail","id","data","unified_job_id","type","finished","updatedProject","summary_fields","current_job","status"],"mappings":"8ZAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,YAAP,KAAyB,oBAAzB,CACA,OAASC,WAAT,KAA4B,KAA5B,CAEA,cAAe,SAASC,CAAAA,aAAT,CAAuBC,cAAvB,CAAuC,CACpD,cAA8BL,QAAQ,CAACK,cAAD,CAAtC,wCAAOC,OAAP,eAAgBC,UAAhB,eACA,GAAMC,CAAAA,WAAW,CAAGN,YAAY,CAAC,CAC/BO,IAAI,CAAE,CAAC,gBAAD,CADyB,CAE/BC,OAAO,CAAE,CAAC,iBAAD,CAFsB,CAAD,CAAhC,CAKA,GAAMC,CAAAA,cAAc,0FAAG,wLACER,CAAAA,WAAW,CAACS,UAAZ,CAAuBN,OAAO,CAACO,EAA/B,CADF,4CACbC,IADa,uBACbA,IADa,CAErBP,UAAU,CAACO,IAAD,CAAV,CAFqB,sDAAH,kBAAdH,CAAAA,cAAc,0CAApB,CAKAV,SAAS,CAAC,UAAM,CACdM,UAAU,CAACF,cAAD,CAAV,CACD,CAFQ,CAEN,CAACA,cAAD,CAFM,CAAT,CAIAJ,SAAS,CACP,UAAM,CACJ,GACE,CAACK,OAAD,EACA,EAACE,WAAD,SAACA,WAAD,WAACA,WAAW,CAAEO,cAAd,CADA,EAEAP,WAAW,CAACQ,IAAZ,GAAqB,gBAHvB,CAIE,CACA,OACD,CAED,GAAIR,WAAW,CAACS,QAAhB,CAA0B,CACxBN,cAAc,GACd,OACD,CAED,GAAMO,CAAAA,cAAc,gCACfZ,OADe,MAElBa,cAAc,gCACTb,OAAO,CAACa,cADC,MAEZC,WAAW,CAAE,CACXP,EAAE,CAAEL,WAAW,CAACO,cADL,CAEXM,MAAM,CAAEb,WAAW,CAACa,MAFT,CAGXJ,QAAQ,CAAET,WAAW,CAACS,QAHX,CAFD,EAFI,EAApB,CAWAV,UAAU,CAACW,cAAD,CAAV,CACD,CA3BM,CA4BP,CAACV,WAAD,CAAc;AA5BP,CAAT,CA+BA,MAAOF,CAAAA,OAAP,CACD","sourcesContent":["import { useState, useEffect } from 'react';\nimport useWebsocket from 'hooks/useWebsocket';\nimport { ProjectsAPI } from 'api';\n\nexport default function useWsProjects(initialProject) {\n  const [project, setProject] = useState(initialProject);\n  const lastMessage = useWebsocket({\n    jobs: ['status_changed'],\n    control: ['limit_reached_1'],\n  });\n\n  const refreshProject = async () => {\n    const { data } = await ProjectsAPI.readDetail(project.id);\n    setProject(data);\n  };\n\n  useEffect(() => {\n    setProject(initialProject);\n  }, [initialProject]);\n\n  useEffect(\n    () => {\n      if (\n        !project ||\n        !lastMessage?.unified_job_id ||\n        lastMessage.type !== 'project_update'\n      ) {\n        return;\n      }\n\n      if (lastMessage.finished) {\n        refreshProject();\n        return;\n      }\n\n      const updatedProject = {\n        ...project,\n        summary_fields: {\n          ...project.summary_fields,\n          current_job: {\n            id: lastMessage.unified_job_id,\n            status: lastMessage.status,\n            finished: lastMessage.finished,\n          },\n        },\n      };\n      setProject(updatedProject);\n    },\n    [lastMessage] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  return project;\n}\n"]},"metadata":{},"sourceType":"module"}