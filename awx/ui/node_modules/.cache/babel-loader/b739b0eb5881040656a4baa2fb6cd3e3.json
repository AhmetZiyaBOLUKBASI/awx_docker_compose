{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useCallback,useEffect}from'react';import{useLocation}from'react-router-dom';import{FormGroup}from'@patternfly/react-core';import{ApplicationsAPI}from'api';import{Application}from'types';import{getSearchableKeys}from'components/PaginatedTable';import{getQSConfig,parseQueryString}from'util/qs';import useRequest from'hooks/useRequest';import Lookup from'./Lookup';import OptionsList from'../OptionsList';import LookupErrorMessage from'./shared/LookupErrorMessage';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QS_CONFIG=getQSConfig('applications',{page:1,page_size:5,order_by:'name'});function ApplicationLookup(_ref){var onChange=_ref.onChange,value=_ref.value,label=_ref.label,fieldName=_ref.fieldName,validate=_ref.validate;var location=useLocation();var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _actionsResponse$data,_actionsResponse$data2,_actionsResponse$data3;var params,_yield$Promise$all,_yield$Promise$all2,_yield$Promise$all2$,results,count,actionsResponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:params=parseQueryString(QS_CONFIG,location.search);_context.next=3;return Promise.all([ApplicationsAPI.read(params),ApplicationsAPI.readOptions]);case 3:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);_yield$Promise$all2$=_yield$Promise$all2[0].data;results=_yield$Promise$all2$.results;count=_yield$Promise$all2$.count;actionsResponse=_yield$Promise$all2[1];return _context.abrupt(\"return\",{applications:results,itemCount:count,relatedSearchableKeys:((actionsResponse===null||actionsResponse===void 0?void 0:(_actionsResponse$data=actionsResponse.data)===null||_actionsResponse$data===void 0?void 0:_actionsResponse$data.related_search_fields)||[]).map(function(val){return val.slice(0,-8);}),searchableKeys:getSearchableKeys(actionsResponse===null||actionsResponse===void 0?void 0:(_actionsResponse$data2=actionsResponse.data)===null||_actionsResponse$data2===void 0?void 0:(_actionsResponse$data3=_actionsResponse$data2.actions)===null||_actionsResponse$data3===void 0?void 0:_actionsResponse$data3.GET)});case 10:case\"end\":return _context.stop();}}},_callee);})),[location]),{applications:[],itemCount:0,relatedSearchableKeys:[],searchableKeys:[]}),error=_useRequest.error,_useRequest$result=_useRequest.result,applications=_useRequest$result.applications,itemCount=_useRequest$result.itemCount,relatedSearchableKeys=_useRequest$result.relatedSearchableKeys,searchableKeys=_useRequest$result.searchableKeys,fetchApplications=_useRequest.request;var checkApplicationName=useCallback(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(name){var _yield$ApplicationsAP,_yield$ApplicationsAP2,nameMatchResults,nameMatchCount;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(name){_context2.next=3;break;}onChange(null);return _context2.abrupt(\"return\");case 3:_context2.prev=3;_context2.next=6;return ApplicationsAPI.read({name:name});case 6:_yield$ApplicationsAP=_context2.sent;_yield$ApplicationsAP2=_yield$ApplicationsAP.data;nameMatchResults=_yield$ApplicationsAP2.results;nameMatchCount=_yield$ApplicationsAP2.count;onChange(nameMatchCount?nameMatchResults[0]:null);_context2.next=16;break;case 13:_context2.prev=13;_context2.t0=_context2[\"catch\"](3);onChange(null);case 16:case\"end\":return _context2.stop();}}},_callee2,null,[[3,13]]);}));return function(_x){return _ref3.apply(this,arguments);};}(),[onChange]);useEffect(function(){fetchApplications();},[fetchApplications]);return/*#__PURE__*/_jsxs(FormGroup,{fieldId:\"application\",label:label,children:[/*#__PURE__*/_jsx(Lookup,{id:\"application\",header:/*i18n*/i18n._(\"Application\"),value:value,onChange:onChange,onUpdate:fetchApplications,onDebounce:checkApplicationName,fieldName:fieldName,validate:validate,qsConfig:QS_CONFIG,renderOptionsList:function renderOptionsList(_ref4){var state=_ref4.state,dispatch=_ref4.dispatch,canDelete=_ref4.canDelete;return/*#__PURE__*/_jsx(OptionsList,{value:state.selectedItems,options:applications,optionCount:itemCount,header:/*i18n*/i18n._(\"Applications\"),qsConfig:QS_CONFIG,searchColumns:[{name:/*i18n*/i18n._(\"Name\"),key:'name__icontains',isDefault:true},{name:/*i18n*/i18n._(\"Description\"),key:'description__icontains'}],sortColumns:[{name:/*i18n*/i18n._(\"Name\"),key:'name'},{name:/*i18n*/i18n._(\"Created\"),key:'created'},{name:/*i18n*/i18n._(\"Organization\"),key:'organization'},{name:/*i18n*/i18n._(\"Description\"),key:'description'}],searchableKeys:searchableKeys,relatedSearchableKeys:relatedSearchableKeys,readOnly:!canDelete,name:\"application\",selectItem:function selectItem(item){return dispatch({type:'SELECT_ITEM',item:item});},deselectItem:function deselectItem(item){return dispatch({type:'DESELECT_ITEM',item:item});}});}}),/*#__PURE__*/_jsx(LookupErrorMessage,{error:error})]});}ApplicationLookup.defaultProps={value:null,validate:function validate(){return undefined;},fieldName:'application'};export default ApplicationLookup;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/Lookup/ApplicationLookup.js"],"names":["React","useCallback","useEffect","useLocation","FormGroup","ApplicationsAPI","Application","getSearchableKeys","getQSConfig","parseQueryString","useRequest","Lookup","OptionsList","LookupErrorMessage","QS_CONFIG","page","page_size","order_by","ApplicationLookup","onChange","value","label","fieldName","validate","location","params","search","Promise","all","read","readOptions","data","results","count","actionsResponse","applications","itemCount","relatedSearchableKeys","related_search_fields","map","val","slice","searchableKeys","actions","GET","error","result","fetchApplications","request","checkApplicationName","name","nameMatchResults","nameMatchCount","state","dispatch","canDelete","selectedItems","key","isDefault","item","type","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport { func, node, string } from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { t } from '@lingui/macro';\nimport { FormGroup } from '@patternfly/react-core';\nimport { ApplicationsAPI } from 'api';\nimport { Application } from 'types';\nimport { getSearchableKeys } from 'components/PaginatedTable';\nimport { getQSConfig, parseQueryString } from 'util/qs';\nimport useRequest from 'hooks/useRequest';\nimport Lookup from './Lookup';\nimport OptionsList from '../OptionsList';\nimport LookupErrorMessage from './shared/LookupErrorMessage';\n\nconst QS_CONFIG = getQSConfig('applications', {\n  page: 1,\n  page_size: 5,\n  order_by: 'name',\n});\n\nfunction ApplicationLookup({ onChange, value, label, fieldName, validate }) {\n  const location = useLocation();\n  const {\n    error,\n    result: { applications, itemCount, relatedSearchableKeys, searchableKeys },\n    request: fetchApplications,\n  } = useRequest(\n    useCallback(async () => {\n      const params = parseQueryString(QS_CONFIG, location.search);\n\n      const [\n        {\n          data: { results, count },\n        },\n        actionsResponse,\n      ] = await Promise.all([\n        ApplicationsAPI.read(params),\n        ApplicationsAPI.readOptions,\n      ]);\n      return {\n        applications: results,\n        itemCount: count,\n        relatedSearchableKeys: (\n          actionsResponse?.data?.related_search_fields || []\n        ).map((val) => val.slice(0, -8)),\n        searchableKeys: getSearchableKeys(actionsResponse?.data?.actions?.GET),\n      };\n    }, [location]),\n    {\n      applications: [],\n      itemCount: 0,\n      relatedSearchableKeys: [],\n      searchableKeys: [],\n    }\n  );\n\n  const checkApplicationName = useCallback(\n    async (name) => {\n      if (!name) {\n        onChange(null);\n        return;\n      }\n\n      try {\n        const {\n          data: { results: nameMatchResults, count: nameMatchCount },\n        } = await ApplicationsAPI.read({ name });\n        onChange(nameMatchCount ? nameMatchResults[0] : null);\n      } catch {\n        onChange(null);\n      }\n    },\n    [onChange]\n  );\n\n  useEffect(() => {\n    fetchApplications();\n  }, [fetchApplications]);\n  return (\n    <FormGroup fieldId=\"application\" label={label}>\n      <Lookup\n        id=\"application\"\n        header={t`Application`}\n        value={value}\n        onChange={onChange}\n        onUpdate={fetchApplications}\n        onDebounce={checkApplicationName}\n        fieldName={fieldName}\n        validate={validate}\n        qsConfig={QS_CONFIG}\n        renderOptionsList={({ state, dispatch, canDelete }) => (\n          <OptionsList\n            value={state.selectedItems}\n            options={applications}\n            optionCount={itemCount}\n            header={t`Applications`}\n            qsConfig={QS_CONFIG}\n            searchColumns={[\n              {\n                name: t`Name`,\n                key: 'name__icontains',\n                isDefault: true,\n              },\n              {\n                name: t`Description`,\n                key: 'description__icontains',\n              },\n            ]}\n            sortColumns={[\n              {\n                name: t`Name`,\n                key: 'name',\n              },\n              {\n                name: t`Created`,\n                key: 'created',\n              },\n              {\n                name: t`Organization`,\n                key: 'organization',\n              },\n              {\n                name: t`Description`,\n                key: 'description',\n              },\n            ]}\n            searchableKeys={searchableKeys}\n            relatedSearchableKeys={relatedSearchableKeys}\n            readOnly={!canDelete}\n            name=\"application\"\n            selectItem={(item) => dispatch({ type: 'SELECT_ITEM', item })}\n            deselectItem={(item) => dispatch({ type: 'DESELECT_ITEM', item })}\n          />\n        )}\n      />\n      <LookupErrorMessage error={error} />\n    </FormGroup>\n  );\n}\nApplicationLookup.propTypes = {\n  label: node.isRequired,\n  onChange: func.isRequired,\n  value: Application,\n  validate: func,\n  fieldName: string,\n};\n\nApplicationLookup.defaultProps = {\n  value: null,\n  validate: () => undefined,\n  fieldName: 'application',\n};\n\nexport default ApplicationLookup;\n"]},"metadata":{},"sourceType":"module"}