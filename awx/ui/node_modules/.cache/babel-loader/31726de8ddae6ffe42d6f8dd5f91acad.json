{"ast":null,"code":"import _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nexport var DropdownToggleAction = /*#__PURE__*/function (_React$Component) {\n  _inherits(DropdownToggleAction, _React$Component);\n\n  var _super = _createSuper(DropdownToggleAction);\n\n  function DropdownToggleAction() {\n    _classCallCheck(this, DropdownToggleAction);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DropdownToggleAction, [{\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          id = _a.id,\n          className = _a.className,\n          onClick = _a.onClick,\n          isDisabled = _a.isDisabled,\n          children = _a.children,\n          props = __rest(_a, [\"id\", \"className\", \"onClick\", \"isDisabled\", \"children\"]);\n\n      return React.createElement(\"button\", Object.assign({\n        id: id,\n        className: css(styles.dropdownToggleButton, className),\n        onClick: onClick\n      }, isDisabled && {\n        disabled: true,\n        'aria-disabled': true\n      }, props), children);\n    }\n  }]);\n\n  return DropdownToggleAction;\n}(React.Component);\nDropdownToggleAction.displayName = 'DropdownToggleAction';\nDropdownToggleAction.defaultProps = {\n  className: '',\n  isDisabled: false,\n  onClick: function onClick() {}\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Dropdown/DropdownToggleAction.tsx"],"names":[],"mappings":";;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,2DAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AAiBA,WAAa,oBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WAQE,kBAAM;AACE,UAAA,EAAA,GAA6D,KAA7D,KAAA;AAAA,UAAE,EAAF,GAA8C,EAA9C,CAAE,EAAF;AAAA,UAAM,SAAN,GAA8C,EAA9C,CAAM,SAAN;AAAA,UAAiB,OAAjB,GAA8C,EAA9C,CAAiB,OAAjB;AAAA,UAA0B,UAA1B,GAA8C,EAA9C,CAA0B,UAA1B;AAAA,UAAsC,QAAtC,GAA8C,EAA9C,CAAsC,QAAtC;AAAA,UAAmD,KAAnD,GAAwD,MAAA,CAAA,EAAA,EAAxD,CAAA,IAAA,EAAA,WAAA,EAAA,SAAA,EAAA,YAAA,EAAA,UAAA,CAAwD,CAAxD;;AAEN,aACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACE,QAAA,EAAE,EAAE,EADN;AAEE,QAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,oBAAR,EAA8B,SAA9B,CAFhB;AAGE,QAAA,OAAO,EAAE;AAHX,OAAA,EAIO,UAAU,IAAI;AAAE,QAAA,QAAQ,EAAE,IAAZ;AAAkB,yBAAiB;AAAnC,OAJrB,EAKM,KALN,CAAA,EAOG,QAPH,CADF;AAWD;AAtBH;;AAAA;AAAA,EAA0C,KAAK,CAAC,SAAhD;AACS,oBAAA,CAAA,WAAA,GAAc,sBAAd;AACA,oBAAA,CAAA,YAAA,GAA0C;AAC/C,EAAA,SAAS,EAAE,EADoC;AAE/C,EAAA,UAAU,EAAE,KAFmC;AAG/C,EAAA,OAAO,EAAE,mBAAK,CAAG;AAH8B,CAA1C","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\n\nexport interface DropdownToggleActionProps {\n  /** Additional classes added to the DropdownToggleAction */\n  className?: string;\n  /** Flag to show if the action button is disabled */\n  isDisabled?: boolean;\n  /** A callback for when the action button is clicked */\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  /** Element to be rendered inside the <button> */\n  children?: React.ReactNode;\n  /** Id of the action button */\n  id?: string;\n  /** Aria-label of the action button */\n  'aria-label'?: string;\n}\n\nexport class DropdownToggleAction extends React.Component<DropdownToggleActionProps> {\n  static displayName = 'DropdownToggleAction';\n  static defaultProps: DropdownToggleActionProps = {\n    className: '',\n    isDisabled: false,\n    onClick: () => {}\n  };\n\n  render() {\n    const { id, className, onClick, isDisabled, children, ...props } = this.props;\n\n    return (\n      <button\n        id={id}\n        className={css(styles.dropdownToggleButton, className)}\n        onClick={onClick}\n        {...(isDisabled && { disabled: true, 'aria-disabled': true })}\n        {...props}\n      >\n        {children}\n      </button>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}