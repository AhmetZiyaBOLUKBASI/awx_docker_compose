{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import React,{useState}from'react';import{useField}from'formik';import{jsonToYaml,yamlToJson}from'util/yaml';import OtherPromptsStep from'./OtherPromptsStep';import StepName from'./StepName';import{jsx as _jsx}from\"react/jsx-runtime\";var STEP_ID='other';export var YAML_MODE='yaml';export var JSON_MODE='javascript';var getVariablesData=function getVariablesData(resource){if(resource!==null&&resource!==void 0&&resource.extra_data){return jsonToYaml(JSON.stringify(resource.extra_data));}if(resource!==null&&resource!==void 0&&resource.extra_vars&&(resource===null||resource===void 0?void 0:resource.extra_vars)!=='---'){return resource.extra_vars;}return'---';};var FIELD_NAMES=['job_type','limit','verbosity','diff_mode','job_tags','skip_tags','extra_vars'];export default function useOtherPromptsStep(launchConfig,resource){var _useField=useField('extra_vars'),_useField2=_slicedToArray(_useField,1),variablesField=_useField2[0];var _useState=useState(null),_useState2=_slicedToArray(_useState,2),variablesMode=_useState2[0],setVariablesMode=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isTouched=_useState4[0],setIsTouched=_useState4[1];var handleModeChange=function handleModeChange(mode){setVariablesMode(mode);};var validateVariables=function validateVariables(){if(!isTouched){return false;}try{if(variablesMode===JSON_MODE){JSON.parse(variablesField.value);}else{yamlToJson(variablesField.value);}}catch(error){return true;}return false;};var hasError=launchConfig.ask_variables_on_launch?validateVariables():false;return{step:getStep(launchConfig,hasError,variablesMode,handleModeChange),initialValues:getInitialValues(launchConfig,resource),isReady:true,contentError:null,hasError:hasError,setTouched:function setTouched(setFieldTouched){setIsTouched(true);FIELD_NAMES.forEach(function(fieldName){return setFieldTouched(fieldName,true,false);});},validate:function validate(){}};}function getStep(launchConfig,hasError,variablesMode,handleModeChange){if(!shouldShowPrompt(launchConfig)){return null;}return{id:STEP_ID,key:5,name:/*#__PURE__*/_jsx(StepName,{hasErrors:hasError,id:\"other-prompts-step\",children:/*i18n*/i18n._(\"Other prompts\")}),component:/*#__PURE__*/_jsx(OtherPromptsStep,{launchConfig:launchConfig,variablesMode:variablesMode,onVarModeChange:handleModeChange}),enableNext:true};}function shouldShowPrompt(launchConfig){return launchConfig.ask_job_type_on_launch||launchConfig.ask_limit_on_launch||launchConfig.ask_verbosity_on_launch||launchConfig.ask_tags_on_launch||launchConfig.ask_skip_tags_on_launch||launchConfig.ask_variables_on_launch||launchConfig.ask_scm_branch_on_launch||launchConfig.ask_diff_mode_on_launch;}function getInitialValues(launchConfig,resource){var initialValues={};if(!launchConfig){return initialValues;}if(launchConfig.ask_job_type_on_launch){initialValues.job_type=(resource===null||resource===void 0?void 0:resource.job_type)||'';}if(launchConfig.ask_limit_on_launch){initialValues.limit=(resource===null||resource===void 0?void 0:resource.limit)||null;}if(launchConfig.ask_verbosity_on_launch){initialValues.verbosity=(resource===null||resource===void 0?void 0:resource.verbosity)||0;}if(launchConfig.ask_tags_on_launch){initialValues.job_tags=(resource===null||resource===void 0?void 0:resource.job_tags)||'';}if(launchConfig.ask_skip_tags_on_launch){initialValues.skip_tags=(resource===null||resource===void 0?void 0:resource.skip_tags)||'';}if(launchConfig.ask_variables_on_launch){initialValues.extra_vars=getVariablesData(resource);}if(launchConfig.ask_scm_branch_on_launch){initialValues.scm_branch=(resource===null||resource===void 0?void 0:resource.scm_branch)||'';}if(launchConfig.ask_diff_mode_on_launch){initialValues.diff_mode=(resource===null||resource===void 0?void 0:resource.diff_mode)||false;}return initialValues;}","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/LaunchPrompt/steps/useOtherPromptsStep.js"],"names":["React","useState","useField","jsonToYaml","yamlToJson","OtherPromptsStep","StepName","STEP_ID","YAML_MODE","JSON_MODE","getVariablesData","resource","extra_data","JSON","stringify","extra_vars","FIELD_NAMES","useOtherPromptsStep","launchConfig","variablesField","variablesMode","setVariablesMode","isTouched","setIsTouched","handleModeChange","mode","validateVariables","parse","value","error","hasError","ask_variables_on_launch","step","getStep","initialValues","getInitialValues","isReady","contentError","setTouched","setFieldTouched","forEach","fieldName","validate","shouldShowPrompt","id","key","name","component","enableNext","ask_job_type_on_launch","ask_limit_on_launch","ask_verbosity_on_launch","ask_tags_on_launch","ask_skip_tags_on_launch","ask_scm_branch_on_launch","ask_diff_mode_on_launch","job_type","limit","verbosity","job_tags","skip_tags","scm_branch","diff_mode"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { t } from '@lingui/macro';\nimport { useField } from 'formik';\nimport { jsonToYaml, yamlToJson } from 'util/yaml';\nimport OtherPromptsStep from './OtherPromptsStep';\nimport StepName from './StepName';\n\nconst STEP_ID = 'other';\nexport const YAML_MODE = 'yaml';\nexport const JSON_MODE = 'javascript';\n\nconst getVariablesData = (resource) => {\n  if (resource?.extra_data) {\n    return jsonToYaml(JSON.stringify(resource.extra_data));\n  }\n  if (resource?.extra_vars && resource?.extra_vars !== '---') {\n    return resource.extra_vars;\n  }\n  return '---';\n};\n\nconst FIELD_NAMES = [\n  'job_type',\n  'limit',\n  'verbosity',\n  'diff_mode',\n  'job_tags',\n  'skip_tags',\n  'extra_vars',\n];\n\nexport default function useOtherPromptsStep(launchConfig, resource) {\n  const [variablesField] = useField('extra_vars');\n  const [variablesMode, setVariablesMode] = useState(null);\n  const [isTouched, setIsTouched] = useState(false);\n\n  const handleModeChange = (mode) => {\n    setVariablesMode(mode);\n  };\n\n  const validateVariables = () => {\n    if (!isTouched) {\n      return false;\n    }\n    try {\n      if (variablesMode === JSON_MODE) {\n        JSON.parse(variablesField.value);\n      } else {\n        yamlToJson(variablesField.value);\n      }\n    } catch (error) {\n      return true;\n    }\n    return false;\n  };\n  const hasError = launchConfig.ask_variables_on_launch\n    ? validateVariables()\n    : false;\n\n  return {\n    step: getStep(launchConfig, hasError, variablesMode, handleModeChange),\n    initialValues: getInitialValues(launchConfig, resource),\n    isReady: true,\n    contentError: null,\n    hasError,\n    setTouched: (setFieldTouched) => {\n      setIsTouched(true);\n      FIELD_NAMES.forEach((fieldName) =>\n        setFieldTouched(fieldName, true, false)\n      );\n    },\n    validate: () => {},\n  };\n}\n\nfunction getStep(launchConfig, hasError, variablesMode, handleModeChange) {\n  if (!shouldShowPrompt(launchConfig)) {\n    return null;\n  }\n  return {\n    id: STEP_ID,\n    key: 5,\n    name: (\n      <StepName hasErrors={hasError} id=\"other-prompts-step\">\n        {t`Other prompts`}\n      </StepName>\n    ),\n    component: (\n      <OtherPromptsStep\n        launchConfig={launchConfig}\n        variablesMode={variablesMode}\n        onVarModeChange={handleModeChange}\n      />\n    ),\n    enableNext: true,\n  };\n}\n\nfunction shouldShowPrompt(launchConfig) {\n  return (\n    launchConfig.ask_job_type_on_launch ||\n    launchConfig.ask_limit_on_launch ||\n    launchConfig.ask_verbosity_on_launch ||\n    launchConfig.ask_tags_on_launch ||\n    launchConfig.ask_skip_tags_on_launch ||\n    launchConfig.ask_variables_on_launch ||\n    launchConfig.ask_scm_branch_on_launch ||\n    launchConfig.ask_diff_mode_on_launch\n  );\n}\n\nfunction getInitialValues(launchConfig, resource) {\n  const initialValues = {};\n\n  if (!launchConfig) {\n    return initialValues;\n  }\n\n  if (launchConfig.ask_job_type_on_launch) {\n    initialValues.job_type = resource?.job_type || '';\n  }\n  if (launchConfig.ask_limit_on_launch) {\n    initialValues.limit = resource?.limit || null;\n  }\n  if (launchConfig.ask_verbosity_on_launch) {\n    initialValues.verbosity = resource?.verbosity || 0;\n  }\n  if (launchConfig.ask_tags_on_launch) {\n    initialValues.job_tags = resource?.job_tags || '';\n  }\n  if (launchConfig.ask_skip_tags_on_launch) {\n    initialValues.skip_tags = resource?.skip_tags || '';\n  }\n  if (launchConfig.ask_variables_on_launch) {\n    initialValues.extra_vars = getVariablesData(resource);\n  }\n  if (launchConfig.ask_scm_branch_on_launch) {\n    initialValues.scm_branch = resource?.scm_branch || '';\n  }\n  if (launchConfig.ask_diff_mode_on_launch) {\n    initialValues.diff_mode = resource?.diff_mode || false;\n  }\n  return initialValues;\n}\n"]},"metadata":{},"sourceType":"module"}