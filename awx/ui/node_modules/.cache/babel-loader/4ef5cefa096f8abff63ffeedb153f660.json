{"ast":null,"code":"import _taggedTemplateLiteral from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3;import{i18n}from\"@lingui/core\";import React from'react';import styled from'styled-components';import{Badge,Tooltip}from'@patternfly/react-core';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var BarWrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background-color: #d7d7d7;\\n  display: flex;\\n  height: 5px;\\n  margin-top: 16px;\\n  width: 100%;\\n\"])));var BarSegment=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n  flex-grow: \",\";\\n\"])),function(props){return props.color||'inherit';},function(props){return props.count||0;});BarSegment.displayName='BarSegment';var TooltipContent=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  display: flex;\\n\\n  span.pf-c-badge {\\n    margin-left: 10px;\\n  }\\n\"])));var HostStatusBar=function HostStatusBar(_ref){var _ref$counts=_ref.counts,counts=_ref$counts===void 0?{}:_ref$counts;var noData=Object.keys(counts).length===0;var hostStatus={ok:{color:'#4CB140',label:/*i18n*/i18n._(\"OK\")},skipped:{color:'#73BCF7',label:/*i18n*/i18n._(\"Skipped\")},changed:{color:'#F0AB00',label:/*i18n*/i18n._(\"Changed\")},failures:{color:'#C9190B',label:/*i18n*/i18n._(\"Failed\")},dark:{color:'#8F4700',label:/*i18n*/i18n._(\"Unreachable\")}};var barSegments=Object.keys(hostStatus).map(function(key){var count=counts[key]||0;return/*#__PURE__*/_jsx(Tooltip,{content:/*#__PURE__*/_jsxs(TooltipContent,{children:[hostStatus[key].label,/*#__PURE__*/_jsx(Badge,{isRead:true,children:count})]}),children:/*#__PURE__*/_jsx(BarSegment,{color:hostStatus[key].color,count:count},key)},key);});if(noData){return/*#__PURE__*/_jsx(BarWrapper,{children:/*#__PURE__*/_jsx(Tooltip,{content:/*i18n*/i18n._(\"Host status information for this job is unavailable.\"),children:/*#__PURE__*/_jsx(BarSegment,{count:1})})});}return/*#__PURE__*/_jsx(BarWrapper,{children:barSegments});};export default HostStatusBar;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Job/JobOutput/shared/HostStatusBar.js"],"names":["React","styled","Badge","Tooltip","BarWrapper","div","BarSegment","props","color","count","displayName","TooltipContent","HostStatusBar","counts","noData","Object","keys","length","hostStatus","ok","label","skipped","changed","failures","dark","barSegments","map","key"],"mappings":"4MAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAGA,OAASC,KAAT,CAAgBC,OAAhB,KAA+B,wBAA/B,C,wFAEA,GAAMC,CAAAA,UAAU,CAAGH,MAAM,CAACI,GAAV,wKAAhB,CAQA,GAAMC,CAAAA,UAAU,CAAGL,MAAM,CAACI,GAAV,kHACM,SAACE,KAAD,QAAWA,CAAAA,KAAK,CAACC,KAAN,EAAe,SAA1B,EADN,CAED,SAACD,KAAD,QAAWA,CAAAA,KAAK,CAACE,KAAN,EAAe,CAA1B,EAFC,CAAhB,CAIAH,UAAU,CAACI,WAAX,CAAyB,YAAzB,CAEA,GAAMC,CAAAA,cAAc,CAAGV,MAAM,CAACI,GAAV,mKAApB,CASA,GAAMO,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAqB,sBAAlBC,MAAkB,CAAlBA,MAAkB,sBAAT,EAAS,aACzC,GAAMC,CAAAA,MAAM,CAAGC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,MAApB,GAA+B,CAA9C,CACA,GAAMC,CAAAA,UAAU,CAAG,CACjBC,EAAE,CAAE,CACFX,KAAK,CAAE,SADL,CAEFY,KAAK,SAAE,YAFL,CADa,CAKjBC,OAAO,CAAE,CACPb,KAAK,CAAE,SADA,CAEPY,KAAK,SAAE,iBAFA,CALQ,CASjBE,OAAO,CAAE,CACPd,KAAK,CAAE,SADA,CAEPY,KAAK,SAAE,iBAFA,CATQ,CAajBG,QAAQ,CAAE,CACRf,KAAK,CAAE,SADC,CAERY,KAAK,SAAE,gBAFC,CAbO,CAiBjBI,IAAI,CAAE,CACJhB,KAAK,CAAE,SADH,CAEJY,KAAK,SAAE,qBAFH,CAjBW,CAAnB,CAuBA,GAAMK,CAAAA,WAAW,CAAGV,MAAM,CAACC,IAAP,CAAYE,UAAZ,EAAwBQ,GAAxB,CAA4B,SAACC,GAAD,CAAS,CACvD,GAAMlB,CAAAA,KAAK,CAAGI,MAAM,CAACc,GAAD,CAAN,EAAe,CAA7B,CACA,mBACE,KAAC,OAAD,EAEE,OAAO,cACL,MAAC,cAAD,YACGT,UAAU,CAACS,GAAD,CAAV,CAAgBP,KADnB,cAEE,KAAC,KAAD,EAAO,MAAM,KAAb,UAAeX,KAAf,EAFF,GAHJ,uBASE,KAAC,UAAD,EAAsB,KAAK,CAAES,UAAU,CAACS,GAAD,CAAV,CAAgBnB,KAA7C,CAAoD,KAAK,CAAEC,KAA3D,EAAiBkB,GAAjB,CATF,EACOA,GADP,CADF,CAaD,CAfmB,CAApB,CAiBA,GAAIb,MAAJ,CAAY,CACV,mBACE,KAAC,UAAD,wBACE,KAAC,OAAD,EACE,OAAO,SAAE,8DADX,uBAGE,KAAC,UAAD,EAAY,KAAK,CAAE,CAAnB,EAHF,EADF,EADF,CASD,CAED,mBAAO,KAAC,UAAD,WAAaW,WAAb,EAAP,CACD,CAvDD,CAyDA,cAAeb,CAAAA,aAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport { t } from '@lingui/macro';\nimport { Badge, Tooltip } from '@patternfly/react-core';\n\nconst BarWrapper = styled.div`\n  background-color: #d7d7d7;\n  display: flex;\n  height: 5px;\n  margin-top: 16px;\n  width: 100%;\n`;\n\nconst BarSegment = styled.div`\n  background-color: ${(props) => props.color || 'inherit'};\n  flex-grow: ${(props) => props.count || 0};\n`;\nBarSegment.displayName = 'BarSegment';\n\nconst TooltipContent = styled.div`\n  align-items: center;\n  display: flex;\n\n  span.pf-c-badge {\n    margin-left: 10px;\n  }\n`;\n\nconst HostStatusBar = ({ counts = {} }) => {\n  const noData = Object.keys(counts).length === 0;\n  const hostStatus = {\n    ok: {\n      color: '#4CB140',\n      label: t`OK`,\n    },\n    skipped: {\n      color: '#73BCF7',\n      label: t`Skipped`,\n    },\n    changed: {\n      color: '#F0AB00',\n      label: t`Changed`,\n    },\n    failures: {\n      color: '#C9190B',\n      label: t`Failed`,\n    },\n    dark: {\n      color: '#8F4700',\n      label: t`Unreachable`,\n    },\n  };\n\n  const barSegments = Object.keys(hostStatus).map((key) => {\n    const count = counts[key] || 0;\n    return (\n      <Tooltip\n        key={key}\n        content={\n          <TooltipContent>\n            {hostStatus[key].label}\n            <Badge isRead>{count}</Badge>\n          </TooltipContent>\n        }\n      >\n        <BarSegment key={key} color={hostStatus[key].color} count={count} />\n      </Tooltip>\n    );\n  });\n\n  if (noData) {\n    return (\n      <BarWrapper>\n        <Tooltip\n          content={t`Host status information for this job is unavailable.`}\n        >\n          <BarSegment count={1} />\n        </Tooltip>\n      </BarWrapper>\n    );\n  }\n\n  return <BarWrapper>{barSegments}</BarWrapper>;\n};\n\nexport default HostStatusBar;\n"]},"metadata":{},"sourceType":"module"}