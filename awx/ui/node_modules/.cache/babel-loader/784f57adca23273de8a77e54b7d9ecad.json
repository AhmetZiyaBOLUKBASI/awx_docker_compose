{"ast":null,"code":"import _toConsumableArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useCallback}from'react';import{AlertGroup,Alert,AlertActionCloseButton,AlertVariant}from'@patternfly/react-core';import{Toast as ToastType}from'types';import{jsx as _jsx}from\"react/jsx-runtime\";export default function useToast(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),toasts=_useState2[0],setToasts=_useState2[1];var addToast=useCallback(function(newToast){setToasts(function(oldToasts){return[].concat(_toConsumableArray(oldToasts),[newToast]);});},[]);var removeToast=useCallback(function(toastId){setToasts(function(oldToasts){return oldToasts.filter(function(t){return t.id!==toastId;});});},[]);return{addToast:addToast,removeToast:removeToast,Toast:Toast,toastProps:{toasts:toasts,removeToast:removeToast}};}export function Toast(_ref){var toasts=_ref.toasts,removeToast=_ref.removeToast;if(!toasts.length){return null;}return/*#__PURE__*/_jsx(AlertGroup,{\"data-cy\":\"toast-container\",isToast:true,children:toasts.map(function(toast){return/*#__PURE__*/_jsx(Alert,{actionClose:/*#__PURE__*/_jsx(AlertActionCloseButton,{onClose:function onClose(){return removeToast(toast.id);}}),onTimeout:function onTimeout(){return removeToast(toast.id);},timeout:toast.hasTimeout,title:toast.title,variant:toast.variant,ouiaId:\"toast-message-\".concat(toast.id),children:toast.message},\"toast-message-\".concat(toast.id));})});}export{AlertVariant};","map":{"version":3,"sources":["/awx_devel/awx/ui/src/hooks/useToast.js"],"names":["React","useState","useCallback","AlertGroup","Alert","AlertActionCloseButton","AlertVariant","Toast","ToastType","useToast","toasts","setToasts","addToast","newToast","oldToasts","removeToast","toastId","filter","t","id","toastProps","length","map","toast","hasTimeout","title","variant","message"],"mappings":"sNAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,WAA1B,KAA6C,OAA7C,CACA,OACEC,UADF,CAEEC,KAFF,CAGEC,sBAHF,CAIEC,YAJF,KAKO,wBALP,CAOA,OAASC,KAAK,GAAIC,CAAAA,SAAlB,KAAmC,OAAnC,C,2CAEA,cAAe,SAASC,CAAAA,QAAT,EAAoB,CACjC,cAA4BR,QAAQ,CAAC,EAAD,CAApC,wCAAOS,MAAP,eAAeC,SAAf,eAEA,GAAMC,CAAAA,QAAQ,CAAGV,WAAW,CAAC,SAACW,QAAD,CAAc,CACzCF,SAAS,CAAC,SAACG,SAAD,qCAAmBA,SAAnB,GAA8BD,QAA9B,IAAD,CAAT,CACD,CAF2B,CAEzB,EAFyB,CAA5B,CAIA,GAAME,CAAAA,WAAW,CAAGb,WAAW,CAAC,SAACc,OAAD,CAAa,CAC3CL,SAAS,CAAC,SAACG,SAAD,QAAeA,CAAAA,SAAS,CAACG,MAAV,CAAiB,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,EAAF,GAASH,OAAhB,EAAjB,CAAf,EAAD,CAAT,CACD,CAF8B,CAE5B,EAF4B,CAA/B,CAIA,MAAO,CACLJ,QAAQ,CAARA,QADK,CAELG,WAAW,CAAXA,WAFK,CAGLR,KAAK,CAALA,KAHK,CAILa,UAAU,CAAE,CACVV,MAAM,CAANA,MADU,CAEVK,WAAW,CAAXA,WAFU,CAJP,CAAP,CASD,CAED,MAAO,SAASR,CAAAA,KAAT,MAAwC,IAAvBG,CAAAA,MAAuB,MAAvBA,MAAuB,CAAfK,WAAe,MAAfA,WAAe,CAC7C,GAAI,CAACL,MAAM,CAACW,MAAZ,CAAoB,CAClB,MAAO,KAAP,CACD,CAED,mBACE,KAAC,UAAD,EAAY,UAAQ,iBAApB,CAAsC,OAAO,KAA7C,UACGX,MAAM,CAACY,GAAP,CAAW,SAACC,KAAD,qBACV,KAAC,KAAD,EACE,WAAW,cACT,KAAC,sBAAD,EAAwB,OAAO,CAAE,yBAAMR,CAAAA,WAAW,CAACQ,KAAK,CAACJ,EAAP,CAAjB,EAAjC,EAFJ,CAIE,SAAS,CAAE,2BAAMJ,CAAAA,WAAW,CAACQ,KAAK,CAACJ,EAAP,CAAjB,EAJb,CAKE,OAAO,CAAEI,KAAK,CAACC,UALjB,CAME,KAAK,CAAED,KAAK,CAACE,KANf,CAOE,OAAO,CAAEF,KAAK,CAACG,OAPjB,CASE,MAAM,yBAAmBH,KAAK,CAACJ,EAAzB,CATR,UAWGI,KAAK,CAACI,OAXT,0BAQwBJ,KAAK,CAACJ,EAR9B,EADU,EAAX,CADH,EADF,CAmBD,CAOD,OAASb,YAAT","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport {\n  AlertGroup,\n  Alert,\n  AlertActionCloseButton,\n  AlertVariant,\n} from '@patternfly/react-core';\nimport { arrayOf, func } from 'prop-types';\nimport { Toast as ToastType } from 'types';\n\nexport default function useToast() {\n  const [toasts, setToasts] = useState([]);\n\n  const addToast = useCallback((newToast) => {\n    setToasts((oldToasts) => [...oldToasts, newToast]);\n  }, []);\n\n  const removeToast = useCallback((toastId) => {\n    setToasts((oldToasts) => oldToasts.filter((t) => t.id !== toastId));\n  }, []);\n\n  return {\n    addToast,\n    removeToast,\n    Toast,\n    toastProps: {\n      toasts,\n      removeToast,\n    },\n  };\n}\n\nexport function Toast({ toasts, removeToast }) {\n  if (!toasts.length) {\n    return null;\n  }\n\n  return (\n    <AlertGroup data-cy=\"toast-container\" isToast>\n      {toasts.map((toast) => (\n        <Alert\n          actionClose={\n            <AlertActionCloseButton onClose={() => removeToast(toast.id)} />\n          }\n          onTimeout={() => removeToast(toast.id)}\n          timeout={toast.hasTimeout}\n          title={toast.title}\n          variant={toast.variant}\n          key={`toast-message-${toast.id}`}\n          ouiaId={`toast-message-${toast.id}`}\n        >\n          {toast.message}\n        </Alert>\n      ))}\n    </AlertGroup>\n  );\n}\n\nToast.propTypes = {\n  toasts: arrayOf(ToastType).isRequired,\n  removeToast: func.isRequired,\n};\n\nexport { AlertVariant };\n"]},"metadata":{},"sourceType":"module"}