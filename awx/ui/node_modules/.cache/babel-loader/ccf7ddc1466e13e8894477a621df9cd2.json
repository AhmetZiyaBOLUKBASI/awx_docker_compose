{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/AppLauncher/app-launcher';\nimport { DropdownItem } from '../Dropdown';\nimport { ApplicationLauncherContent } from './ApplicationLauncherContent';\nimport { ApplicationLauncherContext } from './ApplicationLauncherContext';\nimport { ApplicationLauncherItemContext } from './ApplicationLauncherItemContext';\nimport StarIcon from '@patternfly/react-icons/dist/esm/icons/star-icon';\nimport { getUniqueId } from '../../helpers/util';\nexport var ApplicationLauncherItem = function ApplicationLauncherItem(_a) {\n  var _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      id = _a.id,\n      children = _a.children,\n      _a$icon = _a.icon,\n      icon = _a$icon === void 0 ? null : _a$icon,\n      _a$isExternal = _a.isExternal,\n      isExternal = _a$isExternal === void 0 ? false : _a$isExternal,\n      href = _a.href,\n      _a$tooltip = _a.tooltip,\n      tooltip = _a$tooltip === void 0 ? null : _a$tooltip,\n      _a$tooltipProps = _a.tooltipProps,\n      tooltipProps = _a$tooltipProps === void 0 ? null : _a$tooltipProps,\n      _a$component = _a.component,\n      component = _a$component === void 0 ? 'a' : _a$component,\n      _a$isFavorite = _a.isFavorite,\n      isFavorite = _a$isFavorite === void 0 ? null : _a$isFavorite,\n      _a$ariaIsFavoriteLabe = _a.ariaIsFavoriteLabel,\n      ariaIsFavoriteLabel = _a$ariaIsFavoriteLabe === void 0 ? 'starred' : _a$ariaIsFavoriteLabe,\n      _a$ariaIsNotFavoriteL = _a.ariaIsNotFavoriteLabel,\n      ariaIsNotFavoriteLabel = _a$ariaIsNotFavoriteL === void 0 ? 'not starred' : _a$ariaIsNotFavoriteL,\n      customChild = _a.customChild,\n      _a$enterTriggersArrow = _a.enterTriggersArrowDown,\n      enterTriggersArrowDown = _a$enterTriggersArrow === void 0 ? false : _a$enterTriggersArrow,\n      props = __rest(_a, [\"className\", \"id\", \"children\", \"icon\", \"isExternal\", \"href\", \"tooltip\", \"tooltipProps\", \"component\", \"isFavorite\", \"ariaIsFavoriteLabel\", \"ariaIsNotFavoriteLabel\", \"customChild\", \"enterTriggersArrowDown\"]);\n\n  return React.createElement(ApplicationLauncherItemContext.Provider, {\n    value: {\n      isExternal: isExternal,\n      icon: icon\n    }\n  }, React.createElement(ApplicationLauncherContext.Consumer, null, function (_ref) {\n    var onFavorite = _ref.onFavorite;\n    return React.createElement(DropdownItem, Object.assign({\n      id: id,\n      component: component,\n      href: href || null,\n      className: css(isExternal && styles.modifiers.external, isFavorite !== null && styles.modifiers.link, className),\n      listItemClassName: css(onFavorite && styles.appLauncherMenuWrapper, isFavorite && styles.modifiers.favorite),\n      tooltip: tooltip,\n      tooltipProps: tooltipProps\n    }, enterTriggersArrowDown === true && {\n      enterTriggersArrowDown: enterTriggersArrowDown\n    }, customChild && {\n      customChild: customChild\n    }, isFavorite !== null && {\n      additionalChild: React.createElement(\"button\", {\n        className: css(styles.appLauncherMenuItem, styles.modifiers.action),\n        \"aria-label\": isFavorite ? ariaIsFavoriteLabel : ariaIsNotFavoriteLabel,\n        onClick: function onClick() {\n          onFavorite((id || getUniqueId('app-launcher-option')).replace('favorite-', ''), isFavorite);\n        }\n      }, React.createElement(StarIcon, null))\n    }, props), children && React.createElement(ApplicationLauncherContent, null, children));\n  }));\n};\nApplicationLauncherItem.displayName = 'ApplicationLauncherItem';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/ApplicationLauncher/ApplicationLauncherItem.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/AppLauncher/app-launcher';\nimport { DropdownItem, DropdownItemProps } from '../Dropdown';\nimport { ApplicationLauncherContent } from './ApplicationLauncherContent';\nimport { ApplicationLauncherContext } from './ApplicationLauncherContext';\nimport { ApplicationLauncherItemContext } from './ApplicationLauncherItemContext';\nimport StarIcon from '@patternfly/react-icons/dist/esm/icons/star-icon';\nimport { getUniqueId } from '../../helpers/util';\n\nexport interface ApplicationLauncherItemProps {\n  /** Icon rendered before the text */\n  icon?: React.ReactNode;\n  /** If clicking on the item should open the page in a separate window */\n  isExternal?: boolean;\n  /** Tooltip to display when hovered over the item */\n  tooltip?: React.ReactNode;\n  /** Additional tooltip props forwarded to the Tooltip component */\n  tooltipProps?: any;\n  /** A ReactElement to render, or a string to use as the component tag.\n   * Example: component={<Link to=\"/components/alert/\">Alert</Link>}\n   * Example: component=\"button\"\n   */\n  component?: React.ReactNode;\n  /** Flag indicating if the item is favorited */\n  isFavorite?: boolean;\n  /** Aria label text for favoritable button when favorited */\n  ariaIsFavoriteLabel?: string;\n  /** Aria label text for favoritable button when not favorited */\n  ariaIsNotFavoriteLabel?: string;\n  /** ID of the item. Required for tracking favorites. */\n  id?: string;\n  customChild?: React.ReactNode;\n  /** Flag indicating if hitting enter triggers an arrow down key press. Automatically passed to favorites list items. */\n  enterTriggersArrowDown?: boolean;\n}\n\nexport const ApplicationLauncherItem: React.FunctionComponent<ApplicationLauncherItemProps & DropdownItemProps> = ({\n  className = '',\n  id,\n  children,\n  icon = null,\n  isExternal = false,\n  href,\n  tooltip = null,\n  tooltipProps = null,\n  component = 'a',\n  isFavorite = null,\n  ariaIsFavoriteLabel = 'starred',\n  ariaIsNotFavoriteLabel = 'not starred',\n  customChild,\n  enterTriggersArrowDown = false,\n  ...props\n}: ApplicationLauncherItemProps & DropdownItemProps) => (\n  <ApplicationLauncherItemContext.Provider value={{ isExternal, icon }}>\n    <ApplicationLauncherContext.Consumer>\n      {({ onFavorite }) => (\n        <DropdownItem\n          id={id}\n          component={component}\n          href={href || null}\n          className={css(\n            isExternal && styles.modifiers.external,\n            isFavorite !== null && styles.modifiers.link,\n            className\n          )}\n          listItemClassName={css(onFavorite && styles.appLauncherMenuWrapper, isFavorite && styles.modifiers.favorite)}\n          tooltip={tooltip}\n          tooltipProps={tooltipProps}\n          {...(enterTriggersArrowDown === true && { enterTriggersArrowDown })}\n          {...(customChild && { customChild })}\n          {...(isFavorite !== null && {\n            additionalChild: (\n              <button\n                className={css(styles.appLauncherMenuItem, styles.modifiers.action)}\n                aria-label={isFavorite ? ariaIsFavoriteLabel : ariaIsNotFavoriteLabel}\n                onClick={() => {\n                  onFavorite((id || getUniqueId('app-launcher-option')).replace('favorite-', ''), isFavorite);\n                }}\n              >\n                <StarIcon />\n              </button>\n            )\n          })}\n          {...props}\n        >\n          {children && <ApplicationLauncherContent>{children}</ApplicationLauncherContent>}\n        </DropdownItem>\n      )}\n    </ApplicationLauncherContext.Consumer>\n  </ApplicationLauncherItemContext.Provider>\n);\nApplicationLauncherItem.displayName = 'ApplicationLauncherItem';\n"]},"metadata":{},"sourceType":"module"}