{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { mapOpenedRows } from './utils/headerUtils';\nimport { Tbody } from '../TableComposable/Tbody';\nexport var BodyWrapper = function BodyWrapper(_a) {\n  var mappedRows = _a.mappedRows,\n      tbodyRef = _a.tbodyRef,\n      _a$rows = _a.rows,\n      rows = _a$rows === void 0 ? [] : _a$rows,\n      onCollapse = _a.onCollapse,\n      headerRows = _a.headerRows,\n      props = __rest(_a, [\"mappedRows\", \"tbodyRef\", \"rows\", \"onCollapse\", \"headerRows\"]);\n\n  if (mappedRows && mappedRows.some(function (row) {\n    return row.hasOwnProperty('parent');\n  })) {\n    return React.createElement(React.Fragment, null, mapOpenedRows(mappedRows, props.children).map(function (oneRow, key) {\n      return React.createElement(Tbody, Object.assign({}, props, {\n        isExpanded: oneRow.isOpen,\n        key: \"tbody-\".concat(key),\n        ref: tbodyRef\n      }), oneRow.rows);\n    }));\n  }\n\n  return React.createElement(Tbody, Object.assign({}, props, {\n    ref: tbodyRef\n  }));\n};\nBodyWrapper.displayName = 'BodyWrapper';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/Table/BodyWrapper.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAAS,aAAT,QAA8B,qBAA9B;AACA,SAAS,KAAT,QAAsB,0BAAtB;AAiBA,OAAO,IAAM,WAAW,GAA8C,SAAzD,WAAyD,CAAC,EAAD,EAS/C;AATgD,MACrE,UADqE,GAM3D,EAN2D,CACrE,UADqE;AAAA,MAErE,QAFqE,GAM3D,EAN2D,CAErE,QAFqE;AAAA,gBAM3D,EAN2D,CAIrE,IAJqE;AAAA,MAIrE,IAJqE,wBAI9D,EAJ8D;AAAA,MAKrE,UALqE,GAM3D,EAN2D,CAKrE,UALqE;AAAA,MAMrE,UANqE,GAM3D,EAN2D,CAMrE,UANqE;AAAA,MAQlE,KARkE,GAQ7D,MAAA,CAAA,EAAA,EAR6D,CAAA,YAAA,EAAA,UAAA,EAAA,MAAA,EAAA,YAAA,EAAA,YAAA,CAQ7D,CAR6D;;AAUrE,MAAI,UAAU,IAAI,UAAU,CAAC,IAAX,CAAgB,UAAA,GAAG;AAAA,WAAI,GAAG,CAAC,cAAJ,CAAmB,QAAnB,CAAJ;AAAA,GAAnB,CAAlB,EAAwE;AACtE,WACE,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,QAAP,EAAe,IAAf,EACG,aAAa,CAAC,UAAD,EAAa,KAAK,CAAC,QAAnB,CAAb,CAA0C,GAA1C,CAA8C,UAAC,MAAD,EAAS,GAAT;AAAA,aAC7C,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,QAAA,UAAU,EAAE,MAAM,CAAC,MAArB;AAA6B,QAAA,GAAG,kBAAW,GAAX,CAAhC;AAAkD,QAAA,GAAG,EAAE;AAAvD,OAAV,CAAN,EACG,MAAM,CAAC,IADV,CAD6C;AAAA,KAA9C,CADH,CADF;AASD;;AACD,SAAO,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,IAAA,GAAG,EAAE;AAAP,GAAV,CAAN,CAAP;AACD,CAtBM;AAuBP,WAAW,CAAC,WAAZ,GAA0B,aAA1B","sourcesContent":["import * as React from 'react';\nimport { IRow, IRowData, IExtraData, IHeaderRow } from './TableTypes';\nimport { mapOpenedRows } from './utils/headerUtils';\nimport { Tbody } from '../TableComposable/Tbody';\n\nexport interface BodyWrapperProps {\n  children?: React.ReactNode;\n  mappedRows?: IRow[];\n  rows?: IRow[];\n  onCollapse?: (\n    event: React.MouseEvent,\n    rowIndex: number,\n    isOpen: boolean,\n    rowData: IRowData,\n    extraData: IExtraData\n  ) => undefined;\n  tbodyRef?: React.Ref<any> | Function;\n  headerRows?: IHeaderRow[];\n}\n\nexport const BodyWrapper: React.FunctionComponent<BodyWrapperProps> = ({\n  mappedRows,\n  tbodyRef,\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  rows = [] as IRow[],\n  onCollapse,\n  headerRows,\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n  ...props\n}: BodyWrapperProps) => {\n  if (mappedRows && mappedRows.some(row => row.hasOwnProperty('parent'))) {\n    return (\n      <React.Fragment>\n        {mapOpenedRows(mappedRows, props.children).map((oneRow, key) => (\n          <Tbody {...props} isExpanded={oneRow.isOpen} key={`tbody-${key}`} ref={tbodyRef as React.Ref<any>}>\n            {oneRow.rows}\n          </Tbody>\n        ))}\n      </React.Fragment>\n    );\n  }\n  return <Tbody {...props} ref={tbodyRef as React.Ref<any>} />;\n};\nBodyWrapper.displayName = 'BodyWrapper';\n"]},"metadata":{},"sourceType":"module"}