{"ast":null,"code":"import _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport { css } from '@patternfly/react-styles';\nimport { ValidatedOptions } from '../../helpers/constants';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport var FormSelect = /*#__PURE__*/function (_React$Component) {\n  _inherits(FormSelect, _React$Component);\n\n  var _super = _createSuper(FormSelect);\n\n  function FormSelect(props) {\n    var _this;\n\n    _classCallCheck(this, FormSelect);\n\n    _this = _super.call(this, props);\n\n    _this.handleChange = function (event) {\n      _this.props.onChange(event.currentTarget.value, event);\n    };\n\n    if (!props.id && !props['aria-label']) {\n      // eslint-disable-next-line no-console\n      console.error('FormSelect requires either an id or aria-label to be specified');\n    }\n\n    _this.state = {\n      ouiaStateId: getDefaultOUIAId(FormSelect.displayName, props.validated)\n    };\n    return _this;\n  }\n\n  _createClass(FormSelect, [{\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          children = _a.children,\n          className = _a.className,\n          value = _a.value,\n          validated = _a.validated,\n          isDisabled = _a.isDisabled,\n          isRequired = _a.isRequired,\n          isIconSprite = _a.isIconSprite,\n          ouiaId = _a.ouiaId,\n          ouiaSafe = _a.ouiaSafe,\n          props = __rest(_a, [\"children\", \"className\", \"value\", \"validated\", \"isDisabled\", \"isRequired\", \"isIconSprite\", \"ouiaId\", \"ouiaSafe\"]);\n      /* find selected option and get placeholder flag */\n\n\n      var selectedOption = React.Children.toArray(children).find(function (option) {\n        return option.props.value === value;\n      });\n      var isSelectedPlaceholder = selectedOption && selectedOption.props.isPlaceholder;\n      return React.createElement(\"select\", Object.assign({}, props, {\n        className: css(styles.formControl, isIconSprite && styles.modifiers.iconSprite, className, validated === ValidatedOptions.success && styles.modifiers.success, validated === ValidatedOptions.warning && styles.modifiers.warning, isSelectedPlaceholder && styles.modifiers.placeholder),\n        \"aria-invalid\": validated === ValidatedOptions.error\n      }, getOUIAProps(FormSelect.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), {\n        onChange: this.handleChange,\n        disabled: isDisabled,\n        required: isRequired,\n        value: value\n      }), children);\n    }\n  }]);\n\n  return FormSelect;\n}(React.Component);\nFormSelect.displayName = 'FormSelect';\nFormSelect.defaultProps = {\n  className: '',\n  value: '',\n  validated: 'default',\n  isDisabled: false,\n  isRequired: false,\n  isIconSprite: false,\n  onBlur: function onBlur() {\n    return undefined;\n  },\n  onFocus: function onFocus() {\n    return undefined;\n  },\n  onChange: function onChange() {\n    return undefined;\n  },\n  ouiaSafe: true\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/FormSelect/FormSelect.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport { css } from '@patternfly/react-styles';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport { ValidatedOptions } from '../../helpers/constants';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId } from '../../helpers';\n\nexport interface FormSelectProps\n  extends Omit<React.HTMLProps<HTMLSelectElement>, 'onChange' | 'onBlur' | 'onFocus' | 'disabled'>,\n    OUIAProps {\n  /** content rendered inside the FormSelect */\n  children: React.ReactNode;\n  /** additional classes added to the FormSelect control */\n  className?: string;\n  /** value of selected option */\n  value?: any;\n  /** Value to indicate if the select is modified to show that validation state.\n   * If set to success, select will be modified to indicate valid state.\n   * If set to error, select will be modified to indicate error state.\n   */\n  validated?: 'success' | 'warning' | 'error' | 'default';\n  /** Flag indicating the FormSelect is disabled */\n  isDisabled?: boolean;\n  /** Sets the FormSelect required. */\n  isRequired?: boolean;\n  /** Use the external file instead of a data URI */\n  isIconSprite?: boolean;\n  /** Optional callback for updating when selection loses focus */\n  onBlur?: (event: React.FormEvent<HTMLSelectElement>) => void;\n  /** Optional callback for updating when selection gets focus */\n  onFocus?: (event: React.FormEvent<HTMLSelectElement>) => void;\n  /** Optional callback for updating when selection changes */\n  onChange?: (value: string, event: React.FormEvent<HTMLSelectElement>) => void;\n  /** Custom flag to show that the FormSelect requires an associated id or aria-label. */\n  'aria-label'?: string;\n}\n\nexport class FormSelect extends React.Component<FormSelectProps, { ouiaStateId: string }> {\n  static displayName = 'FormSelect';\n  constructor(props: FormSelectProps) {\n    super(props);\n    if (!props.id && !props['aria-label']) {\n      // eslint-disable-next-line no-console\n      console.error('FormSelect requires either an id or aria-label to be specified');\n    }\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(FormSelect.displayName, props.validated)\n    };\n  }\n\n  static defaultProps: PickOptional<FormSelectProps> = {\n    className: '',\n    value: '',\n    validated: 'default',\n    isDisabled: false,\n    isRequired: false,\n    isIconSprite: false,\n    onBlur: (): any => undefined,\n    onFocus: (): any => undefined,\n    onChange: (): any => undefined,\n    ouiaSafe: true\n  };\n\n  handleChange = (event: any) => {\n    this.props.onChange(event.currentTarget.value, event);\n  };\n\n  render() {\n    const {\n      children,\n      className,\n      value,\n      validated,\n      isDisabled,\n      isRequired,\n      isIconSprite,\n      ouiaId,\n      ouiaSafe,\n      ...props\n    } = this.props;\n    /* find selected option and get placeholder flag */\n    const selectedOption = React.Children.toArray(children).find((option: any) => option.props.value === value) as any;\n    const isSelectedPlaceholder = selectedOption && selectedOption.props.isPlaceholder;\n    return (\n      <select\n        {...props}\n        className={css(\n          styles.formControl,\n          isIconSprite && styles.modifiers.iconSprite,\n          className,\n          validated === ValidatedOptions.success && styles.modifiers.success,\n          validated === ValidatedOptions.warning && styles.modifiers.warning,\n          isSelectedPlaceholder && styles.modifiers.placeholder\n        )}\n        aria-invalid={validated === ValidatedOptions.error}\n        {...getOUIAProps(FormSelect.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n        onChange={this.handleChange}\n        disabled={isDisabled}\n        required={isRequired}\n        value={value}\n      >\n        {children}\n      </select>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}