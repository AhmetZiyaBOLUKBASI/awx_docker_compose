{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import React from'react';import{useField}from'formik';import CredentialsStep from'./CredentialsStep';import StepName from'./StepName';import credentialsValidator from'./credentialsValidator';import{jsx as _jsx}from\"react/jsx-runtime\";var STEP_ID='credentials';export default function useCredentialsStep(launchConfig,resource,resourceDefaultCredentials){var allowCredentialsWithPasswords=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;var _useField=useField('credentials'),_useField2=_slicedToArray(_useField,3),field=_useField2[0],meta=_useField2[1],helpers=_useField2[2];var formError=!resource||(resource===null||resource===void 0?void 0:resource.type)==='workflow_job_template'?false:meta.error;return{step:getStep(launchConfig,allowCredentialsWithPasswords,formError,resourceDefaultCredentials),initialValues:getInitialValues(launchConfig,resourceDefaultCredentials),isReady:true,contentError:null,hasError:launchConfig.ask_credential_on_launch&&formError,setTouched:function setTouched(setFieldTouched){setFieldTouched('credentials',true,false);},validate:function validate(){helpers.setError(credentialsValidator(allowCredentialsWithPasswords,field.value,resourceDefaultCredentials));}};}function getStep(launchConfig,allowCredentialsWithPasswords,formError,resourceDefaultCredentials){if(!launchConfig.ask_credential_on_launch){return null;}return{id:STEP_ID,key:4,name:/*#__PURE__*/_jsx(StepName,{hasErrors:formError,id:\"credentials-step\",children:/*i18n*/i18n._(\"Credentials\")}),component:/*#__PURE__*/_jsx(CredentialsStep,{allowCredentialsWithPasswords:allowCredentialsWithPasswords,defaultCredentials:resourceDefaultCredentials}),enableNext:true};}function getInitialValues(launchConfig,resourceDefaultCredentials){if(!launchConfig.ask_credential_on_launch){return{};}return{credentials:resourceDefaultCredentials||[]};}","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/LaunchPrompt/steps/useCredentialsStep.js"],"names":["React","useField","CredentialsStep","StepName","credentialsValidator","STEP_ID","useCredentialsStep","launchConfig","resource","resourceDefaultCredentials","allowCredentialsWithPasswords","field","meta","helpers","formError","type","error","step","getStep","initialValues","getInitialValues","isReady","contentError","hasError","ask_credential_on_launch","setTouched","setFieldTouched","validate","setError","value","id","key","name","component","enableNext","credentials"],"mappings":"sIAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,QAAT,KAAyB,QAAzB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,wBAAjC,C,2CAEA,GAAMC,CAAAA,OAAO,CAAG,aAAhB,CAEA,cAAe,SAASC,CAAAA,kBAAT,CACbC,YADa,CAEbC,QAFa,CAGbC,0BAHa,CAKb,IADAC,CAAAA,6BACA,2DADgC,KAChC,CACA,cAA+BT,QAAQ,CAAC,aAAD,CAAvC,wCAAOU,KAAP,eAAcC,IAAd,eAAoBC,OAApB,eACA,GAAMC,CAAAA,SAAS,CACb,CAACN,QAAD,EAAa,CAAAA,QAAQ,OAAR,EAAAA,QAAQ,SAAR,QAAAA,QAAQ,CAAEO,IAAV,IAAmB,uBAAhC,CACI,KADJ,CAEIH,IAAI,CAACI,KAHX,CAIA,MAAO,CACLC,IAAI,CAAEC,OAAO,CACXX,YADW,CAEXG,6BAFW,CAGXI,SAHW,CAIXL,0BAJW,CADR,CAOLU,aAAa,CAAEC,gBAAgB,CAACb,YAAD,CAAeE,0BAAf,CAP1B,CAQLY,OAAO,CAAE,IARJ,CASLC,YAAY,CAAE,IATT,CAULC,QAAQ,CAAEhB,YAAY,CAACiB,wBAAb,EAAyCV,SAV9C,CAWLW,UAAU,CAAE,oBAACC,eAAD,CAAqB,CAC/BA,eAAe,CAAC,aAAD,CAAgB,IAAhB,CAAsB,KAAtB,CAAf,CACD,CAbI,CAcLC,QAAQ,CAAE,mBAAM,CACdd,OAAO,CAACe,QAAR,CACExB,oBAAoB,CAClBM,6BADkB,CAElBC,KAAK,CAACkB,KAFY,CAGlBpB,0BAHkB,CADtB,EAOD,CAtBI,CAAP,CAwBD,CAED,QAASS,CAAAA,OAAT,CACEX,YADF,CAGEG,6BAHF,CAIEI,SAJF,CAKEL,0BALF,CAME,CACA,GAAI,CAACF,YAAY,CAACiB,wBAAlB,CAA4C,CAC1C,MAAO,KAAP,CACD,CACD,MAAO,CACLM,EAAE,CAAEzB,OADC,CAEL0B,GAAG,CAAE,CAFA,CAGLC,IAAI,cACF,KAAC,QAAD,EAAU,SAAS,CAAElB,SAArB,CAAgC,EAAE,CAAC,kBAAnC,kBACG,qBADH,EAJG,CAQLmB,SAAS,cACP,KAAC,eAAD,EACE,6BAA6B,CAAEvB,6BADjC,CAEE,kBAAkB,CAAED,0BAFtB,EATG,CAcLyB,UAAU,CAAE,IAdP,CAAP,CAgBD,CAED,QAASd,CAAAA,gBAAT,CAA0Bb,YAA1B,CAAwCE,0BAAxC,CAAoE,CAClE,GAAI,CAACF,YAAY,CAACiB,wBAAlB,CAA4C,CAC1C,MAAO,EAAP,CACD,CAED,MAAO,CACLW,WAAW,CAAE1B,0BAA0B,EAAI,EADtC,CAAP,CAGD","sourcesContent":["import React from 'react';\nimport { t } from '@lingui/macro';\nimport { useField } from 'formik';\nimport CredentialsStep from './CredentialsStep';\nimport StepName from './StepName';\nimport credentialsValidator from './credentialsValidator';\n\nconst STEP_ID = 'credentials';\n\nexport default function useCredentialsStep(\n  launchConfig,\n  resource,\n  resourceDefaultCredentials,\n  allowCredentialsWithPasswords = false\n) {\n  const [field, meta, helpers] = useField('credentials');\n  const formError =\n    !resource || resource?.type === 'workflow_job_template'\n      ? false\n      : meta.error;\n  return {\n    step: getStep(\n      launchConfig,\n      allowCredentialsWithPasswords,\n      formError,\n      resourceDefaultCredentials\n    ),\n    initialValues: getInitialValues(launchConfig, resourceDefaultCredentials),\n    isReady: true,\n    contentError: null,\n    hasError: launchConfig.ask_credential_on_launch && formError,\n    setTouched: (setFieldTouched) => {\n      setFieldTouched('credentials', true, false);\n    },\n    validate: () => {\n      helpers.setError(\n        credentialsValidator(\n          allowCredentialsWithPasswords,\n          field.value,\n          resourceDefaultCredentials\n        )\n      );\n    },\n  };\n}\n\nfunction getStep(\n  launchConfig,\n\n  allowCredentialsWithPasswords,\n  formError,\n  resourceDefaultCredentials\n) {\n  if (!launchConfig.ask_credential_on_launch) {\n    return null;\n  }\n  return {\n    id: STEP_ID,\n    key: 4,\n    name: (\n      <StepName hasErrors={formError} id=\"credentials-step\">\n        {t`Credentials`}\n      </StepName>\n    ),\n    component: (\n      <CredentialsStep\n        allowCredentialsWithPasswords={allowCredentialsWithPasswords}\n        defaultCredentials={resourceDefaultCredentials}\n      />\n    ),\n    enableNext: true,\n  };\n}\n\nfunction getInitialValues(launchConfig, resourceDefaultCredentials) {\n  if (!launchConfig.ask_credential_on_launch) {\n    return {};\n  }\n\n  return {\n    credentials: resourceDefaultCredentials || [],\n  };\n}\n"]},"metadata":{},"sourceType":"module"}