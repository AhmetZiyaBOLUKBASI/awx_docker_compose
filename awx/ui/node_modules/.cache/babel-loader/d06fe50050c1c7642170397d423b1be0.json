{"ast":null,"code":"import _toConsumableArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _excluded=[\"instanceGroups\",\"organization\"];import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect}from'react';import{useHistory}from'react-router-dom';import{object}from'prop-types';import{CardBody}from'components/Card';import{InventoriesAPI}from'api';import{getAddedAndRemoved}from'util/lists';import ContentLoading from'components/ContentLoading';import useIsMounted from'hooks/useIsMounted';import InventoryForm from'../shared/InventoryForm';import{jsx as _jsx}from\"react/jsx-runtime\";function InventoryEdit(_ref){var inventory=_ref.inventory;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),associatedInstanceGroups=_useState4[0],setInstanceGroups=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),contentLoading=_useState6[0],setContentLoading=_useState6[1];var history=useHistory();var isMounted=useIsMounted();useEffect(function(){var loadData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$InventoriesAPI,loadedInstanceGroups;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return InventoriesAPI.readInstanceGroups(inventory.id);case 3:_yield$InventoriesAPI=_context.sent;loadedInstanceGroups=_yield$InventoriesAPI.data.results;if(isMounted.current){_context.next=7;break;}return _context.abrupt(\"return\");case 7:setInstanceGroups(loadedInstanceGroups);_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);setError(_context.t0);case 13:_context.prev=13;if(isMounted.current){setContentLoading(false);}return _context.finish(13);case 16:case\"end\":return _context.stop();}}},_callee,null,[[0,10,13,16]]);}));return function loadData(){return _ref2.apply(this,arguments);};}();loadData();/* eslint-disable-next-line react-hooks/exhaustive-deps */},[inventory.id,contentLoading,inventory]);var handleCancel=function handleCancel(){var url=inventory.kind==='smart'?\"/inventories/smart_inventory/\".concat(inventory.id,\"/details\"):\"/inventories/inventory/\".concat(inventory.id,\"/details\");history.push(\"\".concat(url));};var handleSubmit=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values){var instanceGroups,organization,remainingValues,url;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:instanceGroups=values.instanceGroups,organization=values.organization,remainingValues=_objectWithoutProperties(values,_excluded);_context2.prev=1;_context2.next=4;return InventoriesAPI.update(inventory.id,_objectSpread({organization:organization.id},remainingValues));case 4:_context2.next=6;return InventoriesAPI.orderInstanceGroups(inventory.id,instanceGroups,associatedInstanceGroups);case 6:_context2.next=8;return submitLabels(values.organization.id,values.labels);case 8:url=history.location.pathname.search('smart')>-1?\"/inventories/smart_inventory/\".concat(inventory.id,\"/details\"):\"/inventories/inventory/\".concat(inventory.id,\"/details\");history.push(\"\".concat(url));_context2.next=15;break;case 12:_context2.prev=12;_context2.t0=_context2[\"catch\"](1);setError(_context2.t0);case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[1,12]]);}));return function handleSubmit(_x){return _ref3.apply(this,arguments);};}();var submitLabels=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(orgId){var labels,_getAddedAndRemoved,added,removed,disassociationPromises,associationPromises,results,_args3=arguments;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:labels=_args3.length>1&&_args3[1]!==undefined?_args3[1]:[];_getAddedAndRemoved=getAddedAndRemoved(inventory.summary_fields.labels.results,labels),added=_getAddedAndRemoved.added,removed=_getAddedAndRemoved.removed;disassociationPromises=removed.map(function(label){return InventoriesAPI.disassociateLabel(inventory.id,label);});associationPromises=added.map(function(label){return InventoriesAPI.associateLabel(inventory.id,label,orgId);});_context3.next=6;return Promise.all([].concat(_toConsumableArray(disassociationPromises),_toConsumableArray(associationPromises)));case 6:results=_context3.sent;return _context3.abrupt(\"return\",results);case 8:case\"end\":return _context3.stop();}}},_callee3);}));return function submitLabels(_x2){return _ref4.apply(this,arguments);};}();if(contentLoading){return/*#__PURE__*/_jsx(ContentLoading,{});}return/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(InventoryForm,{onCancel:handleCancel,onSubmit:handleSubmit,inventory:inventory,instanceGroups:associatedInstanceGroups,submitError:error})});}InventoryEdit.propType={inventory:object.isRequired};export{InventoryEdit as _InventoryEdit};export default InventoryEdit;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Inventory/InventoryEdit/InventoryEdit.js"],"names":["React","useState","useEffect","useHistory","object","CardBody","InventoriesAPI","getAddedAndRemoved","ContentLoading","useIsMounted","InventoryForm","InventoryEdit","inventory","error","setError","associatedInstanceGroups","setInstanceGroups","contentLoading","setContentLoading","history","isMounted","loadData","readInstanceGroups","id","loadedInstanceGroups","data","results","current","handleCancel","url","kind","push","handleSubmit","values","instanceGroups","organization","remainingValues","update","orderInstanceGroups","submitLabels","labels","location","pathname","search","orgId","summary_fields","added","removed","disassociationPromises","map","label","disassociateLabel","associationPromises","associateLabel","Promise","all","propType","isRequired","_InventoryEdit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { object } from 'prop-types';\n\nimport { CardBody } from 'components/Card';\nimport { InventoriesAPI } from 'api';\nimport { getAddedAndRemoved } from 'util/lists';\nimport ContentLoading from 'components/ContentLoading';\nimport useIsMounted from 'hooks/useIsMounted';\nimport InventoryForm from '../shared/InventoryForm';\n\nfunction InventoryEdit({ inventory }) {\n  const [error, setError] = useState(null);\n  const [associatedInstanceGroups, setInstanceGroups] = useState(null);\n  const [contentLoading, setContentLoading] = useState(true);\n  const history = useHistory();\n  const isMounted = useIsMounted();\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const {\n          data: { results: loadedInstanceGroups },\n        } = await InventoriesAPI.readInstanceGroups(inventory.id);\n        if (!isMounted.current) {\n          return;\n        }\n        setInstanceGroups(loadedInstanceGroups);\n      } catch (err) {\n        setError(err);\n      } finally {\n        if (isMounted.current) {\n          setContentLoading(false);\n        }\n      }\n    };\n    loadData();\n    /* eslint-disable-next-line react-hooks/exhaustive-deps */\n  }, [inventory.id, contentLoading, inventory]);\n\n  const handleCancel = () => {\n    const url =\n      inventory.kind === 'smart'\n        ? `/inventories/smart_inventory/${inventory.id}/details`\n        : `/inventories/inventory/${inventory.id}/details`;\n\n    history.push(`${url}`);\n  };\n\n  const handleSubmit = async (values) => {\n    const { instanceGroups, organization, ...remainingValues } = values;\n    try {\n      await InventoriesAPI.update(inventory.id, {\n        organization: organization.id,\n        ...remainingValues,\n      });\n      await InventoriesAPI.orderInstanceGroups(\n        inventory.id,\n        instanceGroups,\n        associatedInstanceGroups\n      );\n      await submitLabels(values.organization.id, values.labels);\n\n      const url =\n        history.location.pathname.search('smart') > -1\n          ? `/inventories/smart_inventory/${inventory.id}/details`\n          : `/inventories/inventory/${inventory.id}/details`;\n      history.push(`${url}`);\n    } catch (err) {\n      setError(err);\n    }\n  };\n\n  const submitLabels = async (orgId, labels = []) => {\n    const { added, removed } = getAddedAndRemoved(\n      inventory.summary_fields.labels.results,\n      labels\n    );\n\n    const disassociationPromises = removed.map((label) =>\n      InventoriesAPI.disassociateLabel(inventory.id, label)\n    );\n    const associationPromises = added.map((label) =>\n      InventoriesAPI.associateLabel(inventory.id, label, orgId)\n    );\n\n    const results = await Promise.all([\n      ...disassociationPromises,\n      ...associationPromises,\n    ]);\n    return results;\n  };\n\n  if (contentLoading) {\n    return <ContentLoading />;\n  }\n\n  return (\n    <CardBody>\n      <InventoryForm\n        onCancel={handleCancel}\n        onSubmit={handleSubmit}\n        inventory={inventory}\n        instanceGroups={associatedInstanceGroups}\n        submitError={error}\n      />\n    </CardBody>\n  );\n}\n\nInventoryEdit.propType = {\n  inventory: object.isRequired,\n};\n\nexport { InventoryEdit as _InventoryEdit };\nexport default InventoryEdit;\n"]},"metadata":{},"sourceType":"module"}