{"ast":null,"code":"import _toConsumableArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import useWebsocket from'hooks/useWebsocket';export default function useWsProjects(initialProjects){var _useState=useState(initialProjects),_useState2=_slicedToArray(_useState,2),projects=_useState2[0],setProjects=_useState2[1];var lastMessage=useWebsocket({jobs:['status_changed'],control:['limit_reached_1']});useEffect(function(){setProjects(initialProjects);},[initialProjects]);useEffect(function(){if(!(lastMessage!==null&&lastMessage!==void 0&&lastMessage.unified_job_id)||lastMessage.type!=='project_update'){return;}var index=projects.findIndex(function(p){return p.id===lastMessage.project_id;});if(index===-1){return;}var project=projects[index];var updatedProject=_objectSpread(_objectSpread({},project),{},{summary_fields:_objectSpread(_objectSpread({},project.summary_fields),{},{current_job:{id:lastMessage.unified_job_id,status:lastMessage.status,finished:lastMessage.finished}})});if(lastMessage.finished){updatedProject.scm_revision=null;}setProjects([].concat(_toConsumableArray(projects.slice(0,index)),[updatedProject],_toConsumableArray(projects.slice(index+1))));},[lastMessage]);// eslint-disable-line react-hooks/exhaustive-deps\nreturn projects;}","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Project/ProjectList/useWsProjects.js"],"names":["useState","useEffect","useWebsocket","useWsProjects","initialProjects","projects","setProjects","lastMessage","jobs","control","unified_job_id","type","index","findIndex","p","id","project_id","project","updatedProject","summary_fields","current_job","status","finished","scm_revision","slice"],"mappings":"4TAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,YAAP,KAAyB,oBAAzB,CAEA,cAAe,SAASC,CAAAA,aAAT,CAAuBC,eAAvB,CAAwC,CACrD,cAAgCJ,QAAQ,CAACI,eAAD,CAAxC,wCAAOC,QAAP,eAAiBC,WAAjB,eACA,GAAMC,CAAAA,WAAW,CAAGL,YAAY,CAAC,CAC/BM,IAAI,CAAE,CAAC,gBAAD,CADyB,CAE/BC,OAAO,CAAE,CAAC,iBAAD,CAFsB,CAAD,CAAhC,CAKAR,SAAS,CAAC,UAAM,CACdK,WAAW,CAACF,eAAD,CAAX,CACD,CAFQ,CAEN,CAACA,eAAD,CAFM,CAAT,CAIAH,SAAS,CAAC,UAAM,CACd,GAAI,EAACM,WAAD,SAACA,WAAD,WAACA,WAAW,CAAEG,cAAd,GAAgCH,WAAW,CAACI,IAAZ,GAAqB,gBAAzD,CAA2E,CACzE,OACD,CACD,GAAMC,CAAAA,KAAK,CAAGP,QAAQ,CAACQ,SAAT,CAAmB,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,EAAF,GAASR,WAAW,CAACS,UAA5B,EAAnB,CAAd,CACA,GAAIJ,KAAK,GAAK,CAAC,CAAf,CAAkB,CAChB,OACD,CAED,GAAMK,CAAAA,OAAO,CAAGZ,QAAQ,CAACO,KAAD,CAAxB,CACA,GAAMM,CAAAA,cAAc,gCACfD,OADe,MAElBE,cAAc,gCACTF,OAAO,CAACE,cADC,MAEZC,WAAW,CAAE,CACXL,EAAE,CAAER,WAAW,CAACG,cADL,CAEXW,MAAM,CAAEd,WAAW,CAACc,MAFT,CAGXC,QAAQ,CAAEf,WAAW,CAACe,QAHX,CAFD,EAFI,EAApB,CAYA,GAAIf,WAAW,CAACe,QAAhB,CAA0B,CACxBJ,cAAc,CAACK,YAAf,CAA8B,IAA9B,CACD,CAEDjB,WAAW,8BACND,QAAQ,CAACmB,KAAT,CAAe,CAAf,CAAkBZ,KAAlB,CADM,GAETM,cAFS,qBAGNb,QAAQ,CAACmB,KAAT,CAAeZ,KAAK,CAAG,CAAvB,CAHM,GAAX,CAKD,CA/BQ,CA+BN,CAACL,WAAD,CA/BM,CAAT,CA+BmB;AAEnB,MAAOF,CAAAA,QAAP,CACD","sourcesContent":["import { useState, useEffect } from 'react';\nimport useWebsocket from 'hooks/useWebsocket';\n\nexport default function useWsProjects(initialProjects) {\n  const [projects, setProjects] = useState(initialProjects);\n  const lastMessage = useWebsocket({\n    jobs: ['status_changed'],\n    control: ['limit_reached_1'],\n  });\n\n  useEffect(() => {\n    setProjects(initialProjects);\n  }, [initialProjects]);\n\n  useEffect(() => {\n    if (!lastMessage?.unified_job_id || lastMessage.type !== 'project_update') {\n      return;\n    }\n    const index = projects.findIndex((p) => p.id === lastMessage.project_id);\n    if (index === -1) {\n      return;\n    }\n\n    const project = projects[index];\n    const updatedProject = {\n      ...project,\n      summary_fields: {\n        ...project.summary_fields,\n        current_job: {\n          id: lastMessage.unified_job_id,\n          status: lastMessage.status,\n          finished: lastMessage.finished,\n        },\n      },\n    };\n\n    if (lastMessage.finished) {\n      updatedProject.scm_revision = null;\n    }\n\n    setProjects([\n      ...projects.slice(0, index),\n      updatedProject,\n      ...projects.slice(index + 1),\n    ]);\n  }, [lastMessage]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return projects;\n}\n"]},"metadata":{},"sourceType":"module"}