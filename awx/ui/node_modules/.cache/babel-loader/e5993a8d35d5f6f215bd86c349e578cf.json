{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{Trans}from\"@lingui/react\";import{i18n}from\"@lingui/core\";import React,{useEffect,useCallback}from'react';import{useLocation,useRouteMatch}from'react-router-dom';import{Card,PageSection}from'@patternfly/react-core';import{CredentialTypesAPI}from'api';import{getQSConfig,parseQueryString}from'util/qs';import useRequest,{useDeleteItems}from'hooks/useRequest';import useSelected from'hooks/useSelected';import PaginatedTable,{HeaderRow,HeaderCell,ToolbarDeleteButton,ToolbarAddButton,getSearchableKeys}from'components/PaginatedTable';import ErrorDetail from'components/ErrorDetail';import AlertModal from'components/AlertModal';import DatalistToolbar from'components/DataListToolbar';import{relatedResourceDeleteRequests}from'util/getRelatedResourceDeleteDetails';import CredentialTypeListItem from'./CredentialTypeListItem';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var QS_CONFIG=getQSConfig('credential-type',{page:1,page_size:20,managed:false});function CredentialTypeList(){var location=useLocation();var match=useRouteMatch();var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _responseActions$data,_responseActions$data2;var params,_yield$Promise$all,_yield$Promise$all2,response,responseActions;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:params=parseQueryString(QS_CONFIG,location.search);_context.next=3;return Promise.all([CredentialTypesAPI.read(params),CredentialTypesAPI.readOptions()]);case 3:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);response=_yield$Promise$all2[0];responseActions=_yield$Promise$all2[1];return _context.abrupt(\"return\",{credentialTypes:response.data.results,credentialTypesCount:response.data.count,actions:responseActions.data.actions,relatedSearchableKeys:((responseActions===null||responseActions===void 0?void 0:(_responseActions$data=responseActions.data)===null||_responseActions$data===void 0?void 0:_responseActions$data.related_search_fields)||[]).map(function(val){return val.slice(0,-8);}),searchableKeys:getSearchableKeys((_responseActions$data2=responseActions.data.actions)===null||_responseActions$data2===void 0?void 0:_responseActions$data2.GET)});case 8:case\"end\":return _context.stop();}}},_callee);})),[location]),{credentialTypes:[],credentialTypesCount:0,actions:{},relatedSearchableKeys:[],searchableKeys:[]}),contentError=_useRequest.error,isLoading=_useRequest.isLoading,fetchCredentialTypes=_useRequest.request,_useRequest$result=_useRequest.result,credentialTypes=_useRequest$result.credentialTypes,credentialTypesCount=_useRequest$result.credentialTypesCount,actions=_useRequest$result.actions,relatedSearchableKeys=_useRequest$result.relatedSearchableKeys,searchableKeys=_useRequest$result.searchableKeys;useEffect(function(){fetchCredentialTypes();},[fetchCredentialTypes]);var _useSelected=useSelected(credentialTypes),selected=_useSelected.selected,isAllSelected=_useSelected.isAllSelected,handleSelect=_useSelected.handleSelect,clearSelected=_useSelected.clearSelected,selectAll=_useSelected.selectAll;var _useDeleteItems=useDeleteItems(useCallback(function(){return Promise.all(selected.map(function(_ref2){var id=_ref2.id;return CredentialTypesAPI.destroy(id);}));},[selected]),{qsConfig:QS_CONFIG,allItemsSelected:isAllSelected,fetchItems:fetchCredentialTypes}),deleteLoading=_useDeleteItems.isLoading,deletionError=_useDeleteItems.deletionError,deleteCredentialTypes=_useDeleteItems.deleteItems,clearDeletionError=_useDeleteItems.clearDeletionError;var handleDelete=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return deleteCredentialTypes();case 2:clearSelected();case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function handleDelete(){return _ref3.apply(this,arguments);};}();var canAdd=actions&&actions.POST;var deleteDetailsRequests=relatedResourceDeleteRequests.credentialType(selected[0]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(PageSection,{children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(PaginatedTable,{contentError:contentError,hasContentLoading:isLoading||deleteLoading,items:credentialTypes,itemCount:credentialTypesCount,pluralizedItemName:/*i18n*/i18n._(\"Credential Types\"),qsConfig:QS_CONFIG,clearSelected:clearSelected,toolbarSearchColumns:[{name:/*i18n*/i18n._(\"Name\"),key:'name__icontains',isDefault:true},{name:/*i18n*/i18n._(\"Description\"),key:'description__icontains'},{name:/*i18n*/i18n._(\"Created By (Username)\"),key:'created_by__username__icontains'},{name:/*i18n*/i18n._(\"Modified By (Username)\"),key:'modified_by__username__icontains'}],toolbarSearchableKeys:searchableKeys,toolbarRelatedSearchableKeys:relatedSearchableKeys,renderToolbar:function renderToolbar(props){return/*#__PURE__*/_jsx(DatalistToolbar,_objectSpread(_objectSpread({},props),{},{isAllSelected:isAllSelected,onSelectAll:selectAll,qsConfig:QS_CONFIG,additionalControls:[].concat(_toConsumableArray(canAdd?[/*#__PURE__*/_jsx(ToolbarAddButton,{linkTo:\"\".concat(match.url,\"/add\")},\"add\")]:[]),[/*#__PURE__*/_jsx(ToolbarDeleteButton,{onDelete:handleDelete,itemsToDelete:selected,pluralizedItemName:/*i18n*/i18n._(\"Credential Types\"),deleteDetailsRequests:deleteDetailsRequests,deleteMessage:/*#__PURE__*/_jsx(Trans,{id:\"{0, plural, one {This credential type is currently being used by some credentials and cannot be deleted.} other {Credential types that are being used by credentials cannot be deleted. Are you sure you want to delete anyway?}}\",values:{0:selected.length}})},\"delete\")])}));},headerRow:/*#__PURE__*/_jsxs(HeaderRow,{qsConfig:QS_CONFIG,children:[/*#__PURE__*/_jsx(HeaderCell,{sortKey:\"name\",children:/*i18n*/i18n._(\"Name\")}),/*#__PURE__*/_jsx(HeaderCell,{children:/*i18n*/i18n._(\"Actions\")})]}),renderRow:function renderRow(credentialType,index){return/*#__PURE__*/_jsx(CredentialTypeListItem,{value:credentialType.name,credentialType:credentialType,detailUrl:\"\".concat(match.url,\"/\").concat(credentialType.id,\"/details\"),onSelect:function onSelect(){return handleSelect(credentialType);},isSelected:selected.some(function(row){return row.id===credentialType.id;}),rowIndex:index},credentialType.id);},emptyStateControls:canAdd&&/*#__PURE__*/_jsx(ToolbarAddButton,{linkTo:\"\".concat(match.url,\"/add\")},\"add\")})})}),/*#__PURE__*/_jsxs(AlertModal,{\"aria-label\":/*i18n*/i18n._(\"Deletion error\"),isOpen:deletionError,onClose:clearDeletionError,title:/*i18n*/i18n._(\"Error\"),variant:\"error\",children:[/*i18n*/i18n._(\"Failed to delete one or more credential types.\"),/*#__PURE__*/_jsx(ErrorDetail,{error:deletionError})]})]});}export default CredentialTypeList;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/CredentialType/CredentialTypeList/CredentialTypeList.js"],"names":["React","useEffect","useCallback","useLocation","useRouteMatch","Card","PageSection","CredentialTypesAPI","getQSConfig","parseQueryString","useRequest","useDeleteItems","useSelected","PaginatedTable","HeaderRow","HeaderCell","ToolbarDeleteButton","ToolbarAddButton","getSearchableKeys","ErrorDetail","AlertModal","DatalistToolbar","relatedResourceDeleteRequests","CredentialTypeListItem","QS_CONFIG","page","page_size","managed","CredentialTypeList","location","match","params","search","Promise","all","read","readOptions","response","responseActions","credentialTypes","data","results","credentialTypesCount","count","actions","relatedSearchableKeys","related_search_fields","map","val","slice","searchableKeys","GET","contentError","error","isLoading","fetchCredentialTypes","request","result","selected","isAllSelected","handleSelect","clearSelected","selectAll","id","destroy","qsConfig","allItemsSelected","fetchItems","deleteLoading","deletionError","deleteCredentialTypes","deleteItems","clearDeletionError","handleDelete","canAdd","POST","deleteDetailsRequests","credentialType","name","key","isDefault","props","url","length","index","some","row"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from 'react';\nimport { useLocation, useRouteMatch } from 'react-router-dom';\n\nimport { t, Plural } from '@lingui/macro';\nimport { Card, PageSection } from '@patternfly/react-core';\n\nimport { CredentialTypesAPI } from 'api';\nimport { getQSConfig, parseQueryString } from 'util/qs';\nimport useRequest, { useDeleteItems } from 'hooks/useRequest';\nimport useSelected from 'hooks/useSelected';\nimport PaginatedTable, {\n  HeaderRow,\n  HeaderCell,\n  ToolbarDeleteButton,\n  ToolbarAddButton,\n  getSearchableKeys,\n} from 'components/PaginatedTable';\nimport ErrorDetail from 'components/ErrorDetail';\nimport AlertModal from 'components/AlertModal';\nimport DatalistToolbar from 'components/DataListToolbar';\nimport { relatedResourceDeleteRequests } from 'util/getRelatedResourceDeleteDetails';\nimport CredentialTypeListItem from './CredentialTypeListItem';\n\nconst QS_CONFIG = getQSConfig('credential-type', {\n  page: 1,\n  page_size: 20,\n  managed: false,\n});\n\nfunction CredentialTypeList() {\n  const location = useLocation();\n  const match = useRouteMatch();\n\n  const {\n    error: contentError,\n    isLoading,\n    request: fetchCredentialTypes,\n    result: {\n      credentialTypes,\n      credentialTypesCount,\n      actions,\n      relatedSearchableKeys,\n      searchableKeys,\n    },\n  } = useRequest(\n    useCallback(async () => {\n      const params = parseQueryString(QS_CONFIG, location.search);\n\n      const [response, responseActions] = await Promise.all([\n        CredentialTypesAPI.read(params),\n        CredentialTypesAPI.readOptions(),\n      ]);\n\n      return {\n        credentialTypes: response.data.results,\n        credentialTypesCount: response.data.count,\n        actions: responseActions.data.actions,\n        relatedSearchableKeys: (\n          responseActions?.data?.related_search_fields || []\n        ).map((val) => val.slice(0, -8)),\n        searchableKeys: getSearchableKeys(responseActions.data.actions?.GET),\n      };\n    }, [location]),\n    {\n      credentialTypes: [],\n      credentialTypesCount: 0,\n      actions: {},\n      relatedSearchableKeys: [],\n      searchableKeys: [],\n    }\n  );\n\n  useEffect(() => {\n    fetchCredentialTypes();\n  }, [fetchCredentialTypes]);\n\n  const { selected, isAllSelected, handleSelect, clearSelected, selectAll } =\n    useSelected(credentialTypes);\n\n  const {\n    isLoading: deleteLoading,\n    deletionError,\n    deleteItems: deleteCredentialTypes,\n    clearDeletionError,\n  } = useDeleteItems(\n    useCallback(\n      () =>\n        Promise.all(selected.map(({ id }) => CredentialTypesAPI.destroy(id))),\n      [selected]\n    ),\n    {\n      qsConfig: QS_CONFIG,\n      allItemsSelected: isAllSelected,\n      fetchItems: fetchCredentialTypes,\n    }\n  );\n\n  const handleDelete = async () => {\n    await deleteCredentialTypes();\n    clearSelected();\n  };\n\n  const canAdd = actions && actions.POST;\n\n  const deleteDetailsRequests = relatedResourceDeleteRequests.credentialType(\n    selected[0]\n  );\n\n  return (\n    <>\n      <PageSection>\n        <Card>\n          <PaginatedTable\n            contentError={contentError}\n            hasContentLoading={isLoading || deleteLoading}\n            items={credentialTypes}\n            itemCount={credentialTypesCount}\n            pluralizedItemName={t`Credential Types`}\n            qsConfig={QS_CONFIG}\n            clearSelected={clearSelected}\n            toolbarSearchColumns={[\n              {\n                name: t`Name`,\n                key: 'name__icontains',\n                isDefault: true,\n              },\n              {\n                name: t`Description`,\n                key: 'description__icontains',\n              },\n              {\n                name: t`Created By (Username)`,\n                key: 'created_by__username__icontains',\n              },\n              {\n                name: t`Modified By (Username)`,\n                key: 'modified_by__username__icontains',\n              },\n            ]}\n            toolbarSearchableKeys={searchableKeys}\n            toolbarRelatedSearchableKeys={relatedSearchableKeys}\n            renderToolbar={(props) => (\n              <DatalistToolbar\n                {...props}\n                isAllSelected={isAllSelected}\n                onSelectAll={selectAll}\n                qsConfig={QS_CONFIG}\n                additionalControls={[\n                  ...(canAdd\n                    ? [\n                        <ToolbarAddButton\n                          key=\"add\"\n                          linkTo={`${match.url}/add`}\n                        />,\n                      ]\n                    : []),\n                  <ToolbarDeleteButton\n                    key=\"delete\"\n                    onDelete={handleDelete}\n                    itemsToDelete={selected}\n                    pluralizedItemName={t`Credential Types`}\n                    deleteDetailsRequests={deleteDetailsRequests}\n                    deleteMessage={\n                      <Plural\n                        value={selected.length}\n                        one=\"This credential type is currently being used by some credentials and cannot be deleted.\"\n                        other=\"Credential types that are being used by credentials cannot be deleted. Are you sure you want to delete anyway?\"\n                      />\n                    }\n                  />,\n                ]}\n              />\n            )}\n            headerRow={\n              <HeaderRow qsConfig={QS_CONFIG}>\n                <HeaderCell sortKey=\"name\">{t`Name`}</HeaderCell>\n                <HeaderCell>{t`Actions`}</HeaderCell>\n              </HeaderRow>\n            }\n            renderRow={(credentialType, index) => (\n              <CredentialTypeListItem\n                key={credentialType.id}\n                value={credentialType.name}\n                credentialType={credentialType}\n                detailUrl={`${match.url}/${credentialType.id}/details`}\n                onSelect={() => handleSelect(credentialType)}\n                isSelected={selected.some(\n                  (row) => row.id === credentialType.id\n                )}\n                rowIndex={index}\n              />\n            )}\n            emptyStateControls={\n              canAdd && (\n                <ToolbarAddButton key=\"add\" linkTo={`${match.url}/add`} />\n              )\n            }\n          />\n        </Card>\n      </PageSection>\n      <AlertModal\n        aria-label={t`Deletion error`}\n        isOpen={deletionError}\n        onClose={clearDeletionError}\n        title={t`Error`}\n        variant=\"error\"\n      >\n        {t`Failed to delete one or more credential types.`}\n        <ErrorDetail error={deletionError} />\n      </AlertModal>\n    </>\n  );\n}\n\nexport default CredentialTypeList;\n"]},"metadata":{},"sourceType":"module"}