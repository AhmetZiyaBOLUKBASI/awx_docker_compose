{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import React from'react';import{useField}from'formik';import{FormGroup,Title}from'@patternfly/react-core';import{FormCheckboxLayout,FormColumnLayout,FormFullWidthLayout,SubFormLayout}from'components/FormLayout';import FormField,{PasswordField,CheckboxField,ArrayTextField}from'components/FormField';import AnsibleSelect from'components/AnsibleSelect';import{CodeEditorField}from'components/CodeEditor';import{combine,required,requiredEmail,url,minMaxValue,twilioPhoneNumber}from'util/validators';import{NotificationType}from'types';import Popover from'../../../components/Popover/Popover';import helpText from'./Notifications.helptext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var TypeFields={email:EmailFields,grafana:GrafanaFields,irc:IRCFields,mattermost:MattermostFields,pagerduty:PagerdutyFields,rocketchat:RocketChatFields,slack:SlackFields,twilio:TwilioFields,webhook:WebhookFields};function TypeInputsSubForm(_ref){var type=_ref.type;var Fields=TypeFields[type];return/*#__PURE__*/_jsxs(SubFormLayout,{children:[/*#__PURE__*/_jsx(Title,{size:\"md\",headingLevel:\"h4\",children:/*i18n*/i18n._(\"Type Details\")}),/*#__PURE__*/_jsx(FormColumnLayout,{children:/*#__PURE__*/_jsx(Fields,{})})]});}export default TypeInputsSubForm;function EmailFields(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FormField,{id:\"email-username\",label:/*i18n*/i18n._(\"Username\"),name:\"notification_configuration.username\",type:\"text\"}),/*#__PURE__*/_jsx(PasswordField,{id:\"email-password\",label:/*i18n*/i18n._(\"Password\"),name:\"notification_configuration.password\"}),/*#__PURE__*/_jsx(FormField,{id:\"email-host\",label:/*i18n*/i18n._(\"Host\"),name:\"notification_configuration.host\",type:\"text\",validate:required(null),isRequired:true}),/*#__PURE__*/_jsx(ArrayTextField,{id:\"email-recipients\",label:/*i18n*/i18n._(\"Recipient list\"),name:\"notification_configuration.recipients\",type:\"textarea\",validate:required(null),isRequired:true,rows:3,tooltip:helpText.emailRecepients}),/*#__PURE__*/_jsx(FormField,{id:\"email-sender\",label:/*i18n*/i18n._(\"Sender e-mail\"),name:\"notification_configuration.sender\",type:\"text\",validate:requiredEmail(),isRequired:true}),/*#__PURE__*/_jsx(FormField,{id:\"email-port\",label:/*i18n*/i18n._(\"Port\"),name:\"notification_configuration.port\",type:\"number\",validate:combine([required(null),minMaxValue(1,65535)]),isRequired:true,min:\"0\",max:\"65535\"}),/*#__PURE__*/_jsx(FormField,{id:\"email-timeout\",label:/*i18n*/i18n._(\"Timeout\"),name:\"notification_configuration.timeout\",type:\"number\",validate:combine([required(null),minMaxValue(1,120)]),isRequired:true,min:\"1\",max:\"120\",tooltip:helpText.emailTimeout}),/*#__PURE__*/_jsx(FormGroup,{fieldId:\"email-options\",label:/*i18n*/i18n._(\"Email Options\"),labelIcon:/*#__PURE__*/_jsx(Popover,{content:helpText.emailOptions}),children:/*#__PURE__*/_jsxs(FormCheckboxLayout,{children:[/*#__PURE__*/_jsx(CheckboxField,{id:\"option-use-ssl\",name:\"notification_configuration.use_ssl\",label:/*i18n*/i18n._(\"Use SSL\")}),/*#__PURE__*/_jsx(CheckboxField,{id:\"option-use-tls\",name:\"notification_configuration.use_tls\",label:/*i18n*/i18n._(\"Use TLS\")})]})})]});}function GrafanaFields(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FormField,{id:\"grafana-url\",label:/*i18n*/i18n._(\"Grafana URL\"),name:\"notification_configuration.grafana_url\",type:\"text\",validate:required(null),isRequired:true,tooltip:helpText.grafanaUrl}),/*#__PURE__*/_jsx(PasswordField,{id:\"grafana-key\",label:/*i18n*/i18n._(\"Grafana API key\"),name:\"notification_configuration.grafana_key\",validate:required(null),isRequired:true}),/*#__PURE__*/_jsx(FormField,{id:\"grafana-dashboard-id\",label:/*i18n*/i18n._(\"ID of the dashboard (optional)\"),name:\"notification_configuration.dashboardId\",type:\"text\"}),/*#__PURE__*/_jsx(FormField,{id:\"grafana-panel-id\",label:/*i18n*/i18n._(\"ID of the panel (optional)\"),name:\"notification_configuration.panelId\",type:\"text\"}),/*#__PURE__*/_jsx(ArrayTextField,{id:\"grafana-tags\",label:/*i18n*/i18n._(\"Tags for the annotation (optional)\"),name:\"notification_configuration.annotation_tags\",type:\"textarea\",rows:3,tooltip:helpText.grafanaTags}),/*#__PURE__*/_jsx(CheckboxField,{id:\"grafana-ssl\",label:/*i18n*/i18n._(\"Disable SSL verification\"),name:\"notification_configuration.grafana_no_verify_ssl\"})]});}function IRCFields(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(PasswordField,{id:\"irc-password\",label:/*i18n*/i18n._(\"IRC server password\"),name:\"notification_configuration.password\"}),/*#__PURE__*/_jsx(FormField,{id:\"irc-port\",label:/*i18n*/i18n._(\"IRC server port\"),name:\"notification_configuration.port\",type:\"number\",validate:required(null),isRequired:true,min:\"0\"}),/*#__PURE__*/_jsx(FormField,{id:\"irc-server\",label:/*i18n*/i18n._(\"IRC server address\"),name:\"notification_configuration.server\",type:\"text\",validate:required(null),isRequired:true}),/*#__PURE__*/_jsx(FormField,{id:\"irc-nickname\",label:/*i18n*/i18n._(\"IRC nick\"),name:\"notification_configuration.nickname\",type:\"text\",validate:required(null),isRequired:true}),/*#__PURE__*/_jsx(ArrayTextField,{id:\"irc-targets\",label:/*i18n*/i18n._(\"Destination channels or users\"),name:\"notification_configuration.targets\",type:\"textarea\",validate:required(null),isRequired:true,tooltip:helpText.ircTargets}),/*#__PURE__*/_jsx(CheckboxField,{id:\"grafana-ssl\",label:/*i18n*/i18n._(\"Disable SSL verification\"),name:\"notification_configuration.use_ssl\"})]});}function MattermostFields(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FormField,{id:\"mattermost-url\",label:/*i18n*/i18n._(\"Target URL\"),name:\"notification_configuration.mattermost_url\",type:\"text\",validate:combine([required(null),url()]),isRequired:true}),/*#__PURE__*/_jsx(FormField,{id:\"mattermost-username\",label:/*i18n*/i18n._(\"Username\"),name:\"notification_configuration.mattermost_username\",type:\"text\"}),/*#__PURE__*/_jsx(FormField,{id:\"mattermost-channel\",label:/*i18n*/i18n._(\"Channel\"),name:\"notification_configuration.mattermost_channel\",type:\"text\"}),/*#__PURE__*/_jsx(FormField,{id:\"mattermost-icon\",label:/*i18n*/i18n._(\"Icon URL\"),name:\"notification_configuration.mattermost_icon_url\",type:\"text\",validate:url()}),/*#__PURE__*/_jsx(CheckboxField,{id:\"mattermost-ssl\",label:/*i18n*/i18n._(\"Disable SSL verification\"),name:\"notification_configuration.mattermost_no_verify_ssl\"})]});}function PagerdutyFields(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(PasswordField,{id:\"pagerduty-token\",label:/*i18n*/i18n._(\"API Token\"),name:\"notification_configuration.token\",validate:required(null),isRequired:true}),/*#__PURE__*/_jsx(FormField,{id:\"pagerduty-subdomain\",label:/*i18n*/i18n._(\"Pagerduty subdomain\"),name:\"notification_configuration.subdomain\",type:\"text\",validate:required(null),isRequired:true}),/*#__PURE__*/_jsx(FormField,{id:\"pagerduty-service-key\",label:/*i18n*/i18n._(\"API service/integration key\"),name:\"notification_configuration.service_key\",type:\"text\",validate:required(null),isRequired:true}),/*#__PURE__*/_jsx(FormField,{id:\"pagerduty-identifier\",label:/*i18n*/i18n._(\"Client identifier\"),name:\"notification_configuration.client_name\",type:\"text\",validate:required(null),isRequired:true})]});}function RocketChatFields(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FormField,{id:\"rocketchat-url\",label:/*i18n*/i18n._(\"Target URL\"),name:\"notification_configuration.rocketchat_url\",type:\"text\",validate:combine([required(null),url()]),isRequired:true}),/*#__PURE__*/_jsx(FormField,{id:\"rocketchat-username\",label:/*i18n*/i18n._(\"Username\"),name:\"notification_configuration.rocketchat_username\",type:\"text\"}),/*#__PURE__*/_jsx(FormField,{id:\"rocketchat-icon-url\",label:/*i18n*/i18n._(\"Icon URL\"),name:\"notification_configuration.rocketchat_icon_url\",type:\"text\",validate:url()}),/*#__PURE__*/_jsx(CheckboxField,{id:\"rocketchat-ssl\",label:/*i18n*/i18n._(\"Disable SSL verification\"),name:\"notification_configuration.rocketchat_no_verify_ssl\"})]});}function SlackFields(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ArrayTextField,{id:\"slack-channels\",label:/*i18n*/i18n._(\"Destination channels\"),name:\"notification_configuration.channels\",type:\"textarea\",validate:required(null),isRequired:true,tooltip:helpText.slackChannels}),/*#__PURE__*/_jsx(PasswordField,{id:\"slack-token\",label:/*i18n*/i18n._(\"Token\"),name:\"notification_configuration.token\",validate:required(null),isRequired:true}),/*#__PURE__*/_jsx(FormField,{id:\"slack-color\",label:/*i18n*/i18n._(\"Notification color\"),name:\"notification_configuration.hex_color\",type:\"text\",tooltip:helpText.slackColor})]});}function TwilioFields(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(PasswordField,{id:\"twilio-token\",label:/*i18n*/i18n._(\"Account token\"),name:\"notification_configuration.account_token\",validate:required(null),isRequired:true}),/*#__PURE__*/_jsx(FormField,{id:\"twilio-from-phone\",label:/*i18n*/i18n._(\"Source phone number\"),name:\"notification_configuration.from_number\",type:\"text\",validate:combine([required(null),twilioPhoneNumber()]),isRequired:true,tooltip:helpText.twilioSourcePhoneNumber}),/*#__PURE__*/_jsx(ArrayTextField,{id:\"twilio-destination-numbers\",label:/*i18n*/i18n._(\"Destination SMS number(s)\"),name:\"notification_configuration.to_numbers\",type:\"textarea\",validate:combine([required(null),twilioPhoneNumber()]),isRequired:true,tooltip:helpText.twilioDestinationNumbers}),/*#__PURE__*/_jsx(FormField,{id:\"twilio-account-sid\",label:/*i18n*/i18n._(\"Account SID\"),name:\"notification_configuration.account_sid\",type:\"text\",validate:required(null),isRequired:true})]});}function WebhookFields(){var _useField=useField({name:'notification_configuration.http_method',validate:required(/*i18n*/i18n._(\"Select a value for this field\"))}),_useField2=_slicedToArray(_useField,2),methodField=_useField2[0],methodMeta=_useField2[1];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FormField,{id:\"webhook-username\",label:/*i18n*/i18n._(\"Username\"),name:\"notification_configuration.username\",type:\"text\"}),/*#__PURE__*/_jsx(PasswordField,{id:\"webhook-password\",label:/*i18n*/i18n._(\"Basic auth password\"),name:\"notification_configuration.password\"}),/*#__PURE__*/_jsx(FormField,{id:\"webhook-url\",label:/*i18n*/i18n._(\"Target URL\"),name:\"notification_configuration.url\",type:\"text\",validate:combine([required(null),url()]),isRequired:true}),/*#__PURE__*/_jsx(CheckboxField,{id:\"webhook-ssl\",label:/*i18n*/i18n._(\"Disable SSL verification\"),name:\"notification_configuration.disable_ssl_verification\"}),/*#__PURE__*/_jsx(FormFullWidthLayout,{children:/*#__PURE__*/_jsx(CodeEditorField,{id:\"webhook-headers\",name:\"notification_configuration.headers\",label:/*i18n*/i18n._(\"HTTP Headers\"),mode:\"javascript\",tooltip:helpText.webhookHeaders,rows:5})}),/*#__PURE__*/_jsx(FormGroup,{fieldId:\"webhook-http-method\",helperTextInvalid:methodMeta.error,isRequired:true,validated:!methodMeta.touched||!methodMeta.error?'default':'error',label:/*i18n*/i18n._(\"HTTP Method\"),children:/*#__PURE__*/_jsx(AnsibleSelect,_objectSpread(_objectSpread({},methodField),{},{id:\"webhook-http-method\",data:[{value:'',key:'',label:/*i18n*/i18n._(\"Choose an HTTP method\"),isDisabled:true},{value:'POST',key:'post',label:/*i18n*/i18n._(\"POST\")},{value:'PUT',key:'put',label:/*i18n*/i18n._(\"PUT\")}]}))})]});}","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/NotificationTemplate/shared/TypeInputsSubForm.js"],"names":["React","useField","FormGroup","Title","FormCheckboxLayout","FormColumnLayout","FormFullWidthLayout","SubFormLayout","FormField","PasswordField","CheckboxField","ArrayTextField","AnsibleSelect","CodeEditorField","combine","required","requiredEmail","url","minMaxValue","twilioPhoneNumber","NotificationType","Popover","helpText","TypeFields","email","EmailFields","grafana","GrafanaFields","irc","IRCFields","mattermost","MattermostFields","pagerduty","PagerdutyFields","rocketchat","RocketChatFields","slack","SlackFields","twilio","TwilioFields","webhook","WebhookFields","TypeInputsSubForm","type","Fields","emailRecepients","emailTimeout","emailOptions","grafanaUrl","grafanaTags","ircTargets","slackChannels","slackColor","twilioSourcePhoneNumber","twilioDestinationNumbers","name","validate","methodField","methodMeta","webhookHeaders","error","touched","value","key","label","isDisabled"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { t } from '@lingui/macro';\nimport { useField } from 'formik';\nimport { FormGroup, Title } from '@patternfly/react-core';\nimport {\n  FormCheckboxLayout,\n  FormColumnLayout,\n  FormFullWidthLayout,\n  SubFormLayout,\n} from 'components/FormLayout';\nimport FormField, {\n  PasswordField,\n  CheckboxField,\n  ArrayTextField,\n} from 'components/FormField';\nimport AnsibleSelect from 'components/AnsibleSelect';\nimport { CodeEditorField } from 'components/CodeEditor';\nimport {\n  combine,\n  required,\n  requiredEmail,\n  url,\n  minMaxValue,\n  twilioPhoneNumber,\n} from 'util/validators';\nimport { NotificationType } from 'types';\nimport Popover from '../../../components/Popover/Popover';\nimport helpText from './Notifications.helptext';\n\nconst TypeFields = {\n  email: EmailFields,\n  grafana: GrafanaFields,\n  irc: IRCFields,\n  mattermost: MattermostFields,\n  pagerduty: PagerdutyFields,\n  rocketchat: RocketChatFields,\n  slack: SlackFields,\n  twilio: TwilioFields,\n  webhook: WebhookFields,\n};\nfunction TypeInputsSubForm({ type }) {\n  const Fields = TypeFields[type];\n  return (\n    <SubFormLayout>\n      <Title size=\"md\" headingLevel=\"h4\">\n        {t`Type Details`}\n      </Title>\n      <FormColumnLayout>\n        <Fields />\n      </FormColumnLayout>\n    </SubFormLayout>\n  );\n}\nTypeInputsSubForm.propTypes = {\n  type: NotificationType.isRequired,\n};\n\nexport default TypeInputsSubForm;\n\nfunction EmailFields() {\n  return (\n    <>\n      <FormField\n        id=\"email-username\"\n        label={t`Username`}\n        name=\"notification_configuration.username\"\n        type=\"text\"\n      />\n      <PasswordField\n        id=\"email-password\"\n        label={t`Password`}\n        name=\"notification_configuration.password\"\n      />\n      <FormField\n        id=\"email-host\"\n        label={t`Host`}\n        name=\"notification_configuration.host\"\n        type=\"text\"\n        validate={required(null)}\n        isRequired\n      />\n      <ArrayTextField\n        id=\"email-recipients\"\n        label={t`Recipient list`}\n        name=\"notification_configuration.recipients\"\n        type=\"textarea\"\n        validate={required(null)}\n        isRequired\n        rows={3}\n        tooltip={helpText.emailRecepients}\n      />\n      <FormField\n        id=\"email-sender\"\n        label={t`Sender e-mail`}\n        name=\"notification_configuration.sender\"\n        type=\"text\"\n        validate={requiredEmail()}\n        isRequired\n      />\n      <FormField\n        id=\"email-port\"\n        label={t`Port`}\n        name=\"notification_configuration.port\"\n        type=\"number\"\n        validate={combine([required(null), minMaxValue(1, 65535)])}\n        isRequired\n        min=\"0\"\n        max=\"65535\"\n      />\n      <FormField\n        id=\"email-timeout\"\n        label={t`Timeout`}\n        name=\"notification_configuration.timeout\"\n        type=\"number\"\n        validate={combine([required(null), minMaxValue(1, 120)])}\n        isRequired\n        min=\"1\"\n        max=\"120\"\n        tooltip={helpText.emailTimeout}\n      />\n      <FormGroup\n        fieldId=\"email-options\"\n        label={t`Email Options`}\n        labelIcon={<Popover content={helpText.emailOptions} />}\n      >\n        <FormCheckboxLayout>\n          <CheckboxField\n            id=\"option-use-ssl\"\n            name=\"notification_configuration.use_ssl\"\n            label={t`Use SSL`}\n          />\n          <CheckboxField\n            id=\"option-use-tls\"\n            name=\"notification_configuration.use_tls\"\n            label={t`Use TLS`}\n          />\n        </FormCheckboxLayout>\n      </FormGroup>\n    </>\n  );\n}\n\nfunction GrafanaFields() {\n  return (\n    <>\n      <FormField\n        id=\"grafana-url\"\n        label={t`Grafana URL`}\n        name=\"notification_configuration.grafana_url\"\n        type=\"text\"\n        validate={required(null)}\n        isRequired\n        tooltip={helpText.grafanaUrl}\n      />\n      <PasswordField\n        id=\"grafana-key\"\n        label={t`Grafana API key`}\n        name=\"notification_configuration.grafana_key\"\n        validate={required(null)}\n        isRequired\n      />\n      <FormField\n        id=\"grafana-dashboard-id\"\n        label={t`ID of the dashboard (optional)`}\n        name=\"notification_configuration.dashboardId\"\n        type=\"text\"\n      />\n      <FormField\n        id=\"grafana-panel-id\"\n        label={t`ID of the panel (optional)`}\n        name=\"notification_configuration.panelId\"\n        type=\"text\"\n      />\n      <ArrayTextField\n        id=\"grafana-tags\"\n        label={t`Tags for the annotation (optional)`}\n        name=\"notification_configuration.annotation_tags\"\n        type=\"textarea\"\n        rows={3}\n        tooltip={helpText.grafanaTags}\n      />\n      <CheckboxField\n        id=\"grafana-ssl\"\n        label={t`Disable SSL verification`}\n        name=\"notification_configuration.grafana_no_verify_ssl\"\n      />\n    </>\n  );\n}\n\nfunction IRCFields() {\n  return (\n    <>\n      <PasswordField\n        id=\"irc-password\"\n        label={t`IRC server password`}\n        name=\"notification_configuration.password\"\n      />\n      <FormField\n        id=\"irc-port\"\n        label={t`IRC server port`}\n        name=\"notification_configuration.port\"\n        type=\"number\"\n        validate={required(null)}\n        isRequired\n        min=\"0\"\n      />\n      <FormField\n        id=\"irc-server\"\n        label={t`IRC server address`}\n        name=\"notification_configuration.server\"\n        type=\"text\"\n        validate={required(null)}\n        isRequired\n      />\n      <FormField\n        id=\"irc-nickname\"\n        label={t`IRC nick`}\n        name=\"notification_configuration.nickname\"\n        type=\"text\"\n        validate={required(null)}\n        isRequired\n      />\n      <ArrayTextField\n        id=\"irc-targets\"\n        label={t`Destination channels or users`}\n        name=\"notification_configuration.targets\"\n        type=\"textarea\"\n        validate={required(null)}\n        isRequired\n        tooltip={helpText.ircTargets}\n      />\n      <CheckboxField\n        id=\"grafana-ssl\"\n        label={t`Disable SSL verification`}\n        name=\"notification_configuration.use_ssl\"\n      />\n    </>\n  );\n}\n\nfunction MattermostFields() {\n  return (\n    <>\n      <FormField\n        id=\"mattermost-url\"\n        label={t`Target URL`}\n        name=\"notification_configuration.mattermost_url\"\n        type=\"text\"\n        validate={combine([required(null), url()])}\n        isRequired\n      />\n      <FormField\n        id=\"mattermost-username\"\n        label={t`Username`}\n        name=\"notification_configuration.mattermost_username\"\n        type=\"text\"\n      />\n      <FormField\n        id=\"mattermost-channel\"\n        label={t`Channel`}\n        name=\"notification_configuration.mattermost_channel\"\n        type=\"text\"\n      />\n      <FormField\n        id=\"mattermost-icon\"\n        label={t`Icon URL`}\n        name=\"notification_configuration.mattermost_icon_url\"\n        type=\"text\"\n        validate={url()}\n      />\n      <CheckboxField\n        id=\"mattermost-ssl\"\n        label={t`Disable SSL verification`}\n        name=\"notification_configuration.mattermost_no_verify_ssl\"\n      />\n    </>\n  );\n}\n\nfunction PagerdutyFields() {\n  return (\n    <>\n      <PasswordField\n        id=\"pagerduty-token\"\n        label={t`API Token`}\n        name=\"notification_configuration.token\"\n        validate={required(null)}\n        isRequired\n      />\n      <FormField\n        id=\"pagerduty-subdomain\"\n        label={t`Pagerduty subdomain`}\n        name=\"notification_configuration.subdomain\"\n        type=\"text\"\n        validate={required(null)}\n        isRequired\n      />\n      <FormField\n        id=\"pagerduty-service-key\"\n        label={t`API service/integration key`}\n        name=\"notification_configuration.service_key\"\n        type=\"text\"\n        validate={required(null)}\n        isRequired\n      />\n      <FormField\n        id=\"pagerduty-identifier\"\n        label={t`Client identifier`}\n        name=\"notification_configuration.client_name\"\n        type=\"text\"\n        validate={required(null)}\n        isRequired\n      />\n    </>\n  );\n}\n\nfunction RocketChatFields() {\n  return (\n    <>\n      <FormField\n        id=\"rocketchat-url\"\n        label={t`Target URL`}\n        name=\"notification_configuration.rocketchat_url\"\n        type=\"text\"\n        validate={combine([required(null), url()])}\n        isRequired\n      />\n      <FormField\n        id=\"rocketchat-username\"\n        label={t`Username`}\n        name=\"notification_configuration.rocketchat_username\"\n        type=\"text\"\n      />\n      <FormField\n        id=\"rocketchat-icon-url\"\n        label={t`Icon URL`}\n        name=\"notification_configuration.rocketchat_icon_url\"\n        type=\"text\"\n        validate={url()}\n      />\n      <CheckboxField\n        id=\"rocketchat-ssl\"\n        label={t`Disable SSL verification`}\n        name=\"notification_configuration.rocketchat_no_verify_ssl\"\n      />\n    </>\n  );\n}\n\nfunction SlackFields() {\n  return (\n    <>\n      <ArrayTextField\n        id=\"slack-channels\"\n        label={t`Destination channels`}\n        name=\"notification_configuration.channels\"\n        type=\"textarea\"\n        validate={required(null)}\n        isRequired\n        tooltip={helpText.slackChannels}\n      />\n      <PasswordField\n        id=\"slack-token\"\n        label={t`Token`}\n        name=\"notification_configuration.token\"\n        validate={required(null)}\n        isRequired\n      />\n      <FormField\n        id=\"slack-color\"\n        label={t`Notification color`}\n        name=\"notification_configuration.hex_color\"\n        type=\"text\"\n        tooltip={helpText.slackColor}\n      />\n    </>\n  );\n}\n\nfunction TwilioFields() {\n  return (\n    <>\n      <PasswordField\n        id=\"twilio-token\"\n        label={t`Account token`}\n        name=\"notification_configuration.account_token\"\n        validate={required(null)}\n        isRequired\n      />\n      <FormField\n        id=\"twilio-from-phone\"\n        label={t`Source phone number`}\n        name=\"notification_configuration.from_number\"\n        type=\"text\"\n        validate={combine([required(null), twilioPhoneNumber()])}\n        isRequired\n        tooltip={helpText.twilioSourcePhoneNumber}\n      />\n      <ArrayTextField\n        id=\"twilio-destination-numbers\"\n        label={t`Destination SMS number(s)`}\n        name=\"notification_configuration.to_numbers\"\n        type=\"textarea\"\n        validate={combine([required(null), twilioPhoneNumber()])}\n        isRequired\n        tooltip={helpText.twilioDestinationNumbers}\n      />\n      <FormField\n        id=\"twilio-account-sid\"\n        label={t`Account SID`}\n        name=\"notification_configuration.account_sid\"\n        type=\"text\"\n        validate={required(null)}\n        isRequired\n      />\n    </>\n  );\n}\n\nfunction WebhookFields() {\n  const [methodField, methodMeta] = useField({\n    name: 'notification_configuration.http_method',\n    validate: required(t`Select a value for this field`),\n  });\n  return (\n    <>\n      <FormField\n        id=\"webhook-username\"\n        label={t`Username`}\n        name=\"notification_configuration.username\"\n        type=\"text\"\n      />\n      <PasswordField\n        id=\"webhook-password\"\n        label={t`Basic auth password`}\n        name=\"notification_configuration.password\"\n      />\n      <FormField\n        id=\"webhook-url\"\n        label={t`Target URL`}\n        name=\"notification_configuration.url\"\n        type=\"text\"\n        validate={combine([required(null), url()])}\n        isRequired\n      />\n      <CheckboxField\n        id=\"webhook-ssl\"\n        label={t`Disable SSL verification`}\n        name=\"notification_configuration.disable_ssl_verification\"\n      />\n      <FormFullWidthLayout>\n        <CodeEditorField\n          id=\"webhook-headers\"\n          name=\"notification_configuration.headers\"\n          label={t`HTTP Headers`}\n          mode=\"javascript\"\n          tooltip={helpText.webhookHeaders}\n          rows={5}\n        />\n      </FormFullWidthLayout>\n      <FormGroup\n        fieldId=\"webhook-http-method\"\n        helperTextInvalid={methodMeta.error}\n        isRequired\n        validated={\n          !methodMeta.touched || !methodMeta.error ? 'default' : 'error'\n        }\n        label={t`HTTP Method`}\n      >\n        <AnsibleSelect\n          {...methodField}\n          id=\"webhook-http-method\"\n          data={[\n            {\n              value: '',\n              key: '',\n              label: t`Choose an HTTP method`,\n              isDisabled: true,\n            },\n            { value: 'POST', key: 'post', label: t`POST` },\n            { value: 'PUT', key: 'put', label: t`PUT` },\n          ]}\n        />\n      </FormGroup>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}