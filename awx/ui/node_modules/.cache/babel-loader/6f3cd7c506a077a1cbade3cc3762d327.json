{"ast":null,"code":"import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import Base from'../Base';var Credentials=/*#__PURE__*/function(_Base){_inherits(Credentials,_Base);var _super=_createSuper(Credentials);function Credentials(http){var _this;_classCallCheck(this,Credentials);_this=_super.call(this,http);_this.baseUrl='api/v2/credentials/';_this.readAccessList=_this.readAccessList.bind(_assertThisInitialized(_this));_this.readAccessOptions=_this.readAccessOptions.bind(_assertThisInitialized(_this));_this.readInputSources=_this.readInputSources.bind(_assertThisInitialized(_this));return _this;}_createClass(Credentials,[{key:\"readAccessList\",value:function readAccessList(id,params){return this.http.get(\"\".concat(this.baseUrl).concat(id,\"/access_list/\"),{params:params});}},{key:\"readAccessOptions\",value:function readAccessOptions(id){return this.http.options(\"\".concat(this.baseUrl).concat(id,\"/access_list/\"));}},{key:\"readInputSources\",value:function readInputSources(id){var _this2=this;var maxRequests=5;var requestCounter=0;var fetchInputSources=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var pageNo,inputSources,_yield$_this2$http$ge,data,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:pageNo=_args.length>0&&_args[0]!==undefined?_args[0]:1;inputSources=_args.length>1&&_args[1]!==undefined?_args[1]:[];_context.prev=2;requestCounter++;_context.next=6;return _this2.http.get(\"\".concat(_this2.baseUrl).concat(id,\"/input_sources/\"),{params:{page:pageNo,page_size:200}});case 6:_yield$_this2$http$ge=_context.sent;data=_yield$_this2$http$ge.data;if(!(data!==null&&data!==void 0&&data.next&&requestCounter<=maxRequests)){_context.next=10;break;}return _context.abrupt(\"return\",fetchInputSources(pageNo+1,inputSources.concat(data.results)));case 10:return _context.abrupt(\"return\",Promise.resolve({data:{results:inputSources.concat(data.results)}}));case 13:_context.prev=13;_context.t0=_context[\"catch\"](2);return _context.abrupt(\"return\",Promise.reject(_context.t0));case 16:case\"end\":return _context.stop();}}},_callee,null,[[2,13]]);}));return function fetchInputSources(){return _ref.apply(this,arguments);};}();return fetchInputSources();}},{key:\"test\",value:function test(id,data){return this.http.post(\"\".concat(this.baseUrl).concat(id,\"/test/\"),data);}}]);return Credentials;}(Base);export default Credentials;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/api/models/Credentials.js"],"names":["Base","Credentials","http","baseUrl","readAccessList","bind","readAccessOptions","readInputSources","id","params","get","options","maxRequests","requestCounter","fetchInputSources","pageNo","inputSources","page","page_size","data","next","concat","results","Promise","resolve","reject","post"],"mappings":"otBAAA,MAAOA,CAAAA,IAAP,KAAiB,SAAjB,C,GAEMC,CAAAA,W,gGACJ,qBAAYC,IAAZ,CAAkB,6CAChB,uBAAMA,IAAN,EACA,MAAKC,OAAL,CAAe,qBAAf,CAEA,MAAKC,cAAL,CAAsB,MAAKA,cAAL,CAAoBC,IAApB,+BAAtB,CACA,MAAKC,iBAAL,CAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,+BAAzB,CACA,MAAKE,gBAAL,CAAwB,MAAKA,gBAAL,CAAsBF,IAAtB,+BAAxB,CANgB,aAOjB,C,sDAED,wBAAeG,EAAf,CAAmBC,MAAnB,CAA2B,CACzB,MAAO,MAAKP,IAAL,CAAUQ,GAAV,WAAiB,KAAKP,OAAtB,SAAgCK,EAAhC,kBAAmD,CACxDC,MAAM,CAANA,MADwD,CAAnD,CAAP,CAGD,C,iCAED,2BAAkBD,EAAlB,CAAsB,CACpB,MAAO,MAAKN,IAAL,CAAUS,OAAV,WAAqB,KAAKR,OAA1B,SAAoCK,EAApC,kBAAP,CACD,C,gCAED,0BAAiBA,EAAjB,CAAqB,iBACnB,GAAMI,CAAAA,WAAW,CAAG,CAApB,CACA,GAAIC,CAAAA,cAAc,CAAG,CAArB,CACA,GAAMC,CAAAA,iBAAiB,0FAAG,sMAAOC,MAAP,+CAAgB,CAAhB,CAAmBC,YAAnB,+CAAkC,EAAlC,iBAEtBH,cAAc,GAFQ,sBAGC,CAAA,MAAI,CAACX,IAAL,CAAUQ,GAAV,WAClB,MAAI,CAACP,OADa,SACHK,EADG,oBAErB,CACEC,MAAM,CAAE,CACNQ,IAAI,CAAEF,MADA,CAENG,SAAS,CAAE,GAFL,CADV,CAFqB,CAHD,4CAGdC,IAHc,uBAGdA,IAHc,MAYlBA,IAAI,OAAJ,EAAAA,IAAI,SAAJ,EAAAA,IAAI,CAAEC,IAAN,EAAcP,cAAc,EAAID,WAZd,2DAabE,iBAAiB,CACtBC,MAAM,CAAG,CADa,CAEtBC,YAAY,CAACK,MAAb,CAAoBF,IAAI,CAACG,OAAzB,CAFsB,CAbJ,0CAkBfC,OAAO,CAACC,OAAR,CAAgB,CACrBL,IAAI,CAAE,CACJG,OAAO,CAAEN,YAAY,CAACK,MAAb,CAAoBF,IAAI,CAACG,OAAzB,CADL,CADe,CAAhB,CAlBe,4FAwBfC,OAAO,CAACE,MAAR,aAxBe,uEAAH,kBAAjBX,CAAAA,iBAAiB,0CAAvB,CA4BA,MAAOA,CAAAA,iBAAiB,EAAxB,CACD,C,oBAED,cAAKN,EAAL,CAASW,IAAT,CAAe,CACb,MAAO,MAAKjB,IAAL,CAAUwB,IAAV,WAAkB,KAAKvB,OAAvB,SAAiCK,EAAjC,WAA6CW,IAA7C,CAAP,CACD,C,yBAxDuBnB,I,EA2D1B,cAAeC,CAAAA,WAAf","sourcesContent":["import Base from '../Base';\n\nclass Credentials extends Base {\n  constructor(http) {\n    super(http);\n    this.baseUrl = 'api/v2/credentials/';\n\n    this.readAccessList = this.readAccessList.bind(this);\n    this.readAccessOptions = this.readAccessOptions.bind(this);\n    this.readInputSources = this.readInputSources.bind(this);\n  }\n\n  readAccessList(id, params) {\n    return this.http.get(`${this.baseUrl}${id}/access_list/`, {\n      params,\n    });\n  }\n\n  readAccessOptions(id) {\n    return this.http.options(`${this.baseUrl}${id}/access_list/`);\n  }\n\n  readInputSources(id) {\n    const maxRequests = 5;\n    let requestCounter = 0;\n    const fetchInputSources = async (pageNo = 1, inputSources = []) => {\n      try {\n        requestCounter++;\n        const { data } = await this.http.get(\n          `${this.baseUrl}${id}/input_sources/`,\n          {\n            params: {\n              page: pageNo,\n              page_size: 200,\n            },\n          }\n        );\n        if (data?.next && requestCounter <= maxRequests) {\n          return fetchInputSources(\n            pageNo + 1,\n            inputSources.concat(data.results)\n          );\n        }\n        return Promise.resolve({\n          data: {\n            results: inputSources.concat(data.results),\n          },\n        });\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    };\n\n    return fetchInputSources();\n  }\n\n  test(id, data) {\n    return this.http.post(`${this.baseUrl}${id}/test/`, data);\n  }\n}\n\nexport default Credentials;\n"]},"metadata":{},"sourceType":"module"}