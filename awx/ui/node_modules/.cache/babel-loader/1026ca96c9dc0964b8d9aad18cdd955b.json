{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport AngleDownIcon from '@patternfly/react-icons/dist/esm/icons/angle-down-icon';\nimport { Button } from '../Button';\nexport var ClipboardCopyToggle = function ClipboardCopyToggle(_a) {\n  var onClick = _a.onClick,\n      id = _a.id,\n      textId = _a.textId,\n      contentId = _a.contentId,\n      _a$isExpanded = _a.isExpanded,\n      isExpanded = _a$isExpanded === void 0 ? false : _a$isExpanded,\n      props = __rest(_a, [\"onClick\", \"id\", \"textId\", \"contentId\", \"isExpanded\"]);\n\n  return React.createElement(Button, Object.assign({\n    type: \"button\",\n    variant: \"control\",\n    onClick: onClick,\n    id: id,\n    \"aria-labelledby\": \"\".concat(id, \" \").concat(textId),\n    \"aria-controls\": \"\".concat(id, \" \").concat(contentId),\n    \"aria-expanded\": isExpanded\n  }, props), isExpanded ? React.createElement(AngleDownIcon, {\n    \"aria-hidden\": \"true\"\n  }) : React.createElement(AngleRightIcon, {\n    \"aria-hidden\": \"true\"\n  }));\n};\nClipboardCopyToggle.displayName = 'ClipboardCopyToggle';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/ClipboardCopy/ClipboardCopyToggle.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,cAAP,MAA2B,yDAA3B;AACA,OAAO,aAAP,MAA0B,wDAA1B;AACA,SAAS,MAAT,QAAuB,WAAvB;AAYA,OAAO,IAAM,mBAAmB,GAAsD,SAAzE,mBAAyE,CAAC,EAAD,EAOvD;AAPwD,MACrF,OADqF,GAKnE,EALmE,CACrF,OADqF;AAAA,MAErF,EAFqF,GAKnE,EALmE,CAErF,EAFqF;AAAA,MAGrF,MAHqF,GAKnE,EALmE,CAGrF,MAHqF;AAAA,MAIrF,SAJqF,GAKnE,EALmE,CAIrF,SAJqF;AAAA,sBAKnE,EALmE,CAKrF,UALqF;AAAA,MAKrF,UALqF,8BAKxE,KALwE;AAAA,MAMlF,KANkF,GAM7E,MAAA,CAAA,EAAA,EAN6E,CAAA,SAAA,EAAA,IAAA,EAAA,QAAA,EAAA,WAAA,EAAA,YAAA,CAM7E,CAN6E;;AAOvD,SAC9B,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO,MAAA,CAAA,MAAA,CAAA;AACL,IAAA,IAAI,EAAC,QADA;AAEL,IAAA,OAAO,EAAC,SAFH;AAGL,IAAA,OAAO,EAAE,OAHJ;AAIL,IAAA,EAAE,EAAE,EAJC;AAIC,iCACc,EADd,cACoB,MADpB,CAJD;AAK6B,+BAChB,EADgB,cACV,SADU,CAL7B;AAM8B,qBACpB;AAPV,GAAA,EAQD,KARC,CAAP,EAUG,UAAU,GAAG,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc;AAAA,mBAAa;AAAb,GAAd,CAAH,GAA0C,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe;AAAA,mBAAa;AAAb,GAAf,CAVvD,CAD8B;AAa/B,CApBM;AAqBP,mBAAmB,CAAC,WAApB,GAAkC,qBAAlC","sourcesContent":["import * as React from 'react';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport AngleDownIcon from '@patternfly/react-icons/dist/esm/icons/angle-down-icon';\nimport { Button } from '../Button';\n\nexport interface ClipboardCopyToggleProps\n  extends Omit<React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, 'ref'> {\n  onClick: (event: React.MouseEvent) => void;\n  id: string;\n  textId: string;\n  contentId: string;\n  isExpanded?: boolean;\n  className?: string;\n}\n\nexport const ClipboardCopyToggle: React.FunctionComponent<ClipboardCopyToggleProps> = ({\n  onClick,\n  id,\n  textId,\n  contentId,\n  isExpanded = false,\n  ...props\n}: ClipboardCopyToggleProps) => (\n  <Button\n    type=\"button\"\n    variant=\"control\"\n    onClick={onClick}\n    id={id}\n    aria-labelledby={`${id} ${textId}`}\n    aria-controls={`${id} ${contentId}`}\n    aria-expanded={isExpanded}\n    {...props}\n  >\n    {isExpanded ? <AngleDownIcon aria-hidden=\"true\" /> : <AngleRightIcon aria-hidden=\"true\" />}\n  </Button>\n);\nClipboardCopyToggle.displayName = 'ClipboardCopyToggle';\n"]},"metadata":{},"sourceType":"module"}