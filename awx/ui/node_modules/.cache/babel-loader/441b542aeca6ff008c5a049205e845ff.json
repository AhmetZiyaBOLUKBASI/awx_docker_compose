{"ast":null,"code":"import _defineProperty from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tabs/tabs';\nimport { TabButton } from './TabButton';\nimport { TabsContext } from './TabsContext';\nimport { css } from '@patternfly/react-styles';\nimport { Tooltip } from '../Tooltip';\nimport { Button } from '../Button';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\n\nvar TabBase = function TabBase(_a) {\n  var title = _a.title,\n      eventKey = _a.eventKey,\n      tabContentRef = _a.tabContentRef,\n      childId = _a.id,\n      tabContentId = _a.tabContentId,\n      _a$className = _a.className,\n      childClassName = _a$className === void 0 ? '' : _a$className,\n      childOuiaId = _a.ouiaId,\n      isDisabled = _a.isDisabled,\n      isAriaDisabled = _a.isAriaDisabled,\n      _a$inoperableEvents = _a.inoperableEvents,\n      inoperableEvents = _a$inoperableEvents === void 0 ? ['onClick', 'onKeyPress'] : _a$inoperableEvents,\n      href = _a.href,\n      innerRef = _a.innerRef,\n      tooltip = _a.tooltip,\n      closeButtonAriaLabel = _a.closeButtonAriaLabel,\n      _a$isCloseDisabled = _a.isCloseDisabled,\n      isCloseDisabled = _a$isCloseDisabled === void 0 ? false : _a$isCloseDisabled,\n      props = __rest(_a, [\"title\", \"eventKey\", \"tabContentRef\", \"id\", \"tabContentId\", \"className\", \"ouiaId\", \"isDisabled\", \"isAriaDisabled\", \"inoperableEvents\", \"href\", \"innerRef\", \"tooltip\", \"closeButtonAriaLabel\", \"isCloseDisabled\"]);\n\n  var preventedEvents = inoperableEvents.reduce(function (handlers, eventToPrevent) {\n    return Object.assign(Object.assign({}, handlers), _defineProperty({}, eventToPrevent, function (event) {\n      event.preventDefault();\n    }));\n  }, {});\n\n  var _React$useContext = React.useContext(TabsContext),\n      mountOnEnter = _React$useContext.mountOnEnter,\n      localActiveKey = _React$useContext.localActiveKey,\n      unmountOnExit = _React$useContext.unmountOnExit,\n      uniqueId = _React$useContext.uniqueId,\n      handleTabClick = _React$useContext.handleTabClick,\n      handleTabClose = _React$useContext.handleTabClose;\n\n  var ariaControls = tabContentId ? \"\".concat(tabContentId) : \"pf-tab-section-\".concat(eventKey, \"-\").concat(childId || uniqueId);\n\n  if ((mountOnEnter || unmountOnExit) && eventKey !== localActiveKey) {\n    ariaControls = undefined;\n  }\n\n  var isButtonElement = Boolean(!href);\n\n  var getDefaultTabIdx = function getDefaultTabIdx() {\n    if (isDisabled) {\n      return isButtonElement ? null : -1;\n    } else if (isAriaDisabled) {\n      return null;\n    }\n  };\n\n  var tabButton = React.createElement(TabButton, Object.assign({\n    parentInnerRef: innerRef,\n    className: css(styles.tabsLink, isDisabled && href && styles.modifiers.disabled, isAriaDisabled && styles.modifiers.ariaDisabled),\n    disabled: isButtonElement ? isDisabled : null,\n    \"aria-disabled\": isDisabled || isAriaDisabled,\n    tabIndex: getDefaultTabIdx(),\n    onClick: function onClick(event) {\n      return handleTabClick(event, eventKey, tabContentRef);\n    }\n  }, isAriaDisabled ? preventedEvents : null, {\n    id: \"pf-tab-\".concat(eventKey, \"-\").concat(childId || uniqueId),\n    \"aria-controls\": ariaControls,\n    tabContentRef: tabContentRef,\n    ouiaId: childOuiaId,\n    href: href,\n    role: \"tab\",\n    \"aria-selected\": eventKey === localActiveKey\n  }, props), title);\n  return React.createElement(\"li\", {\n    className: css(styles.tabsItem, eventKey === localActiveKey && styles.modifiers.current, handleTabClose && styles.modifiers.action, handleTabClose && (isDisabled || isAriaDisabled) && styles.modifiers.disabled, childClassName),\n    role: \"presentation\"\n  }, tooltip ? React.createElement(Tooltip, Object.assign({}, tooltip.props), tabButton) : tabButton, handleTabClose !== undefined && React.createElement(\"span\", {\n    className: css(styles.tabsItemClose)\n  }, React.createElement(Button, {\n    variant: \"plain\",\n    \"aria-label\": closeButtonAriaLabel || 'Close tab',\n    onClick: function onClick(event) {\n      return handleTabClose(event, eventKey, tabContentRef);\n    },\n    isDisabled: isCloseDisabled\n  }, React.createElement(\"span\", {\n    className: css(styles.tabsItemCloseIcon)\n  }, React.createElement(TimesIcon, null)))));\n};\n\nexport var Tab = React.forwardRef(function (props, ref) {\n  return React.createElement(TabBase, Object.assign({\n    innerRef: ref\n  }, props));\n});\nTab.displayName = 'Tab';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Tabs/Tab.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tabs/tabs';\nimport { OUIAProps } from '../../helpers';\nimport { TabButton } from './TabButton';\nimport { TabsContext } from './TabsContext';\nimport { css } from '@patternfly/react-styles';\nimport { Tooltip } from '../Tooltip';\nimport { Button } from '../Button';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\n\nexport interface TabProps extends Omit<React.HTMLProps<HTMLAnchorElement | HTMLButtonElement>, 'title'>, OUIAProps {\n  /** content rendered inside the Tab content area. */\n  children?: React.ReactNode;\n  /** additional classes added to the Tab */\n  className?: string;\n  /** URL associated with the Tab. A Tab with an href will render as an <a> instead of a <button>. A Tab inside a <Tabs component=\"nav\"> should have an href. */\n  href?: string;\n  /** Content rendered in the tab title. Should be <TabTitleText> and/or <TabTitleIcon> for proper styling. */\n  title: React.ReactNode;\n  /** uniquely identifies the tab */\n  eventKey: number | string;\n  /** child id for case in which a TabContent section is defined outside of a Tabs component */\n  tabContentId?: string | number;\n  /** child reference for case in which a TabContent section is defined outside of a Tabs component */\n  tabContentRef?: React.RefObject<any>;\n  /** whether to render the tab or not */\n  isHidden?: boolean;\n  /** Adds disabled styling and disables the button using the disabled html attribute */\n  isDisabled?: boolean;\n  /** Adds disabled styling and communicates that the button is disabled using the aria-disabled html attribute */\n  isAriaDisabled?: boolean;\n  /** Events to prevent when the button is in an aria-disabled state */\n  inoperableEvents?: string[];\n  /** Forwarded ref */\n  innerRef?: React.Ref<any>;\n  /** Optional Tooltip rendered to a Tab. Should be <Tooltip> with appropriate props for proper rendering. */\n  tooltip?: React.ReactElement<any>;\n  /** @beta Aria-label for the close button added by passing the onClose property to Tabs. */\n  closeButtonAriaLabel?: string;\n  /** @beta Flag indicating the close button should be disabled */\n  isCloseDisabled?: boolean;\n}\n\nconst TabBase: React.FunctionComponent<TabProps> = ({\n  title,\n  eventKey,\n  tabContentRef,\n  id: childId,\n  tabContentId,\n  className: childClassName = '',\n  ouiaId: childOuiaId,\n  isDisabled,\n  isAriaDisabled,\n  inoperableEvents = ['onClick', 'onKeyPress'],\n  href,\n  innerRef,\n  tooltip,\n  closeButtonAriaLabel,\n  isCloseDisabled = false,\n  ...props\n}: TabProps) => {\n  const preventedEvents = inoperableEvents.reduce(\n    (handlers, eventToPrevent) => ({\n      ...handlers,\n      [eventToPrevent]: (event: React.SyntheticEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n      }\n    }),\n    {}\n  );\n  const { mountOnEnter, localActiveKey, unmountOnExit, uniqueId, handleTabClick, handleTabClose } = React.useContext(\n    TabsContext\n  );\n  let ariaControls = tabContentId ? `${tabContentId}` : `pf-tab-section-${eventKey}-${childId || uniqueId}`;\n  if ((mountOnEnter || unmountOnExit) && eventKey !== localActiveKey) {\n    ariaControls = undefined;\n  }\n  const isButtonElement = Boolean(!href);\n  const getDefaultTabIdx = () => {\n    if (isDisabled) {\n      return isButtonElement ? null : -1;\n    } else if (isAriaDisabled) {\n      return null;\n    }\n  };\n\n  const tabButton = (\n    <TabButton\n      parentInnerRef={innerRef}\n      className={css(\n        styles.tabsLink,\n        isDisabled && href && styles.modifiers.disabled,\n        isAriaDisabled && styles.modifiers.ariaDisabled\n      )}\n      disabled={isButtonElement ? isDisabled : null}\n      aria-disabled={isDisabled || isAriaDisabled}\n      tabIndex={getDefaultTabIdx()}\n      onClick={(event: any) => handleTabClick(event, eventKey, tabContentRef)}\n      {...(isAriaDisabled ? preventedEvents : null)}\n      id={`pf-tab-${eventKey}-${childId || uniqueId}`}\n      aria-controls={ariaControls}\n      tabContentRef={tabContentRef}\n      ouiaId={childOuiaId}\n      href={href}\n      role=\"tab\"\n      aria-selected={eventKey === localActiveKey}\n      {...props}\n    >\n      {title}\n    </TabButton>\n  );\n\n  return (\n    <li\n      className={css(\n        styles.tabsItem,\n        eventKey === localActiveKey && styles.modifiers.current,\n        handleTabClose && styles.modifiers.action,\n        handleTabClose && (isDisabled || isAriaDisabled) && styles.modifiers.disabled,\n        childClassName\n      )}\n      role=\"presentation\"\n    >\n      {tooltip ? <Tooltip {...tooltip.props}>{tabButton}</Tooltip> : tabButton}\n      {handleTabClose !== undefined && (\n        <span className={css(styles.tabsItemClose)}>\n          <Button\n            variant=\"plain\"\n            aria-label={closeButtonAriaLabel || 'Close tab'}\n            onClick={(event: any) => handleTabClose(event, eventKey, tabContentRef)}\n            isDisabled={isCloseDisabled}\n          >\n            <span className={css(styles.tabsItemCloseIcon)}>\n              <TimesIcon />\n            </span>\n          </Button>\n        </span>\n      )}\n    </li>\n  );\n};\n\nexport const Tab = React.forwardRef((props: TabProps, ref: React.Ref<any>) => <TabBase innerRef={ref} {...props} />);\nTab.displayName = 'Tab';\n"]},"metadata":{},"sourceType":"module"}