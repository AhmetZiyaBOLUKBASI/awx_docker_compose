{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import{i18n}from\"@lingui/core\";import React from'react';import{useField}from'formik';import{Form,FormGroup,Switch}from'@patternfly/react-core';import styled from'styled-components';import FormField from'../../FormField';import{TagMultiSelect}from'../../MultiSelect';import AnsibleSelect from'../../AnsibleSelect';import{VariablesField}from'../../CodeEditor';import Popover from'../../Popover';import{VerbositySelectField}from'../../VerbositySelectField';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FieldHeader=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  padding-bottom: var(--pf-c-form__label--PaddingBottom);\\n\\n  label {\\n    --pf-c-form__label--PaddingBottom: 0px;\\n  }\\n\"])));function OtherPromptsStep(_ref){var launchConfig=_ref.launchConfig,variablesMode=_ref.variablesMode,onVarModeChange=_ref.onVarModeChange;return/*#__PURE__*/_jsxs(Form,{onSubmit:function onSubmit(e){e.preventDefault();},children:[launchConfig.ask_job_type_on_launch&&/*#__PURE__*/_jsx(JobTypeField,{}),launchConfig.ask_limit_on_launch&&/*#__PURE__*/_jsx(FormField,{id:\"prompt-limit\",name:\"limit\",label:/*i18n*/i18n._(\"Limit\"),tooltip:/*i18n*/i18n._(\"Provide a host pattern to further constrain the list\\nof hosts that will be managed or affected by the playbook. Multiple\\npatterns are allowed. Refer to Ansible documentation for more\\ninformation and examples on patterns.\")}),launchConfig.ask_scm_branch_on_launch&&/*#__PURE__*/_jsx(FormField,{id:\"prompt-scm-branch\",name:\"scm_branch\",label:/*i18n*/i18n._(\"Source Control Branch\"),tooltip:/*i18n*/i18n._(\"Select a branch for the workflow. This branch is applied to all job template nodes that prompt for a branch\")}),launchConfig.ask_verbosity_on_launch&&/*#__PURE__*/_jsx(VerbosityField,{}),launchConfig.ask_diff_mode_on_launch&&/*#__PURE__*/_jsx(ShowChangesToggle,{}),launchConfig.ask_tags_on_launch&&/*#__PURE__*/_jsx(TagField,{id:\"prompt-job-tags\",name:\"job_tags\",label:/*i18n*/i18n._(\"Job Tags\"),\"aria-label\":/*i18n*/i18n._(\"Job Tags\"),tooltip:/*i18n*/i18n._(\"Tags are useful when you have a large\\nplaybook, and you want to run a specific part of a play or task.\\nUse commas to separate multiple tags. Refer to Ansible Controller\\ndocumentation for details on the usage of tags.\")}),launchConfig.ask_skip_tags_on_launch&&/*#__PURE__*/_jsx(TagField,{id:\"prompt-skip-tags\",name:\"skip_tags\",label:/*i18n*/i18n._(\"Skip Tags\"),\"aria-label\":/*i18n*/i18n._(\"Skip Tags\"),tooltip:/*i18n*/i18n._(\"Skip tags are useful when you have a large\\nplaybook, and you want to skip specific parts of a play or task.\\nUse commas to separate multiple tags. Refer to Ansible Controller\\ndocumentation for details on the usage of tags.\")}),launchConfig.ask_variables_on_launch&&/*#__PURE__*/_jsx(VariablesField,{id:\"prompt-variables\",name:\"extra_vars\",label:/*i18n*/i18n._(\"Variables\"),initialMode:variablesMode,onModeChange:onVarModeChange})]});}function JobTypeField(){var _useField=useField('job_type'),_useField2=_slicedToArray(_useField,3),field=_useField2[0],meta=_useField2[1],helpers=_useField2[2];var options=[{value:'',key:'',label:/*i18n*/i18n._(\"Choose a job type\"),isDisabled:true},{value:'run',key:'run',label:/*i18n*/i18n._(\"Run\"),isDisabled:false},{value:'check',key:'check',label:/*i18n*/i18n._(\"Check\"),isDisabled:false}];var isValid=!(meta.touched&&meta.error);return/*#__PURE__*/_jsx(FormGroup,{fieldId:\"propmt-job-type\",label:/*i18n*/i18n._(\"Job Type\"),labelIcon:/*#__PURE__*/_jsx(Popover,{content:/*i18n*/i18n._(\"For job templates, select run to execute the playbook.\\nSelect check to only check playbook syntax, test environment setup,\\nand report problems without executing the playbook.\")}),isRequired:true,validated:isValid?'default':'error',children:/*#__PURE__*/_jsx(AnsibleSelect,_objectSpread(_objectSpread({id:\"prompt-job-type\",data:options},field),{},{onChange:function onChange(event,value){return helpers.setValue(value);}}))});}function VerbosityField(){var _useField3=useField('verbosity'),_useField4=_slicedToArray(_useField3,2),meta=_useField4[1];var isValid=!(meta.touched&&meta.error);return/*#__PURE__*/_jsx(VerbositySelectField,{fieldId:\"prompt-verbosity\",tooltip:/*i18n*/i18n._(\"Control the level of output ansible\\nwill produce as the playbook executes.\"),isValid:isValid?'default':'error'});}function ShowChangesToggle(){var _useField5=useField('diff_mode'),_useField6=_slicedToArray(_useField5,3),field=_useField6[0],helpers=_useField6[2];return/*#__PURE__*/_jsxs(FormGroup,{fieldId:\"prompt-show-changes\",children:[/*#__PURE__*/_jsxs(FieldHeader,{children:[' ',/*#__PURE__*/_jsx(\"label\",{className:\"pf-c-form__label\",htmlFor:\"prompt-show-changes\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"pf-c-form__label-text\",children:[/*i18n*/i18n._(\"Show Changes\"),/*#__PURE__*/_jsx(Popover,{content:/*i18n*/i18n._(\"If enabled, show the changes made\\nby Ansible tasks, where supported. This is equivalent to Ansible\\u2019s\\n--diff mode.\")})]})})]}),/*#__PURE__*/_jsx(Switch,{\"aria-label\":field.value?/*i18n*/i18n._(\"On\"):/*i18n*/i18n._(\"Off\"),id:\"prompt-show-changes\",label:/*i18n*/i18n._(\"On\"),labelOff:/*i18n*/i18n._(\"Off\"),isChecked:field.value,onChange:helpers.setValue,ouiaId:\"prompt-show-changes\"})]});}function TagField(_ref2){var id=_ref2.id,name=_ref2.name,label=_ref2.label,tooltip=_ref2.tooltip;var _useField7=useField(name),_useField8=_slicedToArray(_useField7,3),field=_useField8[0],helpers=_useField8[2];return/*#__PURE__*/_jsx(FormGroup,{fieldId:id,label:label,labelIcon:/*#__PURE__*/_jsx(Popover,{content:tooltip}),children:/*#__PURE__*/_jsx(TagMultiSelect,{value:field.value,onChange:helpers.setValue})});}export default OtherPromptsStep;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/LaunchPrompt/steps/OtherPromptsStep.js"],"names":["React","useField","Form","FormGroup","Switch","styled","FormField","TagMultiSelect","AnsibleSelect","VariablesField","Popover","VerbositySelectField","FieldHeader","div","OtherPromptsStep","launchConfig","variablesMode","onVarModeChange","e","preventDefault","ask_job_type_on_launch","ask_limit_on_launch","ask_scm_branch_on_launch","ask_verbosity_on_launch","ask_diff_mode_on_launch","ask_tags_on_launch","ask_skip_tags_on_launch","ask_variables_on_launch","JobTypeField","field","meta","helpers","options","value","key","label","isDisabled","isValid","touched","error","event","setValue","VerbosityField","ShowChangesToggle","TagField","id","name","tooltip"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { t } from '@lingui/macro';\nimport { useField } from 'formik';\nimport { Form, FormGroup, Switch } from '@patternfly/react-core';\nimport styled from 'styled-components';\nimport FormField from '../../FormField';\nimport { TagMultiSelect } from '../../MultiSelect';\nimport AnsibleSelect from '../../AnsibleSelect';\nimport { VariablesField } from '../../CodeEditor';\nimport Popover from '../../Popover';\nimport { VerbositySelectField } from '../../VerbositySelectField';\n\nconst FieldHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: var(--pf-c-form__label--PaddingBottom);\n\n  label {\n    --pf-c-form__label--PaddingBottom: 0px;\n  }\n`;\n\nfunction OtherPromptsStep({ launchConfig, variablesMode, onVarModeChange }) {\n  return (\n    <Form\n      onSubmit={(e) => {\n        e.preventDefault();\n      }}\n    >\n      {launchConfig.ask_job_type_on_launch && <JobTypeField />}\n      {launchConfig.ask_limit_on_launch && (\n        <FormField\n          id=\"prompt-limit\"\n          name=\"limit\"\n          label={t`Limit`}\n          tooltip={t`Provide a host pattern to further constrain the list\n          of hosts that will be managed or affected by the playbook. Multiple\n          patterns are allowed. Refer to Ansible documentation for more\n          information and examples on patterns.`}\n        />\n      )}\n      {launchConfig.ask_scm_branch_on_launch && (\n        <FormField\n          id=\"prompt-scm-branch\"\n          name=\"scm_branch\"\n          label={t`Source Control Branch`}\n          tooltip={t`Select a branch for the workflow. This branch is applied to all job template nodes that prompt for a branch`}\n        />\n      )}\n      {launchConfig.ask_verbosity_on_launch && <VerbosityField />}\n      {launchConfig.ask_diff_mode_on_launch && <ShowChangesToggle />}\n      {launchConfig.ask_tags_on_launch && (\n        <TagField\n          id=\"prompt-job-tags\"\n          name=\"job_tags\"\n          label={t`Job Tags`}\n          aria-label={t`Job Tags`}\n          tooltip={t`Tags are useful when you have a large\n            playbook, and you want to run a specific part of a play or task.\n            Use commas to separate multiple tags. Refer to Ansible Controller\n            documentation for details on the usage of tags.`}\n        />\n      )}\n      {launchConfig.ask_skip_tags_on_launch && (\n        <TagField\n          id=\"prompt-skip-tags\"\n          name=\"skip_tags\"\n          label={t`Skip Tags`}\n          aria-label={t`Skip Tags`}\n          tooltip={t`Skip tags are useful when you have a large\n            playbook, and you want to skip specific parts of a play or task.\n            Use commas to separate multiple tags. Refer to Ansible Controller\n            documentation for details on the usage of tags.`}\n        />\n      )}\n      {launchConfig.ask_variables_on_launch && (\n        <VariablesField\n          id=\"prompt-variables\"\n          name=\"extra_vars\"\n          label={t`Variables`}\n          initialMode={variablesMode}\n          onModeChange={onVarModeChange}\n        />\n      )}\n    </Form>\n  );\n}\n\nfunction JobTypeField() {\n  const [field, meta, helpers] = useField('job_type');\n  const options = [\n    {\n      value: '',\n      key: '',\n      label: t`Choose a job type`,\n      isDisabled: true,\n    },\n    { value: 'run', key: 'run', label: t`Run`, isDisabled: false },\n    {\n      value: 'check',\n      key: 'check',\n      label: t`Check`,\n      isDisabled: false,\n    },\n  ];\n  const isValid = !(meta.touched && meta.error);\n  return (\n    <FormGroup\n      fieldId=\"propmt-job-type\"\n      label={t`Job Type`}\n      labelIcon={\n        <Popover\n          content={t`For job templates, select run to execute the playbook.\n      Select check to only check playbook syntax, test environment setup,\n      and report problems without executing the playbook.`}\n        />\n      }\n      isRequired\n      validated={isValid ? 'default' : 'error'}\n    >\n      <AnsibleSelect\n        id=\"prompt-job-type\"\n        data={options}\n        {...field}\n        onChange={(event, value) => helpers.setValue(value)}\n      />\n    </FormGroup>\n  );\n}\n\nfunction VerbosityField() {\n  const [, meta] = useField('verbosity');\n  const isValid = !(meta.touched && meta.error);\n\n  return (\n    <VerbositySelectField\n      fieldId=\"prompt-verbosity\"\n      tooltip={t`Control the level of output ansible\n          will produce as the playbook executes.`}\n      isValid={isValid ? 'default' : 'error'}\n    />\n  );\n}\n\nfunction ShowChangesToggle() {\n  const [field, , helpers] = useField('diff_mode');\n  return (\n    <FormGroup fieldId=\"prompt-show-changes\">\n      <FieldHeader>\n        {' '}\n        <label className=\"pf-c-form__label\" htmlFor=\"prompt-show-changes\">\n          <span className=\"pf-c-form__label-text\">\n            {t`Show Changes`}\n            <Popover\n              content={t`If enabled, show the changes made\n              by Ansible tasks, where supported. This is equivalent to Ansible’s\n              --diff mode.`}\n            />\n          </span>\n        </label>\n      </FieldHeader>\n      <Switch\n        aria-label={field.value ? t`On` : t`Off`}\n        id=\"prompt-show-changes\"\n        label={t`On`}\n        labelOff={t`Off`}\n        isChecked={field.value}\n        onChange={helpers.setValue}\n        ouiaId=\"prompt-show-changes\"\n      />\n    </FormGroup>\n  );\n}\n\nfunction TagField({ id, name, label, tooltip }) {\n  const [field, , helpers] = useField(name);\n  return (\n    <FormGroup\n      fieldId={id}\n      label={label}\n      labelIcon={<Popover content={tooltip} />}\n    >\n      <TagMultiSelect value={field.value} onChange={helpers.setValue} />\n    </FormGroup>\n  );\n}\n\nexport default OtherPromptsStep;\n"]},"metadata":{},"sourceType":"module"}