{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tooltip/tooltip';\nimport { css } from '@patternfly/react-styles';\nexport var TooltipContent = function TooltipContent(_a) {\n  var className = _a.className,\n      children = _a.children,\n      isLeftAligned = _a.isLeftAligned,\n      props = __rest(_a, [\"className\", \"children\", \"isLeftAligned\"]);\n\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.tooltipContent, isLeftAligned && styles.modifiers.textAlignLeft, className)\n  }, props), children);\n};\nTooltipContent.displayName = 'TooltipContent';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Tooltip/TooltipContent.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,yDAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AAWA,OAAO,IAAM,cAAc,GAAiD,SAA/D,cAA+D,CAAC,EAAD,EAKlD;AALmD,MAC3E,SAD2E,GAG9D,EAH8D,CAC3E,SAD2E;AAAA,MAE3E,QAF2E,GAG9D,EAH8D,CAE3E,QAF2E;AAAA,MAG3E,aAH2E,GAG9D,EAH8D,CAG3E,aAH2E;AAAA,MAIxE,KAJwE,GAInE,MAAA,CAAA,EAAA,EAJmE,CAAA,WAAA,EAAA,UAAA,EAAA,eAAA,CAInE,CAJmE;;AAKlD,SACzB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AAAK,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,cAAR,EAAwB,aAAa,IAAI,MAAM,CAAC,SAAP,CAAiB,aAA1D,EAAyE,SAAzE;AAAnB,GAAA,EAA4G,KAA5G,CAAA,EACG,QADH,CADyB;AAI1B,CATM;AAUP,cAAc,CAAC,WAAf,GAA6B,gBAA7B","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tooltip/tooltip';\nimport { css } from '@patternfly/react-styles';\n\nexport interface TooltipContentProps extends React.HTMLProps<HTMLDivElement> {\n  /** PopoverContent additional class */\n  className?: string;\n  /** PopoverContent content */\n  children: React.ReactNode;\n  /** Flag to align text to the left */\n  isLeftAligned?: boolean;\n}\n\nexport const TooltipContent: React.FunctionComponent<TooltipContentProps> = ({\n  className,\n  children,\n  isLeftAligned,\n  ...props\n}: TooltipContentProps) => (\n  <div className={css(styles.tooltipContent, isLeftAligned && styles.modifiers.textAlignLeft, className)} {...props}>\n    {children}\n  </div>\n);\nTooltipContent.displayName = 'TooltipContent';\n"]},"metadata":{},"sourceType":"module"}