{"ast":null,"code":"/**\n * The debounce utility creates a debounced version of the provided\n * function. The debounced function delays invocation until after\n * the given time interval (milliseconds) has elapsed since the last\n * time the function was called. This means that if you call the\n * debounced function repeatedly, it will only run once after it\n * stops being called.\n */var debounce=function debounce(func,interval){var timeout;return function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}clearTimeout(timeout);timeout=setTimeout(function(){func.apply(void 0,args);},interval);};};export default debounce;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/util/debounce.js"],"names":["debounce","func","interval","timeout","args","clearTimeout","setTimeout"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAOC,QAAP,CAAoB,CACnC,GAAIC,CAAAA,OAAJ,CACA,MAAO,WAAa,+BAATC,IAAS,0CAATA,IAAS,wBAClBC,YAAY,CAACF,OAAD,CAAZ,CACAA,OAAO,CAAGG,UAAU,CAAC,UAAM,CACzBL,IAAI,MAAJ,QAAQG,IAAR,EACD,CAFmB,CAEjBF,QAFiB,CAApB,CAGD,CALD,CAMD,CARD,CAUA,cAAeF,CAAAA,QAAf","sourcesContent":["/**\n * The debounce utility creates a debounced version of the provided\n * function. The debounced function delays invocation until after\n * the given time interval (milliseconds) has elapsed since the last\n * time the function was called. This means that if you call the\n * debounced function repeatedly, it will only run once after it\n * stops being called.\n */\nconst debounce = (func, interval) => {\n  let timeout;\n  return (...args) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      func(...args);\n    }, interval);\n  };\n};\n\nexport default debounce;\n"]},"metadata":{},"sourceType":"module"}