{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button';\nimport PencilAltIcon from '@patternfly/react-icons/dist/esm/icons/pencil-alt-icon';\nimport CheckIcon from '@patternfly/react-icons/dist/esm/icons/check-icon';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport inlineStyles from '@patternfly/react-styles/css/components/InlineEdit/inline-edit';\nimport { css } from '@patternfly/react-styles';\nexport var EditColumn = function EditColumn(_a) {\n  var _a$onClick = _a.onClick,\n      _onClick = _a$onClick === void 0 ? null : _a$onClick,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      editing = _a.editing,\n      valid = _a.valid,\n      saveAriaLabel = _a.saveAriaLabel,\n      cancelAriaLabel = _a.cancelAriaLabel,\n      editAriaLabel = _a.editAriaLabel,\n      props = __rest(_a, [\"onClick\", \"className\", \"editing\", \"valid\", \"saveAriaLabel\", \"cancelAriaLabel\", \"editAriaLabel\"]);\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: css(inlineStyles.inlineEditGroup, inlineStyles.modifiers.iconGroup, 'pf-m-action-group')\n  }, React.createElement(\"div\", {\n    className: css(inlineStyles.inlineEditAction)\n  }, React.createElement(Button, Object.assign({\n    \"aria-label\": saveAriaLabel\n  }, props, {\n    onClick: function onClick(e) {\n      return _onClick(e, 'save');\n    },\n    variant: \"plain\"\n  }), React.createElement(CheckIcon, null))), React.createElement(\"div\", {\n    className: css(inlineStyles.inlineEditAction)\n  }, React.createElement(Button, Object.assign({\n    \"aria-label\": cancelAriaLabel\n  }, props, {\n    onClick: function onClick(e) {\n      return _onClick(e, 'cancel');\n    },\n    variant: \"plain\"\n  }), React.createElement(TimesIcon, null)))), React.createElement(\"div\", {\n    className: css(inlineStyles.inlineEditAction, inlineStyles.modifiers.enableEditable)\n  }, React.createElement(Button, Object.assign({\n    \"aria-label\": editAriaLabel\n  }, props, {\n    onClick: function onClick(e) {\n      return _onClick(e, 'edit');\n    },\n    variant: \"plain\"\n  }), React.createElement(PencilAltIcon, null))));\n};\nEditColumn.displayName = 'EditColumn';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/Table/EditColumn.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button';\nimport PencilAltIcon from '@patternfly/react-icons/dist/esm/icons/pencil-alt-icon';\nimport CheckIcon from '@patternfly/react-icons/dist/esm/icons/check-icon';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport { OnRowEdit } from './TableTypes';\nimport inlineStyles from '@patternfly/react-styles/css/components/InlineEdit/inline-edit';\nimport { css } from '@patternfly/react-styles';\n\nexport interface EditColumnProps {\n  name?: string;\n  className?: string;\n  onClick?: OnRowEdit;\n  editing?: boolean;\n  valid?: boolean;\n  saveAriaLabel: string;\n  cancelAriaLabel: string;\n  editAriaLabel: string;\n}\n\nexport const EditColumn: React.FunctionComponent<EditColumnProps> = ({\n  onClick = null,\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  className = '',\n  editing,\n  valid,\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n  saveAriaLabel,\n  cancelAriaLabel,\n  editAriaLabel,\n  ...props\n}: EditColumnProps) => (\n  <React.Fragment>\n    <div className={css(inlineStyles.inlineEditGroup, inlineStyles.modifiers.iconGroup, 'pf-m-action-group')}>\n      <div className={css(inlineStyles.inlineEditAction)}>\n        <Button aria-label={saveAriaLabel} {...props} onClick={e => onClick(e, 'save')} variant=\"plain\">\n          <CheckIcon />\n        </Button>\n      </div>\n      <div className={css(inlineStyles.inlineEditAction)}>\n        <Button aria-label={cancelAriaLabel} {...props} onClick={e => onClick(e, 'cancel')} variant=\"plain\">\n          <TimesIcon />\n        </Button>\n      </div>\n    </div>\n    <div className={css(inlineStyles.inlineEditAction, inlineStyles.modifiers.enableEditable)}>\n      <Button aria-label={editAriaLabel} {...props} onClick={e => onClick(e, 'edit')} variant=\"plain\">\n        <PencilAltIcon />\n      </Button>\n    </div>\n  </React.Fragment>\n);\nEditColumn.displayName = 'EditColumn';\n"]},"metadata":{},"sourceType":"module"}