{"ast":null,"code":"// @ts-nocheck\nexport var top = 'top';\nexport var bottom = 'bottom';\nexport var right = 'right';\nexport var left = 'left';\nexport var auto = 'auto';\nexport var basePlacements = [top, bottom, right, left];\nexport var start = 'start';\nexport var end = 'end';\nexport var clippingParents = 'clippingParents';\nexport var viewport = 'viewport';\nexport var popper = 'popper';\nexport var reference = 'reference';\nexport var variationPlacements = basePlacements.reduce(function (acc, placement) {\n  return acc.concat([\"\".concat(placement, \"-\").concat(start), \"\".concat(placement, \"-\").concat(end)]);\n}, []);\nexport var placements = [].concat(basePlacements, [auto]).reduce(function (acc, placement) {\n  return acc.concat([placement, \"\".concat(placement, \"-\").concat(start), \"\".concat(placement, \"-\").concat(end)]);\n}, []); // modifiers that need to read the DOM\n\nexport var beforeRead = 'beforeRead';\nexport var read = 'read';\nexport var afterRead = 'afterRead'; // pure-logic modifiers\n\nexport var beforeMain = 'beforeMain';\nexport var main = 'main';\nexport var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)\n\nexport var beforeWrite = 'beforeWrite';\nexport var write = 'write';\nexport var afterWrite = 'afterWrite';\nexport var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/enums.ts"],"names":[],"mappings":"AAAA;AACA,OAAO,IAAM,GAAG,GAAU,KAAnB;AACP,OAAO,IAAM,MAAM,GAAa,QAAzB;AACP,OAAO,IAAM,KAAK,GAAY,OAAvB;AACP,OAAO,IAAM,IAAI,GAAW,MAArB;AACP,OAAO,IAAM,IAAI,GAAW,MAArB;AAEP,OAAO,IAAM,cAAc,GAAoB,CAAC,GAAD,EAAM,MAAN,EAAc,KAAd,EAAqB,IAArB,CAAxC;AAEP,OAAO,IAAM,KAAK,GAAY,OAAvB;AACP,OAAO,IAAM,GAAG,GAAU,KAAnB;AAGP,OAAO,IAAM,eAAe,GAAsB,iBAA3C;AACP,OAAO,IAAM,QAAQ,GAAe,UAA7B;AAIP,OAAO,IAAM,MAAM,GAAa,QAAzB;AACP,OAAO,IAAM,SAAS,GAAgB,WAA/B;AAgBP,OAAO,IAAM,mBAAmB,GAAyB,cAAc,CAAC,MAAf,CACvD,UAAC,GAAD,EAA4B,SAA5B;AAAA,SACE,GAAG,CAAC,MAAJ,CAAW,WAAI,SAAJ,cAAiB,KAAjB,aAAoC,SAApC,cAAiD,GAAjD,EAAX,CADF;AAAA,CADuD,EAGvD,EAHuD,CAAlD;AAKP,OAAO,IAAM,UAAU,GAAgB,UAAI,cAAJ,GAAoB,IAApB,GAA0B,MAA1B,CACrC,UAAC,GAAD,EAAmB,SAAnB;AAAA,SACE,GAAG,CAAC,MAAJ,CAAW,CAAC,SAAD,YAAe,SAAf,cAA4B,KAA5B,aAA+C,SAA/C,cAA4D,GAA5D,EAAX,CADF;AAAA,CADqC,EAGrC,EAHqC,CAAhC,C,CAMP;;AACA,OAAO,IAAM,UAAU,GAAiB,YAAjC;AACP,OAAO,IAAM,IAAI,GAAW,MAArB;AACP,OAAO,IAAM,SAAS,GAAgB,WAA/B,C,CACP;;AACA,OAAO,IAAM,UAAU,GAAiB,YAAjC;AACP,OAAO,IAAM,IAAI,GAAW,MAArB;AACP,OAAO,IAAM,SAAS,GAAgB,WAA/B,C,CACP;;AACA,OAAO,IAAM,WAAW,GAAkB,aAAnC;AACP,OAAO,IAAM,KAAK,GAAY,OAAvB;AACP,OAAO,IAAM,UAAU,GAAiB,YAAjC;AACP,OAAO,IAAM,cAAc,GAAqB,CAC9C,UAD8C,EAE9C,IAF8C,EAG9C,SAH8C,EAI9C,UAJ8C,EAK9C,IAL8C,EAM9C,SAN8C,EAO9C,WAP8C,EAQ9C,KAR8C,EAS9C,UAT8C,CAAzC","sourcesContent":["// @ts-nocheck\nexport const top: 'top' = 'top';\nexport const bottom: 'bottom' = 'bottom';\nexport const right: 'right' = 'right';\nexport const left: 'left' = 'left';\nexport const auto: 'auto' = 'auto';\nexport type BasePlacement = typeof top | typeof bottom | typeof right | typeof left;\nexport const basePlacements: BasePlacement[] = [top, bottom, right, left];\n\nexport const start: 'start' = 'start';\nexport const end: 'end' = 'end';\nexport type Variation = typeof start | typeof end;\n\nexport const clippingParents: 'clippingParents' = 'clippingParents';\nexport const viewport: 'viewport' = 'viewport';\nexport type Boundary = HTMLElement | HTMLElement[] | typeof clippingParents;\nexport type RootBoundary = typeof viewport | 'document';\n\nexport const popper: 'popper' = 'popper';\nexport const reference: 'reference' = 'reference';\nexport type Context = typeof popper | typeof reference;\n\nexport type VariationPlacement =\n  | 'top-start'\n  | 'top-end'\n  | 'bottom-start'\n  | 'bottom-end'\n  | 'right-start'\n  | 'right-end'\n  | 'left-start'\n  | 'left-end';\nexport type AutoPlacement = 'auto' | 'auto-start' | 'auto-end';\nexport type ComputedPlacement = VariationPlacement | BasePlacement;\nexport type Placement = AutoPlacement | BasePlacement | VariationPlacement;\n\nexport const variationPlacements: VariationPlacement[] = basePlacements.reduce(\n  (acc: VariationPlacement[], placement: BasePlacement) =>\n    acc.concat([`${placement}-${start}` as any, `${placement}-${end}` as any]),\n  []\n);\nexport const placements: Placement[] = [...basePlacements, auto].reduce(\n  (acc: Placement[], placement: BasePlacement | typeof auto): Placement[] =>\n    acc.concat([placement, `${placement}-${start}` as any, `${placement}-${end}` as any]),\n  []\n);\n\n// modifiers that need to read the DOM\nexport const beforeRead: 'beforeRead' = 'beforeRead';\nexport const read: 'read' = 'read';\nexport const afterRead: 'afterRead' = 'afterRead';\n// pure-logic modifiers\nexport const beforeMain: 'beforeMain' = 'beforeMain';\nexport const main: 'main' = 'main';\nexport const afterMain: 'afterMain' = 'afterMain';\n// modifier with the purpose to write to the DOM (or write into a framework state)\nexport const beforeWrite: 'beforeWrite' = 'beforeWrite';\nexport const write: 'write' = 'write';\nexport const afterWrite: 'afterWrite' = 'afterWrite';\nexport const modifierPhases: ModifierPhases[] = [\n  beforeRead,\n  read,\n  afterRead,\n  beforeMain,\n  main,\n  afterMain,\n  beforeWrite,\n  write,\n  afterWrite\n];\n\nexport type ModifierPhases =\n  | typeof beforeRead\n  | typeof read\n  | typeof afterRead\n  | typeof beforeMain\n  | typeof main\n  | typeof afterMain\n  | typeof beforeWrite\n  | typeof write\n  | typeof afterWrite;\n"]},"metadata":{},"sourceType":"module"}