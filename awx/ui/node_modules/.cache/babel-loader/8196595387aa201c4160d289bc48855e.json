{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport styles from '@patternfly/react-styles/css/components/Breadcrumb/breadcrumb';\nimport { css } from '@patternfly/react-styles';\nexport var BreadcrumbItem = function BreadcrumbItem(_a) {\n  var _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      _a$className = _a.className,\n      classNameProp = _a$className === void 0 ? '' : _a$className,\n      _a$to = _a.to,\n      to = _a$to === void 0 ? undefined : _a$to,\n      _a$isActive = _a.isActive,\n      isActive = _a$isActive === void 0 ? false : _a$isActive,\n      _a$isDropdown = _a.isDropdown,\n      isDropdown = _a$isDropdown === void 0 ? false : _a$isDropdown,\n      showDivider = _a.showDivider,\n      _a$target = _a.target,\n      target = _a$target === void 0 ? undefined : _a$target,\n      _a$component = _a.component,\n      component = _a$component === void 0 ? 'a' : _a$component,\n      _a$render = _a.render,\n      render = _a$render === void 0 ? undefined : _a$render,\n      props = __rest(_a, [\"children\", \"className\", \"to\", \"isActive\", \"isDropdown\", \"showDivider\", \"target\", \"component\", \"render\"]);\n\n  var Component = component;\n  var ariaCurrent = isActive ? 'page' : undefined;\n  var className = css(styles.breadcrumbLink, isActive && styles.modifiers.current);\n  return React.createElement(\"li\", Object.assign({}, props, {\n    className: css(styles.breadcrumbItem, classNameProp)\n  }), showDivider && React.createElement(\"span\", {\n    className: styles.breadcrumbItemDivider\n  }, React.createElement(AngleRightIcon, null)), component === 'button' && React.createElement(\"button\", {\n    className: className,\n    \"aria-current\": ariaCurrent,\n    type: \"button\"\n  }, children), isDropdown && React.createElement(\"span\", {\n    className: css(styles.breadcrumbDropdown)\n  }, children), render && render({\n    className: className,\n    ariaCurrent: ariaCurrent\n  }), to && !render && React.createElement(Component, {\n    href: to,\n    target: target,\n    className: className,\n    \"aria-current\": ariaCurrent\n  }, children), !to && component !== 'button' && !isDropdown && children);\n};\nBreadcrumbItem.displayName = 'BreadcrumbItem';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Breadcrumb/BreadcrumbItem.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,cAAP,MAA2B,yDAA3B;AACA,OAAO,MAAP,MAAmB,+DAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AA4BA,OAAO,IAAM,cAAc,GAAiD,SAA/D,cAA+D,CAAC,EAAD,EAWlD;AAXmD,oBASzD,EATyD,CAC3E,QAD2E;AAAA,MAC3E,QAD2E,4BAChE,IADgE;AAAA,qBASzD,EATyD,CAE3E,SAF2E;AAAA,MAEhE,aAFgE,6BAEhD,EAFgD;AAAA,cASzD,EATyD,CAG3E,EAH2E;AAAA,MAG3E,EAH2E,sBAGtE,SAHsE;AAAA,oBASzD,EATyD,CAI3E,QAJ2E;AAAA,MAI3E,QAJ2E,4BAIhE,KAJgE;AAAA,sBASzD,EATyD,CAK3E,UAL2E;AAAA,MAK3E,UAL2E,8BAK9D,KAL8D;AAAA,MAM3E,WAN2E,GASzD,EATyD,CAM3E,WAN2E;AAAA,kBASzD,EATyD,CAO3E,MAP2E;AAAA,MAO3E,MAP2E,0BAOlE,SAPkE;AAAA,qBASzD,EATyD,CAQ3E,SAR2E;AAAA,MAQ3E,SAR2E,6BAQ/D,GAR+D;AAAA,kBASzD,EATyD,CAS3E,MAT2E;AAAA,MAS3E,MAT2E,0BASlE,SATkE;AAAA,MAUxE,KAVwE,GAUnE,MAAA,CAAA,EAAA,EAVmE,CAAA,UAAA,EAAA,WAAA,EAAA,IAAA,EAAA,UAAA,EAAA,YAAA,EAAA,aAAA,EAAA,QAAA,EAAA,WAAA,EAAA,QAAA,CAUnE,CAVmE;;AAY3E,MAAM,SAAS,GAAG,SAAlB;AACA,MAAM,WAAW,GAAG,QAAQ,GAAG,MAAH,GAAY,SAAxC;AACA,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,cAAR,EAAwB,QAAQ,IAAI,MAAM,CAAC,SAAP,CAAiB,OAArD,CAArB;AACA,SACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,KAAR,EAAa;AAAE,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,cAAR,EAAwB,aAAxB;AAAhB,GAAb,CAAA,EACG,WAAW,IACV,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAE,MAAM,CAAC;AAAxB,GAAA,EACE,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,IAAf,CADF,CAFJ,EAMG,SAAS,KAAK,QAAd,IACC,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,IAAA,SAAS,EAAE,SAAnB;AAA4B,oBAAgB,WAA5C;AAAyD,IAAA,IAAI,EAAC;AAA9D,GAAA,EACG,QADH,CAPJ,EAWG,UAAU,IAAI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,kBAAR;AAApB,GAAA,EAAkD,QAAlD,CAXjB,EAYG,MAAM,IAAI,MAAM,CAAC;AAAE,IAAA,SAAS,EAAT,SAAF;AAAa,IAAA,WAAW,EAAX;AAAb,GAAD,CAZnB,EAaG,EAAE,IAAI,CAAC,MAAP,IACC,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU;AAAC,IAAA,IAAI,EAAE,EAAP;AAAW,IAAA,MAAM,EAAE,MAAnB;AAA2B,IAAA,SAAS,EAAE,SAAtC;AAA+C,oBAAgB;AAA/D,GAAV,EACG,QADH,CAdJ,EAkBG,CAAC,EAAD,IAAO,SAAS,KAAK,QAArB,IAAiC,CAAC,UAAlC,IAAgD,QAlBnD,CADF;AAsBD,CArCM;AAsCP,cAAc,CAAC,WAAf,GAA6B,gBAA7B","sourcesContent":["import * as React from 'react';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport styles from '@patternfly/react-styles/css/components/Breadcrumb/breadcrumb';\nimport { css } from '@patternfly/react-styles';\n\nexport interface BreadcrumbItemRenderArgs {\n  className: string;\n  ariaCurrent: 'page' | undefined;\n}\n\nexport interface BreadcrumbItemProps extends React.HTMLProps<HTMLLIElement> {\n  /** Content rendered inside the breadcrumb item. */\n  children?: React.ReactNode;\n  /** Additional classes added to the breadcrumb item. */\n  className?: string;\n  /** HREF for breadcrumb link. */\n  to?: string;\n  /** Flag indicating whether the item is active. */\n  isActive?: boolean;\n  /** Flag indicating whether the item contains a dropdown. */\n  isDropdown?: boolean;\n  /** Internal prop set by Breadcrumb on all but the first crumb */\n  showDivider?: boolean;\n  /** Target for breadcrumb link. */\n  target?: string;\n  /** Sets the base component to render. Defaults to <a> */\n  component?: React.ElementType;\n  /** A render function to render the component inside the breadcrumb item. */\n  render?: (props: BreadcrumbItemRenderArgs) => React.ReactNode;\n}\n\nexport const BreadcrumbItem: React.FunctionComponent<BreadcrumbItemProps> = ({\n  children = null,\n  className: classNameProp = '',\n  to = undefined,\n  isActive = false,\n  isDropdown = false,\n  showDivider,\n  target = undefined,\n  component = 'a',\n  render = undefined,\n  ...props\n}: BreadcrumbItemProps) => {\n  const Component = component;\n  const ariaCurrent = isActive ? 'page' : undefined;\n  const className = css(styles.breadcrumbLink, isActive && styles.modifiers.current);\n  return (\n    <li {...props} className={css(styles.breadcrumbItem, classNameProp)}>\n      {showDivider && (\n        <span className={styles.breadcrumbItemDivider}>\n          <AngleRightIcon />\n        </span>\n      )}\n      {component === 'button' && (\n        <button className={className} aria-current={ariaCurrent} type=\"button\">\n          {children}\n        </button>\n      )}\n      {isDropdown && <span className={css(styles.breadcrumbDropdown)}>{children}</span>}\n      {render && render({ className, ariaCurrent })}\n      {to && !render && (\n        <Component href={to} target={target} className={className} aria-current={ariaCurrent}>\n          {children}\n        </Component>\n      )}\n      {!to && component !== 'button' && !isDropdown && children}\n    </li>\n  );\n};\nBreadcrumbItem.displayName = 'BreadcrumbItem';\n"]},"metadata":{},"sourceType":"module"}