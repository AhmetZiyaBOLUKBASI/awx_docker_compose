{"ast":null,"code":"import _taggedTemplateLiteral from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3;import{Trans}from\"@lingui/react\";import{i18n}from\"@lingui/core\";import React from'react';import styled from'styled-components';import{Button,ButtonVariant,Tooltip}from'@patternfly/react-core';import{KeyIcon}from'@patternfly/react-icons';import CredentialChip from'components/CredentialChip';import{Credential}from'types';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var SelectedCredential=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  background-color: white;\\n  border-bottom-color: var(--pf-global--BorderColor--200);\\n\"])));var SpacedCredentialChip=styled(CredentialChip)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin: 5px 8px;\\n\"])));var PluginHelpText=styled.p(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  margin-top: 5px;\\n\"])));function CredentialPluginSelected(_ref){var credential=_ref.credential,onEditPlugin=_ref.onEditPlugin,onClearPlugin=_ref.onClearPlugin,fieldId=_ref.fieldId;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(SelectedCredential,{children:[/*#__PURE__*/_jsx(SpacedCredentialChip,{onClick:onClearPlugin,credential:credential}),/*#__PURE__*/_jsx(Tooltip,{content:/*i18n*/i18n._(\"Edit Credential Plugin Configuration\"),position:\"top\",children:/*#__PURE__*/_jsx(Button,{ouiaId:\"credential-field-\".concat(fieldId,\"-edit-plugin-button\"),\"aria-label\":/*i18n*/i18n._(\"Edit Credential Plugin Configuration\"),onClick:onEditPlugin,variant:ButtonVariant.control,children:/*#__PURE__*/_jsx(KeyIcon,{})})})]}),/*#__PURE__*/_jsx(PluginHelpText,{children:/*#__PURE__*/_jsx(Trans,{id:\"This field will be retrieved from an external secret management system using the specified credential.\"})})]});}CredentialPluginSelected.defaultProps={onEditPlugin:function onEditPlugin(){},onClearPlugin:function onClearPlugin(){}};export default CredentialPluginSelected;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Credential/shared/CredentialPlugins/CredentialPluginSelected.js"],"names":["React","styled","Button","ButtonVariant","Tooltip","KeyIcon","CredentialChip","Credential","SelectedCredential","div","SpacedCredentialChip","PluginHelpText","p","CredentialPluginSelected","credential","onEditPlugin","onClearPlugin","fieldId","control","defaultProps"],"mappings":"6OAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAIA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,MAAT,CAAiBC,aAAjB,CAAgCC,OAAhC,KAA+C,wBAA/C,CACA,OAASC,OAAT,KAAwB,yBAAxB,CACA,MAAOC,CAAAA,cAAP,KAA2B,2BAA3B,CACA,OAASC,UAAT,KAA2B,OAA3B,C,6IAEA,GAAMC,CAAAA,kBAAkB,CAAGP,MAAM,CAACQ,GAAV,gNAAxB,CAOA,GAAMC,CAAAA,oBAAoB,CAAGT,MAAM,CAACK,cAAD,CAAT,yFAA1B,CAIA,GAAMK,CAAAA,cAAc,CAAGV,MAAM,CAACW,CAAV,yFAApB,CAIA,QAASC,CAAAA,wBAAT,MAKG,IAJDC,CAAAA,UAIC,MAJDA,UAIC,CAHDC,YAGC,MAHDA,YAGC,CAFDC,aAEC,MAFDA,aAEC,CADDC,OACC,MADDA,OACC,CACD,mBACE,wCACE,MAAC,kBAAD,yBACE,KAAC,oBAAD,EAAsB,OAAO,CAAED,aAA/B,CAA8C,UAAU,CAAEF,UAA1D,EADF,cAEE,KAAC,OAAD,EACE,OAAO,SAAE,8CADX,CAEE,QAAQ,CAAC,KAFX,uBAIE,KAAC,MAAD,EACE,MAAM,4BAAsBG,OAAtB,uBADR,CAEE,qBAAY,8CAFd,CAGE,OAAO,CAAEF,YAHX,CAIE,OAAO,CAAEZ,aAAa,CAACe,OAJzB,uBAME,KAAC,OAAD,IANF,EAJF,EAFF,GADF,cAiBE,KAAC,cAAD,wBACE,yHADF,EAjBF,GADF,CA0BD,CAQDL,wBAAwB,CAACM,YAAzB,CAAwC,CACtCJ,YAAY,CAAE,uBAAM,CAAE,CADgB,CAEtCC,aAAa,CAAE,wBAAM,CAAE,CAFe,CAAxC,CAKA,cAAeH,CAAAA,wBAAf","sourcesContent":["import React from 'react';\nimport { func } from 'prop-types';\n\nimport { t, Trans } from '@lingui/macro';\nimport styled from 'styled-components';\nimport { Button, ButtonVariant, Tooltip } from '@patternfly/react-core';\nimport { KeyIcon } from '@patternfly/react-icons';\nimport CredentialChip from 'components/CredentialChip';\nimport { Credential } from 'types';\n\nconst SelectedCredential = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: white;\n  border-bottom-color: var(--pf-global--BorderColor--200);\n`;\n\nconst SpacedCredentialChip = styled(CredentialChip)`\n  margin: 5px 8px;\n`;\n\nconst PluginHelpText = styled.p`\n  margin-top: 5px;\n`;\n\nfunction CredentialPluginSelected({\n  credential,\n  onEditPlugin,\n  onClearPlugin,\n  fieldId,\n}) {\n  return (\n    <>\n      <SelectedCredential>\n        <SpacedCredentialChip onClick={onClearPlugin} credential={credential} />\n        <Tooltip\n          content={t`Edit Credential Plugin Configuration`}\n          position=\"top\"\n        >\n          <Button\n            ouiaId={`credential-field-${fieldId}-edit-plugin-button`}\n            aria-label={t`Edit Credential Plugin Configuration`}\n            onClick={onEditPlugin}\n            variant={ButtonVariant.control}\n          >\n            <KeyIcon />\n          </Button>\n        </Tooltip>\n      </SelectedCredential>\n      <PluginHelpText>\n        <Trans>\n          This field will be retrieved from an external secret management system\n          using the specified credential.\n        </Trans>\n      </PluginHelpText>\n    </>\n  );\n}\n\nCredentialPluginSelected.propTypes = {\n  credential: Credential.isRequired,\n  onEditPlugin: func,\n  onClearPlugin: func,\n};\n\nCredentialPluginSelected.defaultProps = {\n  onEditPlugin: () => {},\n  onClearPlugin: () => {},\n};\n\nexport default CredentialPluginSelected;\n"]},"metadata":{},"sourceType":"module"}