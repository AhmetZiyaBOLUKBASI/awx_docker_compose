{"ast":null,"code":"import _slicedToArray from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/MultipleFileUpload/multiple-file-upload';\nimport { css } from '@patternfly/react-styles';\nimport { ExpandableSection } from '../ExpandableSection';\nimport InProgressIcon from '@patternfly/react-icons/dist/esm/icons/in-progress-icon';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/esm/icons/times-circle-icon';\nexport var MultipleFileUploadStatus = function MultipleFileUploadStatus(_a) {\n  var children = _a.children,\n      className = _a.className,\n      statusToggleText = _a.statusToggleText,\n      statusToggleIcon = _a.statusToggleIcon,\n      props = __rest(_a, [\"children\", \"className\", \"statusToggleText\", \"statusToggleIcon\"]);\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      icon = _React$useState2[0],\n      setIcon = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isOpen = _React$useState4[0],\n      setIsOpen = _React$useState4[1];\n\n  React.useEffect(function () {\n    switch (statusToggleIcon) {\n      case 'danger':\n        setIcon(React.createElement(TimesCircleIcon, null));\n        break;\n\n      case 'success':\n        setIcon(React.createElement(CheckCircleIcon, null));\n        break;\n\n      case 'inProgress':\n        setIcon(React.createElement(InProgressIcon, null));\n        break;\n\n      default:\n        setIcon(statusToggleIcon);\n    }\n  }, [statusToggleIcon]);\n  var toggle = React.createElement(\"div\", {\n    className: styles.multipleFileUploadStatusProgress\n  }, React.createElement(\"div\", {\n    className: styles.multipleFileUploadStatusProgressIcon\n  }, icon), React.createElement(\"div\", {\n    className: styles.multipleFileUploadStatusItemProgressText\n  }, statusToggleText));\n\n  var toggleExpandableSection = function toggleExpandableSection() {\n    setIsOpen(!isOpen);\n  };\n\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.multipleFileUploadStatus, className)\n  }, props), React.createElement(ExpandableSection, {\n    toggleContent: toggle,\n    isExpanded: isOpen,\n    onToggle: toggleExpandableSection\n  }, React.createElement(\"ul\", {\n    className: \"pf-c-multiple-file-upload__status-list\"\n  }, children)));\n};\nMultipleFileUploadStatus.displayName = 'MultipleFileUploadStatus';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/MultipleFileUpload/MultipleFileUploadStatus.tsx"],"names":[],"mappings":";;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,iFAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,SAAS,iBAAT,QAAkC,sBAAlC;AACA,OAAO,cAAP,MAA2B,yDAA3B;AACA,OAAO,eAAP,MAA4B,0DAA5B;AACA,OAAO,eAAP,MAA4B,0DAA5B;AAaA,OAAO,IAAM,wBAAwB,GAA2D,SAAnF,wBAAmF,CAAC,EAAD,EAM5D;AAN6D,MAC/F,QAD+F,GAI/E,EAJ+E,CAC/F,QAD+F;AAAA,MAE/F,SAF+F,GAI/E,EAJ+E,CAE/F,SAF+F;AAAA,MAG/F,gBAH+F,GAI/E,EAJ+E,CAG/F,gBAH+F;AAAA,MAI/F,gBAJ+F,GAI/E,EAJ+E,CAI/F,gBAJ+F;AAAA,MAK5F,KAL4F,GAKvF,MAAA,CAAA,EAAA,EALuF,CAAA,UAAA,EAAA,WAAA,EAAA,kBAAA,EAAA,kBAAA,CAKvF,CALuF;;AAO/F,wBAAwB,KAAK,CAAC,QAAN,EAAxB;AAAA;AAAA,MAAO,IAAP;AAAA,MAAa,OAAb;;AACA,yBAA4B,KAAK,CAAC,QAAN,CAAe,IAAf,CAA5B;AAAA;AAAA,MAAO,MAAP;AAAA,MAAe,SAAf;;AAEA,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAK;AACnB,YAAQ,gBAAR;AACE,WAAK,QAAL;AACE,QAAA,OAAO,CAAC,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB,IAAhB,CAAD,CAAP;AACA;;AACF,WAAK,SAAL;AACE,QAAA,OAAO,CAAC,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB,IAAhB,CAAD,CAAP;AACA;;AACF,WAAK,YAAL;AACE,QAAA,OAAO,CAAC,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,IAAf,CAAD,CAAP;AACA;;AACF;AACE,QAAA,OAAO,CAAC,gBAAD,CAAP;AAXJ;AAaD,GAdD,EAcG,CAAC,gBAAD,CAdH;AAgBA,MAAM,MAAM,GACV,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,MAAM,CAAC;AAAvB,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,MAAM,CAAC;AAAvB,GAAA,EAA8D,IAA9D,CADF,EAEE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,MAAM,CAAC;AAAvB,GAAA,EAAkE,gBAAlE,CAFF,CADF;;AAOA,MAAM,uBAAuB,GAAG,SAA1B,uBAA0B,GAAK;AACnC,IAAA,SAAS,CAAC,CAAC,MAAF,CAAT;AACD,GAFD;;AAIA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AAAK,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,wBAAR,EAAkC,SAAlC;AAAnB,GAAA,EAAqE,KAArE,CAAA,EACE,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAkB;AAAC,IAAA,aAAa,EAAE,MAAhB;AAAwB,IAAA,UAAU,EAAE,MAApC;AAA4C,IAAA,QAAQ,EAAE;AAAtD,GAAlB,EACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAI,IAAA,SAAS,EAAC;AAAd,GAAA,EAAwD,QAAxD,CADF,CADF,CADF;AAOD,CA5CM;AA8CP,wBAAwB,CAAC,WAAzB,GAAuC,0BAAvC","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/MultipleFileUpload/multiple-file-upload';\nimport { css } from '@patternfly/react-styles';\nimport { ExpandableSection } from '../ExpandableSection';\nimport InProgressIcon from '@patternfly/react-icons/dist/esm/icons/in-progress-icon';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/esm/icons/times-circle-icon';\n\nexport interface MultipleFileUploadStatusProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered inside multi file upload status list */\n  children?: React.ReactNode;\n  /** Class to add to outer div */\n  className?: string;\n  /** String to show in the status toggle */\n  statusToggleText?: string;\n  /** Icon to show in the status toggle */\n  statusToggleIcon?: 'danger' | 'success' | 'inProgress' | React.ReactNode;\n}\n\nexport const MultipleFileUploadStatus: React.FunctionComponent<MultipleFileUploadStatusProps> = ({\n  children,\n  className,\n  statusToggleText,\n  statusToggleIcon,\n  ...props\n}: MultipleFileUploadStatusProps) => {\n  const [icon, setIcon] = React.useState<React.ReactNode>();\n  const [isOpen, setIsOpen] = React.useState(true);\n\n  React.useEffect(() => {\n    switch (statusToggleIcon) {\n      case 'danger':\n        setIcon(<TimesCircleIcon />);\n        break;\n      case 'success':\n        setIcon(<CheckCircleIcon />);\n        break;\n      case 'inProgress':\n        setIcon(<InProgressIcon />);\n        break;\n      default:\n        setIcon(statusToggleIcon);\n    }\n  }, [statusToggleIcon]);\n\n  const toggle = (\n    <div className={styles.multipleFileUploadStatusProgress}>\n      <div className={styles.multipleFileUploadStatusProgressIcon}>{icon}</div>\n      <div className={styles.multipleFileUploadStatusItemProgressText}>{statusToggleText}</div>\n    </div>\n  );\n\n  const toggleExpandableSection = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div className={css(styles.multipleFileUploadStatus, className)} {...props}>\n      <ExpandableSection toggleContent={toggle} isExpanded={isOpen} onToggle={toggleExpandableSection}>\n        <ul className=\"pf-c-multiple-file-upload__status-list\">{children}</ul>\n      </ExpandableSection>\n    </div>\n  );\n};\n\nMultipleFileUploadStatus.displayName = 'MultipleFileUploadStatus';\n"]},"metadata":{},"sourceType":"module"}