{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createIcon = exports.getSize = exports.IconSize = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar React = tslib_1.__importStar(require(\"react\"));\n\nvar IconSize;\n\n(function (IconSize) {\n  IconSize[\"sm\"] = \"sm\";\n  IconSize[\"md\"] = \"md\";\n  IconSize[\"lg\"] = \"lg\";\n  IconSize[\"xl\"] = \"xl\";\n})(IconSize = exports.IconSize || (exports.IconSize = {}));\n\nvar getSize = function getSize(size) {\n  switch (size) {\n    case IconSize.sm:\n      return '1em';\n\n    case IconSize.md:\n      return '1.5em';\n\n    case IconSize.lg:\n      return '2em';\n\n    case IconSize.xl:\n      return '3em';\n\n    default:\n      return '1em';\n  }\n};\n\nexports.getSize = getSize;\nvar currentId = 0;\n/**\n * Factory to create Icon class components for consumers\n */\n\nfunction createIcon(_ref) {\n  var name = _ref.name,\n      _ref$xOffset = _ref.xOffset,\n      xOffset = _ref$xOffset === void 0 ? 0 : _ref$xOffset,\n      _ref$yOffset = _ref.yOffset,\n      yOffset = _ref$yOffset === void 0 ? 0 : _ref$yOffset,\n      width = _ref.width,\n      height = _ref.height,\n      svgPath = _ref.svgPath;\n\n  var _a;\n\n  return _a = /*#__PURE__*/function (_React$Component) {\n    _inherits(SVGIcon, _React$Component);\n\n    var _super = _createSuper(SVGIcon);\n\n    function SVGIcon() {\n      var _this;\n\n      _classCallCheck(this, SVGIcon);\n\n      _this = _super.apply(this, arguments);\n      _this.id = \"icon-title-\".concat(currentId++);\n      return _this;\n    }\n\n    _createClass(SVGIcon, [{\n      key: \"render\",\n      value: function render() {\n        var _a = this.props,\n            size = _a.size,\n            color = _a.color,\n            title = _a.title,\n            noVerticalAlign = _a.noVerticalAlign,\n            props = tslib_1.__rest(_a, [\"size\", \"color\", \"title\", \"noVerticalAlign\"]);\n\n        var hasTitle = Boolean(title);\n        var heightWidth = exports.getSize(size);\n        var baseAlign = -0.125 * Number.parseFloat(heightWidth);\n        var style = noVerticalAlign ? null : {\n          verticalAlign: \"\".concat(baseAlign, \"em\")\n        };\n        var viewBox = [xOffset, yOffset, width, height].join(' ');\n        return React.createElement(\"svg\", Object.assign({\n          style: style,\n          fill: color,\n          height: heightWidth,\n          width: heightWidth,\n          viewBox: viewBox,\n          \"aria-labelledby\": hasTitle ? this.id : null,\n          \"aria-hidden\": hasTitle ? null : true,\n          role: \"img\"\n        }, props), hasTitle && React.createElement(\"title\", {\n          id: this.id\n        }, title), React.createElement(\"path\", {\n          d: svgPath\n        }));\n      }\n    }]);\n\n    return SVGIcon;\n  }(React.Component), _a.displayName = name, _a.defaultProps = {\n    color: 'currentColor',\n    size: IconSize.sm,\n    noVerticalAlign: false\n  }, _a;\n}\n\nexports.createIcon = createIcon;","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-icons/src/createIcon.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nexport enum IconSize {\n  sm = 'sm',\n  md = 'md',\n  lg = 'lg',\n  xl = 'xl'\n}\n\nexport const getSize = (size: IconSize | keyof typeof IconSize) => {\n  switch (size) {\n    case IconSize.sm:\n      return '1em';\n    case IconSize.md:\n      return '1.5em';\n    case IconSize.lg:\n      return '2em';\n    case IconSize.xl:\n      return '3em';\n    default:\n      return '1em';\n  }\n};\n\nexport interface IconDefinition {\n  name?: string;\n  width: number;\n  height: number;\n  svgPath: string;\n  xOffset?: number;\n  yOffset?: number;\n}\n\nexport interface SVGIconProps extends Omit<React.HTMLProps<SVGElement>, 'size' | 'ref'> {\n  color?: string;\n  size?: IconSize | keyof typeof IconSize;\n  title?: string;\n  noVerticalAlign?: boolean;\n}\n\nlet currentId = 0;\n\n/**\n * Factory to create Icon class components for consumers\n */\nexport function createIcon({\n  name,\n  xOffset = 0,\n  yOffset = 0,\n  width,\n  height,\n  svgPath\n}: IconDefinition): React.ComponentClass<SVGIconProps> {\n  return class SVGIcon extends React.Component<SVGIconProps> {\n    static displayName = name;\n    static defaultProps = {\n      color: 'currentColor',\n      size: IconSize.sm,\n      noVerticalAlign: false\n    };\n\n    id = `icon-title-${currentId++}`;\n\n    render() {\n      const { size, color, title, noVerticalAlign, ...props } = this.props;\n\n      const hasTitle = Boolean(title);\n      const heightWidth = getSize(size);\n      const baseAlign = -0.125 * Number.parseFloat(heightWidth);\n      const style = noVerticalAlign ? null : { verticalAlign: `${baseAlign}em` };\n      const viewBox = [xOffset, yOffset, width, height].join(' ');\n\n      return (\n        <svg\n          style={style}\n          fill={color}\n          height={heightWidth}\n          width={heightWidth}\n          viewBox={viewBox}\n          aria-labelledby={hasTitle ? this.id : null}\n          aria-hidden={hasTitle ? null : true}\n          role=\"img\"\n          {...(props as Omit<React.SVGProps<SVGElement>, 'ref'>)} // Lie.\n        >\n          {hasTitle && <title id={this.id}>{title}</title>}\n          <path d={svgPath} />\n        </svg>\n      );\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"script"}