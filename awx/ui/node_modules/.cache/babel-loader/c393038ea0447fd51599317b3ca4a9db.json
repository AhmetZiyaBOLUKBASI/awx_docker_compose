{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useCallback,useEffect}from'react';import{withRouter}from'react-router-dom';import{InventoriesAPI}from'api';import{Inventory}from'types';import useRequest from'hooks/useRequest';import useAutoPopulateLookup from'hooks/useAutoPopulateLookup';import{getQSConfig,parseQueryString,mergeParams}from'util/qs';import Lookup from'./Lookup';import OptionsList from'../OptionsList';import LookupErrorMessage from'./shared/LookupErrorMessage';import FieldWithPrompt from'../FieldWithPrompt';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var QS_CONFIG=getQSConfig('inventory',{page:1,page_size:5,order_by:'name',role_level:'use_role'});function InventoryLookup(_ref){var autoPopulate=_ref.autoPopulate,fieldId=_ref.fieldId,fieldName=_ref.fieldName,hideSmartInventories=_ref.hideSmartInventories,history=_ref.history,isDisabled=_ref.isDisabled,isOverrideDisabled=_ref.isOverrideDisabled,isPromptableField=_ref.isPromptableField,onBlur=_ref.onBlur,onChange=_ref.onChange,promptId=_ref.promptId,promptName=_ref.promptName,required=_ref.required,validate=_ref.validate,value=_ref.value;var autoPopulateLookup=useAutoPopulateLookup(onChange);var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _actionsResponse$data,_actionsResponse$data2;var params,inventoryKindParams,_yield$Promise$all,_yield$Promise$all2,data,actionsResponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:params=parseQueryString(QS_CONFIG,history.location.search);inventoryKindParams=hideSmartInventories?{not__kind:'smart'}:{};_context.next=4;return Promise.all([InventoriesAPI.read(mergeParams(params,_objectSpread({},inventoryKindParams))),InventoriesAPI.readOptions()]);case 4:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);data=_yield$Promise$all2[0].data;actionsResponse=_yield$Promise$all2[1];if(autoPopulate){autoPopulateLookup(data.results);}return _context.abrupt(\"return\",{inventories:data.results,count:data.count,relatedSearchableKeys:((actionsResponse===null||actionsResponse===void 0?void 0:(_actionsResponse$data=actionsResponse.data)===null||_actionsResponse$data===void 0?void 0:_actionsResponse$data.related_search_fields)||[]).map(function(val){return val.slice(0,-8);}),searchableKeys:Object.keys(((_actionsResponse$data2=actionsResponse.data.actions)===null||_actionsResponse$data2===void 0?void 0:_actionsResponse$data2.GET)||{}).filter(function(key){var _actionsResponse$data3;if(['kind','host_filter'].includes(key)&&hideSmartInventories){return false;}return(_actionsResponse$data3=actionsResponse.data.actions)===null||_actionsResponse$data3===void 0?void 0:_actionsResponse$data3.GET[key].filterable;}).map(function(key){var _actionsResponse$data4;return{key:key,type:(_actionsResponse$data4=actionsResponse.data.actions)===null||_actionsResponse$data4===void 0?void 0:_actionsResponse$data4.GET[key].type};}),canEdit:Boolean(actionsResponse.data.actions.POST)||isOverrideDisabled});case 10:case\"end\":return _context.stop();}}},_callee);})),[autoPopulate,autoPopulateLookup,history.location]),{inventories:[],count:0,relatedSearchableKeys:[],searchableKeys:[],canEdit:false}),_useRequest$result=_useRequest.result,inventories=_useRequest$result.inventories,count=_useRequest$result.count,relatedSearchableKeys=_useRequest$result.relatedSearchableKeys,searchableKeys=_useRequest$result.searchableKeys,canEdit=_useRequest$result.canEdit,fetchInventories=_useRequest.request,error=_useRequest.error,isLoading=_useRequest.isLoading;var checkInventoryName=useCallback(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(name){var _yield$InventoriesAPI,_yield$InventoriesAPI2,nameMatchResults,nameMatchCount;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(name){_context2.next=3;break;}onChange(null);return _context2.abrupt(\"return\");case 3:_context2.prev=3;_context2.next=6;return InventoriesAPI.read({name:name});case 6:_yield$InventoriesAPI=_context2.sent;_yield$InventoriesAPI2=_yield$InventoriesAPI.data;nameMatchResults=_yield$InventoriesAPI2.results;nameMatchCount=_yield$InventoriesAPI2.count;onChange(nameMatchCount?nameMatchResults[0]:null);_context2.next=16;break;case 13:_context2.prev=13;_context2.t0=_context2[\"catch\"](3);onChange(null);case 16:case\"end\":return _context2.stop();}}},_callee2,null,[[3,13]]);}));return function(_x){return _ref3.apply(this,arguments);};}(),[onChange]);useEffect(function(){fetchInventories();},[fetchInventories]);return isPromptableField?/*#__PURE__*/_jsxs(FieldWithPrompt,{fieldId:fieldId,isRequired:required,label:/*i18n*/i18n._(\"Inventory\"),promptId:promptId,promptName:promptName,isDisabled:!canEdit||isDisabled,tooltip:/*i18n*/i18n._(\"Select the inventory containing the hosts\\nyou want this job to manage.\"),children:[/*#__PURE__*/_jsx(Lookup,{id:\"inventory-lookup\",header:/*i18n*/i18n._(\"Inventory\"),value:value,onChange:onChange,onUpdate:fetchInventories,onBlur:onBlur,required:required,onDebounce:checkInventoryName,fieldName:fieldName,validate:validate,isLoading:isLoading,isDisabled:!canEdit||isDisabled,qsConfig:QS_CONFIG,renderOptionsList:function renderOptionsList(_ref4){var state=_ref4.state,dispatch=_ref4.dispatch,canDelete=_ref4.canDelete;return/*#__PURE__*/_jsx(OptionsList,{value:state.selectedItems,options:inventories,optionCount:count,searchColumns:[{name:/*i18n*/i18n._(\"Name\"),key:'name__icontains',isDefault:true},{name:/*i18n*/i18n._(\"Created By (Username)\"),key:'created_by__username__icontains'},{name:/*i18n*/i18n._(\"Modified By (Username)\"),key:'modified_by__username__icontains'}],sortColumns:[{name:/*i18n*/i18n._(\"Name\"),key:'name'}],searchableKeys:searchableKeys,relatedSearchableKeys:relatedSearchableKeys,multiple:state.multiple,header:/*i18n*/i18n._(\"Inventory\"),name:\"inventory\",qsConfig:QS_CONFIG,readOnly:!canDelete,selectItem:function selectItem(item){return dispatch({type:'SELECT_ITEM',item:item});},deselectItem:function deselectItem(item){return dispatch({type:'DESELECT_ITEM',item:item});}});}}),/*#__PURE__*/_jsx(LookupErrorMessage,{error:error})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Lookup,{id:\"inventory-lookup\",header:/*i18n*/i18n._(\"Inventory\"),value:value,onChange:onChange,onDebounce:checkInventoryName,fieldName:fieldName,validate:validate,onBlur:onBlur,required:required,isLoading:isLoading,isDisabled:!canEdit||isDisabled,qsConfig:QS_CONFIG,renderOptionsList:function renderOptionsList(_ref5){var state=_ref5.state,dispatch=_ref5.dispatch,canDelete=_ref5.canDelete;return/*#__PURE__*/_jsx(OptionsList,{value:state.selectedItems,options:inventories,optionCount:count,searchColumns:[{name:/*i18n*/i18n._(\"Name\"),key:'name__icontains',isDefault:true},{name:/*i18n*/i18n._(\"Created By (Username)\"),key:'created_by__username__icontains'},{name:/*i18n*/i18n._(\"Modified By (Username)\"),key:'modified_by__username__icontains'}],sortColumns:[{name:/*i18n*/i18n._(\"Name\"),key:'name'}],searchableKeys:searchableKeys,relatedSearchableKeys:relatedSearchableKeys,multiple:state.multiple,header:/*i18n*/i18n._(\"Inventory\"),name:\"inventory\",qsConfig:QS_CONFIG,readOnly:!canDelete,selectItem:function selectItem(item){return dispatch({type:'SELECT_ITEM',item:item});},deselectItem:function deselectItem(item){return dispatch({type:'DESELECT_ITEM',item:item});}});}}),/*#__PURE__*/_jsx(LookupErrorMessage,{error:error})]});}InventoryLookup.defaultProps={autoPopulate:false,fieldId:'inventory',fieldName:'inventory',hideSmartInventories:false,isDisabled:false,isOverrideDisabled:false,required:false,validate:function validate(){},value:null};export default withRouter(InventoryLookup);","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/Lookup/InventoryLookup.js"],"names":["React","useCallback","useEffect","withRouter","InventoriesAPI","Inventory","useRequest","useAutoPopulateLookup","getQSConfig","parseQueryString","mergeParams","Lookup","OptionsList","LookupErrorMessage","FieldWithPrompt","QS_CONFIG","page","page_size","order_by","role_level","InventoryLookup","autoPopulate","fieldId","fieldName","hideSmartInventories","history","isDisabled","isOverrideDisabled","isPromptableField","onBlur","onChange","promptId","promptName","required","validate","value","autoPopulateLookup","params","location","search","inventoryKindParams","not__kind","Promise","all","read","readOptions","data","actionsResponse","results","inventories","count","relatedSearchableKeys","related_search_fields","map","val","slice","searchableKeys","Object","keys","actions","GET","filter","key","includes","filterable","type","canEdit","Boolean","POST","result","fetchInventories","request","error","isLoading","checkInventoryName","name","nameMatchResults","nameMatchCount","state","dispatch","canDelete","selectedItems","isDefault","multiple","item","defaultProps"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport { func, bool, string } from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { t } from '@lingui/macro';\nimport { InventoriesAPI } from 'api';\nimport { Inventory } from 'types';\nimport useRequest from 'hooks/useRequest';\nimport useAutoPopulateLookup from 'hooks/useAutoPopulateLookup';\nimport { getQSConfig, parseQueryString, mergeParams } from 'util/qs';\nimport Lookup from './Lookup';\nimport OptionsList from '../OptionsList';\nimport LookupErrorMessage from './shared/LookupErrorMessage';\nimport FieldWithPrompt from '../FieldWithPrompt';\n\nconst QS_CONFIG = getQSConfig('inventory', {\n  page: 1,\n  page_size: 5,\n  order_by: 'name',\n  role_level: 'use_role',\n});\n\nfunction InventoryLookup({\n  autoPopulate,\n  fieldId,\n  fieldName,\n  hideSmartInventories,\n  history,\n  isDisabled,\n  isOverrideDisabled,\n  isPromptableField,\n  onBlur,\n  onChange,\n  promptId,\n  promptName,\n  required,\n  validate,\n  value,\n}) {\n  const autoPopulateLookup = useAutoPopulateLookup(onChange);\n\n  const {\n    result: {\n      inventories,\n      count,\n      relatedSearchableKeys,\n      searchableKeys,\n      canEdit,\n    },\n    request: fetchInventories,\n    error,\n    isLoading,\n  } = useRequest(\n    useCallback(async () => {\n      const params = parseQueryString(QS_CONFIG, history.location.search);\n      const inventoryKindParams = hideSmartInventories\n        ? { not__kind: 'smart' }\n        : {};\n      const [{ data }, actionsResponse] = await Promise.all([\n        InventoriesAPI.read(\n          mergeParams(params, {\n            ...inventoryKindParams,\n          })\n        ),\n        InventoriesAPI.readOptions(),\n      ]);\n\n      if (autoPopulate) {\n        autoPopulateLookup(data.results);\n      }\n\n      return {\n        inventories: data.results,\n        count: data.count,\n        relatedSearchableKeys: (\n          actionsResponse?.data?.related_search_fields || []\n        ).map((val) => val.slice(0, -8)),\n        searchableKeys: Object.keys(actionsResponse.data.actions?.GET || {})\n          .filter((key) => {\n            if (['kind', 'host_filter'].includes(key) && hideSmartInventories) {\n              return false;\n            }\n            return actionsResponse.data.actions?.GET[key].filterable;\n          })\n          .map((key) => ({\n            key,\n            type: actionsResponse.data.actions?.GET[key].type,\n          })),\n        canEdit:\n          Boolean(actionsResponse.data.actions.POST) || isOverrideDisabled,\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [autoPopulate, autoPopulateLookup, history.location]),\n    {\n      inventories: [],\n      count: 0,\n      relatedSearchableKeys: [],\n      searchableKeys: [],\n      canEdit: false,\n    }\n  );\n\n  const checkInventoryName = useCallback(\n    async (name) => {\n      if (!name) {\n        onChange(null);\n        return;\n      }\n\n      try {\n        const {\n          data: { results: nameMatchResults, count: nameMatchCount },\n        } = await InventoriesAPI.read({ name });\n        onChange(nameMatchCount ? nameMatchResults[0] : null);\n      } catch {\n        onChange(null);\n      }\n    },\n    [onChange]\n  );\n\n  useEffect(() => {\n    fetchInventories();\n  }, [fetchInventories]);\n\n  return isPromptableField ? (\n    <FieldWithPrompt\n      fieldId={fieldId}\n      isRequired={required}\n      label={t`Inventory`}\n      promptId={promptId}\n      promptName={promptName}\n      isDisabled={!canEdit || isDisabled}\n      tooltip={t`Select the inventory containing the hosts\n            you want this job to manage.`}\n    >\n      <Lookup\n        id=\"inventory-lookup\"\n        header={t`Inventory`}\n        value={value}\n        onChange={onChange}\n        onUpdate={fetchInventories}\n        onBlur={onBlur}\n        required={required}\n        onDebounce={checkInventoryName}\n        fieldName={fieldName}\n        validate={validate}\n        isLoading={isLoading}\n        isDisabled={!canEdit || isDisabled}\n        qsConfig={QS_CONFIG}\n        renderOptionsList={({ state, dispatch, canDelete }) => (\n          <OptionsList\n            value={state.selectedItems}\n            options={inventories}\n            optionCount={count}\n            searchColumns={[\n              {\n                name: t`Name`,\n                key: 'name__icontains',\n                isDefault: true,\n              },\n              {\n                name: t`Created By (Username)`,\n                key: 'created_by__username__icontains',\n              },\n              {\n                name: t`Modified By (Username)`,\n                key: 'modified_by__username__icontains',\n              },\n            ]}\n            sortColumns={[\n              {\n                name: t`Name`,\n                key: 'name',\n              },\n            ]}\n            searchableKeys={searchableKeys}\n            relatedSearchableKeys={relatedSearchableKeys}\n            multiple={state.multiple}\n            header={t`Inventory`}\n            name=\"inventory\"\n            qsConfig={QS_CONFIG}\n            readOnly={!canDelete}\n            selectItem={(item) => dispatch({ type: 'SELECT_ITEM', item })}\n            deselectItem={(item) => dispatch({ type: 'DESELECT_ITEM', item })}\n          />\n        )}\n      />\n      <LookupErrorMessage error={error} />\n    </FieldWithPrompt>\n  ) : (\n    <>\n      <Lookup\n        id=\"inventory-lookup\"\n        header={t`Inventory`}\n        value={value}\n        onChange={onChange}\n        onDebounce={checkInventoryName}\n        fieldName={fieldName}\n        validate={validate}\n        onBlur={onBlur}\n        required={required}\n        isLoading={isLoading}\n        isDisabled={!canEdit || isDisabled}\n        qsConfig={QS_CONFIG}\n        renderOptionsList={({ state, dispatch, canDelete }) => (\n          <OptionsList\n            value={state.selectedItems}\n            options={inventories}\n            optionCount={count}\n            searchColumns={[\n              {\n                name: t`Name`,\n                key: 'name__icontains',\n                isDefault: true,\n              },\n              {\n                name: t`Created By (Username)`,\n                key: 'created_by__username__icontains',\n              },\n              {\n                name: t`Modified By (Username)`,\n                key: 'modified_by__username__icontains',\n              },\n            ]}\n            sortColumns={[\n              {\n                name: t`Name`,\n                key: 'name',\n              },\n            ]}\n            searchableKeys={searchableKeys}\n            relatedSearchableKeys={relatedSearchableKeys}\n            multiple={state.multiple}\n            header={t`Inventory`}\n            name=\"inventory\"\n            qsConfig={QS_CONFIG}\n            readOnly={!canDelete}\n            selectItem={(item) => dispatch({ type: 'SELECT_ITEM', item })}\n            deselectItem={(item) => dispatch({ type: 'DESELECT_ITEM', item })}\n          />\n        )}\n      />\n      <LookupErrorMessage error={error} />\n    </>\n  );\n}\n\nInventoryLookup.propTypes = {\n  autoPopulate: bool,\n  fieldId: string,\n  fieldName: string,\n  hideSmartInventories: bool,\n  isDisabled: bool,\n  isOverrideDisabled: bool,\n  onChange: func.isRequired,\n  required: bool,\n  validate: func,\n  value: Inventory,\n};\n\nInventoryLookup.defaultProps = {\n  autoPopulate: false,\n  fieldId: 'inventory',\n  fieldName: 'inventory',\n  hideSmartInventories: false,\n  isDisabled: false,\n  isOverrideDisabled: false,\n  required: false,\n  validate: () => {},\n  value: null,\n};\n\nexport default withRouter(InventoryLookup);\n"]},"metadata":{},"sourceType":"module"}