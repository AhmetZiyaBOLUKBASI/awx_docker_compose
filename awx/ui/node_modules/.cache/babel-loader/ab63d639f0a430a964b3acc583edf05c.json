{"ast":null,"code":"import _toConsumableArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import useWebsocket from'hooks/useWebsocket';export default function useWsInventorySources(initialSources){var _useState=useState(initialSources),_useState2=_slicedToArray(_useState,2),sources=_useState2[0],setSources=_useState2[1];var lastMessage=useWebsocket({jobs:['status_changed'],control:['limit_reached_1']});useEffect(function(){setSources(initialSources);},[initialSources]);useEffect(function(){if(!(lastMessage!==null&&lastMessage!==void 0&&lastMessage.unified_job_id)||!(lastMessage!==null&&lastMessage!==void 0&&lastMessage.inventory_source_id)){return;}var sourceId=lastMessage.inventory_source_id;var index=sources.findIndex(function(s){return s.id===sourceId;});if(index>-1){setSources(updateSource(sources,index,lastMessage));}},[lastMessage]// eslint-disable-line react-hooks/exhaustive-deps\n);return sources;}function updateSource(sources,index,message){var source=_objectSpread(_objectSpread({},sources[index]),{},{status:message.status,last_updated:message.finished,summary_fields:_objectSpread(_objectSpread({},sources[index].summary_fields),{},{current_job:{id:message.unified_job_id,status:message.status,finished:message.finished}})});return[].concat(_toConsumableArray(sources.slice(0,index)),[source],_toConsumableArray(sources.slice(index+1)));}","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Inventory/InventorySources/useWsInventorySources.js"],"names":["useState","useEffect","useWebsocket","useWsInventorySources","initialSources","sources","setSources","lastMessage","jobs","control","unified_job_id","inventory_source_id","sourceId","index","findIndex","s","id","updateSource","message","source","status","last_updated","finished","summary_fields","current_job","slice"],"mappings":"4TAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,YAAP,KAAyB,oBAAzB,CAEA,cAAe,SAASC,CAAAA,qBAAT,CAA+BC,cAA/B,CAA+C,CAC5D,cAA8BJ,QAAQ,CAACI,cAAD,CAAtC,wCAAOC,OAAP,eAAgBC,UAAhB,eACA,GAAMC,CAAAA,WAAW,CAAGL,YAAY,CAAC,CAC/BM,IAAI,CAAE,CAAC,gBAAD,CADyB,CAE/BC,OAAO,CAAE,CAAC,iBAAD,CAFsB,CAAD,CAAhC,CAKAR,SAAS,CAAC,UAAM,CACdK,UAAU,CAACF,cAAD,CAAV,CACD,CAFQ,CAEN,CAACA,cAAD,CAFM,CAAT,CAIAH,SAAS,CACP,UAAM,CACJ,GAAI,EAACM,WAAD,SAACA,WAAD,WAACA,WAAW,CAAEG,cAAd,GAAgC,EAACH,WAAD,SAACA,WAAD,WAACA,WAAW,CAAEI,mBAAd,CAApC,CAAuE,CACrE,OACD,CAED,GAAMC,CAAAA,QAAQ,CAAGL,WAAW,CAACI,mBAA7B,CACA,GAAME,CAAAA,KAAK,CAAGR,OAAO,CAACS,SAAR,CAAkB,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,EAAF,GAASJ,QAAhB,EAAlB,CAAd,CACA,GAAIC,KAAK,CAAG,CAAC,CAAb,CAAgB,CACdP,UAAU,CAACW,YAAY,CAACZ,OAAD,CAAUQ,KAAV,CAAiBN,WAAjB,CAAb,CAAV,CACD,CACF,CAXM,CAYP,CAACA,WAAD,CAAc;AAZP,CAAT,CAeA,MAAOF,CAAAA,OAAP,CACD,CAED,QAASY,CAAAA,YAAT,CAAsBZ,OAAtB,CAA+BQ,KAA/B,CAAsCK,OAAtC,CAA+C,CAC7C,GAAMC,CAAAA,MAAM,gCACPd,OAAO,CAACQ,KAAD,CADA,MAEVO,MAAM,CAAEF,OAAO,CAACE,MAFN,CAGVC,YAAY,CAAEH,OAAO,CAACI,QAHZ,CAIVC,cAAc,gCACTlB,OAAO,CAACQ,KAAD,CAAP,CAAeU,cADN,MAEZC,WAAW,CAAE,CACXR,EAAE,CAAEE,OAAO,CAACR,cADD,CAEXU,MAAM,CAAEF,OAAO,CAACE,MAFL,CAGXE,QAAQ,CAAEJ,OAAO,CAACI,QAHP,CAFD,EAJJ,EAAZ,CAaA,mCAAWjB,OAAO,CAACoB,KAAR,CAAc,CAAd,CAAiBZ,KAAjB,CAAX,GAAoCM,MAApC,qBAA+Cd,OAAO,CAACoB,KAAR,CAAcZ,KAAK,CAAG,CAAtB,CAA/C,GACD","sourcesContent":["import { useState, useEffect } from 'react';\nimport useWebsocket from 'hooks/useWebsocket';\n\nexport default function useWsInventorySources(initialSources) {\n  const [sources, setSources] = useState(initialSources);\n  const lastMessage = useWebsocket({\n    jobs: ['status_changed'],\n    control: ['limit_reached_1'],\n  });\n\n  useEffect(() => {\n    setSources(initialSources);\n  }, [initialSources]);\n\n  useEffect(\n    () => {\n      if (!lastMessage?.unified_job_id || !lastMessage?.inventory_source_id) {\n        return;\n      }\n\n      const sourceId = lastMessage.inventory_source_id;\n      const index = sources.findIndex((s) => s.id === sourceId);\n      if (index > -1) {\n        setSources(updateSource(sources, index, lastMessage));\n      }\n    },\n    [lastMessage] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  return sources;\n}\n\nfunction updateSource(sources, index, message) {\n  const source = {\n    ...sources[index],\n    status: message.status,\n    last_updated: message.finished,\n    summary_fields: {\n      ...sources[index].summary_fields,\n      current_job: {\n        id: message.unified_job_id,\n        status: message.status,\n        finished: message.finished,\n      },\n    },\n  };\n  return [...sources.slice(0, index), source, ...sources.slice(index + 1)];\n}\n"]},"metadata":{},"sourceType":"module"}