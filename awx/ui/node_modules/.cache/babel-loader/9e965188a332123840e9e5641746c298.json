{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useCallback,useEffect}from'react';import{withRouter}from'react-router-dom';import{FormGroup}from'@patternfly/react-core';import{OrganizationsAPI}from'api';import{Organization}from'types';import{getQSConfig,parseQueryString}from'util/qs';import{getSearchableKeys}from'components/PaginatedTable';import useRequest from'hooks/useRequest';import useAutoPopulateLookup from'hooks/useAutoPopulateLookup';import OptionsList from'../OptionsList';import Lookup from'./Lookup';import LookupErrorMessage from'./shared/LookupErrorMessage';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QS_CONFIG=getQSConfig('organizations',{page:1,page_size:5,order_by:'name'});function OrganizationLookup(_ref){var id=_ref.id,helperTextInvalid=_ref.helperTextInvalid,isValid=_ref.isValid,onBlur=_ref.onBlur,onChange=_ref.onChange,required=_ref.required,value=_ref.value,history=_ref.history,autoPopulate=_ref.autoPopulate,isDisabled=_ref.isDisabled,helperText=_ref.helperText,validate=_ref.validate,fieldName=_ref.fieldName;var autoPopulateLookup=useAutoPopulateLookup(onChange);var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _actionsResponse$data,_actionsResponse$data2;var params,_yield$Promise$all,_yield$Promise$all2,response,actionsResponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:params=parseQueryString(QS_CONFIG,history.location.search);_context.next=3;return Promise.all([OrganizationsAPI.read(params),OrganizationsAPI.readOptions()]);case 3:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);response=_yield$Promise$all2[0];actionsResponse=_yield$Promise$all2[1];if(autoPopulate){autoPopulateLookup(response.data.results);}return _context.abrupt(\"return\",{organizations:response.data.results,itemCount:response.data.count,relatedSearchableKeys:((actionsResponse===null||actionsResponse===void 0?void 0:(_actionsResponse$data=actionsResponse.data)===null||_actionsResponse$data===void 0?void 0:_actionsResponse$data.related_search_fields)||[]).map(function(val){return val.slice(0,-8);}),searchableKeys:getSearchableKeys((_actionsResponse$data2=actionsResponse.data.actions)===null||_actionsResponse$data2===void 0?void 0:_actionsResponse$data2.GET)});case 9:case\"end\":return _context.stop();}}},_callee);})),[autoPopulate,autoPopulateLookup,history.location.search]),{organizations:[],itemCount:0,relatedSearchableKeys:[],searchableKeys:[]}),_useRequest$result=_useRequest.result,itemCount=_useRequest$result.itemCount,organizations=_useRequest$result.organizations,relatedSearchableKeys=_useRequest$result.relatedSearchableKeys,searchableKeys=_useRequest$result.searchableKeys,contentError=_useRequest.error,fetchOrganizations=_useRequest.request;var checkOrganizationName=useCallback(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(name){var _yield$OrganizationsA,_yield$OrganizationsA2,nameMatchResults,nameMatchCount;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(name){_context2.next=3;break;}onChange(null);return _context2.abrupt(\"return\");case 3:_context2.prev=3;_context2.next=6;return OrganizationsAPI.read({name:name});case 6:_yield$OrganizationsA=_context2.sent;_yield$OrganizationsA2=_yield$OrganizationsA.data;nameMatchResults=_yield$OrganizationsA2.results;nameMatchCount=_yield$OrganizationsA2.count;onChange(nameMatchCount?nameMatchResults[0]:null);_context2.next=16;break;case 13:_context2.prev=13;_context2.t0=_context2[\"catch\"](3);onChange(null);case 16:case\"end\":return _context2.stop();}}},_callee2,null,[[3,13]]);}));return function(_x){return _ref3.apply(this,arguments);};}(),[onChange]);useEffect(function(){fetchOrganizations();},[fetchOrganizations]);return/*#__PURE__*/_jsxs(FormGroup,{fieldId:id,helperTextInvalid:helperTextInvalid,isRequired:required,validated:isValid?'default':'error',label:/*i18n*/i18n._(\"Organization\"),helperText:helperText,children:[/*#__PURE__*/_jsx(Lookup,{isDisabled:isDisabled,id:id,header:/*i18n*/i18n._(\"Organization\"),value:value,onBlur:onBlur,onChange:onChange,onDebounce:checkOrganizationName,onUpdate:fetchOrganizations,fieldName:fieldName,validate:validate,qsConfig:QS_CONFIG,required:required,sortedColumnKey:\"name\",renderOptionsList:function renderOptionsList(_ref4){var state=_ref4.state,dispatch=_ref4.dispatch,canDelete=_ref4.canDelete;return/*#__PURE__*/_jsx(OptionsList,{value:state.selectedItems,options:organizations,optionCount:itemCount,multiple:state.multiple,header:/*i18n*/i18n._(\"Organization\"),name:\"organization\",qsConfig:QS_CONFIG,searchColumns:[{name:/*i18n*/i18n._(\"Name\"),key:'name__icontains',isDefault:true},{name:/*i18n*/i18n._(\"Created By (Username)\"),key:'created_by__username__icontains'},{name:/*i18n*/i18n._(\"Modified By (Username)\"),key:'modified_by__username__icontains'}],sortColumns:[{name:/*i18n*/i18n._(\"Name\"),key:'name'}],searchableKeys:searchableKeys,relatedSearchableKeys:relatedSearchableKeys,readOnly:!canDelete,selectItem:function selectItem(item){return dispatch({type:'SELECT_ITEM',item:item});},deselectItem:function deselectItem(item){return dispatch({type:'DESELECT_ITEM',item:item});}});}}),/*#__PURE__*/_jsx(LookupErrorMessage,{error:contentError})]});}OrganizationLookup.defaultProps={id:'organization',helperTextInvalid:'',isValid:true,onBlur:function onBlur(){},required:false,value:null,autoPopulate:false,isDisabled:false,validate:function validate(){return undefined;},fieldName:'organization'};export{OrganizationLookup as _OrganizationLookup};export default withRouter(OrganizationLookup);","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/Lookup/OrganizationLookup.js"],"names":["React","useCallback","useEffect","withRouter","FormGroup","OrganizationsAPI","Organization","getQSConfig","parseQueryString","getSearchableKeys","useRequest","useAutoPopulateLookup","OptionsList","Lookup","LookupErrorMessage","QS_CONFIG","page","page_size","order_by","OrganizationLookup","id","helperTextInvalid","isValid","onBlur","onChange","required","value","history","autoPopulate","isDisabled","helperText","validate","fieldName","autoPopulateLookup","params","location","search","Promise","all","read","readOptions","response","actionsResponse","data","results","organizations","itemCount","count","relatedSearchableKeys","related_search_fields","map","val","slice","searchableKeys","actions","GET","result","contentError","error","fetchOrganizations","request","checkOrganizationName","name","nameMatchResults","nameMatchCount","state","dispatch","canDelete","selectedItems","multiple","key","isDefault","item","type","defaultProps","undefined","_OrganizationLookup"],"mappings":"uVAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,SAA7B,KAA8C,OAA9C,CAEA,OAASC,UAAT,KAA2B,kBAA3B,CAEA,OAASC,SAAT,KAA0B,wBAA1B,CACA,OAASC,gBAAT,KAAiC,KAAjC,CACA,OAASC,YAAT,KAA6B,OAA7B,CACA,OAASC,WAAT,CAAsBC,gBAAtB,KAA8C,SAA9C,CACA,OAASC,iBAAT,KAAkC,2BAAlC,CACA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CACA,MAAOC,CAAAA,qBAAP,KAAkC,6BAAlC,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,6BAA/B,C,wFAEA,GAAMC,CAAAA,SAAS,CAAGR,WAAW,CAAC,eAAD,CAAkB,CAC7CS,IAAI,CAAE,CADuC,CAE7CC,SAAS,CAAE,CAFkC,CAG7CC,QAAQ,CAAE,MAHmC,CAAlB,CAA7B,CAMA,QAASC,CAAAA,kBAAT,MAcG,IAbDC,CAAAA,EAaC,MAbDA,EAaC,CAZDC,iBAYC,MAZDA,iBAYC,CAXDC,OAWC,MAXDA,OAWC,CAVDC,MAUC,MAVDA,MAUC,CATDC,QASC,MATDA,QASC,CARDC,QAQC,MARDA,QAQC,CAPDC,KAOC,MAPDA,KAOC,CANDC,OAMC,MANDA,OAMC,CALDC,YAKC,MALDA,YAKC,CAJDC,UAIC,MAJDA,UAIC,CAHDC,UAGC,MAHDA,UAGC,CAFDC,QAEC,MAFDA,QAEC,CADDC,SACC,MADDA,SACC,CACD,GAAMC,CAAAA,kBAAkB,CAAGtB,qBAAqB,CAACa,QAAD,CAAhD,CAEA,gBAIId,UAAU,CACZT,WAAW,sEAAC,+PACJiC,MADI,CACK1B,gBAAgB,CAACO,SAAD,CAAYY,OAAO,CAACQ,QAAR,CAAiBC,MAA7B,CADrB,uBAEgCC,CAAAA,OAAO,CAACC,GAAR,CAAY,CACpDjC,gBAAgB,CAACkC,IAAjB,CAAsBL,MAAtB,CADoD,CAEpD7B,gBAAgB,CAACmC,WAAjB,EAFoD,CAAZ,CAFhC,kGAEHC,QAFG,wBAEOC,eAFP,wBAOV,GAAId,YAAJ,CAAkB,CAChBK,kBAAkB,CAACQ,QAAQ,CAACE,IAAT,CAAcC,OAAf,CAAlB,CACD,CATS,gCAWH,CACLC,aAAa,CAAEJ,QAAQ,CAACE,IAAT,CAAcC,OADxB,CAELE,SAAS,CAAEL,QAAQ,CAACE,IAAT,CAAcI,KAFpB,CAGLC,qBAAqB,CAAE,CACrB,CAAAN,eAAe,OAAf,EAAAA,eAAe,SAAf,+BAAAA,eAAe,CAAEC,IAAjB,sEAAuBM,qBAAvB,GAAgD,EAD3B,EAErBC,GAFqB,CAEjB,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,KAAJ,CAAU,CAAV,CAAa,CAAC,CAAd,CAAT,EAFiB,CAHlB,CAMLC,cAAc,CAAE5C,iBAAiB,yBAACiC,eAAe,CAACC,IAAhB,CAAqBW,OAAtB,iDAAC,uBAA8BC,GAA/B,CAN5B,CAXG,wDAAD,GAmBR,CAAC3B,YAAD,CAAeK,kBAAf,CAAmCN,OAAO,CAACQ,QAAR,CAAiBC,MAApD,CAnBQ,CADC,CAqBZ,CACES,aAAa,CAAE,EADjB,CAEEC,SAAS,CAAE,CAFb,CAGEE,qBAAqB,CAAE,EAHzB,CAIEK,cAAc,CAAE,EAJlB,CArBY,CAJd,gCACEG,MADF,CACYV,SADZ,oBACYA,SADZ,CACuBD,aADvB,oBACuBA,aADvB,CACsCG,qBADtC,oBACsCA,qBADtC,CAC6DK,cAD7D,oBAC6DA,cAD7D,CAESI,YAFT,aAEEC,KAFF,CAGWC,kBAHX,aAGEC,OAHF,CAiCA,GAAMC,CAAAA,qBAAqB,CAAG5D,WAAW,2FACvC,kBAAO6D,IAAP,0MACOA,IADP,0BAEItC,QAAQ,CAAC,IAAD,CAAR,CAFJ,iFAScnB,CAAAA,gBAAgB,CAACkC,IAAjB,CAAsB,CAAEuB,IAAI,CAAJA,IAAF,CAAtB,CATd,0FAQMnB,IARN,CAQuBoB,gBARvB,wBAQcnB,OARd,CAQgDoB,cARhD,wBAQyCjB,KARzC,CAUIvB,QAAQ,CAACwC,cAAc,CAAGD,gBAAgB,CAAC,CAAD,CAAnB,CAAyB,IAAxC,CAAR,CAVJ,qFAYIvC,QAAQ,CAAC,IAAD,CAAR,CAZJ,uEADuC,gEAgBvC,CAACA,QAAD,CAhBuC,CAAzC,CAmBAtB,SAAS,CAAC,UAAM,CACdyD,kBAAkB,GACnB,CAFQ,CAEN,CAACA,kBAAD,CAFM,CAAT,CAIA,mBACE,MAAC,SAAD,EACE,OAAO,CAAEvC,EADX,CAEE,iBAAiB,CAAEC,iBAFrB,CAGE,UAAU,CAAEI,QAHd,CAIE,SAAS,CAAEH,OAAO,CAAG,SAAH,CAAe,OAJnC,CAKE,KAAK,SAAE,sBALT,CAME,UAAU,CAAEQ,UANd,wBAQE,KAAC,MAAD,EACE,UAAU,CAAED,UADd,CAEE,EAAE,CAAET,EAFN,CAGE,MAAM,SAAE,sBAHV,CAIE,KAAK,CAAEM,KAJT,CAKE,MAAM,CAAEH,MALV,CAME,QAAQ,CAAEC,QANZ,CAOE,UAAU,CAAEqC,qBAPd,CAQE,QAAQ,CAAEF,kBARZ,CASE,SAAS,CAAE3B,SATb,CAUE,QAAQ,CAAED,QAVZ,CAWE,QAAQ,CAAEhB,SAXZ,CAYE,QAAQ,CAAEU,QAZZ,CAaE,eAAe,CAAC,MAblB,CAcE,iBAAiB,CAAE,qCAAGwC,CAAAA,KAAH,OAAGA,KAAH,CAAUC,QAAV,OAAUA,QAAV,CAAoBC,SAApB,OAAoBA,SAApB,oBACjB,KAAC,WAAD,EACE,KAAK,CAAEF,KAAK,CAACG,aADf,CAEE,OAAO,CAAEvB,aAFX,CAGE,WAAW,CAAEC,SAHf,CAIE,QAAQ,CAAEmB,KAAK,CAACI,QAJlB,CAKE,MAAM,SAAE,sBALV,CAME,IAAI,CAAC,cANP,CAOE,QAAQ,CAAEtD,SAPZ,CAQE,aAAa,CAAE,CACb,CACE+C,IAAI,SAAE,cADR,CAEEQ,GAAG,CAAE,iBAFP,CAGEC,SAAS,CAAE,IAHb,CADa,CAMb,CACET,IAAI,SAAE,+BADR,CAEEQ,GAAG,CAAE,iCAFP,CANa,CAUb,CACER,IAAI,SAAE,gCADR,CAEEQ,GAAG,CAAE,kCAFP,CAVa,CARjB,CAuBE,WAAW,CAAE,CACX,CACER,IAAI,SAAE,cADR,CAEEQ,GAAG,CAAE,MAFP,CADW,CAvBf,CA6BE,cAAc,CAAEjB,cA7BlB,CA8BE,qBAAqB,CAAEL,qBA9BzB,CA+BE,QAAQ,CAAE,CAACmB,SA/Bb,CAgCE,UAAU,CAAE,oBAACK,IAAD,QAAUN,CAAAA,QAAQ,CAAC,CAAEO,IAAI,CAAE,aAAR,CAAuBD,IAAI,CAAJA,IAAvB,CAAD,CAAlB,EAhCd,CAiCE,YAAY,CAAE,sBAACA,IAAD,QAAUN,CAAAA,QAAQ,CAAC,CAAEO,IAAI,CAAE,eAAR,CAAyBD,IAAI,CAAJA,IAAzB,CAAD,CAAlB,EAjChB,EADiB,EAdrB,EARF,cA4DE,KAAC,kBAAD,EAAoB,KAAK,CAAEf,YAA3B,EA5DF,GADF,CAgED,CAgBDtC,kBAAkB,CAACuD,YAAnB,CAAkC,CAChCtD,EAAE,CAAE,cAD4B,CAEhCC,iBAAiB,CAAE,EAFa,CAGhCC,OAAO,CAAE,IAHuB,CAIhCC,MAAM,CAAE,iBAAM,CAAE,CAJgB,CAKhCE,QAAQ,CAAE,KALsB,CAMhCC,KAAK,CAAE,IANyB,CAOhCE,YAAY,CAAE,KAPkB,CAQhCC,UAAU,CAAE,KARoB,CAShCE,QAAQ,CAAE,0BAAM4C,CAAAA,SAAN,EATsB,CAUhC3C,SAAS,CAAE,cAVqB,CAAlC,CAaA,OAASb,kBAAkB,GAAIyD,CAAAA,mBAA/B,EACA,cAAezE,CAAAA,UAAU,CAACgB,kBAAD,CAAzB","sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport { node, func, bool, string } from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { t } from '@lingui/macro';\nimport { FormGroup } from '@patternfly/react-core';\nimport { OrganizationsAPI } from 'api';\nimport { Organization } from 'types';\nimport { getQSConfig, parseQueryString } from 'util/qs';\nimport { getSearchableKeys } from 'components/PaginatedTable';\nimport useRequest from 'hooks/useRequest';\nimport useAutoPopulateLookup from 'hooks/useAutoPopulateLookup';\nimport OptionsList from '../OptionsList';\nimport Lookup from './Lookup';\nimport LookupErrorMessage from './shared/LookupErrorMessage';\n\nconst QS_CONFIG = getQSConfig('organizations', {\n  page: 1,\n  page_size: 5,\n  order_by: 'name',\n});\n\nfunction OrganizationLookup({\n  id,\n  helperTextInvalid,\n  isValid,\n  onBlur,\n  onChange,\n  required,\n  value,\n  history,\n  autoPopulate,\n  isDisabled,\n  helperText,\n  validate,\n  fieldName,\n}) {\n  const autoPopulateLookup = useAutoPopulateLookup(onChange);\n\n  const {\n    result: { itemCount, organizations, relatedSearchableKeys, searchableKeys },\n    error: contentError,\n    request: fetchOrganizations,\n  } = useRequest(\n    useCallback(async () => {\n      const params = parseQueryString(QS_CONFIG, history.location.search);\n      const [response, actionsResponse] = await Promise.all([\n        OrganizationsAPI.read(params),\n        OrganizationsAPI.readOptions(),\n      ]);\n\n      if (autoPopulate) {\n        autoPopulateLookup(response.data.results);\n      }\n\n      return {\n        organizations: response.data.results,\n        itemCount: response.data.count,\n        relatedSearchableKeys: (\n          actionsResponse?.data?.related_search_fields || []\n        ).map((val) => val.slice(0, -8)),\n        searchableKeys: getSearchableKeys(actionsResponse.data.actions?.GET),\n      };\n    }, [autoPopulate, autoPopulateLookup, history.location.search]),\n    {\n      organizations: [],\n      itemCount: 0,\n      relatedSearchableKeys: [],\n      searchableKeys: [],\n    }\n  );\n\n  const checkOrganizationName = useCallback(\n    async (name) => {\n      if (!name) {\n        onChange(null);\n        return;\n      }\n\n      try {\n        const {\n          data: { results: nameMatchResults, count: nameMatchCount },\n        } = await OrganizationsAPI.read({ name });\n        onChange(nameMatchCount ? nameMatchResults[0] : null);\n      } catch {\n        onChange(null);\n      }\n    },\n    [onChange]\n  );\n\n  useEffect(() => {\n    fetchOrganizations();\n  }, [fetchOrganizations]);\n\n  return (\n    <FormGroup\n      fieldId={id}\n      helperTextInvalid={helperTextInvalid}\n      isRequired={required}\n      validated={isValid ? 'default' : 'error'}\n      label={t`Organization`}\n      helperText={helperText}\n    >\n      <Lookup\n        isDisabled={isDisabled}\n        id={id}\n        header={t`Organization`}\n        value={value}\n        onBlur={onBlur}\n        onChange={onChange}\n        onDebounce={checkOrganizationName}\n        onUpdate={fetchOrganizations}\n        fieldName={fieldName}\n        validate={validate}\n        qsConfig={QS_CONFIG}\n        required={required}\n        sortedColumnKey=\"name\"\n        renderOptionsList={({ state, dispatch, canDelete }) => (\n          <OptionsList\n            value={state.selectedItems}\n            options={organizations}\n            optionCount={itemCount}\n            multiple={state.multiple}\n            header={t`Organization`}\n            name=\"organization\"\n            qsConfig={QS_CONFIG}\n            searchColumns={[\n              {\n                name: t`Name`,\n                key: 'name__icontains',\n                isDefault: true,\n              },\n              {\n                name: t`Created By (Username)`,\n                key: 'created_by__username__icontains',\n              },\n              {\n                name: t`Modified By (Username)`,\n                key: 'modified_by__username__icontains',\n              },\n            ]}\n            sortColumns={[\n              {\n                name: t`Name`,\n                key: 'name',\n              },\n            ]}\n            searchableKeys={searchableKeys}\n            relatedSearchableKeys={relatedSearchableKeys}\n            readOnly={!canDelete}\n            selectItem={(item) => dispatch({ type: 'SELECT_ITEM', item })}\n            deselectItem={(item) => dispatch({ type: 'DESELECT_ITEM', item })}\n          />\n        )}\n      />\n      <LookupErrorMessage error={contentError} />\n    </FormGroup>\n  );\n}\n\nOrganizationLookup.propTypes = {\n  id: string,\n  helperTextInvalid: node,\n  isValid: bool,\n  onBlur: func,\n  onChange: func.isRequired,\n  required: bool,\n  value: Organization,\n  autoPopulate: bool,\n  isDisabled: bool,\n  validate: func,\n  fieldName: string,\n};\n\nOrganizationLookup.defaultProps = {\n  id: 'organization',\n  helperTextInvalid: '',\n  isValid: true,\n  onBlur: () => {},\n  required: false,\n  value: null,\n  autoPopulate: false,\n  isDisabled: false,\n  validate: () => undefined,\n  fieldName: 'organization',\n};\n\nexport { OrganizationLookup as _OrganizationLookup };\nexport default withRouter(OrganizationLookup);\n"]},"metadata":{},"sourceType":"module"}