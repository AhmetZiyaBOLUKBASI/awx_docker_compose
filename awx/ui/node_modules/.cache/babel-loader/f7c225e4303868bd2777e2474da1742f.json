{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import React,{useCallback}from'react';import{useRouteMatch}from'react-router-dom';import{Formik,useField,useFormikContext}from'formik';import{Form,FormGroup}from'@patternfly/react-core';import{required}from'util/validators';import FormField,{FormSubmitError}from'components/FormField';import{FormColumnLayout}from'components/FormLayout';import FormActionGroup from'components/FormActionGroup/FormActionGroup';import OrganizationLookup from'components/Lookup/OrganizationLookup';import AnsibleSelect from'components/AnsibleSelect';import Popover from'components/Popover';import applicationHelpTextStrings from'./Application.helptext';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ApplicationFormFields(_ref){var application=_ref.application,authorizationOptions=_ref.authorizationOptions,clientTypeOptions=_ref.clientTypeOptions;var match=useRouteMatch();var _useFormikContext=useFormikContext(),setFieldValue=_useFormikContext.setFieldValue,setFieldTouched=_useFormikContext.setFieldTouched;var _useField=useField('organization'),_useField2=_slicedToArray(_useField,3),organizationField=_useField2[0],organizationMeta=_useField2[1],organizationHelpers=_useField2[2];var _useField3=useField({name:'authorization_grant_type',validate:required(null)}),_useField4=_slicedToArray(_useField3,3),authorizationTypeField=_useField4[0],authorizationTypeMeta=_useField4[1],authorizationTypeHelpers=_useField4[2];var _useField5=useField({name:'client_type',validate:required(null)}),_useField6=_slicedToArray(_useField5,3),clientTypeField=_useField6[0],clientTypeMeta=_useField6[1],clientTypeHelpers=_useField6[2];var handleOrganizationUpdate=useCallback(function(value){setFieldValue('organization',value);setFieldTouched('organization',true,false);},[setFieldValue,setFieldTouched]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FormField,{id:\"name\",label:/*i18n*/i18n._(\"Name\"),name:\"name\",type:\"text\",validate:required(null),isRequired:true}),/*#__PURE__*/_jsx(FormField,{id:\"description\",label:/*i18n*/i18n._(\"Description\"),name:\"description\",type:\"text\"}),/*#__PURE__*/_jsx(OrganizationLookup,{helperTextInvalid:organizationMeta.error,isValid:!organizationMeta.touched||!organizationMeta.error,onBlur:function onBlur(){return organizationHelpers.setTouched();},onChange:handleOrganizationUpdate,value:organizationField.value,required:true,autoPopulate:!(application!==null&&application!==void 0&&application.id),validate:required(null)}),/*#__PURE__*/_jsx(FormGroup,{fieldId:\"authType\",helperTextInvalid:authorizationTypeMeta.error,validated:!authorizationTypeMeta.touched||!authorizationTypeMeta.error?'default':'error',isRequired:true,label:/*i18n*/i18n._(\"Authorization grant type\"),labelIcon:/*#__PURE__*/_jsx(Popover,{content:applicationHelpTextStrings.authorizationGrantType}),children:/*#__PURE__*/_jsx(AnsibleSelect,_objectSpread(_objectSpread({},authorizationTypeField),{},{isValid:!authorizationTypeMeta.touched||!authorizationTypeMeta.error,isDisabled:match.url.endsWith('edit'),id:\"authType\",data:[{label:'',key:1,value:''}].concat(_toConsumableArray(authorizationOptions)),onChange:function onChange(event,value){authorizationTypeHelpers.setValue(value);}}))}),/*#__PURE__*/_jsx(FormField,{id:\"redirect_uris\",label:/*i18n*/i18n._(\"Redirect URIs\"),name:\"redirect_uris\",type:\"text\",isRequired:Boolean(authorizationTypeField.value==='authorization-code'),validate:authorizationTypeField.value==='authorization-code'?required(null):null,tooltip:applicationHelpTextStrings.redirectURIS}),/*#__PURE__*/_jsx(FormGroup,{fieldId:\"clientType\",helperTextInvalid:clientTypeMeta.error,validated:!clientTypeMeta.touched||!clientTypeMeta.error?'default':'error',isRequired:true,label:/*i18n*/i18n._(\"Client type\"),labelIcon:/*#__PURE__*/_jsx(Popover,{content:applicationHelpTextStrings.clientType}),children:/*#__PURE__*/_jsx(AnsibleSelect,_objectSpread(_objectSpread({},clientTypeField),{},{isValid:!clientTypeMeta.touched||!clientTypeMeta.error,id:\"clientType\",data:[{label:'',key:1,value:''}].concat(_toConsumableArray(clientTypeOptions)),onChange:function onChange(event,value){clientTypeHelpers.setValue(value);}}))})]});}function ApplicationForm(_ref2){var _application$summary_;var onCancel=_ref2.onCancel,_onSubmit=_ref2.onSubmit,submitError=_ref2.submitError,application=_ref2.application,authorizationOptions=_ref2.authorizationOptions,clientTypeOptions=_ref2.clientTypeOptions;var initialValues={name:(application===null||application===void 0?void 0:application.name)||'',description:(application===null||application===void 0?void 0:application.description)||'',organization:(application===null||application===void 0?void 0:(_application$summary_=application.summary_fields)===null||_application$summary_===void 0?void 0:_application$summary_.organization)||null,authorization_grant_type:(application===null||application===void 0?void 0:application.authorization_grant_type)||'',redirect_uris:(application===null||application===void 0?void 0:application.redirect_uris)||'',client_type:(application===null||application===void 0?void 0:application.client_type)||''};return/*#__PURE__*/_jsx(Formik,{initialValues:initialValues,onSubmit:function onSubmit(values){return _onSubmit(values);},children:function children(formik){return/*#__PURE__*/_jsx(Form,{autoComplete:\"off\",onSubmit:formik.handleSubmit,children:/*#__PURE__*/_jsxs(FormColumnLayout,{children:[/*#__PURE__*/_jsx(ApplicationFormFields,{formik:formik,application:application,authorizationOptions:authorizationOptions,clientTypeOptions:clientTypeOptions}),submitError&&/*#__PURE__*/_jsx(FormSubmitError,{error:submitError}),/*#__PURE__*/_jsx(FormActionGroup,{onCancel:onCancel,onSubmit:formik.handleSubmit})]})});}});}export default ApplicationForm;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Application/shared/ApplicationForm.js"],"names":["React","useCallback","useRouteMatch","Formik","useField","useFormikContext","Form","FormGroup","required","FormField","FormSubmitError","FormColumnLayout","FormActionGroup","OrganizationLookup","AnsibleSelect","Popover","applicationHelpTextStrings","ApplicationFormFields","application","authorizationOptions","clientTypeOptions","match","setFieldValue","setFieldTouched","organizationField","organizationMeta","organizationHelpers","name","validate","authorizationTypeField","authorizationTypeMeta","authorizationTypeHelpers","clientTypeField","clientTypeMeta","clientTypeHelpers","handleOrganizationUpdate","value","error","touched","setTouched","id","authorizationGrantType","url","endsWith","label","key","event","setValue","Boolean","redirectURIS","clientType","ApplicationForm","onCancel","onSubmit","submitError","initialValues","description","organization","summary_fields","authorization_grant_type","redirect_uris","client_type","values","formik","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\n\nimport { t } from '@lingui/macro';\nimport { Formik, useField, useFormikContext } from 'formik';\nimport { Form, FormGroup } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nimport { required } from 'util/validators';\nimport FormField, { FormSubmitError } from 'components/FormField';\nimport { FormColumnLayout } from 'components/FormLayout';\nimport FormActionGroup from 'components/FormActionGroup/FormActionGroup';\nimport OrganizationLookup from 'components/Lookup/OrganizationLookup';\nimport AnsibleSelect from 'components/AnsibleSelect';\nimport Popover from 'components/Popover';\nimport applicationHelpTextStrings from './Application.helptext';\n\nfunction ApplicationFormFields({\n  application,\n  authorizationOptions,\n  clientTypeOptions,\n}) {\n  const match = useRouteMatch();\n  const { setFieldValue, setFieldTouched } = useFormikContext();\n  const [organizationField, organizationMeta, organizationHelpers] =\n    useField('organization');\n  const [\n    authorizationTypeField,\n    authorizationTypeMeta,\n    authorizationTypeHelpers,\n  ] = useField({\n    name: 'authorization_grant_type',\n    validate: required(null),\n  });\n\n  const [clientTypeField, clientTypeMeta, clientTypeHelpers] = useField({\n    name: 'client_type',\n    validate: required(null),\n  });\n\n  const handleOrganizationUpdate = useCallback(\n    (value) => {\n      setFieldValue('organization', value);\n      setFieldTouched('organization', true, false);\n    },\n    [setFieldValue, setFieldTouched]\n  );\n\n  return (\n    <>\n      <FormField\n        id=\"name\"\n        label={t`Name`}\n        name=\"name\"\n        type=\"text\"\n        validate={required(null)}\n        isRequired\n      />\n      <FormField\n        id=\"description\"\n        label={t`Description`}\n        name=\"description\"\n        type=\"text\"\n      />\n      <OrganizationLookup\n        helperTextInvalid={organizationMeta.error}\n        isValid={!organizationMeta.touched || !organizationMeta.error}\n        onBlur={() => organizationHelpers.setTouched()}\n        onChange={handleOrganizationUpdate}\n        value={organizationField.value}\n        required\n        autoPopulate={!application?.id}\n        validate={required(null)}\n      />\n      <FormGroup\n        fieldId=\"authType\"\n        helperTextInvalid={authorizationTypeMeta.error}\n        validated={\n          !authorizationTypeMeta.touched || !authorizationTypeMeta.error\n            ? 'default'\n            : 'error'\n        }\n        isRequired\n        label={t`Authorization grant type`}\n        labelIcon={\n          <Popover\n            content={applicationHelpTextStrings.authorizationGrantType}\n          />\n        }\n      >\n        <AnsibleSelect\n          {...authorizationTypeField}\n          isValid={\n            !authorizationTypeMeta.touched || !authorizationTypeMeta.error\n          }\n          isDisabled={match.url.endsWith('edit')}\n          id=\"authType\"\n          data={[{ label: '', key: 1, value: '' }, ...authorizationOptions]}\n          onChange={(event, value) => {\n            authorizationTypeHelpers.setValue(value);\n          }}\n        />\n      </FormGroup>\n      <FormField\n        id=\"redirect_uris\"\n        label={t`Redirect URIs`}\n        name=\"redirect_uris\"\n        type=\"text\"\n        isRequired={Boolean(\n          authorizationTypeField.value === 'authorization-code'\n        )}\n        validate={\n          authorizationTypeField.value === 'authorization-code'\n            ? required(null)\n            : null\n        }\n        tooltip={applicationHelpTextStrings.redirectURIS}\n      />\n      <FormGroup\n        fieldId=\"clientType\"\n        helperTextInvalid={clientTypeMeta.error}\n        validated={\n          !clientTypeMeta.touched || !clientTypeMeta.error ? 'default' : 'error'\n        }\n        isRequired\n        label={t`Client type`}\n        labelIcon={<Popover content={applicationHelpTextStrings.clientType} />}\n      >\n        <AnsibleSelect\n          {...clientTypeField}\n          isValid={!clientTypeMeta.touched || !clientTypeMeta.error}\n          id=\"clientType\"\n          data={[{ label: '', key: 1, value: '' }, ...clientTypeOptions]}\n          onChange={(event, value) => {\n            clientTypeHelpers.setValue(value);\n          }}\n        />\n      </FormGroup>\n    </>\n  );\n}\nfunction ApplicationForm({\n  onCancel,\n  onSubmit,\n  submitError,\n  application,\n  authorizationOptions,\n  clientTypeOptions,\n}) {\n  const initialValues = {\n    name: application?.name || '',\n    description: application?.description || '',\n    organization: application?.summary_fields?.organization || null,\n    authorization_grant_type: application?.authorization_grant_type || '',\n    redirect_uris: application?.redirect_uris || '',\n    client_type: application?.client_type || '',\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values) => onSubmit(values)}\n    >\n      {(formik) => (\n        <Form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n          <FormColumnLayout>\n            <ApplicationFormFields\n              formik={formik}\n              application={application}\n              authorizationOptions={authorizationOptions}\n              clientTypeOptions={clientTypeOptions}\n            />\n            {submitError && <FormSubmitError error={submitError} />}\n            <FormActionGroup\n              onCancel={onCancel}\n              onSubmit={formik.handleSubmit}\n            />\n          </FormColumnLayout>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nApplicationForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  authorizationOptions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  clientTypeOptions: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default ApplicationForm;\n"]},"metadata":{},"sourceType":"module"}