{"ast":null,"code":"import * as React from 'react';\nexport var DualListSelectorContext = React.createContext({\n  isTree: false\n});\nexport var DualListSelectorListContext = React.createContext({});\nexport var DualListSelectorPaneContext = React.createContext({\n  isChosen: false\n});","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/DualListSelector/DualListSelectorContext.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAM,uBAAuB,GAAG,KAAK,CAAC,aAAN,CAEpC;AAAE,EAAA,MAAM,EAAE;AAAV,CAFoC,CAAhC;AAIP,OAAO,IAAM,2BAA2B,GAAG,KAAK,CAAC,aAAN,CAWxC,EAXwC,CAApC;AAaP,OAAO,IAAM,2BAA2B,GAAG,KAAK,CAAC,aAAN,CAExC;AAAE,EAAA,QAAQ,EAAE;AAAZ,CAFwC,CAApC","sourcesContent":["import * as React from 'react';\n\nexport const DualListSelectorContext = React.createContext<{\n  isTree?: boolean;\n}>({ isTree: false });\n\nexport const DualListSelectorListContext = React.createContext<{\n  setFocusedOption?: (id: string) => void;\n  isTree?: boolean;\n  ariaLabelledBy?: string;\n  focusedOption?: string;\n  displayOption?: (option: React.ReactNode) => boolean;\n  selectedOptions?: string[] | number[];\n  id?: string;\n  onOptionSelect?: (e: React.MouseEvent | React.ChangeEvent | React.KeyboardEvent, index: number, id: string) => void;\n  options?: React.ReactNode[];\n  isDisabled?: boolean;\n}>({});\n\nexport const DualListSelectorPaneContext = React.createContext<{\n  isChosen: boolean;\n}>({ isChosen: false });\n"]},"metadata":{},"sourceType":"module"}