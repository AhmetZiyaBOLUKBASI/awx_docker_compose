{"ast":null,"code":"import{i18n}from\"@lingui/core\";import React from'react';import{Button}from'@patternfly/react-core';import{Tr,Td}from'@patternfly/react-table';import{Link}from'react-router-dom';import{PencilAltIcon}from'@patternfly/react-icons';import{ActionsTd,ActionItem,TdBreakWord}from'components/PaginatedTable';import{formatDateString}from'util/dates';import{Application}from'types';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ApplicationListItem(_ref){var application=_ref.application,isSelected=_ref.isSelected,onSelect=_ref.onSelect,detailUrl=_ref.detailUrl,rowIndex=_ref.rowIndex;var labelId=\"check-action-\".concat(application.id);return/*#__PURE__*/_jsxs(Tr,{id:\"application-row-\".concat(application.id),ouiaId:\"application-row-\".concat(application.id),children:[/*#__PURE__*/_jsx(Td,{select:{rowIndex:rowIndex,isSelected:isSelected,onSelect:onSelect},dataLabel:/*i18n*/i18n._(\"Selected\")}),/*#__PURE__*/_jsx(TdBreakWord,{id:labelId,dataLabel:/*i18n*/i18n._(\"Name\"),children:/*#__PURE__*/_jsx(Link,{to:\"\".concat(detailUrl),children:/*#__PURE__*/_jsx(\"b\",{children:application.name})})}),/*#__PURE__*/_jsx(TdBreakWord,{dataLabel:/*i18n*/i18n._(\"Organization\"),children:/*#__PURE__*/_jsx(Link,{to:\"/organizations/\".concat(application.summary_fields.organization.id),children:/*#__PURE__*/_jsx(\"b\",{children:application.summary_fields.organization.name})})}),/*#__PURE__*/_jsx(Td,{dataLabel:/*i18n*/i18n._(\"Last Modified\"),children:formatDateString(application.modified)}),/*#__PURE__*/_jsx(ActionsTd,{dataLabel:/*i18n*/i18n._(\"Actions\"),children:/*#__PURE__*/_jsx(ActionItem,{visible:application.summary_fields.user_capabilities.edit,tooltip:/*i18n*/i18n._(\"Edit application\"),children:/*#__PURE__*/_jsx(Button,{ouiaId:\"\".concat(application.id,\"-edit-button\"),\"aria-label\":/*i18n*/i18n._(\"Edit application\"),variant:\"plain\",component:Link,to:\"/applications/\".concat(application.id,\"/edit\"),children:/*#__PURE__*/_jsx(PencilAltIcon,{})})})})]});}export default ApplicationListItem;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Application/ApplicationsList/ApplicationListItem.js"],"names":["React","Button","Tr","Td","Link","PencilAltIcon","ActionsTd","ActionItem","TdBreakWord","formatDateString","Application","ApplicationListItem","application","isSelected","onSelect","detailUrl","rowIndex","labelId","id","name","summary_fields","organization","modified","user_capabilities","edit"],"mappings":"+BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,MAAT,KAAuB,wBAAvB,CACA,OAASC,EAAT,CAAaC,EAAb,KAAuB,yBAAvB,CAEA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,aAAT,KAA8B,yBAA9B,CACA,OAASC,SAAT,CAAoBC,UAApB,CAAgCC,WAAhC,KAAmD,2BAAnD,CACA,OAASC,gBAAT,KAAiC,YAAjC,CACA,OAASC,WAAT,KAA4B,OAA5B,C,wFAEA,QAASC,CAAAA,mBAAT,MAMG,IALDC,CAAAA,WAKC,MALDA,WAKC,CAJDC,UAIC,MAJDA,UAIC,CAHDC,QAGC,MAHDA,QAGC,CAFDC,SAEC,MAFDA,SAEC,CADDC,QACC,MADDA,QACC,CACD,GAAMC,CAAAA,OAAO,wBAAmBL,WAAW,CAACM,EAA/B,CAAb,CACA,mBACE,MAAC,EAAD,EACE,EAAE,2BAAqBN,WAAW,CAACM,EAAjC,CADJ,CAEE,MAAM,2BAAqBN,WAAW,CAACM,EAAjC,CAFR,wBAIE,KAAC,EAAD,EACE,MAAM,CAAE,CACNF,QAAQ,CAARA,QADM,CAENH,UAAU,CAAVA,UAFM,CAGNC,QAAQ,CAARA,QAHM,CADV,CAME,SAAS,SAAE,kBANb,EAJF,cAYE,KAAC,WAAD,EAAa,EAAE,CAAEG,OAAjB,CAA0B,SAAS,SAAE,cAArC,uBACE,KAAC,IAAD,EAAM,EAAE,WAAKF,SAAL,CAAR,uBACE,mBAAIH,WAAW,CAACO,IAAhB,EADF,EADF,EAZF,cAiBE,KAAC,WAAD,EAAa,SAAS,SAAE,sBAAxB,uBACE,KAAC,IAAD,EACE,EAAE,0BAAoBP,WAAW,CAACQ,cAAZ,CAA2BC,YAA3B,CAAwCH,EAA5D,CADJ,uBAGE,mBAAIN,WAAW,CAACQ,cAAZ,CAA2BC,YAA3B,CAAwCF,IAA5C,EAHF,EADF,EAjBF,cAwBE,KAAC,EAAD,EAAI,SAAS,SAAE,uBAAf,UACGV,gBAAgB,CAACG,WAAW,CAACU,QAAb,CADnB,EAxBF,cA2BE,KAAC,SAAD,EAAW,SAAS,SAAE,iBAAtB,uBACE,KAAC,UAAD,EACE,OAAO,CAAEV,WAAW,CAACQ,cAAZ,CAA2BG,iBAA3B,CAA6CC,IADxD,CAEE,OAAO,SAAE,0BAFX,uBAIE,KAAC,MAAD,EACE,MAAM,WAAKZ,WAAW,CAACM,EAAjB,gBADR,CAEE,qBAAY,0BAFd,CAGE,OAAO,CAAC,OAHV,CAIE,SAAS,CAAEd,IAJb,CAKE,EAAE,yBAAmBQ,WAAW,CAACM,EAA/B,SALJ,uBAOE,KAAC,aAAD,IAPF,EAJF,EADF,EA3BF,GADF,CA8CD,CASD,cAAeP,CAAAA,mBAAf","sourcesContent":["import React from 'react';\nimport { string, bool, func } from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport { Tr, Td } from '@patternfly/react-table';\nimport { t } from '@lingui/macro';\nimport { Link } from 'react-router-dom';\nimport { PencilAltIcon } from '@patternfly/react-icons';\nimport { ActionsTd, ActionItem, TdBreakWord } from 'components/PaginatedTable';\nimport { formatDateString } from 'util/dates';\nimport { Application } from 'types';\n\nfunction ApplicationListItem({\n  application,\n  isSelected,\n  onSelect,\n  detailUrl,\n  rowIndex,\n}) {\n  const labelId = `check-action-${application.id}`;\n  return (\n    <Tr\n      id={`application-row-${application.id}`}\n      ouiaId={`application-row-${application.id}`}\n    >\n      <Td\n        select={{\n          rowIndex,\n          isSelected,\n          onSelect,\n        }}\n        dataLabel={t`Selected`}\n      />\n      <TdBreakWord id={labelId} dataLabel={t`Name`}>\n        <Link to={`${detailUrl}`}>\n          <b>{application.name}</b>\n        </Link>\n      </TdBreakWord>\n      <TdBreakWord dataLabel={t`Organization`}>\n        <Link\n          to={`/organizations/${application.summary_fields.organization.id}`}\n        >\n          <b>{application.summary_fields.organization.name}</b>\n        </Link>\n      </TdBreakWord>\n      <Td dataLabel={t`Last Modified`}>\n        {formatDateString(application.modified)}\n      </Td>\n      <ActionsTd dataLabel={t`Actions`}>\n        <ActionItem\n          visible={application.summary_fields.user_capabilities.edit}\n          tooltip={t`Edit application`}\n        >\n          <Button\n            ouiaId={`${application.id}-edit-button`}\n            aria-label={t`Edit application`}\n            variant=\"plain\"\n            component={Link}\n            to={`/applications/${application.id}/edit`}\n          >\n            <PencilAltIcon />\n          </Button>\n        </ActionItem>\n      </ActionsTd>\n    </Tr>\n  );\n}\n\nApplicationListItem.propTypes = {\n  application: Application.isRequired,\n  detailUrl: string.isRequired,\n  isSelected: bool.isRequired,\n  onSelect: func.isRequired,\n};\n\nexport default ApplicationListItem;\n"]},"metadata":{},"sourceType":"module"}