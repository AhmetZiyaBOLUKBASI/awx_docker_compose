{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\n\nvar TheadBase = function TheadBase(_a) {\n  var children = _a.children,\n      className = _a.className,\n      _a$noWrap = _a.noWrap,\n      noWrap = _a$noWrap === void 0 ? false : _a$noWrap,\n      innerRef = _a.innerRef,\n      hasNestedHeader = _a.hasNestedHeader,\n      props = __rest(_a, [\"children\", \"className\", \"noWrap\", \"innerRef\", \"hasNestedHeader\"]);\n\n  return React.createElement(\"thead\", Object.assign({\n    className: css(className, noWrap && styles.modifiers.nowrap, hasNestedHeader && styles.modifiers.nestedColumnHeader),\n    ref: innerRef\n  }, props), children);\n};\n\nexport var Thead = React.forwardRef(function (props, ref) {\n  return React.createElement(TheadBase, Object.assign({}, props, {\n    innerRef: ref\n  }));\n});\nThead.displayName = 'Thead';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/TableComposable/Thead.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,qDAAnB;;AAeA,IAAM,SAAS,GAAwC,SAAjD,SAAiD,CAAC,EAAD,EAOtC;AAPuC,MACtD,QADsD,GAKvC,EALuC,CACtD,QADsD;AAAA,MAEtD,SAFsD,GAKvC,EALuC,CAEtD,SAFsD;AAAA,kBAKvC,EALuC,CAGtD,MAHsD;AAAA,MAGtD,MAHsD,0BAG7C,KAH6C;AAAA,MAItD,QAJsD,GAKvC,EALuC,CAItD,QAJsD;AAAA,MAKtD,eALsD,GAKvC,EALuC,CAKtD,eALsD;AAAA,MAMnD,KANmD,GAM9C,MAAA,CAAA,EAAA,EAN8C,CAAA,UAAA,EAAA,WAAA,EAAA,QAAA,EAAA,UAAA,EAAA,iBAAA,CAM9C,CAN8C;;AAOtC,SAChB,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACE,IAAA,SAAS,EAAE,GAAG,CACZ,SADY,EAEZ,MAAM,IAAI,MAAM,CAAC,SAAP,CAAiB,MAFf,EAGZ,eAAe,IAAI,MAAM,CAAC,SAAP,CAAiB,kBAHxB,CADhB;AAME,IAAA,GAAG,EAAE;AANP,GAAA,EAOM,KAPN,CAAA,EASG,QATH,CADgB;AAYjB,CAnBD;;AAqBA,OAAO,IAAM,KAAK,GAAG,KAAK,CAAC,UAAN,CAAiB,UAAC,KAAD,EAAoB,GAApB;AAAA,SACpC,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,IAAA,QAAQ,EAAE;AAAZ,GAAV,CAAV,CADoC;AAAA,CAAjB,CAAd;AAGP,KAAK,CAAC,WAAN,GAAoB,OAApB","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\n\nexport interface TheadProps extends React.HTMLProps<HTMLTableSectionElement> {\n  /** Content rendered inside the <thead> row group */\n  children?: React.ReactNode;\n  /** Additional classes added to the <thead> element */\n  className?: string;\n  /** Won't wrap the table head if true */\n  noWrap?: boolean;\n  /** Forwarded ref */\n  innerRef?: React.Ref<any>;\n  /** Indicates the <thead> contains a nested header */\n  hasNestedHeader?: boolean;\n}\n\nconst TheadBase: React.FunctionComponent<TheadProps> = ({\n  children,\n  className,\n  noWrap = false,\n  innerRef,\n  hasNestedHeader,\n  ...props\n}: TheadProps) => (\n  <thead\n    className={css(\n      className,\n      noWrap && styles.modifiers.nowrap,\n      hasNestedHeader && styles.modifiers.nestedColumnHeader\n    )}\n    ref={innerRef}\n    {...props}\n  >\n    {children}\n  </thead>\n);\n\nexport const Thead = React.forwardRef((props: TheadProps, ref: React.Ref<HTMLTableSectionElement>) => (\n  <TheadBase {...props} innerRef={ref} />\n));\nThead.displayName = 'Thead';\n"]},"metadata":{},"sourceType":"module"}