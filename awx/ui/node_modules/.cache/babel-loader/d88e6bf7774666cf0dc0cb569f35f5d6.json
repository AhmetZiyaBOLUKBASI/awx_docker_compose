{"ast":null,"code":"/**\n * columns-are-equal.ts\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport isEqualWith from 'lodash/isEqualWith';\n/**\n * @param {ColumnsType} oldColumns - previous columns\n * @param {ColumnsType} newColumns - new columns\n */\n\nexport function columnsAreEqual(oldColumns, newColumns) {\n  return isEqualWith(oldColumns, newColumns, function (a, b) {\n    if (typeof a === 'function' && typeof b === 'function') {\n      return a === b;\n    }\n\n    return undefined;\n  });\n}","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/Table/base/columns-are-equal.ts"],"names":[],"mappings":"AAAA;;;;;AAKG;AACH,OAAO,WAAP,MAAwB,oBAAxB;AAGA;;;AAGG;;AACH,OAAM,SAAU,eAAV,CAA0B,UAA1B,EAAmD,UAAnD,EAA0E;AAC9E,SAAO,WAAW,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAC,CAAD,EAAI,CAAJ,EAAS;AAClD,QAAI,OAAO,CAAP,KAAa,UAAb,IAA2B,OAAO,CAAP,KAAa,UAA5C,EAAwD;AACtD,aAAO,CAAC,KAAK,CAAb;AACD;;AAED,WAAO,SAAP;AACD,GANiB,CAAlB;AAOD","sourcesContent":["/**\n * columns-are-equal.ts\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport isEqualWith from 'lodash/isEqualWith';\nimport { ColumnsType } from './types';\n\n/**\n * @param {ColumnsType} oldColumns - previous columns\n * @param {ColumnsType} newColumns - new columns\n */\nexport function columnsAreEqual(oldColumns: ColumnsType, newColumns: ColumnsType) {\n  return isEqualWith(oldColumns, newColumns, (a, b) => {\n    if (typeof a === 'function' && typeof b === 'function') {\n      return a === b;\n    }\n\n    return undefined;\n  });\n}\n"]},"metadata":{},"sourceType":"module"}