{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import React,{useCallback}from'react';import{Formik,useField,useFormikContext}from'formik';import{Form,FormGroup}from'@patternfly/react-core';import AnsibleSelect from'components/AnsibleSelect';import FormActionGroup from'components/FormActionGroup/FormActionGroup';import FormField,{FormSubmitError}from'components/FormField';import ApplicationLookup from'components/Lookup/ApplicationLookup';import Popover from'components/Popover';import{required}from'util/validators';import{FormColumnLayout}from'components/FormLayout';import helptext from'./User.helptext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function UserTokenFormFields(){var _useFormikContext=useFormikContext(),setFieldValue=_useFormikContext.setFieldValue,setFieldTouched=_useFormikContext.setFieldTouched;var _useField=useField('application'),_useField2=_slicedToArray(_useField,2),applicationField=_useField2[0],applicationMeta=_useField2[1];var _useField3=useField({name:'scope',validate:required(/*i18n*/i18n._(\"Please enter a value.\"))}),_useField4=_slicedToArray(_useField3,3),scopeField=_useField4[0],scopeMeta=_useField4[1],scopeHelpers=_useField4[2];var handleApplicationUpdate=useCallback(function(value){setFieldValue('application',value);setFieldTouched('application',true,false);},[setFieldValue,setFieldTouched]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FormGroup,{fieldId:\"application-lookup\",name:\"application\",validated:!applicationMeta.touched||!applicationMeta.error?'default':'error',helperTextInvalid:applicationMeta.error,children:/*#__PURE__*/_jsx(ApplicationLookup,{value:applicationField.value,onChange:handleApplicationUpdate,label:/*#__PURE__*/_jsxs(\"span\",{children:[/*i18n*/i18n._(\"Application\"),/*#__PURE__*/_jsx(Popover,{content:helptext.application})]}),touched:applicationMeta.touched})}),/*#__PURE__*/_jsx(FormField,{id:\"token-description\",name:\"description\",type:\"text\",label:/*i18n*/i18n._(\"Description\")}),/*#__PURE__*/_jsx(FormGroup,{name:\"scope\",fieldId:\"token-scope\",helperTextInvalid:scopeMeta.error,isRequired:true,validated:!scopeMeta.touched||!scopeMeta.error?'default':'error',label:/*i18n*/i18n._(\"Scope\"),labelIcon:/*#__PURE__*/_jsx(Popover,{content:helptext.scope}),children:/*#__PURE__*/_jsx(AnsibleSelect,_objectSpread(_objectSpread({},scopeField),{},{id:\"token-scope\",data:[{key:'default',label:'',value:''},{key:'read',value:'read',label:/*i18n*/i18n._(\"Read\")},{key:'write',value:'write',label:/*i18n*/i18n._(\"Write\")}],onChange:function onChange(event,value){scopeHelpers.setValue(value);}}))})]});}function UserTokenForm(_ref){var handleCancel=_ref.handleCancel,handleSubmit=_ref.handleSubmit,submitError=_ref.submitError,_ref$token=_ref.token,token=_ref$token===void 0?{}:_ref$token;return/*#__PURE__*/_jsx(Formik,{initialValues:{description:token.description||'',application:token.application||null,scope:token.scope||''},onSubmit:handleSubmit,children:function children(formik){return/*#__PURE__*/_jsx(Form,{autoComplete:\"off\",onSubmit:formik.handleSubmit,children:/*#__PURE__*/_jsxs(FormColumnLayout,{children:[/*#__PURE__*/_jsx(UserTokenFormFields,{}),submitError&&/*#__PURE__*/_jsx(FormSubmitError,{error:submitError}),/*#__PURE__*/_jsx(FormActionGroup,{onCancel:handleCancel,onSubmit:function onSubmit(){formik.handleSubmit();}})]})});}});}export default UserTokenForm;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/User/shared/UserTokenForm.js"],"names":["React","useCallback","Formik","useField","useFormikContext","Form","FormGroup","AnsibleSelect","FormActionGroup","FormField","FormSubmitError","ApplicationLookup","Popover","required","FormColumnLayout","helptext","UserTokenFormFields","setFieldValue","setFieldTouched","applicationField","applicationMeta","name","validate","scopeField","scopeMeta","scopeHelpers","handleApplicationUpdate","value","touched","error","application","scope","key","label","event","setValue","UserTokenForm","handleCancel","handleSubmit","submitError","token","description","formik"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport { t } from '@lingui/macro';\nimport { Formik, useField, useFormikContext } from 'formik';\nimport { Form, FormGroup } from '@patternfly/react-core';\nimport AnsibleSelect from 'components/AnsibleSelect';\nimport FormActionGroup from 'components/FormActionGroup/FormActionGroup';\nimport FormField, { FormSubmitError } from 'components/FormField';\nimport ApplicationLookup from 'components/Lookup/ApplicationLookup';\nimport Popover from 'components/Popover';\nimport { required } from 'util/validators';\nimport { FormColumnLayout } from 'components/FormLayout';\nimport helptext from './User.helptext';\n\nfunction UserTokenFormFields() {\n  const { setFieldValue, setFieldTouched } = useFormikContext();\n  const [applicationField, applicationMeta] = useField('application');\n\n  const [scopeField, scopeMeta, scopeHelpers] = useField({\n    name: 'scope',\n    validate: required(t`Please enter a value.`),\n  });\n\n  const handleApplicationUpdate = useCallback(\n    (value) => {\n      setFieldValue('application', value);\n      setFieldTouched('application', true, false);\n    },\n    [setFieldValue, setFieldTouched]\n  );\n\n  return (\n    <>\n      <FormGroup\n        fieldId=\"application-lookup\"\n        name=\"application\"\n        validated={\n          !applicationMeta.touched || !applicationMeta.error\n            ? 'default'\n            : 'error'\n        }\n        helperTextInvalid={applicationMeta.error}\n      >\n        <ApplicationLookup\n          value={applicationField.value}\n          onChange={handleApplicationUpdate}\n          label={\n            <span>\n              {t`Application`}\n              <Popover content={helptext.application} />\n            </span>\n          }\n          touched={applicationMeta.touched}\n        />\n      </FormGroup>\n      <FormField\n        id=\"token-description\"\n        name=\"description\"\n        type=\"text\"\n        label={t`Description`}\n      />\n\n      <FormGroup\n        name=\"scope\"\n        fieldId=\"token-scope\"\n        helperTextInvalid={scopeMeta.error}\n        isRequired\n        validated={!scopeMeta.touched || !scopeMeta.error ? 'default' : 'error'}\n        label={t`Scope`}\n        labelIcon={<Popover content={helptext.scope} />}\n      >\n        <AnsibleSelect\n          {...scopeField}\n          id=\"token-scope\"\n          data={[\n            { key: 'default', label: '', value: '' },\n            { key: 'read', value: 'read', label: t`Read` },\n            { key: 'write', value: 'write', label: t`Write` },\n          ]}\n          onChange={(event, value) => {\n            scopeHelpers.setValue(value);\n          }}\n        />\n      </FormGroup>\n    </>\n  );\n}\n\nfunction UserTokenForm({\n  handleCancel,\n  handleSubmit,\n  submitError,\n  token = {},\n}) {\n  return (\n    <Formik\n      initialValues={{\n        description: token.description || '',\n        application: token.application || null,\n        scope: token.scope || '',\n      }}\n      onSubmit={handleSubmit}\n    >\n      {(formik) => (\n        <Form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n          <FormColumnLayout>\n            <UserTokenFormFields />\n            {submitError && <FormSubmitError error={submitError} />}\n            <FormActionGroup\n              onCancel={handleCancel}\n              onSubmit={() => {\n                formik.handleSubmit();\n              }}\n            />\n          </FormColumnLayout>\n        </Form>\n      )}\n    </Formik>\n  );\n}\nexport default UserTokenForm;\n"]},"metadata":{},"sourceType":"module"}