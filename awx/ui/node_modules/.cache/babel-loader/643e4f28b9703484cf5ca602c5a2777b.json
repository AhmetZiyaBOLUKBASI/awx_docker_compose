{"ast":null,"code":"import{i18n}from\"@lingui/core\";import React from'react';import{withFormik,useFormikContext}from'formik';import PropTypes from'prop-types';import Wizard from'../Wizard';import useAdHocLaunchSteps from'./useAdHocLaunchSteps';import{jsx as _jsx}from\"react/jsx-runtime\";function AdHocCommandsWizard(_ref){var onLaunch=_ref.onLaunch,moduleOptions=_ref.moduleOptions,onCloseWizard=_ref.onCloseWizard,credentialTypeId=_ref.credentialTypeId,organizationId=_ref.organizationId;var _useFormikContext=useFormikContext(),setFieldTouched=_useFormikContext.setFieldTouched,values=_useFormikContext.values;var _useAdHocLaunchSteps=useAdHocLaunchSteps(moduleOptions,organizationId,credentialTypeId),steps=_useAdHocLaunchSteps.steps,validateStep=_useAdHocLaunchSteps.validateStep,visitStep=_useAdHocLaunchSteps.visitStep,visitAllSteps=_useAdHocLaunchSteps.visitAllSteps;return/*#__PURE__*/_jsx(Wizard,{style:{overflow:'scroll'},isOpen:true,onNext:function onNext(nextStep,prevStep){if(nextStep.id==='preview'){visitAllSteps(setFieldTouched);}else{visitStep(prevStep.prevId,setFieldTouched);validateStep(nextStep.id);}},onClose:function onClose(){return onCloseWizard();},onSave:function onSave(){onLaunch(values);},onGoToStep:function onGoToStep(nextStep,prevStep){if(nextStep.id==='preview'){visitAllSteps(setFieldTouched);}else{visitStep(prevStep.prevId,setFieldTouched);validateStep(nextStep.id);}},steps:steps,title:/*i18n*/i18n._(\"Run command\"),backButtonText:/*i18n*/i18n._(\"Back\"),cancelButtonText:/*i18n*/i18n._(\"Cancel\"),nextButtonText:/*i18n*/i18n._(\"Next\")});}var FormikApp=withFormik({mapPropsToValues:function mapPropsToValues(_ref2){var adHocItems=_ref2.adHocItems;var adHocItemStrings=adHocItems.map(function(item){return item.name;}).join(', ');return{limit:adHocItemStrings||'all',credentials:[],module_args:'',verbosity:0,forks:0,diff_mode:false,become_enabled:'',module_name:'',extra_vars:'---',job_type:'run',credential_passwords:{},execution_environment:''};}})(AdHocCommandsWizard);FormikApp.propTypes={onLaunch:PropTypes.func.isRequired,moduleOptions:PropTypes.arrayOf(PropTypes.array).isRequired,onCloseWizard:PropTypes.func.isRequired,credentialTypeId:PropTypes.number.isRequired};export default FormikApp;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/AdHocCommands/AdHocCommandsWizard.js"],"names":["React","withFormik","useFormikContext","PropTypes","Wizard","useAdHocLaunchSteps","AdHocCommandsWizard","onLaunch","moduleOptions","onCloseWizard","credentialTypeId","organizationId","setFieldTouched","values","steps","validateStep","visitStep","visitAllSteps","overflow","nextStep","prevStep","id","prevId","FormikApp","mapPropsToValues","adHocItems","adHocItemStrings","map","item","name","join","limit","credentials","module_args","verbosity","forks","diff_mode","become_enabled","module_name","extra_vars","job_type","credential_passwords","execution_environment","propTypes","func","isRequired","arrayOf","array","number"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { t } from '@lingui/macro';\nimport { withFormik, useFormikContext } from 'formik';\nimport PropTypes from 'prop-types';\nimport Wizard from '../Wizard';\nimport useAdHocLaunchSteps from './useAdHocLaunchSteps';\n\nfunction AdHocCommandsWizard({\n  onLaunch,\n  moduleOptions,\n  onCloseWizard,\n  credentialTypeId,\n  organizationId,\n}) {\n  const { setFieldTouched, values } = useFormikContext();\n\n  const { steps, validateStep, visitStep, visitAllSteps } = useAdHocLaunchSteps(\n    moduleOptions,\n    organizationId,\n    credentialTypeId\n  );\n\n  return (\n    <Wizard\n      style={{ overflow: 'scroll' }}\n      isOpen\n      onNext={(nextStep, prevStep) => {\n        if (nextStep.id === 'preview') {\n          visitAllSteps(setFieldTouched);\n        } else {\n          visitStep(prevStep.prevId, setFieldTouched);\n          validateStep(nextStep.id);\n        }\n      }}\n      onClose={() => onCloseWizard()}\n      onSave={() => {\n        onLaunch(values);\n      }}\n      onGoToStep={(nextStep, prevStep) => {\n        if (nextStep.id === 'preview') {\n          visitAllSteps(setFieldTouched);\n        } else {\n          visitStep(prevStep.prevId, setFieldTouched);\n          validateStep(nextStep.id);\n        }\n      }}\n      steps={steps}\n      title={t`Run command`}\n      backButtonText={t`Back`}\n      cancelButtonText={t`Cancel`}\n      nextButtonText={t`Next`}\n    />\n  );\n}\n\nconst FormikApp = withFormik({\n  mapPropsToValues({ adHocItems }) {\n    const adHocItemStrings = adHocItems.map((item) => item.name).join(', ');\n    return {\n      limit: adHocItemStrings || 'all',\n      credentials: [],\n      module_args: '',\n      verbosity: 0,\n      forks: 0,\n      diff_mode: false,\n      become_enabled: '',\n      module_name: '',\n      extra_vars: '---',\n      job_type: 'run',\n      credential_passwords: {},\n      execution_environment: '',\n    };\n  },\n})(AdHocCommandsWizard);\n\nFormikApp.propTypes = {\n  onLaunch: PropTypes.func.isRequired,\n  moduleOptions: PropTypes.arrayOf(PropTypes.array).isRequired,\n  onCloseWizard: PropTypes.func.isRequired,\n  credentialTypeId: PropTypes.number.isRequired,\n};\nexport default FormikApp;\n"]},"metadata":{},"sourceType":"module"}