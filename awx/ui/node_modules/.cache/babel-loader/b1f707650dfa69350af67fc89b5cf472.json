{"ast":null,"code":"import _defineProperty from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from'react';import{useFormikContext}from'formik';import useCredentialPasswordsStep from'./useAdHocCredentialPasswordStep';import useAdHocDetailsStep from'./useAdHocDetailsStep';import useAdHocExecutionEnvironmentStep from'./useAdHocExecutionEnvironmentStep';import useAdHocCredentialStep from'./useAdHocCredentialStep';import useAdHocPreviewStep from'./useAdHocPreviewStep';function showCredentialPasswordsStep(credential){if(!(credential!==null&&credential!==void 0&&credential.inputs)){return false;}var inputs=credential.inputs;if((inputs===null||inputs===void 0?void 0:inputs.password)==='ASK'||(inputs===null||inputs===void 0?void 0:inputs.become_password)==='ASK'||(inputs===null||inputs===void 0?void 0:inputs.ssh_key_unlock)==='ASK'){return true;}return false;}export default function useAdHocLaunchSteps(moduleOptions,organizationId,credentialTypeId){var _useFormikContext=useFormikContext(),values=_useFormikContext.values,resetForm=_useFormikContext.resetForm,touched=_useFormikContext.touched;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),visited=_useState2[0],setVisited=_useState2[1];var steps=[useAdHocDetailsStep(visited,moduleOptions),useAdHocExecutionEnvironmentStep(organizationId),useAdHocCredentialStep(visited,credentialTypeId),useCredentialPasswordsStep(showCredentialPasswordsStep(values.credentials[0]),visited)];useEffect(function(){var _values$credentials$,_values$credentials$2,_values$credentials$3,_values$credentials$4;var newFormValues=_objectSpread({},values);if(!((_values$credentials$=values.credentials[0])!==null&&_values$credentials$!==void 0&&_values$credentials$.inputs)){return;}if((((_values$credentials$2=values.credentials[0].inputs)===null||_values$credentials$2===void 0?void 0:_values$credentials$2.password)||((_values$credentials$3=values.credentials[0].inputs)===null||_values$credentials$3===void 0?void 0:_values$credentials$3.become_password)||((_values$credentials$4=values.credentials[0].inputs)===null||_values$credentials$4===void 0?void 0:_values$credentials$4.ssh_key_unlock))==='ASK')newFormValues.credential_passwords={};Object.keys(values.credentials[0].inputs).forEach(function(inputKey){if(inputKey==='become_password'||inputKey==='ssh_key_unlock'){newFormValues.credential_passwords[inputKey]='';}if(inputKey==='password'){newFormValues.credential_passwords.ssh_password='';}});resetForm({values:newFormValues,touched:touched});// eslint-disable-next-line react-hooks/exhaustive-deps\n},[values.credentials.length]);var hasErrors=steps.some(function(step){return step.hasError;});steps.push(useAdHocPreviewStep(hasErrors));return{steps:steps.map(function(s){return s.step;}).filter(function(s){return s!=null;}),validateStep:function validateStep(stepId){return steps.find(function(s){return(s===null||s===void 0?void 0:s.step.id)===stepId;}).validate();},visitStep:function visitStep(prevStepId,setFieldTouched){setVisited(_objectSpread(_objectSpread({},visited),{},_defineProperty({},prevStepId,true)));steps.find(function(s){var _s$step;return(s===null||s===void 0?void 0:(_s$step=s.step)===null||_s$step===void 0?void 0:_s$step.id)===prevStepId;}).setTouched(setFieldTouched);},visitAllSteps:function visitAllSteps(setFieldTouched){setVisited({details:true,executionEnvironment:true,credentials:true,credentialPasswords:true,preview:true});steps.forEach(function(s){return s.setTouched(setFieldTouched);});}};}","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/AdHocCommands/useAdHocLaunchSteps.js"],"names":["useEffect","useState","useFormikContext","useCredentialPasswordsStep","useAdHocDetailsStep","useAdHocExecutionEnvironmentStep","useAdHocCredentialStep","useAdHocPreviewStep","showCredentialPasswordsStep","credential","inputs","password","become_password","ssh_key_unlock","useAdHocLaunchSteps","moduleOptions","organizationId","credentialTypeId","values","resetForm","touched","visited","setVisited","steps","credentials","newFormValues","credential_passwords","Object","keys","forEach","inputKey","ssh_password","length","hasErrors","some","step","hasError","push","map","s","filter","validateStep","stepId","find","id","validate","visitStep","prevStepId","setFieldTouched","setTouched","visitAllSteps","details","executionEnvironment","credentialPasswords","preview"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useFormikContext } from 'formik';\nimport useCredentialPasswordsStep from './useAdHocCredentialPasswordStep';\nimport useAdHocDetailsStep from './useAdHocDetailsStep';\nimport useAdHocExecutionEnvironmentStep from './useAdHocExecutionEnvironmentStep';\nimport useAdHocCredentialStep from './useAdHocCredentialStep';\nimport useAdHocPreviewStep from './useAdHocPreviewStep';\n\nfunction showCredentialPasswordsStep(credential) {\n  if (!credential?.inputs) {\n    return false;\n  }\n  const { inputs } = credential;\n  if (\n    inputs?.password === 'ASK' ||\n    inputs?.become_password === 'ASK' ||\n    inputs?.ssh_key_unlock === 'ASK'\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport default function useAdHocLaunchSteps(\n  moduleOptions,\n  organizationId,\n  credentialTypeId\n) {\n  const { values, resetForm, touched } = useFormikContext();\n\n  const [visited, setVisited] = useState({});\n  const steps = [\n    useAdHocDetailsStep(visited, moduleOptions),\n    useAdHocExecutionEnvironmentStep(organizationId),\n    useAdHocCredentialStep(visited, credentialTypeId),\n    useCredentialPasswordsStep(\n      showCredentialPasswordsStep(values.credentials[0]),\n      visited\n    ),\n  ];\n\n  useEffect(() => {\n    const newFormValues = { ...values };\n\n    if (!values.credentials[0]?.inputs) {\n      return;\n    }\n    if (\n      (values.credentials[0].inputs?.password ||\n        values.credentials[0].inputs?.become_password ||\n        values.credentials[0].inputs?.ssh_key_unlock) === 'ASK'\n    )\n      newFormValues.credential_passwords = {};\n    Object.keys(values.credentials[0].inputs).forEach((inputKey) => {\n      if (inputKey === 'become_password' || inputKey === 'ssh_key_unlock') {\n        newFormValues.credential_passwords[inputKey] = '';\n      }\n      if (inputKey === 'password') {\n        newFormValues.credential_passwords.ssh_password = '';\n      }\n    });\n    resetForm({\n      values: newFormValues,\n      touched,\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values.credentials.length]);\n\n  const hasErrors = steps.some((step) => step.hasError);\n\n  steps.push(useAdHocPreviewStep(hasErrors));\n  return {\n    steps: steps.map((s) => s.step).filter((s) => s != null),\n    validateStep: (stepId) =>\n      steps.find((s) => s?.step.id === stepId).validate(),\n    visitStep: (prevStepId, setFieldTouched) => {\n      setVisited({\n        ...visited,\n        [prevStepId]: true,\n      });\n      steps.find((s) => s?.step?.id === prevStepId).setTouched(setFieldTouched);\n    },\n    visitAllSteps: (setFieldTouched) => {\n      setVisited({\n        details: true,\n        executionEnvironment: true,\n        credentials: true,\n        credentialPasswords: true,\n        preview: true,\n      });\n      steps.forEach((s) => s.setTouched(setFieldTouched));\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}