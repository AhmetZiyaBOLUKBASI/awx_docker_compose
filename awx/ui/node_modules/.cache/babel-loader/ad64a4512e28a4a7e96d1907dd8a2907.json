{"ast":null,"code":"import _toConsumableArray from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n\n/** Joins args into a className string\n *\n * @param {any} args list of objects, string, or arrays to reduce\n */\nexport function css() {\n  // Adapted from https://github.com/JedWatson/classnames/blob/master/index.js\n  var classes = [];\n  var hasOwn = {}.hasOwnProperty;\n\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  args.filter(Boolean).forEach(function (arg) {\n    var argType = typeof arg;\n\n    if (argType === 'string' || argType === 'number') {\n      classes.push(arg);\n    } else if (Array.isArray(arg) && arg.length) {\n      var inner = css.apply(void 0, _toConsumableArray(arg));\n\n      if (inner) {\n        classes.push(inner);\n      }\n    } else if (argType === 'object') {\n      for (var key in arg) {\n        if (hasOwn.call(arg, key) && arg[key]) {\n          classes.push(key);\n        }\n      }\n    }\n  });\n  return classes.join(' ');\n}","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-styles/src/index.ts"],"names":[],"mappings":";;AAAA;;;AAGG;AACH,OAAM,SAAU,GAAV,GAA0B;AAC9B;AACA,MAAM,OAAO,GAAG,EAAhB;AACA,MAAM,MAAM,GAAG,GAAG,cAAlB;;AAH8B,oCAAT,IAAS;AAAT,IAAA,IAAS;AAAA;;AAK9B,EAAA,IAAI,CAAC,MAAL,CAAY,OAAZ,EAAqB,OAArB,CAA6B,UAAC,GAAD,EAAa;AACxC,QAAM,OAAO,GAAG,OAAO,GAAvB;;AAEA,QAAI,OAAO,KAAK,QAAZ,IAAwB,OAAO,KAAK,QAAxC,EAAkD;AAChD,MAAA,OAAO,CAAC,IAAR,CAAa,GAAb;AACD,KAFD,MAEO,IAAI,KAAK,CAAC,OAAN,CAAc,GAAd,KAAsB,GAAG,CAAC,MAA9B,EAAsC;AAC3C,UAAM,KAAK,GAAG,GAAG,MAAH,4BAAQ,GAAR,EAAd;;AACA,UAAI,KAAJ,EAAW;AACT,QAAA,OAAO,CAAC,IAAR,CAAa,KAAb;AACD;AACF,KALM,MAKA,IAAI,OAAO,KAAK,QAAhB,EAA0B;AAC/B,WAAK,IAAM,GAAX,IAAkB,GAAlB,EAAuB;AACrB,YAAI,MAAM,CAAC,IAAP,CAAY,GAAZ,EAAiB,GAAjB,KAAyB,GAAG,CAAC,GAAD,CAAhC,EAAuC;AACrC,UAAA,OAAO,CAAC,IAAR,CAAa,GAAb;AACD;AACF;AACF;AACF,GAjBD;AAmBA,SAAO,OAAO,CAAC,IAAR,CAAa,GAAb,CAAP;AACD","sourcesContent":["/** Joins args into a className string\n *\n * @param {any} args list of objects, string, or arrays to reduce\n */\nexport function css(...args: any): string {\n  // Adapted from https://github.com/JedWatson/classnames/blob/master/index.js\n  const classes = [] as string[];\n  const hasOwn = {}.hasOwnProperty;\n\n  args.filter(Boolean).forEach((arg: any) => {\n    const argType = typeof arg;\n\n    if (argType === 'string' || argType === 'number') {\n      classes.push(arg);\n    } else if (Array.isArray(arg) && arg.length) {\n      const inner = css(...(arg as any));\n      if (inner) {\n        classes.push(inner);\n      }\n    } else if (argType === 'object') {\n      for (const key in arg) {\n        if (hasOwn.call(arg, key) && arg[key]) {\n          classes.push(key);\n        }\n      }\n    }\n  });\n\n  return classes.join(' ');\n}\n"]},"metadata":{},"sourceType":"module"}