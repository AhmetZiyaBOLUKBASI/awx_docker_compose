{"ast":null,"code":"import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useEffect,useState}from'react';import{Switch,Route,Link,Redirect,useLocation,useParams}from'react-router-dom';import{CaretLeftIcon}from'@patternfly/react-icons';import RoutedTabs from'components/RoutedTabs';import ContentError from'components/ContentError';import ContentLoading from'components/ContentLoading';import{GroupsAPI}from'api';import InventoryGroupEdit from'../InventoryGroupEdit/InventoryGroupEdit';import InventoryGroupDetail from'../InventoryGroupDetail/InventoryGroupDetail';import InventoryGroupHosts from'../InventoryGroupHosts';import InventoryRelatedGroups from'../InventoryRelatedGroups';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function InventoryGroup(_ref){var _inventoryGroup$summa,_inventoryGroup$summa2;var setBreadcrumb=_ref.setBreadcrumb,inventory=_ref.inventory;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),inventoryGroup=_useState2[0],setInventoryGroup=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),contentLoading=_useState4[0],setContentLoading=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),contentError=_useState6[0],setContentError=_useState6[1];var _useParams=useParams(),inventoryId=_useParams.id,groupId=_useParams.groupId;var location=useLocation();useEffect(function(){var loadData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$GroupsAPI$read,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return GroupsAPI.readDetail(groupId);case 3:_yield$GroupsAPI$read=_context.sent;data=_yield$GroupsAPI$read.data;setInventoryGroup(data);setBreadcrumb(inventory,data);_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);setContentError(_context.t0);case 12:_context.prev=12;setContentLoading(false);return _context.finish(12);case 15:case\"end\":return _context.stop();}}},_callee,null,[[0,9,12,15]]);}));return function loadData(){return _ref2.apply(this,arguments);};}();loadData();},[location.pathname,groupId,inventory,setBreadcrumb]);var tabsArray=[{name:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CaretLeftIcon,{\"aria-label\":/*i18n*/i18n._(\"Back to Groups\")}),/*i18n*/i18n._(\"Back to Groups\")]}),link:\"/inventories/inventory/\".concat(inventory.id,\"/groups\"),id:99},{name:/*i18n*/i18n._(\"Details\"),link:\"/inventories/inventory/\".concat(inventory.id,\"/groups/\").concat(inventoryGroup===null||inventoryGroup===void 0?void 0:inventoryGroup.id,\"/details\"),id:0},{name:/*i18n*/i18n._(\"Related Groups\"),link:\"/inventories/inventory/\".concat(inventory.id,\"/groups/\").concat(inventoryGroup===null||inventoryGroup===void 0?void 0:inventoryGroup.id,\"/nested_groups\"),id:1},{name:/*i18n*/i18n._(\"Hosts\"),link:\"/inventories/inventory/\".concat(inventory.id,\"/groups/\").concat(inventoryGroup===null||inventoryGroup===void 0?void 0:inventoryGroup.id,\"/nested_hosts\"),id:2}];if(contentLoading){return/*#__PURE__*/_jsx(ContentLoading,{});}if(contentError){return/*#__PURE__*/_jsx(ContentError,{error:contentError});}// In cases where a user manipulates the url such that they try to navigate to a\n// Inventory Group that is not associated with the Inventory Id in the Url this\n// Content Error is thrown. Inventory Groups have a 1:1 relationship to Inventories\n// thus their Ids must corrolate.\nif((inventoryGroup===null||inventoryGroup===void 0?void 0:(_inventoryGroup$summa=inventoryGroup.summary_fields)===null||_inventoryGroup$summa===void 0?void 0:(_inventoryGroup$summa2=_inventoryGroup$summa.inventory)===null||_inventoryGroup$summa2===void 0?void 0:_inventoryGroup$summa2.id)!==parseInt(inventoryId,10)){return/*#__PURE__*/_jsx(ContentError,{isNotFound:true,children:/*#__PURE__*/_jsx(Link,{to:\"/inventories/inventory/\".concat(inventory.id,\"/groups\"),children:/*i18n*/i18n._(\"View Inventory Groups\")})});}var showCardHeader=true;if(['add','edit'].some(function(name){return location.pathname.includes(name);})){showCardHeader=false;}return/*#__PURE__*/_jsxs(_Fragment,{children:[showCardHeader&&/*#__PURE__*/_jsx(RoutedTabs,{tabsArray:tabsArray}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Redirect,{from:\"/inventories/inventory/:id/groups/:groupId\",to:\"/inventories/inventory/:id/groups/:groupId/details\",exact:true}),inventoryGroup&&[/*#__PURE__*/_jsx(Route,{path:\"/inventories/inventory/:id/groups/:groupId/edit\",children:/*#__PURE__*/_jsx(InventoryGroupEdit,{inventoryGroup:inventoryGroup})},\"edit\"),/*#__PURE__*/_jsx(Route,{path:\"/inventories/inventory/:id/groups/:groupId/details\",children:/*#__PURE__*/_jsx(InventoryGroupDetail,{inventoryGroup:inventoryGroup})},\"details\"),/*#__PURE__*/_jsx(Route,{path:\"/inventories/inventory/:id/groups/:groupId/nested_hosts\",children:/*#__PURE__*/_jsx(InventoryGroupHosts,{inventoryGroup:inventoryGroup})},\"hosts\"),/*#__PURE__*/_jsx(Route,{path:\"/inventories/inventory/:id/groups/:groupId/nested_groups\",children:/*#__PURE__*/_jsx(InventoryRelatedGroups,{})},\"relatedGroups\")],/*#__PURE__*/_jsx(Route,{path:\"*\",children:/*#__PURE__*/_jsx(ContentError,{children:inventory&&/*#__PURE__*/_jsx(Link,{to:\"/inventories/inventory/\".concat(inventory.id,\"/details\"),children:/*i18n*/i18n._(\"View Inventory Details\")})})},\"not-found\")]})]});}export{InventoryGroup as _InventoryGroup};export default InventoryGroup;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Inventory/InventoryGroup/InventoryGroup.js"],"names":["React","useEffect","useState","Switch","Route","Link","Redirect","useLocation","useParams","CaretLeftIcon","RoutedTabs","ContentError","ContentLoading","GroupsAPI","InventoryGroupEdit","InventoryGroupDetail","InventoryGroupHosts","InventoryRelatedGroups","InventoryGroup","setBreadcrumb","inventory","inventoryGroup","setInventoryGroup","contentLoading","setContentLoading","contentError","setContentError","inventoryId","id","groupId","location","loadData","readDetail","data","pathname","tabsArray","name","link","summary_fields","parseInt","showCardHeader","some","includes","_InventoryGroup"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { t } from '@lingui/macro';\n\nimport {\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { CaretLeftIcon } from '@patternfly/react-icons';\nimport RoutedTabs from 'components/RoutedTabs';\nimport ContentError from 'components/ContentError';\nimport ContentLoading from 'components/ContentLoading';\nimport { GroupsAPI } from 'api';\nimport InventoryGroupEdit from '../InventoryGroupEdit/InventoryGroupEdit';\nimport InventoryGroupDetail from '../InventoryGroupDetail/InventoryGroupDetail';\nimport InventoryGroupHosts from '../InventoryGroupHosts';\nimport InventoryRelatedGroups from '../InventoryRelatedGroups';\n\nfunction InventoryGroup({ setBreadcrumb, inventory }) {\n  const [inventoryGroup, setInventoryGroup] = useState(null);\n  const [contentLoading, setContentLoading] = useState(true);\n  const [contentError, setContentError] = useState(null);\n  const { id: inventoryId, groupId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const { data } = await GroupsAPI.readDetail(groupId);\n        setInventoryGroup(data);\n        setBreadcrumb(inventory, data);\n      } catch (err) {\n        setContentError(err);\n      } finally {\n        setContentLoading(false);\n      }\n    };\n\n    loadData();\n  }, [location.pathname, groupId, inventory, setBreadcrumb]);\n\n  const tabsArray = [\n    {\n      name: (\n        <>\n          <CaretLeftIcon aria-label={t`Back to Groups`} />\n          {t`Back to Groups`}\n        </>\n      ),\n      link: `/inventories/inventory/${inventory.id}/groups`,\n      id: 99,\n    },\n    {\n      name: t`Details`,\n      link: `/inventories/inventory/${inventory.id}/groups/${inventoryGroup?.id}/details`,\n      id: 0,\n    },\n    {\n      name: t`Related Groups`,\n      link: `/inventories/inventory/${inventory.id}/groups/${inventoryGroup?.id}/nested_groups`,\n      id: 1,\n    },\n    {\n      name: t`Hosts`,\n      link: `/inventories/inventory/${inventory.id}/groups/${inventoryGroup?.id}/nested_hosts`,\n      id: 2,\n    },\n  ];\n\n  if (contentLoading) {\n    return <ContentLoading />;\n  }\n\n  if (contentError) {\n    return <ContentError error={contentError} />;\n  }\n\n  // In cases where a user manipulates the url such that they try to navigate to a\n  // Inventory Group that is not associated with the Inventory Id in the Url this\n  // Content Error is thrown. Inventory Groups have a 1:1 relationship to Inventories\n  // thus their Ids must corrolate.\n\n  if (\n    inventoryGroup?.summary_fields?.inventory?.id !== parseInt(inventoryId, 10)\n  ) {\n    return (\n      <ContentError isNotFound>\n        <Link to={`/inventories/inventory/${inventory.id}/groups`}>\n          {t`View Inventory Groups`}\n        </Link>\n      </ContentError>\n    );\n  }\n\n  let showCardHeader = true;\n  if (['add', 'edit'].some((name) => location.pathname.includes(name))) {\n    showCardHeader = false;\n  }\n\n  return (\n    <>\n      {showCardHeader && <RoutedTabs tabsArray={tabsArray} />}\n      <Switch>\n        <Redirect\n          from=\"/inventories/inventory/:id/groups/:groupId\"\n          to=\"/inventories/inventory/:id/groups/:groupId/details\"\n          exact\n        />\n        {inventoryGroup && [\n          <Route\n            key=\"edit\"\n            path=\"/inventories/inventory/:id/groups/:groupId/edit\"\n          >\n            <InventoryGroupEdit inventoryGroup={inventoryGroup} />\n          </Route>,\n          <Route\n            key=\"details\"\n            path=\"/inventories/inventory/:id/groups/:groupId/details\"\n          >\n            <InventoryGroupDetail inventoryGroup={inventoryGroup} />\n          </Route>,\n          <Route\n            key=\"hosts\"\n            path=\"/inventories/inventory/:id/groups/:groupId/nested_hosts\"\n          >\n            <InventoryGroupHosts inventoryGroup={inventoryGroup} />\n          </Route>,\n          <Route\n            key=\"relatedGroups\"\n            path=\"/inventories/inventory/:id/groups/:groupId/nested_groups\"\n          >\n            <InventoryRelatedGroups />\n          </Route>,\n        ]}\n        <Route key=\"not-found\" path=\"*\">\n          <ContentError>\n            {inventory && (\n              <Link to={`/inventories/inventory/${inventory.id}/details`}>\n                {t`View Inventory Details`}\n              </Link>\n            )}\n          </ContentError>\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport { InventoryGroup as _InventoryGroup };\nexport default InventoryGroup;\n"]},"metadata":{},"sourceType":"module"}