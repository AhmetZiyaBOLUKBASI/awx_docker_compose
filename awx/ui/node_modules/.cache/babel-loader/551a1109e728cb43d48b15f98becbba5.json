{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import{i18n}from\"@lingui/core\";import React,{useState}from'react';import{Button,DataList,DataListAction,DataListItem,DataListCell,DataListItemRow,DataListControl,DataListDragButton,DataListItemCells}from'@patternfly/react-core';import{TimesIcon}from'@patternfly/react-icons';import styled from'styled-components';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var RemoveActionSection=styled(DataListAction)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  && {\\n    align-items: center;\\n    padding: 0;\\n  }\\n\"])));function DraggableSelectedList(_ref){var selected=_ref.selected,onRemove=_ref.onRemove,onRowDrag=_ref.onRowDrag;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),liveText=_useState2[0],setLiveText=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),id=_useState4[0],setId=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isDragging=_useState6[0],setIsDragging=_useState6[1];var onDragStart=function onDragStart(newId){setId(newId);setLiveText(/*i18n*/i18n._(\"Dragging started for item id: {newId}.\",{newId:newId}));setIsDragging(true);};var onDragMove=function onDragMove(oldIndex,newIndex){setLiveText(/*i18n*/i18n._(\"Dragging item {id}. Item with index {oldIndex} in now {newIndex}.\",{id:id,oldIndex:oldIndex,newIndex:newIndex}));};var onDragCancel=function onDragCancel(){setLiveText(/*i18n*/i18n._(\"Dragging cancelled. List is unchanged.\"));setIsDragging(false);};var onDragFinish=function onDragFinish(newItemOrder){var selectedItems=newItemOrder.map(function(item){return selected.find(function(i){return i.name===item;});});onRowDrag(selectedItems);setIsDragging(false);};var removeItem=function removeItem(item){onRemove(selected.find(function(i){return i.name===item;}));};if(selected.length<=0){return null;}var orderedList=selected.map(function(item){return item===null||item===void 0?void 0:item.name;});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(DataList,{\"aria-label\":/*i18n*/i18n._(\"Draggable list to reorder and remove selected items.\"),\"data-cy\":\"draggable-list\",itemOrder:orderedList,onDragCancel:onDragCancel,onDragFinish:onDragFinish,onDragMove:onDragMove,onDragStart:onDragStart,children:orderedList.map(function(label,index){var rowPosition=index+1;return/*#__PURE__*/_jsx(DataListItem,{id:label,children:/*#__PURE__*/_jsxs(DataListItemRow,{children:[/*#__PURE__*/_jsx(DataListControl,{children:/*#__PURE__*/_jsx(DataListDragButton,{\"aria-label\":/*i18n*/i18n._(\"Reorder\"),\"aria-labelledby\":rowPosition,\"aria-describedby\":/*i18n*/i18n._(\"Press space or enter to begin dragging,\\nand use the arrow keys to navigate up or down.\\nPress enter to confirm the drag, or any other key to\\ncancel the drag operation.\"),\"aria-pressed\":\"false\",\"data-cy\":\"reorder-\".concat(label),isDisabled:selected.length===1})}),/*#__PURE__*/_jsx(DataListItemCells,{dataListCells:[/*#__PURE__*/_jsx(DataListCell,{children:/*#__PURE__*/_jsx(\"span\",{id:rowPosition,children:\"\".concat(rowPosition,\". \").concat(label)})},label)]}),/*#__PURE__*/_jsx(RemoveActionSection,{\"aria-label\":/*i18n*/i18n._(\"Actions\"),id:rowPosition,children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return removeItem(label);},variant:\"plain\",\"aria-label\":/*i18n*/i18n._(\"Remove\"),ouiaId:\"draggable-list-remove-\".concat(label),isDisabled:isDragging,children:/*#__PURE__*/_jsx(TimesIcon,{})})})]})},rowPosition);})}),/*#__PURE__*/_jsx(\"div\",{className:\"pf-screen-reader\",\"aria-live\":\"assertive\",children:liveText})]});}DraggableSelectedList.defaultProps={onRemove:function onRemove(){return null;},onRowDrag:function onRowDrag(){return null;},selected:[]};export default DraggableSelectedList;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/SelectedList/DraggableSelectedList.js"],"names":["React","useState","Button","DataList","DataListAction","DataListItem","DataListCell","DataListItemRow","DataListControl","DataListDragButton","DataListItemCells","TimesIcon","styled","RemoveActionSection","DraggableSelectedList","selected","onRemove","onRowDrag","liveText","setLiveText","id","setId","isDragging","setIsDragging","onDragStart","newId","onDragMove","oldIndex","newIndex","onDragCancel","onDragFinish","newItemOrder","selectedItems","map","item","find","i","name","removeItem","length","orderedList","label","index","rowPosition","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  DataList,\n  DataListAction,\n  DataListItem,\n  DataListCell,\n  DataListItemRow,\n  DataListControl,\n  DataListDragButton,\n  DataListItemCells,\n} from '@patternfly/react-core';\nimport { TimesIcon } from '@patternfly/react-icons';\nimport styled from 'styled-components';\nimport { t } from '@lingui/macro';\n\nconst RemoveActionSection = styled(DataListAction)`\n  && {\n    align-items: center;\n    padding: 0;\n  }\n`;\n\nfunction DraggableSelectedList({ selected, onRemove, onRowDrag }) {\n  const [liveText, setLiveText] = useState('');\n  const [id, setId] = useState('');\n  const [isDragging, setIsDragging] = useState(false);\n\n  const onDragStart = (newId) => {\n    setId(newId);\n    setLiveText(t`Dragging started for item id: ${newId}.`);\n    setIsDragging(true);\n  };\n\n  const onDragMove = (oldIndex, newIndex) => {\n    setLiveText(\n      t`Dragging item ${id}. Item with index ${oldIndex} in now ${newIndex}.`\n    );\n  };\n\n  const onDragCancel = () => {\n    setLiveText(t`Dragging cancelled. List is unchanged.`);\n    setIsDragging(false);\n  };\n\n  const onDragFinish = (newItemOrder) => {\n    const selectedItems = newItemOrder.map((item) =>\n      selected.find((i) => i.name === item)\n    );\n    onRowDrag(selectedItems);\n    setIsDragging(false);\n  };\n\n  const removeItem = (item) => {\n    onRemove(selected.find((i) => i.name === item));\n  };\n\n  if (selected.length <= 0) {\n    return null;\n  }\n\n  const orderedList = selected.map((item) => item?.name);\n\n  return (\n    <>\n      <DataList\n        aria-label={t`Draggable list to reorder and remove selected items.`}\n        data-cy=\"draggable-list\"\n        itemOrder={orderedList}\n        onDragCancel={onDragCancel}\n        onDragFinish={onDragFinish}\n        onDragMove={onDragMove}\n        onDragStart={onDragStart}\n      >\n        {orderedList.map((label, index) => {\n          const rowPosition = index + 1;\n          return (\n            <DataListItem id={label} key={rowPosition}>\n              <DataListItemRow>\n                <DataListControl>\n                  <DataListDragButton\n                    aria-label={t`Reorder`}\n                    aria-labelledby={rowPosition}\n                    aria-describedby={t`Press space or enter to begin dragging,\n                    and use the arrow keys to navigate up or down.\n                    Press enter to confirm the drag, or any other key to\n                    cancel the drag operation.`}\n                    aria-pressed=\"false\"\n                    data-cy={`reorder-${label}`}\n                    isDisabled={selected.length === 1}\n                  />\n                </DataListControl>\n                <DataListItemCells\n                  dataListCells={[\n                    <DataListCell key={label}>\n                      <span id={rowPosition}>{`${rowPosition}. ${label}`}</span>\n                    </DataListCell>,\n                  ]}\n                />\n                <RemoveActionSection aria-label={t`Actions`} id={rowPosition}>\n                  <Button\n                    onClick={() => removeItem(label)}\n                    variant=\"plain\"\n                    aria-label={t`Remove`}\n                    ouiaId={`draggable-list-remove-${label}`}\n                    isDisabled={isDragging}\n                  >\n                    <TimesIcon />\n                  </Button>\n                </RemoveActionSection>\n              </DataListItemRow>\n            </DataListItem>\n          );\n        })}\n      </DataList>\n      <div className=\"pf-screen-reader\" aria-live=\"assertive\">\n        {liveText}\n      </div>\n    </>\n  );\n}\n\nconst ListItem = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n});\nDraggableSelectedList.propTypes = {\n  onRemove: PropTypes.func,\n  onRowDrag: PropTypes.func,\n  selected: PropTypes.arrayOf(ListItem),\n};\nDraggableSelectedList.defaultProps = {\n  onRemove: () => null,\n  onRowDrag: () => null,\n  selected: [],\n};\n\nexport default DraggableSelectedList;\n"]},"metadata":{},"sourceType":"module"}