{"ast":null,"code":"import _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { debounce, canUseDOM } from '@patternfly/react-core/dist/esm/helpers/util';\nimport { Tr } from '../TableComposable/Tr';\nexport var RowWrapper = /*#__PURE__*/function (_React$Component) {\n  _inherits(RowWrapper, _React$Component);\n\n  var _super = _createSuper(RowWrapper);\n\n  function RowWrapper(props) {\n    var _this;\n\n    _classCallCheck(this, RowWrapper);\n\n    _this = _super.call(this, props);\n\n    _this.handleScroll = function (event) {\n      if (!_this._unmounted) {\n        _this.props.onScroll(event);\n      }\n    };\n\n    _this.handleResize = function (event) {\n      if (!_this._unmounted) {\n        _this.props.onResize(event);\n      }\n    };\n\n    if (props.onScroll) {\n      _this.handleScroll = debounce(_this.handleScroll, 100);\n    }\n\n    if (props.onResize) {\n      _this.handleResize = debounce(_this.handleResize, 100);\n    }\n\n    return _this;\n  }\n\n  _createClass(RowWrapper, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._unmounted = false;\n\n      if (canUseDOM) {\n        if (this.props.onScroll) {\n          window.addEventListener('scroll', this.handleScroll);\n        }\n\n        if (this.props.onResize) {\n          window.addEventListener('resize', this.handleResize);\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._unmounted = true;\n\n      if (canUseDOM) {\n        if (this.props.onScroll) {\n          window.removeEventListener('scroll', this.handleScroll);\n        }\n\n        if (this.props.onResize) {\n          window.removeEventListener('resize', this.handleResize);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          onScroll = _a.onScroll,\n          onResize = _a.onResize,\n          _a$row = _a.row,\n          isExpanded = _a$row.isExpanded,\n          isEditable = _a$row.isEditable,\n          isHoverable = _a$row.isHoverable,\n          isRowSelected = _a$row.isRowSelected,\n          rowProps = _a.rowProps,\n          trRef = _a.trRef,\n          className = _a.className,\n          ouiaId = _a.ouiaId,\n          props = __rest(_a, [\"onScroll\", \"onResize\", \"row\", \"rowProps\", \"trRef\", \"className\", \"ouiaId\"]);\n\n      return React.createElement(Tr, Object.assign({}, props, {\n        ref: trRef,\n        isExpanded: isExpanded,\n        isEditable: isEditable,\n        className: className,\n        ouiaId: ouiaId,\n        isHoverable: isHoverable,\n        isRowSelected: isRowSelected\n      }));\n    }\n  }]);\n\n  return RowWrapper;\n}(React.Component);\nRowWrapper.displayName = 'RowWrapper';\nRowWrapper.defaultProps = {\n  className: '',\n  row: {\n    isOpen: undefined,\n    isExpanded: undefined,\n    isHeightAuto: undefined,\n    isEditable: undefined\n  },\n  rowProps: null\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/Table/RowWrapper.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { OUIAProps } from '@patternfly/react-core/dist/esm/helpers/OUIA/ouia';\nimport { debounce, canUseDOM } from '@patternfly/react-core/dist/esm/helpers/util';\nimport { Tr } from '../TableComposable/Tr';\nimport { IRow } from './TableTypes';\n\n// legacy export now, RowWrapperRow can simply be typed as IRow in the future\nexport interface RowWrapperRow {\n  isOpen?: boolean;\n  isExpanded?: boolean;\n  isEditable?: boolean;\n}\n\nexport interface RowWrapperProps extends OUIAProps {\n  trRef?: React.Ref<any> | Function;\n  className?: string;\n  onScroll?: React.UIEventHandler;\n  onResize?: React.UIEventHandler;\n  row?: IRow;\n  rowProps?: {\n    rowIndex: number;\n    rowKey: string;\n  };\n}\n\nexport class RowWrapper extends React.Component<RowWrapperProps> {\n  static displayName = 'RowWrapper';\n  static defaultProps = {\n    className: '' as string,\n    row: {\n      isOpen: undefined as boolean,\n      isExpanded: undefined as boolean,\n      isHeightAuto: undefined as boolean,\n      isEditable: undefined as boolean\n    } as IRow,\n    rowProps: null as any\n  };\n  _unmounted: boolean;\n\n  constructor(props: RowWrapperProps) {\n    super(props);\n\n    if (props.onScroll) {\n      this.handleScroll = debounce(this.handleScroll, 100);\n    }\n    if (props.onResize) {\n      this.handleResize = debounce(this.handleResize, 100);\n    }\n  }\n\n  componentDidMount() {\n    this._unmounted = false;\n\n    if (canUseDOM) {\n      if (this.props.onScroll) {\n        window.addEventListener('scroll', this.handleScroll);\n      }\n      if (this.props.onResize) {\n        window.addEventListener('resize', this.handleResize);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this._unmounted = true;\n\n    if (canUseDOM) {\n      if (this.props.onScroll) {\n        window.removeEventListener('scroll', this.handleScroll);\n      }\n      if (this.props.onResize) {\n        window.removeEventListener('resize', this.handleResize);\n      }\n    }\n  }\n\n  handleScroll = (event: Event): void => {\n    if (!this._unmounted) {\n      this.props.onScroll((event as unknown) as React.UIEvent<Element>);\n    }\n  };\n\n  handleResize = (event: Event) => {\n    if (!this._unmounted) {\n      this.props.onResize((event as unknown) as React.UIEvent<Element>);\n    }\n  };\n\n  render() {\n    const {\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      onScroll,\n      onResize,\n      row: { isExpanded, isEditable, isHoverable, isRowSelected },\n      rowProps,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      trRef,\n      className,\n      ouiaId,\n      ...props\n    } = this.props;\n\n    return (\n      <Tr\n        {...props}\n        ref={trRef as React.Ref<any>}\n        isExpanded={isExpanded}\n        isEditable={isEditable}\n        className={className}\n        ouiaId={ouiaId}\n        isHoverable={isHoverable}\n        isRowSelected={isRowSelected}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}