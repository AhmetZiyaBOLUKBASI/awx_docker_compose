{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import{i18n}from\"@lingui/core\";import React,{useCallback,useState}from'react';import styled from'styled-components';import{Switch,Route,useParams}from'react-router-dom';import{Alert,ClipboardCopy,ClipboardCopyVariant,Modal}from'@patternfly/react-core';import{formatDateString}from'util/dates';import{Detail,DetailList}from'components/DetailList';import UserTokenAdd from'../UserTokenAdd';import UserTokenList from'../UserTokenList';import UserToken from'../UserToken';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var TokenAlert=styled(Alert)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin-bottom: 20px;\\n\"])));function UserTokens(_ref){var setBreadcrumb=_ref.setBreadcrumb,user=_ref.user;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),tokenModalSource=_useState2[0],setTokenModalSource=_useState2[1];var _useParams=useParams(),id=_useParams.id;var onSuccessfulAdd=useCallback(function(token){return setTokenModalSource(token);},[setTokenModalSource]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/users/:id/tokens/add\",children:/*#__PURE__*/_jsx(UserTokenAdd,{id:Number(id),onSuccessfulAdd:onSuccessfulAdd})},\"add\"),/*#__PURE__*/_jsx(Route,{path:\"/users/:id/tokens/:tokenId\",children:/*#__PURE__*/_jsx(UserToken,{user:user,setBreadcrumb:setBreadcrumb,id:Number(id)})},\"token\"),/*#__PURE__*/_jsx(Route,{path:\"/users/:id/tokens\",children:/*#__PURE__*/_jsx(UserTokenList,{id:Number(id)})},\"list\")]}),tokenModalSource&&/*#__PURE__*/_jsxs(Modal,{\"aria-label\":/*i18n*/i18n._(\"Token information\"),isOpen:true,variant:\"medium\",title:/*i18n*/i18n._(\"Token information\"),onClose:function onClose(){return setTokenModalSource(null);},children:[/*#__PURE__*/_jsx(TokenAlert,{variant:\"info\",isInline:true,title:/*i18n*/i18n._(\"This is the only time the token value and associated refresh token value will be shown.\")}),/*#__PURE__*/_jsxs(DetailList,{stacked:true,children:[tokenModalSource.token&&/*#__PURE__*/_jsx(Detail,{label:/*i18n*/i18n._(\"Token\"),value:/*#__PURE__*/_jsx(ClipboardCopy,{isReadOnly:true,variant:ClipboardCopyVariant.expansion,children:tokenModalSource.token})}),tokenModalSource.refresh_token&&/*#__PURE__*/_jsx(Detail,{label:/*i18n*/i18n._(\"Refresh Token\"),value:/*#__PURE__*/_jsx(ClipboardCopy,{isReadOnly:true,variant:ClipboardCopyVariant.expansion,children:tokenModalSource.refresh_token})}),/*#__PURE__*/_jsx(Detail,{label:/*i18n*/i18n._(\"Expires\"),value:formatDateString(tokenModalSource.expires)})]})]})]});}export default UserTokens;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/User/UserTokens/UserTokens.js"],"names":["React","useCallback","useState","styled","Switch","Route","useParams","Alert","ClipboardCopy","ClipboardCopyVariant","Modal","formatDateString","Detail","DetailList","UserTokenAdd","UserTokenList","UserToken","TokenAlert","UserTokens","setBreadcrumb","user","tokenModalSource","setTokenModalSource","id","onSuccessfulAdd","token","Number","expansion","refresh_token","expires"],"mappings":"iRAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,QAA7B,KAA6C,OAA7C,CAGA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,SAAxB,KAAyC,kBAAzC,CACA,OACEC,KADF,CAEEC,aAFF,CAGEC,oBAHF,CAIEC,KAJF,KAKO,wBALP,CAMA,OAASC,gBAAT,KAAiC,YAAjC,CACA,OAASC,MAAT,CAAiBC,UAAjB,KAAmC,uBAAnC,CACA,MAAOC,CAAAA,YAAP,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,aAAP,KAA0B,kBAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,C,6IAEA,GAAMC,CAAAA,UAAU,CAAGd,MAAM,CAACI,KAAD,CAAT,2FAAhB,CAIA,QAASW,CAAAA,UAAT,MAA6C,IAAvBC,CAAAA,aAAuB,MAAvBA,aAAuB,CAARC,IAAQ,MAARA,IAAQ,CAC3C,cAAgDlB,QAAQ,CAAC,IAAD,CAAxD,wCAAOmB,gBAAP,eAAyBC,mBAAzB,eACA,eAAehB,SAAS,EAAxB,CAAQiB,EAAR,YAAQA,EAAR,CAEA,GAAMC,CAAAA,eAAe,CAAGvB,WAAW,CACjC,SAACwB,KAAD,QAAWH,CAAAA,mBAAmB,CAACG,KAAD,CAA9B,EADiC,CAEjC,CAACH,mBAAD,CAFiC,CAAnC,CAKA,mBACE,wCACE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAiB,IAAI,CAAC,uBAAtB,uBACE,KAAC,YAAD,EAAc,EAAE,CAAEI,MAAM,CAACH,EAAD,CAAxB,CAA8B,eAAe,CAAEC,eAA/C,EADF,EAAW,KAAX,CADF,cAIE,KAAC,KAAD,EAAmB,IAAI,CAAC,4BAAxB,uBACE,KAAC,SAAD,EACE,IAAI,CAAEJ,IADR,CAEE,aAAa,CAAED,aAFjB,CAGE,EAAE,CAAEO,MAAM,CAACH,EAAD,CAHZ,EADF,EAAW,OAAX,CAJF,cAWE,KAAC,KAAD,EAAkB,IAAI,CAAC,mBAAvB,uBACE,KAAC,aAAD,EAAe,EAAE,CAAEG,MAAM,CAACH,EAAD,CAAzB,EADF,EAAW,MAAX,CAXF,GADF,CAgBGF,gBAAgB,eACf,MAAC,KAAD,EACE,qBAAY,2BADd,CAEE,MAAM,KAFR,CAGE,OAAO,CAAC,QAHV,CAIE,KAAK,SAAE,2BAJT,CAKE,OAAO,CAAE,yBAAMC,CAAAA,mBAAmB,CAAC,IAAD,CAAzB,EALX,wBAOE,KAAC,UAAD,EACE,OAAO,CAAC,MADV,CAEE,QAAQ,KAFV,CAGE,KAAK,SAAE,iGAHT,EAPF,cAYE,MAAC,UAAD,EAAY,OAAO,KAAnB,WACGD,gBAAgB,CAACI,KAAjB,eACC,KAAC,MAAD,EACE,KAAK,SAAE,eADT,CAEE,KAAK,cACH,KAAC,aAAD,EACE,UAAU,KADZ,CAEE,OAAO,CAAEhB,oBAAoB,CAACkB,SAFhC,UAIGN,gBAAgB,CAACI,KAJpB,EAHJ,EAFJ,CAcGJ,gBAAgB,CAACO,aAAjB,eACC,KAAC,MAAD,EACE,KAAK,SAAE,uBADT,CAEE,KAAK,cACH,KAAC,aAAD,EACE,UAAU,KADZ,CAEE,OAAO,CAAEnB,oBAAoB,CAACkB,SAFhC,UAIGN,gBAAgB,CAACO,aAJpB,EAHJ,EAfJ,cA2BE,KAAC,MAAD,EACE,KAAK,SAAE,iBADT,CAEE,KAAK,CAAEjB,gBAAgB,CAACU,gBAAgB,CAACQ,OAAlB,CAFzB,EA3BF,GAZF,GAjBJ,GADF,CAkED,CAED,cAAeX,CAAAA,UAAf","sourcesContent":["import React, { useCallback, useState } from 'react';\n\nimport { t } from '@lingui/macro';\nimport styled from 'styled-components';\nimport { Switch, Route, useParams } from 'react-router-dom';\nimport {\n  Alert,\n  ClipboardCopy,\n  ClipboardCopyVariant,\n  Modal,\n} from '@patternfly/react-core';\nimport { formatDateString } from 'util/dates';\nimport { Detail, DetailList } from 'components/DetailList';\nimport UserTokenAdd from '../UserTokenAdd';\nimport UserTokenList from '../UserTokenList';\nimport UserToken from '../UserToken';\n\nconst TokenAlert = styled(Alert)`\n  margin-bottom: 20px;\n`;\n\nfunction UserTokens({ setBreadcrumb, user }) {\n  const [tokenModalSource, setTokenModalSource] = useState(null);\n  const { id } = useParams();\n\n  const onSuccessfulAdd = useCallback(\n    (token) => setTokenModalSource(token),\n    [setTokenModalSource]\n  );\n\n  return (\n    <>\n      <Switch>\n        <Route key=\"add\" path=\"/users/:id/tokens/add\">\n          <UserTokenAdd id={Number(id)} onSuccessfulAdd={onSuccessfulAdd} />\n        </Route>\n        <Route key=\"token\" path=\"/users/:id/tokens/:tokenId\">\n          <UserToken\n            user={user}\n            setBreadcrumb={setBreadcrumb}\n            id={Number(id)}\n          />\n        </Route>\n        <Route key=\"list\" path=\"/users/:id/tokens\">\n          <UserTokenList id={Number(id)} />\n        </Route>\n      </Switch>\n      {tokenModalSource && (\n        <Modal\n          aria-label={t`Token information`}\n          isOpen\n          variant=\"medium\"\n          title={t`Token information`}\n          onClose={() => setTokenModalSource(null)}\n        >\n          <TokenAlert\n            variant=\"info\"\n            isInline\n            title={t`This is the only time the token value and associated refresh token value will be shown.`}\n          />\n          <DetailList stacked>\n            {tokenModalSource.token && (\n              <Detail\n                label={t`Token`}\n                value={\n                  <ClipboardCopy\n                    isReadOnly\n                    variant={ClipboardCopyVariant.expansion}\n                  >\n                    {tokenModalSource.token}\n                  </ClipboardCopy>\n                }\n              />\n            )}\n            {tokenModalSource.refresh_token && (\n              <Detail\n                label={t`Refresh Token`}\n                value={\n                  <ClipboardCopy\n                    isReadOnly\n                    variant={ClipboardCopyVariant.expansion}\n                  >\n                    {tokenModalSource.refresh_token}\n                  </ClipboardCopy>\n                }\n              />\n            )}\n            <Detail\n              label={t`Expires`}\n              value={formatDateString(tokenModalSource.expires)}\n            />\n          </DetailList>\n        </Modal>\n      )}\n    </>\n  );\n}\n\nexport default UserTokens;\n"]},"metadata":{},"sourceType":"module"}