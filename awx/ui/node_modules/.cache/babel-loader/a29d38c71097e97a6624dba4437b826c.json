{"ast":null,"code":"import _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\n/**\n * provider.tsx\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\n\nimport * as React from 'react';\nimport { TableDefaults } from './types';\nexport var ProviderContext = React.createContext({\n  columns: null,\n  renderers: null\n});\nexport var Provider = /*#__PURE__*/function (_React$Component) {\n  _inherits(Provider, _React$Component);\n\n  var _super = _createSuper(Provider);\n\n  function Provider() {\n    _classCallCheck(this, Provider);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Provider, [{\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          columns = _a.columns,\n          renderers = _a.renderers,\n          components = _a.components,\n          children = _a.children,\n          props = __rest(_a, [\"columns\", \"renderers\", \"components\", \"children\"]);\n\n      var finalRenderers = renderers;\n\n      if (components) {\n        // eslint-disable-next-line no-console\n        console.warn('`components` have been deprecated in favor of `renderers` and will be removed in the next major version, please rename!');\n        finalRenderers = components;\n      }\n\n      var provider = React.createElement(renderers.table || TableDefaults.renderers.table, props, children);\n      return React.createElement(ProviderContext.Provider, {\n        value: {\n          columns: columns,\n          renderers: {\n            table: finalRenderers.table || TableDefaults.renderers.table,\n            header: Object.assign(Object.assign({}, TableDefaults.renderers.header), finalRenderers.header),\n            body: Object.assign(Object.assign({}, TableDefaults.renderers.body), finalRenderers.body)\n          }\n        }\n      }, provider);\n    }\n  }]);\n\n  return Provider;\n}(React.Component);\nProvider.displayName = 'Provider';\nProvider.defaultProps = {\n  renderers: TableDefaults.renderers\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/Table/base/provider.tsx"],"names":[],"mappings":";;;;;AAAA;;;;;AAKG;;AACH,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAyB,aAAzB,QAA2D,SAA3D;AAUA,OAAO,IAAM,eAAe,GAAG,KAAK,CAAC,aAAN,CAAoB;AACjD,EAAA,OAAO,EAAE,IADwC;AAEjD,EAAA,SAAS,EAAE;AAFsC,CAApB,CAAxB;AAKP,WAAa,QAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WAKE,kBAAM;AACE,UAAA,EAAA,GAAyD,KAAzD,KAAA;AAAA,UAAE,OAAF,GAA0C,EAA1C,CAAE,OAAF;AAAA,UAAW,SAAX,GAA0C,EAA1C,CAAW,SAAX;AAAA,UAAsB,UAAtB,GAA0C,EAA1C,CAAsB,UAAtB;AAAA,UAAkC,QAAlC,GAA0C,EAA1C,CAAkC,QAAlC;AAAA,UAA+C,KAA/C,GAAoD,MAAA,CAAA,EAAA,EAApD,CAAA,SAAA,EAAA,WAAA,EAAA,YAAA,EAAA,UAAA,CAAoD,CAApD;;AAEN,UAAI,cAAc,GAAG,SAArB;;AAEA,UAAI,UAAJ,EAAgB;AACd;AACA,QAAA,OAAO,CAAC,IAAR,CACE,yHADF;AAGA,QAAA,cAAc,GAAG,UAAjB;AACD;;AAED,UAAM,QAAQ,GAAG,KAAK,CAAC,aAAN,CAAoB,SAAS,CAAC,KAAV,IAAmB,aAAa,CAAC,SAAd,CAAwB,KAA/D,EAAsE,KAAtE,EAA6E,QAA7E,CAAjB;AACA,aACE,KAAA,CAAA,aAAA,CAAC,eAAe,CAAC,QAAjB,EAAyB;AACvB,QAAA,KAAK,EAAE;AACL,UAAA,OAAO,EAAP,OADK;AAEL,UAAA,SAAS,EAAE;AACT,YAAA,KAAK,EAAE,cAAc,CAAC,KAAf,IAAwB,aAAa,CAAC,SAAd,CAAwB,KAD9C;AAET,YAAA,MAAM,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAO,aAAa,CAAC,SAAd,CAAwB,MAA/B,CAAA,EAA0C,cAAc,CAAC,MAAzD,CAFG;AAGT,YAAA,IAAI,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAO,aAAa,CAAC,SAAd,CAAwB,IAA/B,CAAA,EAAwC,cAAc,CAAC,IAAvD;AAHK;AAFN;AADgB,OAAzB,EAUG,QAVH,CADF;AAcD;AAjCH;;AAAA;AAAA,EAA8B,KAAK,CAAC,SAApC;AACS,QAAA,CAAA,WAAA,GAAc,UAAd;AACA,QAAA,CAAA,YAAA,GAAe;AACpB,EAAA,SAAS,EAAE,aAAa,CAAC;AADL,CAAf","sourcesContent":["/**\n * provider.tsx\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport * as React from 'react';\nimport { RenderersTypes, TableDefaults, ColumnsType } from './types';\n\nexport interface ProviderProps extends RenderersTypes {\n  children?: React.ReactNode;\n  role?: string;\n  className?: string;\n  variant?: 'compact';\n  borders?: boolean;\n}\n\nexport const ProviderContext = React.createContext({\n  columns: null as ColumnsType,\n  renderers: null as RenderersTypes['renderers']\n});\n\nexport class Provider extends React.Component<ProviderProps, {}> {\n  static displayName = 'Provider';\n  static defaultProps = {\n    renderers: TableDefaults.renderers\n  };\n  render() {\n    const { columns, renderers, components, children, ...props } = this.props;\n\n    let finalRenderers = renderers;\n\n    if (components) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '`components` have been deprecated in favor of `renderers` and will be removed in the next major version, please rename!'\n      );\n      finalRenderers = components;\n    }\n\n    const provider = React.createElement(renderers.table || TableDefaults.renderers.table, props, children);\n    return (\n      <ProviderContext.Provider\n        value={{\n          columns,\n          renderers: {\n            table: finalRenderers.table || TableDefaults.renderers.table,\n            header: { ...TableDefaults.renderers.header, ...finalRenderers.header },\n            body: { ...TableDefaults.renderers.body, ...finalRenderers.body }\n          }\n        }}\n      >\n        {provider}\n      </ProviderContext.Provider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}