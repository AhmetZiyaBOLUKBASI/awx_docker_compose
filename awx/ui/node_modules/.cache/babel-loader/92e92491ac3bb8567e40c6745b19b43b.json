{"ast":null,"code":"import { __rest } from \"tslib\";\n/* eslint-disable no-console */\n\nimport * as React from 'react';\nimport { Button, ButtonVariant } from '../../components/Button';\nimport { PageContextConsumer } from './Page';\nexport var PageToggleButton = function PageToggleButton(_a) {\n  var children = _a.children,\n      _a$isNavOpen = _a.isNavOpen,\n      isNavOpen = _a$isNavOpen === void 0 ? true : _a$isNavOpen,\n      _a$onNavToggle = _a.onNavToggle,\n      onNavToggle = _a$onNavToggle === void 0 ? function () {\n    return undefined;\n  } : _a$onNavToggle,\n      props = __rest(_a, [\"children\", \"isNavOpen\", \"onNavToggle\"]);\n\n  return React.createElement(PageContextConsumer, null, function (_ref) {\n    var isManagedSidebar = _ref.isManagedSidebar,\n        managedOnNavToggle = _ref.onNavToggle,\n        managedIsNavOpen = _ref.isNavOpen;\n    var navToggle = isManagedSidebar ? managedOnNavToggle : onNavToggle;\n    var navOpen = isManagedSidebar ? managedIsNavOpen : isNavOpen;\n    return React.createElement(Button, Object.assign({\n      id: \"nav-toggle\",\n      onClick: navToggle,\n      \"aria-label\": \"Side navigation toggle\",\n      \"aria-expanded\": navOpen ? 'true' : 'false',\n      variant: ButtonVariant.plain\n    }, props), children);\n  });\n};\nPageToggleButton.displayName = 'PageToggleButton';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Page/PageToggleButton.tsx"],"names":[],"mappings":";AAAA;;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,MAAT,EAA8B,aAA9B,QAAmD,yBAAnD;AACA,SAAS,mBAAT,QAAsD,QAAtD;AAWA,OAAO,IAAM,gBAAgB,GAAmD,SAAnE,gBAAmE,CAAC,EAAD,EAKpD;AALqD,MAC/E,QAD+E,GAG3C,EAH2C,CAC/E,QAD+E;AAAA,qBAG3C,EAH2C,CAE/E,SAF+E;AAAA,MAE/E,SAF+E,6BAEnE,IAFmE;AAAA,uBAG3C,EAH2C,CAG/E,WAH+E;AAAA,MAG/E,WAH+E,+BAGjE;AAAA,WAAM,SAAN;AAAA,GAHiE;AAAA,MAI5E,KAJ4E,GAIvE,MAAA,CAAA,EAAA,EAJuE,CAAA,UAAA,EAAA,WAAA,EAAA,aAAA,CAIvE,CAJuE;;AAKpD,SAC3B,KAAA,CAAA,aAAA,CAAC,mBAAD,EAAoB,IAApB,EACG,gBAAyG;AAAA,QAAtG,gBAAsG,QAAtG,gBAAsG;AAAA,QAAvE,kBAAuE,QAApF,WAAoF;AAAA,QAAxC,gBAAwC,QAAnD,SAAmD;AACxG,QAAM,SAAS,GAAG,gBAAgB,GAAG,kBAAH,GAAwB,WAA1D;AACA,QAAM,OAAO,GAAG,gBAAgB,GAAG,gBAAH,GAAsB,SAAtD;AAEA,WACE,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO,MAAA,CAAA,MAAA,CAAA;AACL,MAAA,EAAE,EAAC,YADE;AAEL,MAAA,OAAO,EAAE,SAFJ;AAEa,oBACP,wBAHN;AAG8B,uBACpB,OAAO,GAAG,MAAH,GAAY,OAJ7B;AAKL,MAAA,OAAO,EAAE,aAAa,CAAC;AALlB,KAAA,EAMD,KANC,CAAP,EAQG,QARH,CADF;AAYD,GAjBH,CAD2B;AAoB5B,CAzBM;AA0BP,gBAAgB,CAAC,WAAjB,GAA+B,kBAA/B","sourcesContent":["/* eslint-disable no-console */\nimport * as React from 'react';\nimport { Button, ButtonProps, ButtonVariant } from '../../components/Button';\nimport { PageContextConsumer, PageContextProps } from './Page';\n\nexport interface PageToggleButtonProps extends ButtonProps {\n  /** Content of the page toggle button */\n  children?: React.ReactNode;\n  /** True if the side nav is shown  */\n  isNavOpen?: boolean;\n  /** Callback function to handle the side nav toggle button, managed by the Page component if the Page isManagedSidebar prop is set to true */\n  onNavToggle?: () => void;\n}\n\nexport const PageToggleButton: React.FunctionComponent<PageToggleButtonProps> = ({\n  children,\n  isNavOpen = true,\n  onNavToggle = () => undefined as any,\n  ...props\n}: PageToggleButtonProps) => (\n  <PageContextConsumer>\n    {({ isManagedSidebar, onNavToggle: managedOnNavToggle, isNavOpen: managedIsNavOpen }: PageContextProps) => {\n      const navToggle = isManagedSidebar ? managedOnNavToggle : onNavToggle;\n      const navOpen = isManagedSidebar ? managedIsNavOpen : isNavOpen;\n\n      return (\n        <Button\n          id=\"nav-toggle\"\n          onClick={navToggle}\n          aria-label=\"Side navigation toggle\"\n          aria-expanded={navOpen ? 'true' : 'false'}\n          variant={ButtonVariant.plain}\n          {...props}\n        >\n          {children}\n        </Button>\n      );\n    }}\n  </PageContextConsumer>\n);\nPageToggleButton.displayName = 'PageToggleButton';\n"]},"metadata":{},"sourceType":"module"}