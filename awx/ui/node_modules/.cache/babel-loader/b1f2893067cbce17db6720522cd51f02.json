{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import{i18n}from\"@lingui/core\";import React,{useState,useEffect,useCallback}from'react';import{useField}from'formik';import styled from'styled-components';import{Split,SplitItem,Button,Modal}from'@patternfly/react-core';import{ExpandArrowsAltIcon}from'@patternfly/react-icons';import{yamlToJson,jsonToYaml,isJsonString}from'util/yaml';import{CheckboxField}from'../FormField';import MultiButtonToggle from'../MultiButtonToggle';import CodeEditor from'./CodeEditor';import Popover from'../Popover';import{JSON_MODE,YAML_MODE}from'./constants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FieldHeader=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  padding-bottom: var(--pf-c-form__group-label--PaddingBottom);\\n\"])));var StyledCheckboxField=styled(CheckboxField)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  --pf-c-check__label--FontSize: var(--pf-c-form__label--FontSize);\\n  margin-left: auto;\\n\"])));function VariablesField(_ref){var id=_ref.id,name=_ref.name,label=_ref.label,readOnly=_ref.readOnly,promptId=_ref.promptId,tooltip=_ref.tooltip,initialMode=_ref.initialMode,onModeChange=_ref.onModeChange;// track focus manually, because the Code Editor library doesn't wire\n// into Formik completely\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),shouldValidate=_useState2[0],setShouldValidate=_useState2[1];var _useState3=useState(initialMode||YAML_MODE),_useState4=_slicedToArray(_useState3,2),mode=_useState4[0],setMode=_useState4[1];var validate=useCallback(function(value){if(!shouldValidate){return undefined;}try{if(mode===YAML_MODE){yamlToJson(value);}else{JSON.parse(value);}}catch(error){return error.message;}return undefined;},[shouldValidate,mode]);var _useField=useField({name:name,validate:validate}),_useField2=_slicedToArray(_useField,3),field=_useField2[0],meta=_useField2[1],helpers=_useField2[2];useEffect(function(){if(isJsonString(field.value)){// mode's useState above couldn't be initialized to JSON_MODE because\n// the field value had to be defined below it\nsetMode(JSON_MODE);onModeChange(JSON_MODE);helpers.setValue(JSON.stringify(JSON.parse(field.value),null,2));}},[]);// eslint-disable-line react-hooks/exhaustive-deps\nuseEffect(function(){if(shouldValidate){helpers.setError(validate(field.value));}},[shouldValidate,validate]// eslint-disable-line react-hooks/exhaustive-deps\n);var _useState5=useState(mode===YAML_MODE?field.value:null),_useState6=_slicedToArray(_useState5,2),lastYamlValue=_useState6[0],setLastYamlValue=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isJsonEdited=_useState8[0],setIsJsonEdited=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isExpanded=_useState10[0],setIsExpanded=_useState10[1];var handleModeChange=function handleModeChange(newMode){if(newMode===YAML_MODE&&!isJsonEdited&&lastYamlValue!==null){helpers.setValue(lastYamlValue,false);setMode(newMode);onModeChange(newMode);return;}try{var newVal=newMode===YAML_MODE?jsonToYaml(field.value):yamlToJson(field.value);helpers.setValue(newVal,false);setMode(newMode);onModeChange(newMode);}catch(err){helpers.setError(err.message);}};var handleChange=function handleChange(newVal){helpers.setValue(newVal);if(mode===JSON_MODE){setIsJsonEdited(true);}else{setLastYamlValue(newVal);setIsJsonEdited(false);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(VariablesFieldInternals,{id:id,name:name,label:label,readOnly:readOnly,promptId:promptId,tooltip:tooltip,onExpand:function onExpand(){return setIsExpanded(true);},mode:mode,setMode:handleModeChange,setShouldValidate:setShouldValidate,handleChange:handleChange}),/*#__PURE__*/_jsx(Modal,{variant:\"xlarge\",title:label,ouiaId:\"\".concat(id,\"-modal\"),isOpen:isExpanded,onClose:function onClose(){return setIsExpanded(false);},actions:[/*#__PURE__*/_jsx(Button,{\"aria-label\":/*i18n*/i18n._(\"Done\"),variant:\"primary\",onClick:function onClick(){return setIsExpanded(false);},ouiaId:\"\".concat(id,\"-variables-unexpand\"),children:/*i18n*/i18n._(\"Done\")},\"select\")],children:/*#__PURE__*/_jsx(\"div\",{className:\"pf-c-form\",children:/*#__PURE__*/_jsx(VariablesFieldInternals,{id:\"\".concat(id,\"-expanded\"),name:name,label:label,readOnly:readOnly,promptId:promptId,tooltip:tooltip,fullHeight:true,mode:mode,setMode:handleModeChange,setShouldValidate:setShouldValidate,handleChange:handleChange})})}),meta.error?/*#__PURE__*/_jsx(\"div\",{className:\"pf-c-form__helper-text pf-m-error\",\"aria-live\":\"polite\",children:meta.error}):null]});}VariablesField.defaultProps={readOnly:false,promptId:null,initialMode:YAML_MODE,onModeChange:function onModeChange(){}};function VariablesFieldInternals(_ref2){var id=_ref2.id,name=_ref2.name,label=_ref2.label,readOnly=_ref2.readOnly,promptId=_ref2.promptId,tooltip=_ref2.tooltip,fullHeight=_ref2.fullHeight,mode=_ref2.mode,setMode=_ref2.setMode,onExpand=_ref2.onExpand,setShouldValidate=_ref2.setShouldValidate,handleChange=_ref2.handleChange;var _useField3=useField(name),_useField4=_slicedToArray(_useField3,3),field=_useField4[0],meta=_useField4[1],helpers=_useField4[2];useEffect(function(){if(mode===YAML_MODE){return;}try{helpers.setValue(JSON.stringify(JSON.parse(field.value),null,2));}catch(e){helpers.setError(e.message);}},[]);// eslint-disable-line react-hooks/exhaustive-deps\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"pf-c-form__group\",children:[/*#__PURE__*/_jsxs(FieldHeader,{\"data-cy\":\"\".concat(id,\"-label\"),children:[/*#__PURE__*/_jsxs(Split,{hasGutter:true,children:[/*#__PURE__*/_jsxs(SplitItem,{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:id,className:\"pf-c-form__label\",children:/*#__PURE__*/_jsx(\"span\",{className:\"pf-c-form__label-text\",children:label})}),tooltip&&/*#__PURE__*/_jsx(Popover,{content:tooltip,id:\"\".concat(id,\"-tooltip\")})]}),/*#__PURE__*/_jsx(SplitItem,{children:/*#__PURE__*/_jsx(MultiButtonToggle,{buttons:[[YAML_MODE,'YAML'],[JSON_MODE,'JSON']],value:mode,onChange:setMode,name:name})})]}),promptId&&/*#__PURE__*/_jsx(StyledCheckboxField,{id:\"template-ask-variables-on-launch\",label:/*i18n*/i18n._(\"Prompt on launch\"),name:\"ask_variables_on_launch\"}),onExpand&&/*#__PURE__*/_jsx(Button,{variant:\"plain\",\"aria-label\":/*i18n*/i18n._(\"Expand input\"),onClick:onExpand,ouiaId:\"\".concat(id,\"-expand\"),children:/*#__PURE__*/_jsx(ExpandArrowsAltIcon,{})})]}),/*#__PURE__*/_jsx(CodeEditor,_objectSpread(_objectSpread({id:id,mode:mode,readOnly:readOnly},field),{},{onChange:handleChange,fullHeight:fullHeight,onFocus:function onFocus(){return setShouldValidate(false);},onBlur:function onBlur(){return setShouldValidate(true);},hasErrors:!!meta.error}))]});}export default VariablesField;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/CodeEditor/VariablesField.js"],"names":["React","useState","useEffect","useCallback","useField","styled","Split","SplitItem","Button","Modal","ExpandArrowsAltIcon","yamlToJson","jsonToYaml","isJsonString","CheckboxField","MultiButtonToggle","CodeEditor","Popover","JSON_MODE","YAML_MODE","FieldHeader","div","StyledCheckboxField","VariablesField","id","name","label","readOnly","promptId","tooltip","initialMode","onModeChange","shouldValidate","setShouldValidate","mode","setMode","validate","value","undefined","JSON","parse","error","message","field","meta","helpers","setValue","stringify","setError","lastYamlValue","setLastYamlValue","isJsonEdited","setIsJsonEdited","isExpanded","setIsExpanded","handleModeChange","newMode","newVal","err","handleChange","defaultProps","VariablesFieldInternals","fullHeight","onExpand","e"],"mappings":"wYAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,WAArC,KAAwD,OAAxD,CAIA,OAASC,QAAT,KAAyB,QAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,KAAT,CAAgBC,SAAhB,CAA2BC,MAA3B,CAAmCC,KAAnC,KAAgD,wBAAhD,CACA,OAASC,mBAAT,KAAoC,yBAApC,CACA,OAASC,UAAT,CAAqBC,UAArB,CAAiCC,YAAjC,KAAqD,WAArD,CACA,OAASC,aAAT,KAA8B,cAA9B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,sBAA9B,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,OAASC,SAAT,CAAoBC,SAApB,KAAqC,aAArC,C,wFAEA,GAAMC,CAAAA,WAAW,CAAGf,MAAM,CAACgB,GAAV,yLAAjB,CAMA,GAAMC,CAAAA,mBAAmB,CAAGjB,MAAM,CAACS,aAAD,CAAT,gKAAzB,CAKA,QAASS,CAAAA,cAAT,MASG,IARDC,CAAAA,EAQC,MARDA,EAQC,CAPDC,IAOC,MAPDA,IAOC,CANDC,KAMC,MANDA,KAMC,CALDC,QAKC,MALDA,QAKC,CAJDC,QAIC,MAJDA,QAIC,CAHDC,OAGC,MAHDA,OAGC,CAFDC,WAEC,MAFDA,WAEC,CADDC,YACC,MADDA,YACC,CACD;AACA;AACA,cAA4C9B,QAAQ,CAAC,KAAD,CAApD,wCAAO+B,cAAP,eAAuBC,iBAAvB,eACA,eAAwBhC,QAAQ,CAAC6B,WAAW,EAAIX,SAAhB,CAAhC,yCAAOe,IAAP,eAAaC,OAAb,eACA,GAAMC,CAAAA,QAAQ,CAAGjC,WAAW,CAC1B,SAACkC,KAAD,CAAW,CACT,GAAI,CAACL,cAAL,CAAqB,CACnB,MAAOM,CAAAA,SAAP,CACD,CACD,GAAI,CACF,GAAIJ,IAAI,GAAKf,SAAb,CAAwB,CACtBR,UAAU,CAAC0B,KAAD,CAAV,CACD,CAFD,IAEO,CACLE,IAAI,CAACC,KAAL,CAAWH,KAAX,EACD,CACF,CAAC,MAAOI,KAAP,CAAc,CACd,MAAOA,CAAAA,KAAK,CAACC,OAAb,CACD,CACD,MAAOJ,CAAAA,SAAP,CACD,CAfyB,CAgB1B,CAACN,cAAD,CAAiBE,IAAjB,CAhB0B,CAA5B,CAkBA,cAA+B9B,QAAQ,CAAC,CAAEqB,IAAI,CAAJA,IAAF,CAAQW,QAAQ,CAARA,QAAR,CAAD,CAAvC,wCAAOO,KAAP,eAAcC,IAAd,eAAoBC,OAApB,eAEA3C,SAAS,CAAC,UAAM,CACd,GAAIW,YAAY,CAAC8B,KAAK,CAACN,KAAP,CAAhB,CAA+B,CAC7B;AACA;AACAF,OAAO,CAACjB,SAAD,CAAP,CACAa,YAAY,CAACb,SAAD,CAAZ,CACA2B,OAAO,CAACC,QAAR,CAAiBP,IAAI,CAACQ,SAAL,CAAeR,IAAI,CAACC,KAAL,CAAWG,KAAK,CAACN,KAAjB,CAAf,CAAwC,IAAxC,CAA8C,CAA9C,CAAjB,EACD,CACF,CARQ,CAQN,EARM,CAAT,CAQQ;AAERnC,SAAS,CACP,UAAM,CACJ,GAAI8B,cAAJ,CAAoB,CAClBa,OAAO,CAACG,QAAR,CAAiBZ,QAAQ,CAACO,KAAK,CAACN,KAAP,CAAzB,EACD,CACF,CALM,CAMP,CAACL,cAAD,CAAiBI,QAAjB,CAA2B;AANpB,CAAT,CAQA,eAA0CnC,QAAQ,CAChDiC,IAAI,GAAKf,SAAT,CAAqBwB,KAAK,CAACN,KAA3B,CAAmC,IADa,CAAlD,yCAAOY,aAAP,eAAsBC,gBAAtB,eAGA,eAAwCjD,QAAQ,CAAC,KAAD,CAAhD,yCAAOkD,YAAP,eAAqBC,eAArB,eACA,eAAoCnD,QAAQ,CAAC,KAAD,CAA5C,0CAAOoD,UAAP,gBAAmBC,aAAnB,gBAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,OAAD,CAAa,CACpC,GAAIA,OAAO,GAAKrC,SAAZ,EAAyB,CAACgC,YAA1B,EAA0CF,aAAa,GAAK,IAAhE,CAAsE,CACpEJ,OAAO,CAACC,QAAR,CAAiBG,aAAjB,CAAgC,KAAhC,EACAd,OAAO,CAACqB,OAAD,CAAP,CACAzB,YAAY,CAACyB,OAAD,CAAZ,CACA,OACD,CAED,GAAI,CACF,GAAMC,CAAAA,MAAM,CACVD,OAAO,GAAKrC,SAAZ,CACIP,UAAU,CAAC+B,KAAK,CAACN,KAAP,CADd,CAEI1B,UAAU,CAACgC,KAAK,CAACN,KAAP,CAHhB,CAIAQ,OAAO,CAACC,QAAR,CAAiBW,MAAjB,CAAyB,KAAzB,EACAtB,OAAO,CAACqB,OAAD,CAAP,CACAzB,YAAY,CAACyB,OAAD,CAAZ,CACD,CAAC,MAAOE,GAAP,CAAY,CACZb,OAAO,CAACG,QAAR,CAAiBU,GAAG,CAAChB,OAArB,EACD,CACF,CAnBD,CAqBA,GAAMiB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACF,MAAD,CAAY,CAC/BZ,OAAO,CAACC,QAAR,CAAiBW,MAAjB,EACA,GAAIvB,IAAI,GAAKhB,SAAb,CAAwB,CACtBkC,eAAe,CAAC,IAAD,CAAf,CACD,CAFD,IAEO,CACLF,gBAAgB,CAACO,MAAD,CAAhB,CACAL,eAAe,CAAC,KAAD,CAAf,CACD,CACF,CARD,CAUA,mBACE,oCACE,KAAC,uBAAD,EACE,EAAE,CAAE5B,EADN,CAEE,IAAI,CAAEC,IAFR,CAGE,KAAK,CAAEC,KAHT,CAIE,QAAQ,CAAEC,QAJZ,CAKE,QAAQ,CAAEC,QALZ,CAME,OAAO,CAAEC,OANX,CAOE,QAAQ,CAAE,0BAAMyB,CAAAA,aAAa,CAAC,IAAD,CAAnB,EAPZ,CAQE,IAAI,CAAEpB,IARR,CASE,OAAO,CAAEqB,gBATX,CAUE,iBAAiB,CAAEtB,iBAVrB,CAWE,YAAY,CAAE0B,YAXhB,EADF,cAcE,KAAC,KAAD,EACE,OAAO,CAAC,QADV,CAEE,KAAK,CAAEjC,KAFT,CAGE,MAAM,WAAKF,EAAL,UAHR,CAIE,MAAM,CAAE6B,UAJV,CAKE,OAAO,CAAE,yBAAMC,CAAAA,aAAa,CAAC,KAAD,CAAnB,EALX,CAME,OAAO,CAAE,cACP,KAAC,MAAD,EACE,qBAAY,cADd,CAGE,OAAO,CAAC,SAHV,CAIE,OAAO,CAAE,yBAAMA,CAAAA,aAAa,CAAC,KAAD,CAAnB,EAJX,CAKE,MAAM,WAAK9B,EAAL,uBALR,kBAOG,cAPH,EAEM,QAFN,CADO,CANX,uBAkBE,YAAK,SAAS,CAAC,WAAf,uBACE,KAAC,uBAAD,EACE,EAAE,WAAKA,EAAL,aADJ,CAEE,IAAI,CAAEC,IAFR,CAGE,KAAK,CAAEC,KAHT,CAIE,QAAQ,CAAEC,QAJZ,CAKE,QAAQ,CAAEC,QALZ,CAME,OAAO,CAAEC,OANX,CAOE,UAAU,KAPZ,CAQE,IAAI,CAAEK,IARR,CASE,OAAO,CAAEqB,gBATX,CAUE,iBAAiB,CAAEtB,iBAVrB,CAWE,YAAY,CAAE0B,YAXhB,EADF,EAlBF,EAdF,CAgDGf,IAAI,CAACH,KAAL,cACC,YAAK,SAAS,CAAC,mCAAf,CAAmD,YAAU,QAA7D,UACGG,IAAI,CAACH,KADR,EADD,CAIG,IApDN,GADF,CAwDD,CAUDlB,cAAc,CAACqC,YAAf,CAA8B,CAC5BjC,QAAQ,CAAE,KADkB,CAE5BC,QAAQ,CAAE,IAFkB,CAG5BE,WAAW,CAAEX,SAHe,CAI5BY,YAAY,CAAE,uBAAM,CAAE,CAJM,CAA9B,CAOA,QAAS8B,CAAAA,uBAAT,OAaG,IAZDrC,CAAAA,EAYC,OAZDA,EAYC,CAXDC,IAWC,OAXDA,IAWC,CAVDC,KAUC,OAVDA,KAUC,CATDC,QASC,OATDA,QASC,CARDC,QAQC,OARDA,QAQC,CAPDC,OAOC,OAPDA,OAOC,CANDiC,UAMC,OANDA,UAMC,CALD5B,IAKC,OALDA,IAKC,CAJDC,OAIC,OAJDA,OAIC,CAHD4B,QAGC,OAHDA,QAGC,CAFD9B,iBAEC,OAFDA,iBAEC,CADD0B,YACC,OADDA,YACC,CACD,eAA+BvD,QAAQ,CAACqB,IAAD,CAAvC,yCAAOkB,KAAP,eAAcC,IAAd,eAAoBC,OAApB,eAEA3C,SAAS,CAAC,UAAM,CACd,GAAIgC,IAAI,GAAKf,SAAb,CAAwB,CACtB,OACD,CACD,GAAI,CACF0B,OAAO,CAACC,QAAR,CAAiBP,IAAI,CAACQ,SAAL,CAAeR,IAAI,CAACC,KAAL,CAAWG,KAAK,CAACN,KAAjB,CAAf,CAAwC,IAAxC,CAA8C,CAA9C,CAAjB,EACD,CAAC,MAAO2B,CAAP,CAAU,CACVnB,OAAO,CAACG,QAAR,CAAiBgB,CAAC,CAACtB,OAAnB,EACD,CACF,CATQ,CASN,EATM,CAAT,CASQ;AAER,mBACE,aAAK,SAAS,CAAC,kBAAf,wBACE,MAAC,WAAD,EAAa,oBAAYlB,EAAZ,UAAb,wBACE,MAAC,KAAD,EAAO,SAAS,KAAhB,wBACE,MAAC,SAAD,yBACE,cAAO,OAAO,CAAEA,EAAhB,CAAoB,SAAS,CAAC,kBAA9B,uBACE,aAAM,SAAS,CAAC,uBAAhB,UAAyCE,KAAzC,EADF,EADF,CAIGG,OAAO,eAAI,KAAC,OAAD,EAAS,OAAO,CAAEA,OAAlB,CAA2B,EAAE,WAAKL,EAAL,YAA7B,EAJd,GADF,cAOE,KAAC,SAAD,wBACE,KAAC,iBAAD,EACE,OAAO,CAAE,CACP,CAACL,SAAD,CAAY,MAAZ,CADO,CAEP,CAACD,SAAD,CAAY,MAAZ,CAFO,CADX,CAKE,KAAK,CAAEgB,IALT,CAME,QAAQ,CAAEC,OANZ,CAOE,IAAI,CAAEV,IAPR,EADF,EAPF,GADF,CAoBGG,QAAQ,eACP,KAAC,mBAAD,EACE,EAAE,CAAC,kCADL,CAEE,KAAK,SAAE,0BAFT,CAGE,IAAI,CAAC,yBAHP,EArBJ,CA2BGmC,QAAQ,eACP,KAAC,MAAD,EACE,OAAO,CAAC,OADV,CAEE,qBAAY,sBAFd,CAGE,OAAO,CAAEA,QAHX,CAIE,MAAM,WAAKvC,EAAL,WAJR,uBAME,KAAC,mBAAD,IANF,EA5BJ,GADF,cAuCE,KAAC,UAAD,8BACE,EAAE,CAAEA,EADN,CAEE,IAAI,CAAEU,IAFR,CAGE,QAAQ,CAAEP,QAHZ,EAIMgB,KAJN,MAKE,QAAQ,CAAEgB,YALZ,CAME,UAAU,CAAEG,UANd,CAOE,OAAO,CAAE,yBAAM7B,CAAAA,iBAAiB,CAAC,KAAD,CAAvB,EAPX,CAQE,MAAM,CAAE,wBAAMA,CAAAA,iBAAiB,CAAC,IAAD,CAAvB,EARV,CASE,SAAS,CAAE,CAAC,CAACW,IAAI,CAACH,KATpB,GAvCF,GADF,CAqDD,CAED,cAAelB,CAAAA,cAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { string, bool, func, oneOf } from 'prop-types';\n\nimport { t } from '@lingui/macro';\nimport { useField } from 'formik';\nimport styled from 'styled-components';\nimport { Split, SplitItem, Button, Modal } from '@patternfly/react-core';\nimport { ExpandArrowsAltIcon } from '@patternfly/react-icons';\nimport { yamlToJson, jsonToYaml, isJsonString } from 'util/yaml';\nimport { CheckboxField } from '../FormField';\nimport MultiButtonToggle from '../MultiButtonToggle';\nimport CodeEditor from './CodeEditor';\nimport Popover from '../Popover';\nimport { JSON_MODE, YAML_MODE } from './constants';\n\nconst FieldHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: var(--pf-c-form__group-label--PaddingBottom);\n`;\n\nconst StyledCheckboxField = styled(CheckboxField)`\n  --pf-c-check__label--FontSize: var(--pf-c-form__label--FontSize);\n  margin-left: auto;\n`;\n\nfunction VariablesField({\n  id,\n  name,\n  label,\n  readOnly,\n  promptId,\n  tooltip,\n  initialMode,\n  onModeChange,\n}) {\n  // track focus manually, because the Code Editor library doesn't wire\n  // into Formik completely\n  const [shouldValidate, setShouldValidate] = useState(false);\n  const [mode, setMode] = useState(initialMode || YAML_MODE);\n  const validate = useCallback(\n    (value) => {\n      if (!shouldValidate) {\n        return undefined;\n      }\n      try {\n        if (mode === YAML_MODE) {\n          yamlToJson(value);\n        } else {\n          JSON.parse(value);\n        }\n      } catch (error) {\n        return error.message;\n      }\n      return undefined;\n    },\n    [shouldValidate, mode]\n  );\n  const [field, meta, helpers] = useField({ name, validate });\n\n  useEffect(() => {\n    if (isJsonString(field.value)) {\n      // mode's useState above couldn't be initialized to JSON_MODE because\n      // the field value had to be defined below it\n      setMode(JSON_MODE);\n      onModeChange(JSON_MODE);\n      helpers.setValue(JSON.stringify(JSON.parse(field.value), null, 2));\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(\n    () => {\n      if (shouldValidate) {\n        helpers.setError(validate(field.value));\n      }\n    },\n    [shouldValidate, validate] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  const [lastYamlValue, setLastYamlValue] = useState(\n    mode === YAML_MODE ? field.value : null\n  );\n  const [isJsonEdited, setIsJsonEdited] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const handleModeChange = (newMode) => {\n    if (newMode === YAML_MODE && !isJsonEdited && lastYamlValue !== null) {\n      helpers.setValue(lastYamlValue, false);\n      setMode(newMode);\n      onModeChange(newMode);\n      return;\n    }\n\n    try {\n      const newVal =\n        newMode === YAML_MODE\n          ? jsonToYaml(field.value)\n          : yamlToJson(field.value);\n      helpers.setValue(newVal, false);\n      setMode(newMode);\n      onModeChange(newMode);\n    } catch (err) {\n      helpers.setError(err.message);\n    }\n  };\n\n  const handleChange = (newVal) => {\n    helpers.setValue(newVal);\n    if (mode === JSON_MODE) {\n      setIsJsonEdited(true);\n    } else {\n      setLastYamlValue(newVal);\n      setIsJsonEdited(false);\n    }\n  };\n\n  return (\n    <div>\n      <VariablesFieldInternals\n        id={id}\n        name={name}\n        label={label}\n        readOnly={readOnly}\n        promptId={promptId}\n        tooltip={tooltip}\n        onExpand={() => setIsExpanded(true)}\n        mode={mode}\n        setMode={handleModeChange}\n        setShouldValidate={setShouldValidate}\n        handleChange={handleChange}\n      />\n      <Modal\n        variant=\"xlarge\"\n        title={label}\n        ouiaId={`${id}-modal`}\n        isOpen={isExpanded}\n        onClose={() => setIsExpanded(false)}\n        actions={[\n          <Button\n            aria-label={t`Done`}\n            key=\"select\"\n            variant=\"primary\"\n            onClick={() => setIsExpanded(false)}\n            ouiaId={`${id}-variables-unexpand`}\n          >\n            {t`Done`}\n          </Button>,\n        ]}\n      >\n        <div className=\"pf-c-form\">\n          <VariablesFieldInternals\n            id={`${id}-expanded`}\n            name={name}\n            label={label}\n            readOnly={readOnly}\n            promptId={promptId}\n            tooltip={tooltip}\n            fullHeight\n            mode={mode}\n            setMode={handleModeChange}\n            setShouldValidate={setShouldValidate}\n            handleChange={handleChange}\n          />\n        </div>\n      </Modal>\n      {meta.error ? (\n        <div className=\"pf-c-form__helper-text pf-m-error\" aria-live=\"polite\">\n          {meta.error}\n        </div>\n      ) : null}\n    </div>\n  );\n}\nVariablesField.propTypes = {\n  id: string.isRequired,\n  name: string.isRequired,\n  label: string.isRequired,\n  readOnly: bool,\n  promptId: string,\n  initialMode: oneOf([YAML_MODE, JSON_MODE]),\n  onModeChange: func,\n};\nVariablesField.defaultProps = {\n  readOnly: false,\n  promptId: null,\n  initialMode: YAML_MODE,\n  onModeChange: () => {},\n};\n\nfunction VariablesFieldInternals({\n  id,\n  name,\n  label,\n  readOnly,\n  promptId,\n  tooltip,\n  fullHeight,\n  mode,\n  setMode,\n  onExpand,\n  setShouldValidate,\n  handleChange,\n}) {\n  const [field, meta, helpers] = useField(name);\n\n  useEffect(() => {\n    if (mode === YAML_MODE) {\n      return;\n    }\n    try {\n      helpers.setValue(JSON.stringify(JSON.parse(field.value), null, 2));\n    } catch (e) {\n      helpers.setError(e.message);\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div className=\"pf-c-form__group\">\n      <FieldHeader data-cy={`${id}-label`}>\n        <Split hasGutter>\n          <SplitItem>\n            <label htmlFor={id} className=\"pf-c-form__label\">\n              <span className=\"pf-c-form__label-text\">{label}</span>\n            </label>\n            {tooltip && <Popover content={tooltip} id={`${id}-tooltip`} />}\n          </SplitItem>\n          <SplitItem>\n            <MultiButtonToggle\n              buttons={[\n                [YAML_MODE, 'YAML'],\n                [JSON_MODE, 'JSON'],\n              ]}\n              value={mode}\n              onChange={setMode}\n              name={name}\n            />\n          </SplitItem>\n        </Split>\n        {promptId && (\n          <StyledCheckboxField\n            id=\"template-ask-variables-on-launch\"\n            label={t`Prompt on launch`}\n            name=\"ask_variables_on_launch\"\n          />\n        )}\n        {onExpand && (\n          <Button\n            variant=\"plain\"\n            aria-label={t`Expand input`}\n            onClick={onExpand}\n            ouiaId={`${id}-expand`}\n          >\n            <ExpandArrowsAltIcon />\n          </Button>\n        )}\n      </FieldHeader>\n      <CodeEditor\n        id={id}\n        mode={mode}\n        readOnly={readOnly}\n        {...field}\n        onChange={handleChange}\n        fullHeight={fullHeight}\n        onFocus={() => setShouldValidate(false)}\n        onBlur={() => setShouldValidate(true)}\n        hasErrors={!!meta.error}\n      />\n    </div>\n  );\n}\n\nexport default VariablesField;\n"]},"metadata":{},"sourceType":"module"}