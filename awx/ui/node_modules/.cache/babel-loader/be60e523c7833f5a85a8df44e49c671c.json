{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _taggedTemplateLiteral from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useEffect,useCallback}from'react';import{useHistory}from'react-router-dom';import styled from'styled-components';import{useField}from'formik';import{Form,FormGroup,Alert}from'@patternfly/react-core';import{CredentialsAPI}from'api';import{getQSConfig,parseQueryString,mergeParams}from'util/qs';import useRequest from'hooks/useRequest';import{required}from'util/validators';import{getSearchableKeys}from'components/PaginatedTable';import Popover from'../Popover';import ContentError from'../ContentError';import ContentLoading from'../ContentLoading';import OptionsList from'../OptionsList';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CredentialErrorAlert=styled(Alert)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin-bottom: 20px;\\n\"])));var QS_CONFIG=getQSConfig('credentials',{page:1,page_size:5,order_by:'name'});function AdHocCredentialStep(_ref){var credentialTypeId=_ref.credentialTypeId;var history=useHistory();var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _actionsResponse$data,_actionsResponse$data2;var params,_yield$Promise$all,_yield$Promise$all2,_yield$Promise$all2$,results,count,actionsResponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:params=parseQueryString(QS_CONFIG,history.location.search);_context.next=3;return Promise.all([CredentialsAPI.read(mergeParams(params,{credential_type:credentialTypeId})),CredentialsAPI.readOptions()]);case 3:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);_yield$Promise$all2$=_yield$Promise$all2[0].data;results=_yield$Promise$all2$.results;count=_yield$Promise$all2$.count;actionsResponse=_yield$Promise$all2[1];return _context.abrupt(\"return\",{credentials:results,credentialCount:count,relatedSearchableKeys:((actionsResponse===null||actionsResponse===void 0?void 0:(_actionsResponse$data=actionsResponse.data)===null||_actionsResponse$data===void 0?void 0:_actionsResponse$data.related_search_fields)||[]).map(function(val){return val.slice(0,-8);}),searchableKeys:getSearchableKeys((_actionsResponse$data2=actionsResponse.data.actions)===null||_actionsResponse$data2===void 0?void 0:_actionsResponse$data2.GET)});case 10:case\"end\":return _context.stop();}}},_callee);})),[credentialTypeId,history.location.search]),{credentials:[],credentialCount:0,relatedSearchableKeys:[],searchableKeys:[]}),error=_useRequest.error,isLoading=_useRequest.isLoading,fetchCredentials=_useRequest.request,_useRequest$result=_useRequest.result,credentials=_useRequest$result.credentials,credentialCount=_useRequest$result.credentialCount,relatedSearchableKeys=_useRequest$result.relatedSearchableKeys,searchableKeys=_useRequest$result.searchableKeys;useEffect(function(){fetchCredentials();},[fetchCredentials]);var _useField=useField({name:'credentials',validate:required(null)}),_useField2=_slicedToArray(_useField,3),field=_useField2[0],meta=_useField2[1],helpers=_useField2[2];if(error){return/*#__PURE__*/_jsx(ContentError,{error:error});}if(isLoading){return/*#__PURE__*/_jsx(ContentLoading,{});}return/*#__PURE__*/_jsxs(_Fragment,{children:[meta.touched&&meta.error&&/*#__PURE__*/_jsx(CredentialErrorAlert,{variant:\"danger\",isInline:true,title:meta.error}),/*#__PURE__*/_jsx(Form,{children:/*#__PURE__*/_jsx(FormGroup,{fieldId:\"credential\",label:/*i18n*/i18n._(\"Machine Credential\"),\"aria-label\":/*i18n*/i18n._(\"Machine Credential\"),isRequired:true,validated:!meta.touched||!meta.error?'default':'error',helperTextInvalid:meta.error,labelIcon:/*#__PURE__*/_jsx(Popover,{content:/*i18n*/i18n._(\"Select the credential you want to use when accessing the remote hosts to run the command. Choose the credential containing the username and SSH key or password that Ansible will need to log into the remote hosts.\")}),children:/*#__PURE__*/_jsx(OptionsList,{value:field.value||[],options:credentials,optionCount:credentialCount,header:/*i18n*/i18n._(\"Machine Credential\"),readOnly:true,qsConfig:QS_CONFIG,searchColumns:[{name:/*i18n*/i18n._(\"Name\"),key:'name',isDefault:true},{name:/*i18n*/i18n._(\"Created By (Username)\"),key:'created_by__username'},{name:/*i18n*/i18n._(\"Modified By (Username)\"),key:'modified_by__username'}],sortColumns:[{name:/*i18n*/i18n._(\"Name\"),key:'name'}],name:\"credential\",selectItem:function selectItem(value){helpers.setValue([value]);},deselectItem:function deselectItem(){helpers.setValue([]);},searchableKeys:searchableKeys,relatedSearchableKeys:relatedSearchableKeys})})})]});}export default AdHocCredentialStep;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/AdHocCommands/AdHocCredentialStep.js"],"names":["React","useEffect","useCallback","useHistory","styled","useField","Form","FormGroup","Alert","CredentialsAPI","getQSConfig","parseQueryString","mergeParams","useRequest","required","getSearchableKeys","Popover","ContentError","ContentLoading","OptionsList","CredentialErrorAlert","QS_CONFIG","page","page_size","order_by","AdHocCredentialStep","credentialTypeId","history","params","location","search","Promise","all","read","credential_type","readOptions","data","results","count","actionsResponse","credentials","credentialCount","relatedSearchableKeys","related_search_fields","map","val","slice","searchableKeys","actions","GET","error","isLoading","fetchCredentials","request","result","name","validate","field","meta","helpers","touched","value","key","isDefault","setValue"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { t } from '@lingui/macro';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { useField } from 'formik';\nimport { Form, FormGroup, Alert } from '@patternfly/react-core';\nimport { CredentialsAPI } from 'api';\nimport { getQSConfig, parseQueryString, mergeParams } from 'util/qs';\nimport useRequest from 'hooks/useRequest';\nimport { required } from 'util/validators';\nimport { getSearchableKeys } from 'components/PaginatedTable';\nimport Popover from '../Popover';\n\nimport ContentError from '../ContentError';\nimport ContentLoading from '../ContentLoading';\nimport OptionsList from '../OptionsList';\n\nconst CredentialErrorAlert = styled(Alert)`\n  margin-bottom: 20px;\n`;\n\nconst QS_CONFIG = getQSConfig('credentials', {\n  page: 1,\n  page_size: 5,\n  order_by: 'name',\n});\n\nfunction AdHocCredentialStep({ credentialTypeId }) {\n  const history = useHistory();\n  const {\n    error,\n    isLoading,\n    request: fetchCredentials,\n    result: {\n      credentials,\n      credentialCount,\n      relatedSearchableKeys,\n      searchableKeys,\n    },\n  } = useRequest(\n    useCallback(async () => {\n      const params = parseQueryString(QS_CONFIG, history.location.search);\n\n      const [\n        {\n          data: { results, count },\n        },\n        actionsResponse,\n      ] = await Promise.all([\n        CredentialsAPI.read(\n          mergeParams(params, { credential_type: credentialTypeId })\n        ),\n        CredentialsAPI.readOptions(),\n      ]);\n\n      return {\n        credentials: results,\n        credentialCount: count,\n        relatedSearchableKeys: (\n          actionsResponse?.data?.related_search_fields || []\n        ).map((val) => val.slice(0, -8)),\n        searchableKeys: getSearchableKeys(actionsResponse.data.actions?.GET),\n      };\n    }, [credentialTypeId, history.location.search]),\n    {\n      credentials: [],\n      credentialCount: 0,\n      relatedSearchableKeys: [],\n      searchableKeys: [],\n    }\n  );\n\n  useEffect(() => {\n    fetchCredentials();\n  }, [fetchCredentials]);\n\n  const [field, meta, helpers] = useField({\n    name: 'credentials',\n    validate: required(null),\n  });\n\n  if (error) {\n    return <ContentError error={error} />;\n  }\n  if (isLoading) {\n    return <ContentLoading />;\n  }\n  return (\n    <>\n      {meta.touched && meta.error && (\n        <CredentialErrorAlert variant=\"danger\" isInline title={meta.error} />\n      )}\n      <Form>\n        <FormGroup\n          fieldId=\"credential\"\n          label={t`Machine Credential`}\n          aria-label={t`Machine Credential`}\n          isRequired\n          validated={!meta.touched || !meta.error ? 'default' : 'error'}\n          helperTextInvalid={meta.error}\n          labelIcon={\n            <Popover\n              content={t`Select the credential you want to use when accessing the remote hosts to run the command. Choose the credential containing the username and SSH key or password that Ansible will need to log into the remote hosts.`}\n            />\n          }\n        >\n          <OptionsList\n            value={field.value || []}\n            options={credentials}\n            optionCount={credentialCount}\n            header={t`Machine Credential`}\n            readOnly\n            qsConfig={QS_CONFIG}\n            searchColumns={[\n              {\n                name: t`Name`,\n                key: 'name',\n                isDefault: true,\n              },\n              {\n                name: t`Created By (Username)`,\n                key: 'created_by__username',\n              },\n              {\n                name: t`Modified By (Username)`,\n                key: 'modified_by__username',\n              },\n            ]}\n            sortColumns={[\n              {\n                name: t`Name`,\n                key: 'name',\n              },\n            ]}\n            name=\"credential\"\n            selectItem={(value) => {\n              helpers.setValue([value]);\n            }}\n            deselectItem={() => {\n              helpers.setValue([]);\n            }}\n            searchableKeys={searchableKeys}\n            relatedSearchableKeys={relatedSearchableKeys}\n          />\n        </FormGroup>\n      </Form>\n    </>\n  );\n}\n\nAdHocCredentialStep.propTypes = {\n  credentialTypeId: PropTypes.number.isRequired,\n};\nexport default AdHocCredentialStep;\n"]},"metadata":{},"sourceType":"module"}