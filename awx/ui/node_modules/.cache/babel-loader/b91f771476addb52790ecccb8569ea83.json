{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport styles from '@patternfly/react-styles/css/components/Breadcrumb/breadcrumb';\nimport { css } from '@patternfly/react-styles';\nexport var BreadcrumbHeading = function BreadcrumbHeading(_a) {\n  var _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      _a$to = _a.to,\n      to = _a$to === void 0 ? undefined : _a$to,\n      _a$target = _a.target,\n      target = _a$target === void 0 ? undefined : _a$target,\n      _a$component = _a.component,\n      component = _a$component === void 0 ? 'a' : _a$component,\n      showDivider = _a.showDivider,\n      props = __rest(_a, [\"children\", \"className\", \"to\", \"target\", \"component\", \"showDivider\"]);\n\n  var Component = component;\n  return React.createElement(\"li\", Object.assign({}, props, {\n    className: css(styles.breadcrumbItem, className)\n  }), showDivider && React.createElement(\"span\", {\n    className: styles.breadcrumbItemDivider\n  }, React.createElement(AngleRightIcon, null)), React.createElement(\"h1\", {\n    className: styles.breadcrumbHeading\n  }, !to && component === 'button' && React.createElement(\"button\", {\n    className: css(styles.breadcrumbLink, styles.modifiers.current),\n    \"aria-current\": true,\n    type: \"button\"\n  }, children), to && React.createElement(Component, {\n    href: to,\n    target: target,\n    className: css(styles.breadcrumbLink, styles.modifiers.current),\n    \"aria-current\": \"page\"\n  }, children), !to && component !== 'button' && React.createElement(React.Fragment, null, children)));\n};\nBreadcrumbHeading.displayName = 'BreadcrumbHeading';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Breadcrumb/BreadcrumbHeading.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,cAAP,MAA2B,yDAA3B;AACA,OAAO,MAAP,MAAmB,+DAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AAiBA,OAAO,IAAM,iBAAiB,GAAoD,SAArE,iBAAqE,CAAC,EAAD,EAQrD;AARsD,oBAMtE,EANsE,CACjF,QADiF;AAAA,MACjF,QADiF,4BACtE,IADsE;AAAA,qBAMtE,EANsE,CAEjF,SAFiF;AAAA,MAEjF,SAFiF,6BAErE,EAFqE;AAAA,cAMtE,EANsE,CAGjF,EAHiF;AAAA,MAGjF,EAHiF,sBAG5E,SAH4E;AAAA,kBAMtE,EANsE,CAIjF,MAJiF;AAAA,MAIjF,MAJiF,0BAIxE,SAJwE;AAAA,qBAMtE,EANsE,CAKjF,SALiF;AAAA,MAKjF,SALiF,6BAKrE,GALqE;AAAA,MAMjF,WANiF,GAMtE,EANsE,CAMjF,WANiF;AAAA,MAO9E,KAP8E,GAOzE,MAAA,CAAA,EAAA,EAPyE,CAAA,UAAA,EAAA,WAAA,EAAA,IAAA,EAAA,QAAA,EAAA,WAAA,EAAA,aAAA,CAOzE,CAPyE;;AASjF,MAAM,SAAS,GAAG,SAAlB;AACA,SACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,KAAR,EAAa;AAAE,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,cAAR,EAAwB,SAAxB;AAAhB,GAAb,CAAA,EACG,WAAW,IACV,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAE,MAAM,CAAC;AAAxB,GAAA,EACE,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,IAAf,CADF,CAFJ,EAME,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAI,IAAA,SAAS,EAAE,MAAM,CAAC;AAAtB,GAAA,EACG,CAAC,EAAD,IAAO,SAAS,KAAK,QAArB,IACC,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,cAAR,EAAwB,MAAM,CAAC,SAAP,CAAiB,OAAzC,CAAtB;AAAuE,oBAAA,IAAvE;AAAsF,IAAA,IAAI,EAAC;AAA3F,GAAA,EACG,QADH,CAFJ,EAMG,EAAE,IACD,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU;AACR,IAAA,IAAI,EAAE,EADE;AAER,IAAA,MAAM,EAAE,MAFA;AAGR,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,cAAR,EAAwB,MAAM,CAAC,SAAP,CAAiB,OAAzC,CAHN;AAGuD,oBAClD;AAJL,GAAV,EAMG,QANH,CAPJ,EAgBG,CAAC,EAAD,IAAO,SAAS,KAAK,QAArB,IAAiC,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,QAAP,EAAe,IAAf,EAAiB,QAAjB,CAhBpC,CANF,CADF;AA2BD,CArCM;AAsCP,iBAAiB,CAAC,WAAlB,GAAgC,mBAAhC","sourcesContent":["import * as React from 'react';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport styles from '@patternfly/react-styles/css/components/Breadcrumb/breadcrumb';\nimport { css } from '@patternfly/react-styles';\n\nexport interface BreadcrumbHeadingProps extends React.HTMLProps<HTMLLIElement> {\n  /** Content rendered inside the breadcrumb title. */\n  children?: React.ReactNode;\n  /** Additional classes added to the breadcrumb item. */\n  className?: string;\n  /** HREF for breadcrumb link. */\n  to?: string;\n  /** Target for breadcrumb link. */\n  target?: string;\n  /** Sets the base component to render. Defaults to <a> */\n  component?: React.ReactNode;\n  /** Internal prop set by Breadcrumb on all but the first crumb */\n  showDivider?: boolean;\n}\n\nexport const BreadcrumbHeading: React.FunctionComponent<BreadcrumbHeadingProps> = ({\n  children = null,\n  className = '',\n  to = undefined,\n  target = undefined,\n  component = 'a',\n  showDivider,\n  ...props\n}: BreadcrumbHeadingProps) => {\n  const Component = component as any;\n  return (\n    <li {...props} className={css(styles.breadcrumbItem, className)}>\n      {showDivider && (\n        <span className={styles.breadcrumbItemDivider}>\n          <AngleRightIcon />\n        </span>\n      )}\n      <h1 className={styles.breadcrumbHeading}>\n        {!to && component === 'button' && (\n          <button className={css(styles.breadcrumbLink, styles.modifiers.current)} aria-current type=\"button\">\n            {children}\n          </button>\n        )}\n        {to && (\n          <Component\n            href={to}\n            target={target}\n            className={css(styles.breadcrumbLink, styles.modifiers.current)}\n            aria-current=\"page\"\n          >\n            {children}\n          </Component>\n        )}\n        {!to && component !== 'button' && <React.Fragment>{children}</React.Fragment>}\n      </h1>\n    </li>\n  );\n};\nBreadcrumbHeading.displayName = 'BreadcrumbHeading';\n"]},"metadata":{},"sourceType":"module"}