{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect,useRef}from'react';export default function useWebsocket(subscribeGroups){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),lastMessage=_useState2[0],setLastMessage=_useState2[1];var ws=useRef(null);useEffect(function(){ws.current=new WebSocket(\"\".concat(window.location.protocol==='http:'?'ws:':'wss:',\"//\").concat(window.location.host).concat(window.location.pathname,\"websocket/\"));var connect=function connect(){var xrftoken=\"; \".concat(document.cookie).split('; csrftoken=').pop().split(';').shift();ws.current.send(JSON.stringify({xrftoken:xrftoken,groups:subscribeGroups}));};ws.current.onopen=connect;ws.current.onmessage=function(e){setLastMessage(JSON.parse(e.data));};ws.current.onclose=function(e){if(e.code!==1000){// eslint-disable-next-line no-console\nconsole.debug('Socket closed. Reconnecting...',e);setTimeout(function(){connect();},1000);}};ws.current.onerror=function(err){// eslint-disable-next-line no-console\nconsole.debug('Socket error: ',err,'Disconnecting...');ws.current.close();};return function(){ws.current.close();};},[]);// eslint-disable-line react-hooks/exhaustive-deps\nreturn lastMessage;}","map":{"version":3,"sources":["/awx_devel/awx/ui/src/hooks/useWebsocket.js"],"names":["useState","useEffect","useRef","useWebsocket","subscribeGroups","lastMessage","setLastMessage","ws","current","WebSocket","window","location","protocol","host","pathname","connect","xrftoken","document","cookie","split","pop","shift","send","JSON","stringify","groups","onopen","onmessage","e","parse","data","onclose","code","console","debug","setTimeout","onerror","err","close"],"mappings":"uGAAA,OAASA,QAAT,CAAmBC,SAAnB,CAA8BC,MAA9B,KAA4C,OAA5C,CAEA,cAAe,SAASC,CAAAA,YAAT,CAAsBC,eAAtB,CAAuC,CACpD,cAAsCJ,QAAQ,CAAC,IAAD,CAA9C,wCAAOK,WAAP,eAAoBC,cAApB,eACA,GAAMC,CAAAA,EAAE,CAAGL,MAAM,CAAC,IAAD,CAAjB,CAEAD,SAAS,CAAC,UAAM,CACdM,EAAE,CAACC,OAAH,CAAa,GAAIC,CAAAA,SAAJ,WACRC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,GAA6B,OAA7B,CAAuC,KAAvC,CAA+C,MADvC,cAETF,MAAM,CAACC,QAAP,CAAgBE,IAFP,SAGRH,MAAM,CAACC,QAAP,CAAgBG,QAHR,eAAb,CAMA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB,GAAMC,CAAAA,QAAQ,CAAG,YAAKC,QAAQ,CAACC,MAAd,EACdC,KADc,CACR,cADQ,EAEdC,GAFc,GAGdD,KAHc,CAGR,GAHQ,EAIdE,KAJc,EAAjB,CAKAd,EAAE,CAACC,OAAH,CAAWc,IAAX,CACEC,IAAI,CAACC,SAAL,CAAe,CACbR,QAAQ,CAARA,QADa,CAEbS,MAAM,CAAErB,eAFK,CAAf,CADF,EAMD,CAZD,CAaAG,EAAE,CAACC,OAAH,CAAWkB,MAAX,CAAoBX,OAApB,CAEAR,EAAE,CAACC,OAAH,CAAWmB,SAAX,CAAuB,SAACC,CAAD,CAAO,CAC5BtB,cAAc,CAACiB,IAAI,CAACM,KAAL,CAAWD,CAAC,CAACE,IAAb,CAAD,CAAd,CACD,CAFD,CAIAvB,EAAE,CAACC,OAAH,CAAWuB,OAAX,CAAqB,SAACH,CAAD,CAAO,CAC1B,GAAIA,CAAC,CAACI,IAAF,GAAW,IAAf,CAAqB,CACnB;AACAC,OAAO,CAACC,KAAR,CAAc,gCAAd,CAAgDN,CAAhD,EACAO,UAAU,CAAC,UAAM,CACfpB,OAAO,GACR,CAFS,CAEP,IAFO,CAAV,CAGD,CACF,CARD,CAUAR,EAAE,CAACC,OAAH,CAAW4B,OAAX,CAAqB,SAACC,GAAD,CAAS,CAC5B;AACAJ,OAAO,CAACC,KAAR,CAAc,gBAAd,CAAgCG,GAAhC,CAAqC,kBAArC,EACA9B,EAAE,CAACC,OAAH,CAAW8B,KAAX,GACD,CAJD,CAMA,MAAO,WAAM,CACX/B,EAAE,CAACC,OAAH,CAAW8B,KAAX,GACD,CAFD,CAGD,CA7CQ,CA6CN,EA7CM,CAAT,CA6CQ;AAER,MAAOjC,CAAAA,WAAP,CACD","sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\nexport default function useWebsocket(subscribeGroups) {\n  const [lastMessage, setLastMessage] = useState(null);\n  const ws = useRef(null);\n\n  useEffect(() => {\n    ws.current = new WebSocket(\n      `${window.location.protocol === 'http:' ? 'ws:' : 'wss:'}//${\n        window.location.host\n      }${window.location.pathname}websocket/`\n    );\n\n    const connect = () => {\n      const xrftoken = `; ${document.cookie}`\n        .split('; csrftoken=')\n        .pop()\n        .split(';')\n        .shift();\n      ws.current.send(\n        JSON.stringify({\n          xrftoken,\n          groups: subscribeGroups,\n        })\n      );\n    };\n    ws.current.onopen = connect;\n\n    ws.current.onmessage = (e) => {\n      setLastMessage(JSON.parse(e.data));\n    };\n\n    ws.current.onclose = (e) => {\n      if (e.code !== 1000) {\n        // eslint-disable-next-line no-console\n        console.debug('Socket closed. Reconnecting...', e);\n        setTimeout(() => {\n          connect();\n        }, 1000);\n      }\n    };\n\n    ws.current.onerror = (err) => {\n      // eslint-disable-next-line no-console\n      console.debug('Socket error: ', err, 'Disconnecting...');\n      ws.current.close();\n    };\n\n    return () => {\n      ws.current.close();\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return lastMessage;\n}\n"]},"metadata":{},"sourceType":"module"}