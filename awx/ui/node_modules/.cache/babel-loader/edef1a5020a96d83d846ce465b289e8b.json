{"ast":null,"code":"import _defineProperty from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import{useState,useEffect}from'react';import{useFormikContext}from'formik';import useInventoryStep from'../../LaunchPrompt/steps/useInventoryStep';import useCredentialsStep from'../../LaunchPrompt/steps/useCredentialsStep';import useOtherPromptsStep from'../../LaunchPrompt/steps/useOtherPromptsStep';import useSurveyStep from'../../LaunchPrompt/steps/useSurveyStep';import usePreviewStep from'../../LaunchPrompt/steps/usePreviewStep';export default function useSchedulePromptSteps(surveyConfig,launchConfig,schedule,resource,scheduleCredentials,resourceDefaultCredentials){var sourceOfValues=Object.keys(schedule).length>0&&schedule||resource;var _useFormikContext=useFormikContext(),resetForm=_useFormikContext.resetForm,values=_useFormikContext.values;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),visited=_useState2[0],setVisited=_useState2[1];var steps=[useInventoryStep(launchConfig,sourceOfValues,visited),useCredentialsStep(launchConfig,sourceOfValues,resourceDefaultCredentials),useOtherPromptsStep(launchConfig,sourceOfValues),useSurveyStep(launchConfig,surveyConfig,sourceOfValues,visited)];var hasErrors=steps.some(function(step){return step.hasError;});steps.push(usePreviewStep(launchConfig,resource,surveyConfig,hasErrors,true,/*i18n*/i18n._(\"Save\")));var pfSteps=steps.map(function(s){return s.step;}).filter(function(s){return s!=null;});var isReady=!steps.some(function(s){return!s.isReady;});useEffect(function(){if(launchConfig&&surveyConfig&&isReady){var initialValues={};initialValues=steps.reduce(function(acc,cur){return _objectSpread(_objectSpread({},acc),cur.initialValues);},{});if(launchConfig.ask_credential_on_launch){var defaultCredsWithoutOverrides=[];var credentialHasOverride=function credentialHasOverride(templateDefaultCred){var hasOverride=false;scheduleCredentials.forEach(function(scheduleCredential){if(templateDefaultCred.credential_type===scheduleCredential.credential_type){if(!templateDefaultCred.inputs.vault_id&&!scheduleCredential.inputs.vault_id||templateDefaultCred.inputs.vault_id&&scheduleCredential.inputs.vault_id&&templateDefaultCred.inputs.vault_id===scheduleCredential.inputs.vault_id){hasOverride=true;}}});return hasOverride;};if(resourceDefaultCredentials){resourceDefaultCredentials.forEach(function(defaultCred){if(!credentialHasOverride(defaultCred)){defaultCredsWithoutOverrides.push(defaultCred);}});}initialValues.credentials=scheduleCredentials.concat(defaultCredsWithoutOverrides);}resetForm({values:_objectSpread(_objectSpread({},initialValues),values)});}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[launchConfig,surveyConfig,isReady]);var stepWithError=steps.find(function(s){return s.contentError;});var contentError=stepWithError?stepWithError.contentError:null;return{isReady:isReady,validateStep:function validateStep(stepId){steps.find(function(s){var _s$step;return(s===null||s===void 0?void 0:(_s$step=s.step)===null||_s$step===void 0?void 0:_s$step.id)===stepId;}).validate();},steps:pfSteps,visitStep:function visitStep(prevStepId,setFieldTouched){setVisited(_objectSpread(_objectSpread({},visited),{},_defineProperty({},prevStepId,true)));steps.find(function(s){var _s$step2;return(s===null||s===void 0?void 0:(_s$step2=s.step)===null||_s$step2===void 0?void 0:_s$step2.id)===prevStepId;}).setTouched(setFieldTouched);},visitAllSteps:function visitAllSteps(setFieldTouched){setVisited({inventory:true,credentials:true,other:true,survey:true,preview:true});steps.forEach(function(s){return s.setTouched(setFieldTouched);});},contentError:contentError};}","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/Schedule/shared/useSchedulePromptSteps.js"],"names":["useState","useEffect","useFormikContext","useInventoryStep","useCredentialsStep","useOtherPromptsStep","useSurveyStep","usePreviewStep","useSchedulePromptSteps","surveyConfig","launchConfig","schedule","resource","scheduleCredentials","resourceDefaultCredentials","sourceOfValues","Object","keys","length","resetForm","values","visited","setVisited","steps","hasErrors","some","step","hasError","push","pfSteps","map","s","filter","isReady","initialValues","reduce","acc","cur","ask_credential_on_launch","defaultCredsWithoutOverrides","credentialHasOverride","templateDefaultCred","hasOverride","forEach","scheduleCredential","credential_type","inputs","vault_id","defaultCred","credentials","concat","stepWithError","find","contentError","validateStep","stepId","id","validate","visitStep","prevStepId","setFieldTouched","setTouched","visitAllSteps","inventory","other","survey","preview"],"mappings":"qVAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,gBAAT,KAAiC,QAAjC,CAEA,MAAOC,CAAAA,gBAAP,KAA6B,2CAA7B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,6CAA/B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,8CAAhC,CACA,MAAOC,CAAAA,aAAP,KAA0B,wCAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,yCAA3B,CAEA,cAAe,SAASC,CAAAA,sBAAT,CACbC,YADa,CAEbC,YAFa,CAGbC,QAHa,CAIbC,QAJa,CAMbC,mBANa,CAObC,0BAPa,CAQb,CACA,GAAMC,CAAAA,cAAc,CACjBC,MAAM,CAACC,IAAP,CAAYN,QAAZ,EAAsBO,MAAtB,CAA+B,CAA/B,EAAoCP,QAArC,EAAkDC,QADpD,CAEA,sBAA8BV,gBAAgB,EAA9C,CAAQiB,SAAR,mBAAQA,SAAR,CAAmBC,MAAnB,mBAAmBA,MAAnB,CACA,cAA8BpB,QAAQ,CAAC,EAAD,CAAtC,wCAAOqB,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,KAAK,CAAG,CACZpB,gBAAgB,CAACO,YAAD,CAAeK,cAAf,CAA+BM,OAA/B,CADJ,CAEZjB,kBAAkB,CAChBM,YADgB,CAEhBK,cAFgB,CAGhBD,0BAHgB,CAFN,CAOZT,mBAAmB,CAACK,YAAD,CAAeK,cAAf,CAPP,CAQZT,aAAa,CAACI,YAAD,CAAeD,YAAf,CAA6BM,cAA7B,CAA6CM,OAA7C,CARD,CAAd,CAWA,GAAMG,CAAAA,SAAS,CAAGD,KAAK,CAACE,IAAN,CAAW,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,QAAf,EAAX,CAAlB,CAEAJ,KAAK,CAACK,IAAN,CACErB,cAAc,CACZG,YADY,CAGZE,QAHY,CAIZH,YAJY,CAKZe,SALY,CAMZ,IANY,SAOZ,cAPY,CADhB,EAYA,GAAMK,CAAAA,OAAO,CAAGN,KAAK,CAACO,GAAN,CAAU,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACL,IAAT,EAAV,EAAyBM,MAAzB,CAAgC,SAACD,CAAD,QAAOA,CAAAA,CAAC,EAAI,IAAZ,EAAhC,CAAhB,CACA,GAAME,CAAAA,OAAO,CAAG,CAACV,KAAK,CAACE,IAAN,CAAW,SAACM,CAAD,QAAO,CAACA,CAAC,CAACE,OAAV,EAAX,CAAjB,CAEAhC,SAAS,CAAC,UAAM,CACd,GAAIS,YAAY,EAAID,YAAhB,EAAgCwB,OAApC,CAA6C,CAC3C,GAAIC,CAAAA,aAAa,CAAG,EAApB,CACAA,aAAa,CAAGX,KAAK,CAACY,MAAN,CACd,SAACC,GAAD,CAAMC,GAAN,wCACKD,GADL,EAEKC,GAAG,CAACH,aAFT,GADc,CAKd,EALc,CAAhB,CAQA,GAAIxB,YAAY,CAAC4B,wBAAjB,CAA2C,CACzC,GAAMC,CAAAA,4BAA4B,CAAG,EAArC,CAEA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,mBAAD,CAAyB,CACrD,GAAIC,CAAAA,WAAW,CAAG,KAAlB,CACA7B,mBAAmB,CAAC8B,OAApB,CAA4B,SAACC,kBAAD,CAAwB,CAClD,GACEH,mBAAmB,CAACI,eAApB,GACAD,kBAAkB,CAACC,eAFrB,CAGE,CACA,GACG,CAACJ,mBAAmB,CAACK,MAApB,CAA2BC,QAA5B,EACC,CAACH,kBAAkB,CAACE,MAAnB,CAA0BC,QAD7B,EAECN,mBAAmB,CAACK,MAApB,CAA2BC,QAA3B,EACCH,kBAAkB,CAACE,MAAnB,CAA0BC,QAD3B,EAECN,mBAAmB,CAACK,MAApB,CAA2BC,QAA3B,GACEH,kBAAkB,CAACE,MAAnB,CAA0BC,QANhC,CAOE,CACAL,WAAW,CAAG,IAAd,CACD,CACF,CACF,CAhBD,EAkBA,MAAOA,CAAAA,WAAP,CACD,CArBD,CAuBA,GAAI5B,0BAAJ,CAAgC,CAC9BA,0BAA0B,CAAC6B,OAA3B,CAAmC,SAACK,WAAD,CAAiB,CAClD,GAAI,CAACR,qBAAqB,CAACQ,WAAD,CAA1B,CAAyC,CACvCT,4BAA4B,CAACX,IAA7B,CAAkCoB,WAAlC,EACD,CACF,CAJD,EAKD,CAEDd,aAAa,CAACe,WAAd,CAA4BpC,mBAAmB,CAACqC,MAApB,CAC1BX,4BAD0B,CAA5B,CAGD,CAEDpB,SAAS,CAAC,CACRC,MAAM,gCACDc,aADC,EAEDd,MAFC,CADE,CAAD,CAAT,CAMD,CAED;AACD,CA3DQ,CA2DN,CAACV,YAAD,CAAeD,YAAf,CAA6BwB,OAA7B,CA3DM,CAAT,CA6DA,GAAMkB,CAAAA,aAAa,CAAG5B,KAAK,CAAC6B,IAAN,CAAW,SAACrB,CAAD,QAAOA,CAAAA,CAAC,CAACsB,YAAT,EAAX,CAAtB,CACA,GAAMA,CAAAA,YAAY,CAAGF,aAAa,CAAGA,aAAa,CAACE,YAAjB,CAAgC,IAAlE,CAEA,MAAO,CACLpB,OAAO,CAAPA,OADK,CAELqB,YAAY,CAAE,sBAACC,MAAD,CAAY,CACxBhC,KAAK,CAAC6B,IAAN,CAAW,SAACrB,CAAD,oBAAO,CAAAA,CAAC,OAAD,EAAAA,CAAC,SAAD,iBAAAA,CAAC,CAAEL,IAAH,0CAAS8B,EAAT,IAAgBD,MAAvB,EAAX,EAA0CE,QAA1C,GACD,CAJI,CAKLlC,KAAK,CAAEM,OALF,CAML6B,SAAS,CAAE,mBAACC,UAAD,CAAaC,eAAb,CAAiC,CAC1CtC,UAAU,gCACLD,OADK,wBAEPsC,UAFO,CAEM,IAFN,GAAV,CAIApC,KAAK,CAAC6B,IAAN,CAAW,SAACrB,CAAD,qBAAO,CAAAA,CAAC,OAAD,EAAAA,CAAC,SAAD,kBAAAA,CAAC,CAAEL,IAAH,4CAAS8B,EAAT,IAAgBG,UAAvB,EAAX,EAA8CE,UAA9C,CAAyDD,eAAzD,EACD,CAZI,CAaLE,aAAa,CAAE,uBAACF,eAAD,CAAqB,CAClCtC,UAAU,CAAC,CACTyC,SAAS,CAAE,IADF,CAETd,WAAW,CAAE,IAFJ,CAGTe,KAAK,CAAE,IAHE,CAITC,MAAM,CAAE,IAJC,CAKTC,OAAO,CAAE,IALA,CAAD,CAAV,CAOA3C,KAAK,CAACoB,OAAN,CAAc,SAACZ,CAAD,QAAOA,CAAAA,CAAC,CAAC8B,UAAF,CAAaD,eAAb,CAAP,EAAd,EACD,CAtBI,CAuBLP,YAAY,CAAZA,YAvBK,CAAP,CAyBD","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useFormikContext } from 'formik';\nimport { t } from '@lingui/macro';\nimport useInventoryStep from '../../LaunchPrompt/steps/useInventoryStep';\nimport useCredentialsStep from '../../LaunchPrompt/steps/useCredentialsStep';\nimport useOtherPromptsStep from '../../LaunchPrompt/steps/useOtherPromptsStep';\nimport useSurveyStep from '../../LaunchPrompt/steps/useSurveyStep';\nimport usePreviewStep from '../../LaunchPrompt/steps/usePreviewStep';\n\nexport default function useSchedulePromptSteps(\n  surveyConfig,\n  launchConfig,\n  schedule,\n  resource,\n\n  scheduleCredentials,\n  resourceDefaultCredentials\n) {\n  const sourceOfValues =\n    (Object.keys(schedule).length > 0 && schedule) || resource;\n  const { resetForm, values } = useFormikContext();\n  const [visited, setVisited] = useState({});\n\n  const steps = [\n    useInventoryStep(launchConfig, sourceOfValues, visited),\n    useCredentialsStep(\n      launchConfig,\n      sourceOfValues,\n      resourceDefaultCredentials\n    ),\n    useOtherPromptsStep(launchConfig, sourceOfValues),\n    useSurveyStep(launchConfig, surveyConfig, sourceOfValues, visited),\n  ];\n\n  const hasErrors = steps.some((step) => step.hasError);\n\n  steps.push(\n    usePreviewStep(\n      launchConfig,\n\n      resource,\n      surveyConfig,\n      hasErrors,\n      true,\n      t`Save`\n    )\n  );\n\n  const pfSteps = steps.map((s) => s.step).filter((s) => s != null);\n  const isReady = !steps.some((s) => !s.isReady);\n\n  useEffect(() => {\n    if (launchConfig && surveyConfig && isReady) {\n      let initialValues = {};\n      initialValues = steps.reduce(\n        (acc, cur) => ({\n          ...acc,\n          ...cur.initialValues,\n        }),\n        {}\n      );\n\n      if (launchConfig.ask_credential_on_launch) {\n        const defaultCredsWithoutOverrides = [];\n\n        const credentialHasOverride = (templateDefaultCred) => {\n          let hasOverride = false;\n          scheduleCredentials.forEach((scheduleCredential) => {\n            if (\n              templateDefaultCred.credential_type ===\n              scheduleCredential.credential_type\n            ) {\n              if (\n                (!templateDefaultCred.inputs.vault_id &&\n                  !scheduleCredential.inputs.vault_id) ||\n                (templateDefaultCred.inputs.vault_id &&\n                  scheduleCredential.inputs.vault_id &&\n                  templateDefaultCred.inputs.vault_id ===\n                    scheduleCredential.inputs.vault_id)\n              ) {\n                hasOverride = true;\n              }\n            }\n          });\n\n          return hasOverride;\n        };\n\n        if (resourceDefaultCredentials) {\n          resourceDefaultCredentials.forEach((defaultCred) => {\n            if (!credentialHasOverride(defaultCred)) {\n              defaultCredsWithoutOverrides.push(defaultCred);\n            }\n          });\n        }\n\n        initialValues.credentials = scheduleCredentials.concat(\n          defaultCredsWithoutOverrides\n        );\n      }\n\n      resetForm({\n        values: {\n          ...initialValues,\n          ...values,\n        },\n      });\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [launchConfig, surveyConfig, isReady]);\n\n  const stepWithError = steps.find((s) => s.contentError);\n  const contentError = stepWithError ? stepWithError.contentError : null;\n\n  return {\n    isReady,\n    validateStep: (stepId) => {\n      steps.find((s) => s?.step?.id === stepId).validate();\n    },\n    steps: pfSteps,\n    visitStep: (prevStepId, setFieldTouched) => {\n      setVisited({\n        ...visited,\n        [prevStepId]: true,\n      });\n      steps.find((s) => s?.step?.id === prevStepId).setTouched(setFieldTouched);\n    },\n    visitAllSteps: (setFieldTouched) => {\n      setVisited({\n        inventory: true,\n        credentials: true,\n        other: true,\n        survey: true,\n        preview: true,\n      });\n      steps.forEach((s) => s.setTouched(setFieldTouched));\n    },\n    contentError,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}