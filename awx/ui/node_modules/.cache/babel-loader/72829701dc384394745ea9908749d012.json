{"ast":null,"code":"import _styled from\"styled-components\";import{i18n}from\"@lingui/core\";import React,{useEffect}from'react';import{Link,useParams}from'react-router-dom';import{SearchIcon,ExclamationCircleIcon as PFExclamationCircleIcon}from'@patternfly/react-icons';import ContentEmpty from'components/ContentEmpty';import styled from'styled-components';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ExclamationCircleIcon=styled(PFExclamationCircleIcon).withConfig({displayName:\"EmptyOutput__ExclamationCircleIcon\",componentId:\"sc-1cy2e0k-0\"})([\"color:var(--pf-global--danger-color--100);\"]);var _StyledContentEmpty=styled(ContentEmpty).withConfig({displayName:\"EmptyOutput___StyledContentEmpty\",componentId:\"sc-1cy2e0k-1\"})([\"height:100%\"]);export default function EmptyOutput(_ref){var hasQueryParams=_ref.hasQueryParams,isJobRunning=_ref.isJobRunning,onUnmount=_ref.onUnmount,job=_ref.job;var title;var message;var icon;var _useParams=useParams(),typeSegment=_useParams.typeSegment,id=_useParams.id;useEffect(function(){return onUnmount;});if(hasQueryParams){title=/*i18n*/i18n._(\"The search filter did not produce any results\\u2026\");message=/*i18n*/i18n._(\"Please try another search using the filter above\");icon=SearchIcon;}else if(isJobRunning){title=/*i18n*/i18n._(\"Waiting for job output\\u2026\");}else if(job.status==='failed'){title=/*i18n*/i18n._(\"This job failed and has no output.\");message=/*#__PURE__*/_jsxs(_Fragment,{children:[/*i18n*/i18n._(\"Return to\"),' ',/*#__PURE__*/_jsx(Link,{to:\"/jobs/\".concat(typeSegment,\"/\").concat(id,\"/details\"),children:/*i18n*/i18n._(\"details.\")}),/*#__PURE__*/_jsx(\"br\",{}),job.job_explanation&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*i18n*/i18n._(\"Failure Explanation:\"),\" \",\"\".concat(job.job_explanation)]})]});icon=ExclamationCircleIcon;}else{title=/*i18n*/i18n._(\"No output found for this job.\");}return/*#__PURE__*/_jsx(_StyledContentEmpty,{title:title,message:message,icon:icon});}","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Job/JobOutput/EmptyOutput.js"],"names":["React","useEffect","Link","useParams","SearchIcon","ExclamationCircleIcon","PFExclamationCircleIcon","ContentEmpty","styled","EmptyOutput","hasQueryParams","isJobRunning","onUnmount","job","title","message","icon","typeSegment","id","status","job_explanation"],"mappings":"sEAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,IAAT,CAAeC,SAAf,KAAgC,kBAAhC,CAGA,OACEC,UADF,CAEEC,qBAAqB,GAAIC,CAAAA,uBAF3B,KAGO,yBAHP,CAIA,MAAOC,CAAAA,YAAP,KAAyB,yBAAzB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,C,6IAEA,GAAMH,CAAAA,qBAAqB,CAAGG,MAAM,CAACF,uBAAD,CAAT,0IAA3B,C,sJAIA,cAAe,SAASG,CAAAA,WAAT,MAKZ,IAJDC,CAAAA,cAIC,MAJDA,cAIC,CAHDC,YAGC,MAHDA,YAGC,CAFDC,SAEC,MAFDA,SAEC,CADDC,GACC,MADDA,GACC,CACD,GAAIC,CAAAA,KAAJ,CACA,GAAIC,CAAAA,OAAJ,CACA,GAAIC,CAAAA,IAAJ,CACA,eAA4Bb,SAAS,EAArC,CAAQc,WAAR,YAAQA,WAAR,CAAqBC,EAArB,YAAqBA,EAArB,CAEAjB,SAAS,CAAC,iBAAMW,CAAAA,SAAN,EAAD,CAAT,CAEA,GAAIF,cAAJ,CAAoB,CAClBI,KAAK,SAAG,6DAAR,CACAC,OAAO,SAAG,0DAAV,CACAC,IAAI,CAAGZ,UAAP,CACD,CAJD,IAIO,IAAIO,YAAJ,CAAkB,CACvBG,KAAK,SAAG,sCAAR,CACD,CAFM,IAEA,IAAID,GAAG,CAACM,MAAJ,GAAe,QAAnB,CAA6B,CAClCL,KAAK,SAAG,4CAAR,CACAC,OAAO,cACL,mCACG,mBADH,CACkB,GADlB,cAEE,KAAC,IAAD,EAAM,EAAE,iBAAWE,WAAX,aAA0BC,EAA1B,YAAR,kBAAiD,kBAAjD,EAFF,cAGE,aAHF,CAIGL,GAAG,CAACO,eAAJ,eACC,mCACG,8BADH,eACgCP,GAAG,CAACO,eADpC,IALJ,GADF,CAYAJ,IAAI,CAAGX,qBAAP,CACD,CAfM,IAeA,CACLS,KAAK,SAAG,uCAAR,CACD,CAED,mBACE,0BAEE,KAAK,CAAEA,KAFT,CAGE,OAAO,CAAEC,OAHX,CAIE,IAAI,CAAEC,IAJR,EADF,CAQD","sourcesContent":["import React, { useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport 'styled-components/macro';\nimport { t } from '@lingui/macro';\nimport {\n  SearchIcon,\n  ExclamationCircleIcon as PFExclamationCircleIcon,\n} from '@patternfly/react-icons';\nimport ContentEmpty from 'components/ContentEmpty';\n\nimport styled from 'styled-components';\n\nconst ExclamationCircleIcon = styled(PFExclamationCircleIcon)`\n  color: var(--pf-global--danger-color--100);\n`;\n\nexport default function EmptyOutput({\n  hasQueryParams,\n  isJobRunning,\n  onUnmount,\n  job,\n}) {\n  let title;\n  let message;\n  let icon;\n  const { typeSegment, id } = useParams();\n\n  useEffect(() => onUnmount);\n\n  if (hasQueryParams) {\n    title = t`The search filter did not produce any results…`;\n    message = t`Please try another search using the filter above`;\n    icon = SearchIcon;\n  } else if (isJobRunning) {\n    title = t`Waiting for job output…`;\n  } else if (job.status === 'failed') {\n    title = t`This job failed and has no output.`;\n    message = (\n      <>\n        {t`Return to `}{' '}\n        <Link to={`/jobs/${typeSegment}/${id}/details`}>{t`details.`}</Link>\n        <br />\n        {job.job_explanation && (\n          <>\n            {t`Failure Explanation:`} {`${job.job_explanation}`}\n          </>\n        )}\n      </>\n    );\n    icon = ExclamationCircleIcon;\n  } else {\n    title = t`No output found for this job.`;\n  }\n\n  return (\n    <ContentEmpty\n      css=\"height: 100%\"\n      title={title}\n      message={message}\n      icon={icon}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}