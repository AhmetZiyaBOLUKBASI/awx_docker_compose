{"ast":null,"code":"import{i18n}from\"@lingui/core\";import React,{useContext}from'react';import{WorkflowDispatchContext,WorkflowStateContext}from'contexts/Workflow';import{getAddedAndRemoved}from'util/lists';import NodeModal from'./NodeModal';import{jsx as _jsx}from\"react/jsx-runtime\";function NodeAddModal(){var dispatch=useContext(WorkflowDispatchContext);var _useContext=useContext(WorkflowStateContext),addNodeSource=_useContext.addNodeSource;var addNode=function addNode(values,config){var approvalName=values.approvalName,approvalDescription=values.approvalDescription,timeoutMinutes=values.timeoutMinutes,timeoutSeconds=values.timeoutSeconds,linkType=values.linkType,convergence=values.convergence,identifier=values.identifier;if(values){var _config$defaults;var _getAddedAndRemoved=getAddedAndRemoved(config===null||config===void 0?void 0:(_config$defaults=config.defaults)===null||_config$defaults===void 0?void 0:_config$defaults.credentials,values===null||values===void 0?void 0:values.credentials),added=_getAddedAndRemoved.added,removed=_getAddedAndRemoved.removed;values.addedCredentials=added;values.removedCredentials=removed;}var node={linkType:linkType,all_parents_must_converge:convergence==='all',identifier:identifier};delete values.convergence;delete values.linkType;if(values.nodeType==='workflow_approval_template'){node.nodeResource={description:approvalDescription,name:approvalName,timeout:Number(timeoutMinutes)*60+Number(timeoutSeconds),type:'workflow_approval_template'};}else{node.nodeResource=values.nodeResource;if((values===null||values===void 0?void 0:values.nodeType)==='job_template'||(values===null||values===void 0?void 0:values.nodeType)==='workflow_job_template'){node.promptValues=values;}if((values===null||values===void 0?void 0:values.nodeType)==='system_job_template'){node.promptValues={extra_data:values===null||values===void 0?void 0:values.extra_data};}}dispatch({type:'CREATE_NODE',node:node});};return/*#__PURE__*/_jsx(NodeModal,{askLinkType:addNodeSource!==1,onSave:addNode,title:/*i18n*/i18n._(\"Add Node\")});}export default NodeAddModal;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Template/WorkflowJobTemplateVisualizer/Modals/NodeModals/NodeAddModal.js"],"names":["React","useContext","WorkflowDispatchContext","WorkflowStateContext","getAddedAndRemoved","NodeModal","NodeAddModal","dispatch","addNodeSource","addNode","values","config","approvalName","approvalDescription","timeoutMinutes","timeoutSeconds","linkType","convergence","identifier","defaults","credentials","added","removed","addedCredentials","removedCredentials","node","all_parents_must_converge","nodeType","nodeResource","description","name","timeout","Number","type","promptValues","extra_data"],"mappings":"+BAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CAGA,OACEC,uBADF,CAEEC,oBAFF,KAGO,mBAHP,CAIA,OAASC,kBAAT,KAAmC,YAAnC,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,C,2CAEA,QAASC,CAAAA,YAAT,EAAwB,CACtB,GAAMC,CAAAA,QAAQ,CAAGN,UAAU,CAACC,uBAAD,CAA3B,CACA,gBAA0BD,UAAU,CAACE,oBAAD,CAApC,CAAQK,aAAR,aAAQA,aAAR,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,MAAD,CAASC,MAAT,CAAoB,CAClC,GACEC,CAAAA,YADF,CAQIF,MARJ,CACEE,YADF,CAEEC,mBAFF,CAQIH,MARJ,CAEEG,mBAFF,CAGEC,cAHF,CAQIJ,MARJ,CAGEI,cAHF,CAIEC,cAJF,CAQIL,MARJ,CAIEK,cAJF,CAKEC,QALF,CAQIN,MARJ,CAKEM,QALF,CAMEC,WANF,CAQIP,MARJ,CAMEO,WANF,CAOEC,UAPF,CAQIR,MARJ,CAOEQ,UAPF,CAUA,GAAIR,MAAJ,CAAY,sBACV,wBAA2BN,kBAAkB,CAC3CO,MAD2C,SAC3CA,MAD2C,mCAC3CA,MAAM,CAAEQ,QADmC,2CAC3C,iBAAkBC,WADyB,CAE3CV,MAF2C,SAE3CA,MAF2C,iBAE3CA,MAAM,CAAEU,WAFmC,CAA7C,CAAQC,KAAR,qBAAQA,KAAR,CAAeC,OAAf,qBAAeA,OAAf,CAKAZ,MAAM,CAACa,gBAAP,CAA0BF,KAA1B,CACAX,MAAM,CAACc,kBAAP,CAA4BF,OAA5B,CACD,CAED,GAAMG,CAAAA,IAAI,CAAG,CACXT,QAAQ,CAARA,QADW,CAEXU,yBAAyB,CAAET,WAAW,GAAK,KAFhC,CAGXC,UAAU,CAAVA,UAHW,CAAb,CAMA,MAAOR,CAAAA,MAAM,CAACO,WAAd,CAEA,MAAOP,CAAAA,MAAM,CAACM,QAAd,CAEA,GAAIN,MAAM,CAACiB,QAAP,GAAoB,4BAAxB,CAAsD,CACpDF,IAAI,CAACG,YAAL,CAAoB,CAClBC,WAAW,CAAEhB,mBADK,CAElBiB,IAAI,CAAElB,YAFY,CAGlBmB,OAAO,CAAEC,MAAM,CAAClB,cAAD,CAAN,CAAyB,EAAzB,CAA8BkB,MAAM,CAACjB,cAAD,CAH3B,CAIlBkB,IAAI,CAAE,4BAJY,CAApB,CAMD,CAPD,IAOO,CACLR,IAAI,CAACG,YAAL,CAAoBlB,MAAM,CAACkB,YAA3B,CACA,GACE,CAAAlB,MAAM,OAAN,EAAAA,MAAM,SAAN,QAAAA,MAAM,CAAEiB,QAAR,IAAqB,cAArB,EACA,CAAAjB,MAAM,OAAN,EAAAA,MAAM,SAAN,QAAAA,MAAM,CAAEiB,QAAR,IAAqB,uBAFvB,CAGE,CACAF,IAAI,CAACS,YAAL,CAAoBxB,MAApB,CACD,CACD,GAAI,CAAAA,MAAM,OAAN,EAAAA,MAAM,SAAN,QAAAA,MAAM,CAAEiB,QAAR,IAAqB,qBAAzB,CAAgD,CAC9CF,IAAI,CAACS,YAAL,CAAoB,CAClBC,UAAU,CAAEzB,MAAF,SAAEA,MAAF,iBAAEA,MAAM,CAAEyB,UADF,CAApB,CAGD,CACF,CAED5B,QAAQ,CAAC,CACP0B,IAAI,CAAE,aADC,CAEPR,IAAI,CAAJA,IAFO,CAAD,CAAR,CAID,CAzDD,CA2DA,mBACE,KAAC,SAAD,EACE,WAAW,CAAEjB,aAAa,GAAK,CADjC,CAEE,MAAM,CAAEC,OAFV,CAGE,KAAK,SAAE,kBAHT,EADF,CAOD,CAED,cAAeH,CAAAA,YAAf","sourcesContent":["import React, { useContext } from 'react';\n\nimport { t } from '@lingui/macro';\nimport {\n  WorkflowDispatchContext,\n  WorkflowStateContext,\n} from 'contexts/Workflow';\nimport { getAddedAndRemoved } from 'util/lists';\nimport NodeModal from './NodeModal';\n\nfunction NodeAddModal() {\n  const dispatch = useContext(WorkflowDispatchContext);\n  const { addNodeSource } = useContext(WorkflowStateContext);\n\n  const addNode = (values, config) => {\n    const {\n      approvalName,\n      approvalDescription,\n      timeoutMinutes,\n      timeoutSeconds,\n      linkType,\n      convergence,\n      identifier,\n    } = values;\n\n    if (values) {\n      const { added, removed } = getAddedAndRemoved(\n        config?.defaults?.credentials,\n        values?.credentials\n      );\n\n      values.addedCredentials = added;\n      values.removedCredentials = removed;\n    }\n\n    const node = {\n      linkType,\n      all_parents_must_converge: convergence === 'all',\n      identifier,\n    };\n\n    delete values.convergence;\n\n    delete values.linkType;\n\n    if (values.nodeType === 'workflow_approval_template') {\n      node.nodeResource = {\n        description: approvalDescription,\n        name: approvalName,\n        timeout: Number(timeoutMinutes) * 60 + Number(timeoutSeconds),\n        type: 'workflow_approval_template',\n      };\n    } else {\n      node.nodeResource = values.nodeResource;\n      if (\n        values?.nodeType === 'job_template' ||\n        values?.nodeType === 'workflow_job_template'\n      ) {\n        node.promptValues = values;\n      }\n      if (values?.nodeType === 'system_job_template') {\n        node.promptValues = {\n          extra_data: values?.extra_data,\n        };\n      }\n    }\n\n    dispatch({\n      type: 'CREATE_NODE',\n      node,\n    });\n  };\n\n  return (\n    <NodeModal\n      askLinkType={addNodeSource !== 1}\n      onSave={addNode}\n      title={t`Add Node`}\n    />\n  );\n}\n\nexport default NodeAddModal;\n"]},"metadata":{},"sourceType":"module"}