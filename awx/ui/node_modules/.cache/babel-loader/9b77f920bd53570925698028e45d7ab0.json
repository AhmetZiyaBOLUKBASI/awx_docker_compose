{"ast":null,"code":"import _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/SimpleList/simple-list';\nimport { SimpleListGroup } from './SimpleListGroup';\nexport var SimpleListContext = React.createContext({});\nexport var SimpleList = /*#__PURE__*/function (_React$Component) {\n  _inherits(SimpleList, _React$Component);\n\n  var _super = _createSuper(SimpleList);\n\n  function SimpleList() {\n    var _this;\n\n    _classCallCheck(this, SimpleList);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      currentRef: null\n    };\n\n    _this.handleCurrentUpdate = function (newCurrentRef, itemProps) {\n      _this.setState({\n        currentRef: newCurrentRef\n      });\n\n      var onSelect = _this.props.onSelect;\n      onSelect && onSelect(newCurrentRef, itemProps);\n    };\n\n    return _this;\n  }\n\n  _createClass(SimpleList, [{\n    key: \"render\",\n    value: function render() {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      var _a = this.props,\n          children = _a.children,\n          className = _a.className,\n          onSelect = _a.onSelect,\n          isControlled = _a.isControlled,\n          props = __rest(_a, [\"children\", \"className\", \"onSelect\", \"isControlled\"]);\n\n      var isGrouped = false;\n\n      if (children) {\n        isGrouped = React.Children.toArray(children)[0].type === SimpleListGroup;\n      }\n\n      return React.createElement(SimpleListContext.Provider, {\n        value: {\n          currentRef: this.state.currentRef,\n          updateCurrentRef: this.handleCurrentUpdate,\n          isControlled: isControlled\n        }\n      }, React.createElement(\"div\", Object.assign({\n        className: css(styles.simpleList, className)\n      }, props), isGrouped && children, !isGrouped && React.createElement(\"ul\", null, children)));\n    }\n  }]);\n\n  return SimpleList;\n}(React.Component);\nSimpleList.displayName = 'SimpleList';\nSimpleList.defaultProps = {\n  children: null,\n  className: '',\n  isControlled: true\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/SimpleList/SimpleList.tsx"],"names":[],"mappings":";;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,gEAAnB;AACA,SAAS,eAAT,QAAgC,mBAAhC;AA+BA,OAAO,IAAM,iBAAiB,GAAG,KAAK,CAAC,aAAN,CAAqD,EAArD,CAA1B;AAEP,WAAa,UAAb;AAAA;;AAAA;;AAAA,wBAAA;AAAA;;AAAA;;;AAEE,UAAA,KAAA,GAAQ;AACN,MAAA,UAAU,EAAE;AADN,KAAR;;AAUA,UAAA,mBAAA,GAAsB,UACpB,aADoB,EAEpB,SAFoB,EAGlB;AACF,YAAK,QAAL,CAAc;AAAE,QAAA,UAAU,EAAE;AAAd,OAAd;;AACA,UAAQ,QAAR,GAAqB,MAAK,KAA1B,CAAQ,QAAR;AACA,MAAA,QAAQ,IAAI,QAAQ,CAAC,aAAD,EAAgB,SAAhB,CAApB;AACD,KAPD;;AAZF;AA6CC;;AA7CD;AAAA;AAAA,WAqBE,kBAAM;AACJ;AACM,UAAA,EAAA,GAA4D,KAA5D,KAAA;AAAA,UAAE,QAAF,GAA6C,EAA7C,CAAE,QAAF;AAAA,UAAY,SAAZ,GAA6C,EAA7C,CAAY,SAAZ;AAAA,UAAuB,QAAvB,GAA6C,EAA7C,CAAuB,QAAvB;AAAA,UAAiC,YAAjC,GAA6C,EAA7C,CAAiC,YAAjC;AAAA,UAAkD,KAAlD,GAAuD,MAAA,CAAA,EAAA,EAAvD,CAAA,UAAA,EAAA,WAAA,EAAA,UAAA,EAAA,cAAA,CAAuD,CAAvD;;AAEN,UAAI,SAAS,GAAG,KAAhB;;AACA,UAAI,QAAJ,EAAc;AACZ,QAAA,SAAS,GAAI,KAAK,CAAC,QAAN,CAAe,OAAf,CAAuB,QAAvB,EAAiC,CAAjC,EAA2D,IAA3D,KAAoE,eAAjF;AACD;;AAED,aACE,KAAA,CAAA,aAAA,CAAC,iBAAiB,CAAC,QAAnB,EAA2B;AACzB,QAAA,KAAK,EAAE;AACL,UAAA,UAAU,EAAE,KAAK,KAAL,CAAW,UADlB;AAEL,UAAA,gBAAgB,EAAE,KAAK,mBAFlB;AAGL,UAAA,YAAY,EAAZ;AAHK;AADkB,OAA3B,EAOE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AAAK,QAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,UAAR,EAAoB,SAApB;AAAnB,OAAA,EAAuD,KAAvD,CAAA,EACG,SAAS,IAAI,QADhB,EAEG,CAAC,SAAD,IAAc,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAK,QAAL,CAFjB,CAPF,CADF;AAcD;AA5CH;;AAAA;AAAA,EAAgC,KAAK,CAAC,SAAtC;AACS,UAAA,CAAA,WAAA,GAAc,YAAd;AAKA,UAAA,CAAA,YAAA,GAAgC;AACrC,EAAA,QAAQ,EAAE,IAD2B;AAErC,EAAA,SAAS,EAAE,EAF0B;AAGrC,EAAA,YAAY,EAAE;AAHuB,CAAhC","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/SimpleList/simple-list';\nimport { SimpleListGroup } from './SimpleListGroup';\nimport { SimpleListItemProps } from './SimpleListItem';\n\nexport interface SimpleListProps extends Omit<React.HTMLProps<HTMLDivElement>, 'onSelect'> {\n  /** Content rendered inside the SimpleList */\n  children?: React.ReactNode;\n  /** Additional classes added to the SimpleList container */\n  className?: string;\n  /** Callback when an item is selected */\n  onSelect?: (\n    ref: React.RefObject<HTMLButtonElement> | React.RefObject<HTMLAnchorElement>,\n    props: SimpleListItemProps\n  ) => void;\n  /** Indicates whether component is controlled by its internal state */\n  isControlled?: boolean;\n}\n\nexport interface SimpleListState {\n  /** Ref of the current SimpleListItem */\n  currentRef: React.RefObject<HTMLButtonElement> | React.RefObject<HTMLAnchorElement>;\n}\n\ninterface SimpleListContextProps {\n  currentRef: React.RefObject<HTMLButtonElement> | React.RefObject<HTMLAnchorElement>;\n  updateCurrentRef: (\n    id: React.RefObject<HTMLButtonElement> | React.RefObject<HTMLAnchorElement>,\n    props: SimpleListItemProps\n  ) => void;\n  isControlled: boolean;\n}\n\nexport const SimpleListContext = React.createContext<Partial<SimpleListContextProps>>({});\n\nexport class SimpleList extends React.Component<SimpleListProps, SimpleListState> {\n  static displayName = 'SimpleList';\n  state = {\n    currentRef: null as React.RefObject<HTMLButtonElement> | React.RefObject<HTMLAnchorElement>\n  };\n\n  static defaultProps: SimpleListProps = {\n    children: null as React.ReactNode,\n    className: '',\n    isControlled: true\n  };\n\n  handleCurrentUpdate = (\n    newCurrentRef: React.RefObject<HTMLButtonElement> | React.RefObject<HTMLAnchorElement>,\n    itemProps: SimpleListItemProps\n  ) => {\n    this.setState({ currentRef: newCurrentRef });\n    const { onSelect } = this.props;\n    onSelect && onSelect(newCurrentRef, itemProps);\n  };\n\n  render() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { children, className, onSelect, isControlled, ...props } = this.props;\n\n    let isGrouped = false;\n    if (children) {\n      isGrouped = (React.Children.toArray(children)[0] as React.ReactElement).type === SimpleListGroup;\n    }\n\n    return (\n      <SimpleListContext.Provider\n        value={{\n          currentRef: this.state.currentRef,\n          updateCurrentRef: this.handleCurrentUpdate,\n          isControlled\n        }}\n      >\n        <div className={css(styles.simpleList, className)} {...props}>\n          {isGrouped && children}\n          {!isGrouped && <ul>{children}</ul>}\n        </div>\n      </SimpleListContext.Provider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}