{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import React,{useState,useEffect,useCallback}from'react';import{Link,Redirect,Route,Switch,useLocation,useParams,useRouteMatch}from'react-router-dom';import{CaretLeftIcon}from'@patternfly/react-icons';import{Card,PageSection}from'@patternfly/react-core';import{SystemJobTemplatesAPI,OrganizationsAPI}from'api';import ContentError from'components/ContentError';import ContentLoading from'components/ContentLoading';import NotificationList from'components/NotificationList';import RoutedTabs from'components/RoutedTabs';import{Schedules}from'components/Schedule';import{useConfig}from'contexts/Config';import useRequest from'hooks/useRequest';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ManagementJob(_ref){var _result$systemJobTemp,_result$systemJobTemp2,_result$systemJobTemp3;var setBreadcrumb=_ref.setBreadcrumb;var basePath='/management_jobs';var match=useRouteMatch();var _useParams=useParams(),id=_useParams.id;var _useLocation=useLocation(),pathname=_useLocation.pathname;var _useConfig=useConfig(),me=_useConfig.me;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isNotificationAdmin=_useState2[0],setIsNotificationAdmin=_useState2[1];var _useRequest=useRequest(useCallback(function(){return Promise.all([SystemJobTemplatesAPI.readDetail(id),OrganizationsAPI.read({page_size:1,role_level:'notification_admin_role'})]).then(function(_ref2){var _ref3=_slicedToArray(_ref2,2),systemJobTemplate=_ref3[0].data,notificationRoles=_ref3[1];return{systemJobTemplate:systemJobTemplate,notificationRoles:notificationRoles};});},[id])),isLoading=_useRequest.isLoading,error=_useRequest.error,request=_useRequest.request,result=_useRequest.result;useEffect(function(){request();},[request,pathname]);useEffect(function(){var _result$notificationR,_result$notificationR2,_result$notificationR3;if(!result)return;setIsNotificationAdmin(Boolean(result===null||result===void 0?void 0:(_result$notificationR=result.notificationRoles)===null||_result$notificationR===void 0?void 0:(_result$notificationR2=_result$notificationR.data)===null||_result$notificationR2===void 0?void 0:(_result$notificationR3=_result$notificationR2.results)===null||_result$notificationR3===void 0?void 0:_result$notificationR3.length));setBreadcrumb(result);},[result,setBreadcrumb,setIsNotificationAdmin]);useEffect(function(){if(!result)return;setBreadcrumb(result);},[result,setBreadcrumb]);var createSchedule=useCallback(function(data){return SystemJobTemplatesAPI.createSchedule(result===null||result===void 0?void 0:result.systemJobTemplate.id,data);},[result]);var loadSchedules=useCallback(function(params){return SystemJobTemplatesAPI.readSchedules(result===null||result===void 0?void 0:result.systemJobTemplate.id,params);},[result]);var loadScheduleOptions=useCallback(function(){return SystemJobTemplatesAPI.readScheduleOptions(result===null||result===void 0?void 0:result.systemJobTemplate.id);},[result]);var shouldShowNotifications=(result===null||result===void 0?void 0:(_result$systemJobTemp=result.systemJobTemplate)===null||_result$systemJobTemp===void 0?void 0:_result$systemJobTemp.id)&&(isNotificationAdmin||(me===null||me===void 0?void 0:me.is_system_auditor));var shouldShowSchedules=!!(result!==null&&result!==void 0&&(_result$systemJobTemp2=result.systemJobTemplate)!==null&&_result$systemJobTemp2!==void 0&&_result$systemJobTemp2.id);var tabsArray=[{id:99,link:basePath,name:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CaretLeftIcon,{}),/*i18n*/i18n._(\"Back to management jobs\")]}),isBackButton:true}];if(shouldShowSchedules){tabsArray.push({id:0,name:/*i18n*/i18n._(\"Schedules\"),link:\"\".concat(match.url,\"/schedules\")});}if(shouldShowNotifications){tabsArray.push({id:1,name:/*i18n*/i18n._(\"Notifications\"),link:\"\".concat(match.url,\"/notifications\")});}var Tabs=/*#__PURE__*/_jsx(RoutedTabs,{tabsArray:tabsArray});if(pathname.includes('edit')||pathname.includes('schedules/')){Tabs=null;}if(error){var _error$response;return/*#__PURE__*/_jsx(PageSection,{children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(ContentError,{error:error,children:(error===null||error===void 0?void 0:(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===404&&/*#__PURE__*/_jsxs(\"span\",{children:[/*i18n*/i18n._(\"Management job not found.\"),/*#__PURE__*/_jsx(Link,{to:basePath,children:/*i18n*/i18n._(\"View all management jobs\")})]})})})});}if(isLoading){return/*#__PURE__*/_jsx(PageSection,{children:/*#__PURE__*/_jsxs(Card,{children:[Tabs,/*#__PURE__*/_jsx(ContentLoading,{})]})});}return/*#__PURE__*/_jsx(PageSection,{children:/*#__PURE__*/_jsxs(Card,{children:[Tabs,/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Redirect,{exact:true,from:\"\".concat(basePath,\"/:id\"),to:\"\".concat(basePath,\"/:id/schedules\")}),shouldShowNotifications?/*#__PURE__*/_jsx(Route,{path:\"\".concat(basePath,\"/:id/notifications\"),children:/*#__PURE__*/_jsx(NotificationList,{id:Number(result===null||result===void 0?void 0:(_result$systemJobTemp3=result.systemJobTemplate)===null||_result$systemJobTemp3===void 0?void 0:_result$systemJobTemp3.id),canToggleNotifications:isNotificationAdmin,apiModel:SystemJobTemplatesAPI})}):null,shouldShowSchedules?/*#__PURE__*/_jsx(Route,{path:\"\".concat(basePath,\"/:id/schedules\"),children:/*#__PURE__*/_jsx(Schedules,{apiModel:SystemJobTemplatesAPI,resource:result.systemJobTemplate,createSchedule:createSchedule,loadSchedules:loadSchedules,loadScheduleOptions:loadScheduleOptions,setBreadcrumb:setBreadcrumb,launchConfig:{},surveyConfig:{}})}):null]})]})});}export default ManagementJob;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/ManagementJob/ManagementJob.js"],"names":["React","useState","useEffect","useCallback","Link","Redirect","Route","Switch","useLocation","useParams","useRouteMatch","CaretLeftIcon","Card","PageSection","SystemJobTemplatesAPI","OrganizationsAPI","ContentError","ContentLoading","NotificationList","RoutedTabs","Schedules","useConfig","useRequest","ManagementJob","setBreadcrumb","basePath","match","id","pathname","me","isNotificationAdmin","setIsNotificationAdmin","Promise","all","readDetail","read","page_size","role_level","then","systemJobTemplate","data","notificationRoles","isLoading","error","request","result","Boolean","results","length","createSchedule","loadSchedules","params","readSchedules","loadScheduleOptions","readScheduleOptions","shouldShowNotifications","is_system_auditor","shouldShowSchedules","tabsArray","link","name","isBackButton","push","url","Tabs","includes","response","status","Number"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Link,\n  Redirect,\n  Route,\n  Switch,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from 'react-router-dom';\n\nimport { t } from '@lingui/macro';\nimport { CaretLeftIcon } from '@patternfly/react-icons';\nimport { Card, PageSection } from '@patternfly/react-core';\n\nimport { SystemJobTemplatesAPI, OrganizationsAPI } from 'api';\nimport ContentError from 'components/ContentError';\nimport ContentLoading from 'components/ContentLoading';\nimport NotificationList from 'components/NotificationList';\nimport RoutedTabs from 'components/RoutedTabs';\nimport { Schedules } from 'components/Schedule';\nimport { useConfig } from 'contexts/Config';\nimport useRequest from 'hooks/useRequest';\n\nfunction ManagementJob({ setBreadcrumb }) {\n  const basePath = '/management_jobs';\n\n  const match = useRouteMatch();\n  const { id } = useParams();\n  const { pathname } = useLocation();\n  const { me } = useConfig();\n\n  const [isNotificationAdmin, setIsNotificationAdmin] = useState(false);\n\n  const { isLoading, error, request, result } = useRequest(\n    useCallback(\n      () =>\n        Promise.all([\n          SystemJobTemplatesAPI.readDetail(id),\n          OrganizationsAPI.read({\n            page_size: 1,\n            role_level: 'notification_admin_role',\n          }),\n        ]).then(([{ data: systemJobTemplate }, notificationRoles]) => ({\n          systemJobTemplate,\n          notificationRoles,\n        })),\n      [id]\n    )\n  );\n\n  useEffect(() => {\n    request();\n  }, [request, pathname]);\n\n  useEffect(() => {\n    if (!result) return;\n    setIsNotificationAdmin(\n      Boolean(result?.notificationRoles?.data?.results?.length)\n    );\n    setBreadcrumb(result);\n  }, [result, setBreadcrumb, setIsNotificationAdmin]);\n\n  useEffect(() => {\n    if (!result) return;\n\n    setBreadcrumb(result);\n  }, [result, setBreadcrumb]);\n\n  const createSchedule = useCallback(\n    (data) =>\n      SystemJobTemplatesAPI.createSchedule(result?.systemJobTemplate.id, data),\n    [result]\n  );\n  const loadSchedules = useCallback(\n    (params) =>\n      SystemJobTemplatesAPI.readSchedules(result?.systemJobTemplate.id, params),\n    [result]\n  );\n  const loadScheduleOptions = useCallback(\n    () =>\n      SystemJobTemplatesAPI.readScheduleOptions(result?.systemJobTemplate.id),\n    [result]\n  );\n\n  const shouldShowNotifications =\n    result?.systemJobTemplate?.id &&\n    (isNotificationAdmin || me?.is_system_auditor);\n  const shouldShowSchedules = !!result?.systemJobTemplate?.id;\n\n  const tabsArray = [\n    {\n      id: 99,\n      link: basePath,\n      name: (\n        <>\n          <CaretLeftIcon />\n          {t`Back to management jobs`}\n        </>\n      ),\n      isBackButton: true,\n    },\n  ];\n\n  if (shouldShowSchedules) {\n    tabsArray.push({\n      id: 0,\n      name: t`Schedules`,\n      link: `${match.url}/schedules`,\n    });\n  }\n\n  if (shouldShowNotifications) {\n    tabsArray.push({\n      id: 1,\n      name: t`Notifications`,\n      link: `${match.url}/notifications`,\n    });\n  }\n\n  let Tabs = <RoutedTabs tabsArray={tabsArray} />;\n  if (pathname.includes('edit') || pathname.includes('schedules/')) {\n    Tabs = null;\n  }\n\n  if (error) {\n    return (\n      <PageSection>\n        <Card>\n          <ContentError error={error}>\n            {error?.response?.status === 404 && (\n              <span>\n                {t`Management job not found.`}\n\n                <Link to={basePath}>{t`View all management jobs`}</Link>\n              </span>\n            )}\n          </ContentError>\n        </Card>\n      </PageSection>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <PageSection>\n        <Card>\n          {Tabs}\n          <ContentLoading />\n        </Card>\n      </PageSection>\n    );\n  }\n\n  return (\n    <PageSection>\n      <Card>\n        {Tabs}\n        <Switch>\n          <Redirect\n            exact\n            from={`${basePath}/:id`}\n            to={`${basePath}/:id/schedules`}\n          />\n          {shouldShowNotifications ? (\n            <Route path={`${basePath}/:id/notifications`}>\n              <NotificationList\n                id={Number(result?.systemJobTemplate?.id)}\n                canToggleNotifications={isNotificationAdmin}\n                apiModel={SystemJobTemplatesAPI}\n              />\n            </Route>\n          ) : null}\n          {shouldShowSchedules ? (\n            <Route path={`${basePath}/:id/schedules`}>\n              <Schedules\n                apiModel={SystemJobTemplatesAPI}\n                resource={result.systemJobTemplate}\n                createSchedule={createSchedule}\n                loadSchedules={loadSchedules}\n                loadScheduleOptions={loadScheduleOptions}\n                setBreadcrumb={setBreadcrumb}\n                launchConfig={{}}\n                surveyConfig={{}}\n              />\n            </Route>\n          ) : null}\n        </Switch>\n      </Card>\n    </PageSection>\n  );\n}\n\nexport default ManagementJob;\n"]},"metadata":{},"sourceType":"module"}