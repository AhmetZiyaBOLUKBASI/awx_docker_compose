{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import React,{useEffect}from'react';import{useField}from'formik';import{FormGroup}from'@patternfly/react-core';import{minMaxValue,regExp}from'util/validators';import AnsibleSelect from'components/AnsibleSelect';import{VariablesField}from'components/CodeEditor';import FormField,{CheckboxField}from'components/FormField';import{FormFullWidthLayout,FormCheckboxLayout}from'components/FormLayout';import Popover from'components/Popover';import helpText from'../Inventory.helptext';import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";export var SourceVarsField=function SourceVarsField(_ref){var popoverContent=_ref.popoverContent;return/*#__PURE__*/_jsx(FormFullWidthLayout,{children:/*#__PURE__*/_jsx(VariablesField,{id:\"source_vars\",name:\"source_vars\",label:/*i18n*/i18n._(\"Source variables\"),tooltip:/*#__PURE__*/_jsxs(_Fragment,{children:[popoverContent,helpText.variables()]})})});};export var VerbosityField=function VerbosityField(){var _useField=useField('verbosity'),_useField2=_slicedToArray(_useField,3),field=_useField2[0],meta=_useField2[1],helpers=_useField2[2];var isValid=!(meta.touched&&meta.error);var options=[{value:'0',key:'0',label:/*i18n*/i18n._(\"0 (Warning)\")},{value:'1',key:'1',label:/*i18n*/i18n._(\"1 (Info)\")},{value:'2',key:'2',label:/*i18n*/i18n._(\"2 (Debug)\")}];return/*#__PURE__*/_jsx(FormGroup,{fieldId:\"verbosity\",validated:isValid?'default':'error',label:/*i18n*/i18n._(\"Verbosity\"),labelIcon:/*#__PURE__*/_jsx(Popover,{content:helpText.subFormVerbosityFields}),children:/*#__PURE__*/_jsx(AnsibleSelect,_objectSpread(_objectSpread({id:\"verbosity\",data:options},field),{},{onChange:function onChange(event,value){return helpers.setValue(value);}}))});};export var OptionsField=function OptionsField(){var _useField3=useField('update_on_launch'),_useField4=_slicedToArray(_useField3,1),updateOnLaunchField=_useField4[0];var _useField5=useField('update_cache_timeout'),_useField6=_slicedToArray(_useField5,3),updateCacheTimeoutHelper=_useField6[2];var _useField7=useField('source_project'),_useField8=_slicedToArray(_useField7,1),projectField=_useField8[0];useEffect(function(){if(!updateOnLaunchField.value){updateCacheTimeoutHelper.setValue(0);}},[updateOnLaunchField.value]);// eslint-disable-line react-hooks/exhaustive-deps\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FormFullWidthLayout,{children:/*#__PURE__*/_jsx(FormGroup,{fieldId:\"option-checkboxes\",label:/*i18n*/i18n._(\"Update options\"),children:/*#__PURE__*/_jsxs(FormCheckboxLayout,{children:[/*#__PURE__*/_jsx(CheckboxField,{id:\"overwrite\",name:\"overwrite\",label:/*i18n*/i18n._(\"Overwrite\"),tooltip:helpText.subFormOptions.overwrite}),/*#__PURE__*/_jsx(CheckboxField,{id:\"overwrite_vars\",name:\"overwrite_vars\",label:/*i18n*/i18n._(\"Overwrite variables\"),tooltip:helpText.subFormOptions.overwriteVariables}),/*#__PURE__*/_jsx(CheckboxField,{id:\"update_on_launch\",name:\"update_on_launch\",label:/*i18n*/i18n._(\"Update on launch\"),tooltip:helpText.subFormOptions.updateOnLaunch(projectField)})]})})}),updateOnLaunchField.value&&/*#__PURE__*/_jsx(FormField,{id:\"cache-timeout\",name:\"update_cache_timeout\",type:\"number\",min:\"0\",max:\"2147483647\",validate:minMaxValue(0,2147483647),label:/*i18n*/i18n._(\"Cache timeout (seconds)\"),tooltip:helpText.cachedTimeOut})]});};export var EnabledVarField=function EnabledVarField(){return/*#__PURE__*/_jsx(FormField,{id:\"inventory-enabled-var\",label:/*i18n*/i18n._(\"Enabled Variable\"),tooltip:helpText.enabledVariableField,name:\"enabled_var\",type:\"text\"});};export var EnabledValueField=function EnabledValueField(){return/*#__PURE__*/_jsx(FormField,{id:\"inventory-enabled-value\",label:/*i18n*/i18n._(\"Enabled Value\"),tooltip:helpText.enabledValue,name:\"enabled_value\",type:\"text\"});};export var HostFilterField=function HostFilterField(){return/*#__PURE__*/_jsx(FormField,{id:\"host-filter\",label:/*i18n*/i18n._(\"Host Filter\"),tooltip:helpText.hostFilter,name:\"host_filter\",type:\"text\",validate:regExp()});};","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Inventory/shared/InventorySourceSubForms/SharedFields.js"],"names":["React","useEffect","useField","FormGroup","minMaxValue","regExp","AnsibleSelect","VariablesField","FormField","CheckboxField","FormFullWidthLayout","FormCheckboxLayout","Popover","helpText","SourceVarsField","popoverContent","variables","VerbosityField","field","meta","helpers","isValid","touched","error","options","value","key","label","subFormVerbosityFields","event","setValue","OptionsField","updateOnLaunchField","updateCacheTimeoutHelper","projectField","subFormOptions","overwrite","overwriteVariables","updateOnLaunch","cachedTimeOut","EnabledVarField","enabledVariableField","EnabledValueField","enabledValue","HostFilterField","hostFilter"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\n\nimport { t } from '@lingui/macro';\nimport { useField } from 'formik';\nimport { FormGroup } from '@patternfly/react-core';\nimport { minMaxValue, regExp } from 'util/validators';\nimport AnsibleSelect from 'components/AnsibleSelect';\nimport { VariablesField } from 'components/CodeEditor';\nimport FormField, { CheckboxField } from 'components/FormField';\nimport { FormFullWidthLayout, FormCheckboxLayout } from 'components/FormLayout';\nimport Popover from 'components/Popover';\nimport helpText from '../Inventory.helptext';\n\nexport const SourceVarsField = ({ popoverContent }) => (\n  <FormFullWidthLayout>\n    <VariablesField\n      id=\"source_vars\"\n      name=\"source_vars\"\n      label={t`Source variables`}\n      tooltip={\n        <>\n          {popoverContent}\n          {helpText.variables()}\n        </>\n      }\n    />\n  </FormFullWidthLayout>\n);\n\nexport const VerbosityField = () => {\n  const [field, meta, helpers] = useField('verbosity');\n  const isValid = !(meta.touched && meta.error);\n  const options = [\n    { value: '0', key: '0', label: t`0 (Warning)` },\n    { value: '1', key: '1', label: t`1 (Info)` },\n    { value: '2', key: '2', label: t`2 (Debug)` },\n  ];\n\n  return (\n    <FormGroup\n      fieldId=\"verbosity\"\n      validated={isValid ? 'default' : 'error'}\n      label={t`Verbosity`}\n      labelIcon={<Popover content={helpText.subFormVerbosityFields} />}\n    >\n      <AnsibleSelect\n        id=\"verbosity\"\n        data={options}\n        {...field}\n        onChange={(event, value) => helpers.setValue(value)}\n      />\n    </FormGroup>\n  );\n};\n\nexport const OptionsField = () => {\n  const [updateOnLaunchField] = useField('update_on_launch');\n  const [, , updateCacheTimeoutHelper] = useField('update_cache_timeout');\n  const [projectField] = useField('source_project');\n\n  useEffect(() => {\n    if (!updateOnLaunchField.value) {\n      updateCacheTimeoutHelper.setValue(0);\n    }\n  }, [updateOnLaunchField.value]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <>\n      <FormFullWidthLayout>\n        <FormGroup fieldId=\"option-checkboxes\" label={t`Update options`}>\n          <FormCheckboxLayout>\n            <CheckboxField\n              id=\"overwrite\"\n              name=\"overwrite\"\n              label={t`Overwrite`}\n              tooltip={helpText.subFormOptions.overwrite}\n            />\n            <CheckboxField\n              id=\"overwrite_vars\"\n              name=\"overwrite_vars\"\n              label={t`Overwrite variables`}\n              tooltip={helpText.subFormOptions.overwriteVariables}\n            />\n            <CheckboxField\n              id=\"update_on_launch\"\n              name=\"update_on_launch\"\n              label={t`Update on launch`}\n              tooltip={helpText.subFormOptions.updateOnLaunch(projectField)}\n            />\n          </FormCheckboxLayout>\n        </FormGroup>\n      </FormFullWidthLayout>\n      {updateOnLaunchField.value && (\n        <FormField\n          id=\"cache-timeout\"\n          name=\"update_cache_timeout\"\n          type=\"number\"\n          min=\"0\"\n          max=\"2147483647\"\n          validate={minMaxValue(0, 2147483647)}\n          label={t`Cache timeout (seconds)`}\n          tooltip={helpText.cachedTimeOut}\n        />\n      )}\n    </>\n  );\n};\n\nexport const EnabledVarField = () => (\n  <FormField\n    id=\"inventory-enabled-var\"\n    label={t`Enabled Variable`}\n    tooltip={helpText.enabledVariableField}\n    name=\"enabled_var\"\n    type=\"text\"\n  />\n);\n\nexport const EnabledValueField = () => (\n  <FormField\n    id=\"inventory-enabled-value\"\n    label={t`Enabled Value`}\n    tooltip={helpText.enabledValue}\n    name=\"enabled_value\"\n    type=\"text\"\n  />\n);\n\nexport const HostFilterField = () => (\n  <FormField\n    id=\"host-filter\"\n    label={t`Host Filter`}\n    tooltip={helpText.hostFilter}\n    name=\"host_filter\"\n    type=\"text\"\n    validate={regExp()}\n  />\n);\n"]},"metadata":{},"sourceType":"module"}