{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectWithoutProperties from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"id\",\"name\",\"label\",\"tooltip\",\"helperText\",\"validate\",\"isRequired\",\"mode\"];import React from'react';import{useField}from'formik';import{FormGroup}from'@patternfly/react-core';import CodeEditor from'./CodeEditor';import Popover from'../Popover';import{jsx as _jsx}from\"react/jsx-runtime\";function CodeEditorField(_ref){var id=_ref.id,name=_ref.name,label=_ref.label,tooltip=_ref.tooltip,helperText=_ref.helperText,validate=_ref.validate,isRequired=_ref.isRequired,mode=_ref.mode,rest=_objectWithoutProperties(_ref,_excluded);var _useField=useField({name:name,validate:validate}),_useField2=_slicedToArray(_useField,3),field=_useField2[0],meta=_useField2[1],helpers=_useField2[2];var isValid=!(meta.touched&&meta.error);return/*#__PURE__*/_jsx(FormGroup,{id:\"\".concat(id,\"-field\"),fieldId:id,helperText:helperText,helperTextInvalid:meta.error,isRequired:isRequired,validated:isValid?'default':'error',label:label,labelIcon:/*#__PURE__*/_jsx(Popover,{content:tooltip}),children:/*#__PURE__*/_jsx(CodeEditor,_objectSpread(_objectSpread(_objectSpread({id:id},rest),field),{},{onChange:function onChange(value){helpers.setValue(value);},mode:mode}))});}CodeEditorField.defaultProps={helperText:'',validate:function validate(){},isRequired:false,tooltip:null,rows:5};export default CodeEditorField;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/CodeEditor/CodeEditorField.js"],"names":["React","useField","FormGroup","CodeEditor","Popover","CodeEditorField","id","name","label","tooltip","helperText","validate","isRequired","mode","rest","field","meta","helpers","isValid","touched","error","value","setValue","defaultProps","rows"],"mappings":"kaAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAWA,OAASC,QAAT,KAAyB,QAAzB,CACA,OAASC,SAAT,KAA0B,wBAA1B,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,C,2CAEA,QAASC,CAAAA,eAAT,MAUG,IATDC,CAAAA,EASC,MATDA,EASC,CARDC,IAQC,MARDA,IAQC,CAPDC,KAOC,MAPDA,KAOC,CANDC,OAMC,MANDA,OAMC,CALDC,UAKC,MALDA,UAKC,CAJDC,QAIC,MAJDA,QAIC,CAHDC,UAGC,MAHDA,UAGC,CAFDC,IAEC,MAFDA,IAEC,CADEC,IACF,0CACD,cAA+Bb,QAAQ,CAAC,CAAEM,IAAI,CAAJA,IAAF,CAAQI,QAAQ,CAARA,QAAR,CAAD,CAAvC,wCAAOI,KAAP,eAAcC,IAAd,eAAoBC,OAApB,eACA,GAAMC,CAAAA,OAAO,CAAG,EAAEF,IAAI,CAACG,OAAL,EAAgBH,IAAI,CAACI,KAAvB,CAAhB,CAEA,mBACE,KAAC,SAAD,EACE,EAAE,WAAKd,EAAL,UADJ,CAEE,OAAO,CAAEA,EAFX,CAGE,UAAU,CAAEI,UAHd,CAIE,iBAAiB,CAAEM,IAAI,CAACI,KAJ1B,CAKE,UAAU,CAAER,UALd,CAME,SAAS,CAAEM,OAAO,CAAG,SAAH,CAAe,OANnC,CAOE,KAAK,CAAEV,KAPT,CAQE,SAAS,cAAE,KAAC,OAAD,EAAS,OAAO,CAAEC,OAAlB,EARb,uBAUE,KAAC,UAAD,4CACE,EAAE,CAAEH,EADN,EAEMQ,IAFN,EAGMC,KAHN,MAIE,QAAQ,CAAE,kBAACM,KAAD,CAAW,CACnBJ,OAAO,CAACK,QAAR,CAAiBD,KAAjB,EACD,CANH,CAOE,IAAI,CAAER,IAPR,GAVF,EADF,CAsBD,CAaDR,eAAe,CAACkB,YAAhB,CAA+B,CAC7Bb,UAAU,CAAE,EADiB,CAE7BC,QAAQ,CAAE,mBAAM,CAAE,CAFW,CAG7BC,UAAU,CAAE,KAHiB,CAI7BH,OAAO,CAAE,IAJoB,CAK7Be,IAAI,CAAE,CALuB,CAA/B,CAQA,cAAenB,CAAAA,eAAf","sourcesContent":["import React from 'react';\nimport {\n  string,\n  oneOfType,\n  object,\n  func,\n  bool,\n  node,\n  oneOf,\n  number,\n} from 'prop-types';\nimport { useField } from 'formik';\nimport { FormGroup } from '@patternfly/react-core';\nimport CodeEditor from './CodeEditor';\nimport Popover from '../Popover';\n\nfunction CodeEditorField({\n  id,\n  name,\n  label,\n  tooltip,\n  helperText,\n  validate,\n  isRequired,\n  mode,\n  ...rest\n}) {\n  const [field, meta, helpers] = useField({ name, validate });\n  const isValid = !(meta.touched && meta.error);\n\n  return (\n    <FormGroup\n      id={`${id}-field`}\n      fieldId={id}\n      helperText={helperText}\n      helperTextInvalid={meta.error}\n      isRequired={isRequired}\n      validated={isValid ? 'default' : 'error'}\n      label={label}\n      labelIcon={<Popover content={tooltip} />}\n    >\n      <CodeEditor\n        id={id}\n        {...rest}\n        {...field}\n        onChange={(value) => {\n          helpers.setValue(value);\n        }}\n        mode={mode}\n      />\n    </FormGroup>\n  );\n}\nCodeEditorField.propTypes = {\n  helperText: string,\n  id: string.isRequired,\n  name: string.isRequired,\n  label: oneOfType([object, string]).isRequired,\n  validate: func,\n  isRequired: bool,\n  tooltip: node,\n  mode: oneOf(['javascript', 'yaml', 'jinja2']).isRequired,\n  rows: number,\n};\n\nCodeEditorField.defaultProps = {\n  helperText: '',\n  validate: () => {},\n  isRequired: false,\n  tooltip: null,\n  rows: 5,\n};\n\nexport default CodeEditorField;\n"]},"metadata":{},"sourceType":"module"}