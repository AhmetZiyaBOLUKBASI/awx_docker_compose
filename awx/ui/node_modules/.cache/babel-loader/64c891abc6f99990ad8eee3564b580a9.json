{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Form/form';\nexport var FormHelperText = function FormHelperText(_a) {\n  var _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      _a$isError = _a.isError,\n      isError = _a$isError === void 0 ? false : _a$isError,\n      _a$isHidden = _a.isHidden,\n      isHidden = _a$isHidden === void 0 ? true : _a$isHidden,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      _a$icon = _a.icon,\n      icon = _a$icon === void 0 ? null : _a$icon,\n      _a$component = _a.component,\n      component = _a$component === void 0 ? 'p' : _a$component,\n      props = __rest(_a, [\"children\", \"isError\", \"isHidden\", \"className\", \"icon\", \"component\"]);\n\n  var Component = component;\n  return React.createElement(Component, Object.assign({\n    className: css(styles.formHelperText, isError && styles.modifiers.error, isHidden && styles.modifiers.hidden, className)\n  }, props), icon && React.createElement(\"span\", {\n    className: css(styles.formHelperTextIcon)\n  }, icon), children);\n};\nFormHelperText.displayName = 'FormHelperText';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Form/FormHelperText.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,mDAAnB;AAiBA,OAAO,IAAM,cAAc,GAAiD,SAA/D,cAA+D,CAAC,EAAD,EAQlD;AARmD,oBAM5D,EAN4D,CAC3E,QAD2E;AAAA,MAC3E,QAD2E,4BAChE,IADgE;AAAA,mBAM5D,EAN4D,CAE3E,OAF2E;AAAA,MAE3E,OAF2E,2BAEjE,KAFiE;AAAA,oBAM5D,EAN4D,CAG3E,QAH2E;AAAA,MAG3E,QAH2E,4BAGhE,IAHgE;AAAA,qBAM5D,EAN4D,CAI3E,SAJ2E;AAAA,MAI3E,SAJ2E,6BAI/D,EAJ+D;AAAA,gBAM5D,EAN4D,CAK3E,IAL2E;AAAA,MAK3E,IAL2E,wBAKpE,IALoE;AAAA,qBAM5D,EAN4D,CAM3E,SAN2E;AAAA,MAM3E,SAN2E,6BAM/D,GAN+D;AAAA,MAOxE,KAPwE,GAOnE,MAAA,CAAA,EAAA,EAPmE,CAAA,UAAA,EAAA,SAAA,EAAA,UAAA,EAAA,WAAA,EAAA,MAAA,EAAA,WAAA,CAOnE,CAPmE;;AAS3E,MAAM,SAAS,GAAG,SAAlB;AACA,SACE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,MAAA,CAAA,MAAA,CAAA;AACR,IAAA,SAAS,EAAE,GAAG,CACZ,MAAM,CAAC,cADK,EAEZ,OAAO,IAAI,MAAM,CAAC,SAAP,CAAiB,KAFhB,EAGZ,QAAQ,IAAI,MAAM,CAAC,SAAP,CAAiB,MAHjB,EAIZ,SAJY;AADN,GAAA,EAOJ,KAPI,CAAV,EASG,IAAI,IAAI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,kBAAR;AAApB,GAAA,EAAkD,IAAlD,CATX,EAUG,QAVH,CADF;AAcD,CAxBM;AAyBP,cAAc,CAAC,WAAf,GAA6B,gBAA7B","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Form/form';\n\nexport interface FormHelperTextProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered inside the Helper Text Item */\n  children?: React.ReactNode;\n  /** Adds error styling to the Helper Text  * */\n  isError?: boolean;\n  /** Hides the helper text * */\n  isHidden?: boolean;\n  /** Additional classes added to the Helper Text Item  */\n  className?: string;\n  /** Icon displayed to the left of the helper text. */\n  icon?: React.ReactNode;\n  /** Component type of the form helper text */\n  component?: 'p' | 'div';\n}\n\nexport const FormHelperText: React.FunctionComponent<FormHelperTextProps> = ({\n  children = null,\n  isError = false,\n  isHidden = true,\n  className = '',\n  icon = null,\n  component = 'p',\n  ...props\n}: FormHelperTextProps) => {\n  const Component = component as any;\n  return (\n    <Component\n      className={css(\n        styles.formHelperText,\n        isError && styles.modifiers.error,\n        isHidden && styles.modifiers.hidden,\n        className\n      )}\n      {...props}\n    >\n      {icon && <span className={css(styles.formHelperTextIcon)}>{icon}</span>}\n      {children}\n    </Component>\n  );\n};\nFormHelperText.displayName = 'FormHelperText';\n"]},"metadata":{},"sourceType":"module"}