{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";/* eslint-disable react/jsx-no-useless-fragment */import React,{useEffect,useState}from'react';import{useLocation,useHistory}from'react-router-dom';import{useField}from'formik';import{Button,ButtonVariant,FormGroup,InputGroup,Tooltip}from'@patternfly/react-core';import{KeyIcon}from'@patternfly/react-icons';import styles from'@patternfly/react-styles/css/components/Form/form';import{css}from'@patternfly/react-styles';import FieldWithPrompt from'components/FieldWithPrompt';import Popover from'components/Popover';import{CredentialPluginPrompt}from'./CredentialPluginPrompt';import CredentialPluginSelected from'./CredentialPluginSelected';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function CredentialPluginInput(props){var _inputField$value,_inputField$value2;var children=props.children,isDisabled=props.isDisabled,isRequired=props.isRequired,validated=props.validated,fieldOptions=props.fieldOptions;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showPluginWizard=_useState2[0],setShowPluginWizard=_useState2[1];var _useField=useField(\"inputs.\".concat(fieldOptions.id)),_useField2=_slicedToArray(_useField,3),inputField=_useField2[0],meta=_useField2[1],helpers=_useField2[2];var _useField3=useField(\"passwordPrompts.\".concat(fieldOptions.id)),_useField4=_slicedToArray(_useField3,1),passwordPromptField=_useField4[0];var location=useLocation();var history=useHistory();var disableFieldAndButtons=!!passwordPromptField.value||!!(meta.initialValue&&meta.initialValue!==''&&meta.value===meta.initialValue);var handlePluginWizardClose=function handlePluginWizardClose(){setShowPluginWizard(false);history.push(location.pathname);};return/*#__PURE__*/_jsxs(_Fragment,{children:[inputField!==null&&inputField!==void 0&&(_inputField$value=inputField.value)!==null&&_inputField$value!==void 0&&_inputField$value.credential?/*#__PURE__*/_jsx(CredentialPluginSelected,{credential:inputField===null||inputField===void 0?void 0:(_inputField$value2=inputField.value)===null||_inputField$value2===void 0?void 0:_inputField$value2.credential,onClearPlugin:function onClearPlugin(){return helpers.setValue('');},onEditPlugin:function onEditPlugin(){return setShowPluginWizard(true);},fieldId:fieldOptions.id}):/*#__PURE__*/_jsxs(InputGroup,{children:[/*#__PURE__*/React.cloneElement(children,_objectSpread(_objectSpread({},inputField),{},{isRequired:isRequired,validated:validated?'default':'error',isDisabled:disableFieldAndButtons,onChange:function onChange(_,event){inputField.onChange(event);}})),/*#__PURE__*/_jsx(Tooltip,{content:/*i18n*/i18n._(\"Populate field from an external secret management system\"),children:/*#__PURE__*/_jsx(Button,{ouiaId:\"credential-field-\".concat(fieldOptions.id,\"-external-button\"),id:\"credential-\".concat(fieldOptions.id,\"-external-button\"),variant:ButtonVariant.control,\"aria-label\":/*i18n*/i18n._(\"Populate field from an external secret management system\"),onClick:function onClick(){return setShowPluginWizard(true);},isDisabled:isDisabled||disableFieldAndButtons,children:/*#__PURE__*/_jsx(KeyIcon,{})})})]}),showPluginWizard&&/*#__PURE__*/_jsx(CredentialPluginPrompt,{initialValues:typeof inputField.value==='object'?inputField.value:{},onClose:function onClose(){return handlePluginWizardClose();},onSubmit:function onSubmit(val){val.touched=true;helpers.setValue(val);setShowPluginWizard(false);}})]});}function CredentialPluginField(props){var fieldOptions=props.fieldOptions,isRequired=props.isRequired,validated=props.validated;var _useField5=useField(\"inputs.\".concat(fieldOptions.id)),_useField6=_slicedToArray(_useField5,3),meta=_useField6[1],helpers=_useField6[2];var _useField7=useField(\"passwordPrompts.\".concat(fieldOptions.id)),_useField8=_slicedToArray(_useField7,1),passwordPromptField=_useField8[0];var invalidHelperTextToDisplay;if(meta.error&&meta.touched){invalidHelperTextToDisplay=/*#__PURE__*/_jsx(\"div\",{className:css(styles.formHelperText,styles.modifiers.error),id:\"\".concat(fieldOptions.id,\"-helper\"),\"aria-live\":\"polite\",children:meta.error});}if(fieldOptions.id==='vault_password'&&passwordPromptField.value){invalidHelperTextToDisplay=null;}useEffect(function(){if(passwordPromptField.value){helpers.setValue('');}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[passwordPromptField.value]);return/*#__PURE__*/_jsx(_Fragment,{children:fieldOptions.ask_at_runtime?/*#__PURE__*/_jsxs(FieldWithPrompt,{isRequired:isRequired,fieldId:\"credential-\".concat(fieldOptions.id),label:fieldOptions.label,promptId:\"credential-prompt-\".concat(fieldOptions.id),promptName:\"passwordPrompts.\".concat(fieldOptions.id),tooltip:fieldOptions.help_text,children:[/*#__PURE__*/_jsx(CredentialPluginInput,_objectSpread({},props)),invalidHelperTextToDisplay]}):/*#__PURE__*/_jsxs(FormGroup,{fieldId:\"credential-\".concat(fieldOptions.id),helperTextInvalid:meta.error,isRequired:isRequired,validated:validated?'default':'error',label:fieldOptions.label,labelIcon:fieldOptions.help_text&&/*#__PURE__*/_jsx(Popover,{content:fieldOptions.help_text}),children:[/*#__PURE__*/_jsx(CredentialPluginInput,_objectSpread({},props)),invalidHelperTextToDisplay]})});}CredentialPluginField.defaultProps={isDisabled:false,isRequired:false};export default CredentialPluginField;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Credential/shared/CredentialPlugins/CredentialPluginField.js"],"names":["React","useEffect","useState","useLocation","useHistory","useField","Button","ButtonVariant","FormGroup","InputGroup","Tooltip","KeyIcon","styles","css","FieldWithPrompt","Popover","CredentialPluginPrompt","CredentialPluginSelected","CredentialPluginInput","props","children","isDisabled","isRequired","validated","fieldOptions","showPluginWizard","setShowPluginWizard","id","inputField","meta","helpers","passwordPromptField","location","history","disableFieldAndButtons","value","initialValue","handlePluginWizardClose","push","pathname","credential","setValue","cloneElement","onChange","_","event","control","val","touched","CredentialPluginField","invalidHelperTextToDisplay","error","formHelperText","modifiers","ask_at_runtime","label","help_text","defaultProps"],"mappings":"4OAAA,kDACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CAEA,OAASC,WAAT,CAAsBC,UAAtB,KAAwC,kBAAxC,CAEA,OAASC,QAAT,KAAyB,QAAzB,CACA,OACEC,MADF,CAEEC,aAFF,CAGEC,SAHF,CAIEC,UAJF,CAKEC,OALF,KAMO,wBANP,CAOA,OAASC,OAAT,KAAwB,yBAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mDAAnB,CACA,OAASC,GAAT,KAAoB,0BAApB,CACA,MAAOC,CAAAA,eAAP,KAA4B,4BAA5B,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,OAASC,sBAAT,KAAuC,0BAAvC,CACA,MAAOC,CAAAA,wBAAP,KAAqC,4BAArC,C,6IAEA,QAASC,CAAAA,qBAAT,CAA+BC,KAA/B,CAAsC,0CACpC,GAAQC,CAAAA,QAAR,CAAsED,KAAtE,CAAQC,QAAR,CAAkBC,UAAlB,CAAsEF,KAAtE,CAAkBE,UAAlB,CAA8BC,UAA9B,CAAsEH,KAAtE,CAA8BG,UAA9B,CAA0CC,SAA1C,CAAsEJ,KAAtE,CAA0CI,SAA1C,CAAqDC,YAArD,CAAsEL,KAAtE,CAAqDK,YAArD,CACA,cAAgDtB,QAAQ,CAAC,KAAD,CAAxD,wCAAOuB,gBAAP,eAAyBC,mBAAzB,eACA,cAAoCrB,QAAQ,kBAAWmB,YAAY,CAACG,EAAxB,EAA5C,wCAAOC,UAAP,eAAmBC,IAAnB,eAAyBC,OAAzB,eACA,eAA8BzB,QAAQ,2BAAoBmB,YAAY,CAACG,EAAjC,EAAtC,yCAAOI,mBAAP,eACA,GAAMC,CAAAA,QAAQ,CAAG7B,WAAW,EAA5B,CACA,GAAM8B,CAAAA,OAAO,CAAG7B,UAAU,EAA1B,CAEA,GAAM8B,CAAAA,sBAAsB,CAC1B,CAAC,CAACH,mBAAmB,CAACI,KAAtB,EACA,CAAC,EACCN,IAAI,CAACO,YAAL,EACAP,IAAI,CAACO,YAAL,GAAsB,EADtB,EAEAP,IAAI,CAACM,KAAL,GAAeN,IAAI,CAACO,YAHrB,CAFH,CAQA,GAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,EAAM,CACpCX,mBAAmB,CAAC,KAAD,CAAnB,CACAO,OAAO,CAACK,IAAR,CAAaN,QAAQ,CAACO,QAAtB,EACD,CAHD,CAKA,mBACE,2BACGX,UAAU,OAAV,EAAAA,UAAU,SAAV,qBAAAA,UAAU,CAAEO,KAAZ,wDAAmBK,UAAnB,cACC,KAAC,wBAAD,EACE,UAAU,CAAEZ,UAAF,SAAEA,UAAF,qCAAEA,UAAU,CAAEO,KAAd,6CAAE,mBAAmBK,UADjC,CAEE,aAAa,CAAE,+BAAMV,CAAAA,OAAO,CAACW,QAAR,CAAiB,EAAjB,CAAN,EAFjB,CAGE,YAAY,CAAE,8BAAMf,CAAAA,mBAAmB,CAAC,IAAD,CAAzB,EAHhB,CAIE,OAAO,CAAEF,YAAY,CAACG,EAJxB,EADD,cAQC,MAAC,UAAD,yBACG3B,KAAK,CAAC0C,YAAN,CAAmBtB,QAAnB,gCACIQ,UADJ,MAECN,UAAU,CAAVA,UAFD,CAGCC,SAAS,CAAEA,SAAS,CAAG,SAAH,CAAe,OAHpC,CAICF,UAAU,CAAEa,sBAJb,CAKCS,QAAQ,CAAE,kBAACC,CAAD,CAAIC,KAAJ,CAAc,CACtBjB,UAAU,CAACe,QAAX,CAAoBE,KAApB,EACD,CAPF,GADH,cAUE,KAAC,OAAD,EACE,OAAO,SAAE,kEADX,uBAGE,KAAC,MAAD,EACE,MAAM,4BAAsBrB,YAAY,CAACG,EAAnC,oBADR,CAEE,EAAE,sBAAgBH,YAAY,CAACG,EAA7B,oBAFJ,CAGE,OAAO,CAAEpB,aAAa,CAACuC,OAHzB,CAIE,qBAAY,kEAJd,CAKE,OAAO,CAAE,yBAAMpB,CAAAA,mBAAmB,CAAC,IAAD,CAAzB,EALX,CAME,UAAU,CAAEL,UAAU,EAAIa,sBAN5B,uBAQE,KAAC,OAAD,IARF,EAHF,EAVF,GATJ,CAmCGT,gBAAgB,eACf,KAAC,sBAAD,EACE,aAAa,CACX,MAAOG,CAAAA,UAAU,CAACO,KAAlB,GAA4B,QAA5B,CAAuCP,UAAU,CAACO,KAAlD,CAA0D,EAF9D,CAIE,OAAO,CAAE,yBAAME,CAAAA,uBAAuB,EAA7B,EAJX,CAKE,QAAQ,CAAE,kBAACU,GAAD,CAAS,CACjBA,GAAG,CAACC,OAAJ,CAAc,IAAd,CACAlB,OAAO,CAACW,QAAR,CAAiBM,GAAjB,EACArB,mBAAmB,CAAC,KAAD,CAAnB,CACD,CATH,EApCJ,GADF,CAmDD,CAED,QAASuB,CAAAA,qBAAT,CAA+B9B,KAA/B,CAAsC,CACpC,GAAQK,CAAAA,YAAR,CAAgDL,KAAhD,CAAQK,YAAR,CAAsBF,UAAtB,CAAgDH,KAAhD,CAAsBG,UAAtB,CAAkCC,SAAlC,CAAgDJ,KAAhD,CAAkCI,SAAlC,CAEA,eAA0BlB,QAAQ,kBAAWmB,YAAY,CAACG,EAAxB,EAAlC,yCAASE,IAAT,eAAeC,OAAf,eACA,eAA8BzB,QAAQ,2BAAoBmB,YAAY,CAACG,EAAjC,EAAtC,yCAAOI,mBAAP,eAEA,GAAImB,CAAAA,0BAAJ,CAEA,GAAIrB,IAAI,CAACsB,KAAL,EAActB,IAAI,CAACmB,OAAvB,CAAgC,CAC9BE,0BAA0B,cACxB,YACE,SAAS,CAAErC,GAAG,CAACD,MAAM,CAACwC,cAAR,CAAwBxC,MAAM,CAACyC,SAAP,CAAiBF,KAAzC,CADhB,CAEE,EAAE,WAAK3B,YAAY,CAACG,EAAlB,WAFJ,CAGE,YAAU,QAHZ,UAKGE,IAAI,CAACsB,KALR,EADF,CASD,CAED,GAAI3B,YAAY,CAACG,EAAb,GAAoB,gBAApB,EAAwCI,mBAAmB,CAACI,KAAhE,CAAuE,CACrEe,0BAA0B,CAAG,IAA7B,CACD,CAEDjD,SAAS,CAAC,UAAM,CACd,GAAI8B,mBAAmB,CAACI,KAAxB,CAA+B,CAC7BL,OAAO,CAACW,QAAR,CAAiB,EAAjB,EACD,CACD;AACD,CALQ,CAKN,CAACV,mBAAmB,CAACI,KAArB,CALM,CAAT,CAOA,mBACE,yBACGX,YAAY,CAAC8B,cAAb,cACC,MAAC,eAAD,EACE,UAAU,CAAEhC,UADd,CAEE,OAAO,sBAAgBE,YAAY,CAACG,EAA7B,CAFT,CAGE,KAAK,CAAEH,YAAY,CAAC+B,KAHtB,CAIE,QAAQ,6BAAuB/B,YAAY,CAACG,EAApC,CAJV,CAKE,UAAU,2BAAqBH,YAAY,CAACG,EAAlC,CALZ,CAME,OAAO,CAAEH,YAAY,CAACgC,SANxB,wBAQE,KAAC,qBAAD,kBAA2BrC,KAA3B,EARF,CASG+B,0BATH,GADD,cAaC,MAAC,SAAD,EACE,OAAO,sBAAgB1B,YAAY,CAACG,EAA7B,CADT,CAEE,iBAAiB,CAAEE,IAAI,CAACsB,KAF1B,CAGE,UAAU,CAAE7B,UAHd,CAIE,SAAS,CAAEC,SAAS,CAAG,SAAH,CAAe,OAJrC,CAKE,KAAK,CAAEC,YAAY,CAAC+B,KALtB,CAME,SAAS,CACP/B,YAAY,CAACgC,SAAb,eACE,KAAC,OAAD,EAAS,OAAO,CAAEhC,YAAY,CAACgC,SAA/B,EARN,wBAYE,KAAC,qBAAD,kBAA2BrC,KAA3B,EAZF,CAaG+B,0BAbH,GAdJ,EADF,CAiCD,CAWDD,qBAAqB,CAACQ,YAAtB,CAAqC,CACnCpC,UAAU,CAAE,KADuB,CAEnCC,UAAU,CAAE,KAFuB,CAArC,CAKA,cAAe2B,CAAAA,qBAAf","sourcesContent":["/* eslint-disable react/jsx-no-useless-fragment */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { t } from '@lingui/macro';\nimport { useField } from 'formik';\nimport {\n  Button,\n  ButtonVariant,\n  FormGroup,\n  InputGroup,\n  Tooltip,\n} from '@patternfly/react-core';\nimport { KeyIcon } from '@patternfly/react-icons';\nimport styles from '@patternfly/react-styles/css/components/Form/form';\nimport { css } from '@patternfly/react-styles';\nimport FieldWithPrompt from 'components/FieldWithPrompt';\nimport Popover from 'components/Popover';\nimport { CredentialPluginPrompt } from './CredentialPluginPrompt';\nimport CredentialPluginSelected from './CredentialPluginSelected';\n\nfunction CredentialPluginInput(props) {\n  const { children, isDisabled, isRequired, validated, fieldOptions } = props;\n  const [showPluginWizard, setShowPluginWizard] = useState(false);\n  const [inputField, meta, helpers] = useField(`inputs.${fieldOptions.id}`);\n  const [passwordPromptField] = useField(`passwordPrompts.${fieldOptions.id}`);\n  const location = useLocation();\n  const history = useHistory();\n\n  const disableFieldAndButtons =\n    !!passwordPromptField.value ||\n    !!(\n      meta.initialValue &&\n      meta.initialValue !== '' &&\n      meta.value === meta.initialValue\n    );\n\n  const handlePluginWizardClose = () => {\n    setShowPluginWizard(false);\n    history.push(location.pathname);\n  };\n\n  return (\n    <>\n      {inputField?.value?.credential ? (\n        <CredentialPluginSelected\n          credential={inputField?.value?.credential}\n          onClearPlugin={() => helpers.setValue('')}\n          onEditPlugin={() => setShowPluginWizard(true)}\n          fieldId={fieldOptions.id}\n        />\n      ) : (\n        <InputGroup>\n          {React.cloneElement(children, {\n            ...inputField,\n            isRequired,\n            validated: validated ? 'default' : 'error',\n            isDisabled: disableFieldAndButtons,\n            onChange: (_, event) => {\n              inputField.onChange(event);\n            },\n          })}\n          <Tooltip\n            content={t`Populate field from an external secret management system`}\n          >\n            <Button\n              ouiaId={`credential-field-${fieldOptions.id}-external-button`}\n              id={`credential-${fieldOptions.id}-external-button`}\n              variant={ButtonVariant.control}\n              aria-label={t`Populate field from an external secret management system`}\n              onClick={() => setShowPluginWizard(true)}\n              isDisabled={isDisabled || disableFieldAndButtons}\n            >\n              <KeyIcon />\n            </Button>\n          </Tooltip>\n        </InputGroup>\n      )}\n      {showPluginWizard && (\n        <CredentialPluginPrompt\n          initialValues={\n            typeof inputField.value === 'object' ? inputField.value : {}\n          }\n          onClose={() => handlePluginWizardClose()}\n          onSubmit={(val) => {\n            val.touched = true;\n            helpers.setValue(val);\n            setShowPluginWizard(false);\n          }}\n        />\n      )}\n    </>\n  );\n}\n\nfunction CredentialPluginField(props) {\n  const { fieldOptions, isRequired, validated } = props;\n\n  const [, meta, helpers] = useField(`inputs.${fieldOptions.id}`);\n  const [passwordPromptField] = useField(`passwordPrompts.${fieldOptions.id}`);\n\n  let invalidHelperTextToDisplay;\n\n  if (meta.error && meta.touched) {\n    invalidHelperTextToDisplay = (\n      <div\n        className={css(styles.formHelperText, styles.modifiers.error)}\n        id={`${fieldOptions.id}-helper`}\n        aria-live=\"polite\"\n      >\n        {meta.error}\n      </div>\n    );\n  }\n\n  if (fieldOptions.id === 'vault_password' && passwordPromptField.value) {\n    invalidHelperTextToDisplay = null;\n  }\n\n  useEffect(() => {\n    if (passwordPromptField.value) {\n      helpers.setValue('');\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [passwordPromptField.value]);\n\n  return (\n    <>\n      {fieldOptions.ask_at_runtime ? (\n        <FieldWithPrompt\n          isRequired={isRequired}\n          fieldId={`credential-${fieldOptions.id}`}\n          label={fieldOptions.label}\n          promptId={`credential-prompt-${fieldOptions.id}`}\n          promptName={`passwordPrompts.${fieldOptions.id}`}\n          tooltip={fieldOptions.help_text}\n        >\n          <CredentialPluginInput {...props} />\n          {invalidHelperTextToDisplay}\n        </FieldWithPrompt>\n      ) : (\n        <FormGroup\n          fieldId={`credential-${fieldOptions.id}`}\n          helperTextInvalid={meta.error}\n          isRequired={isRequired}\n          validated={validated ? 'default' : 'error'}\n          label={fieldOptions.label}\n          labelIcon={\n            fieldOptions.help_text && (\n              <Popover content={fieldOptions.help_text} />\n            )\n          }\n        >\n          <CredentialPluginInput {...props} />\n          {invalidHelperTextToDisplay}\n        </FormGroup>\n      )}\n    </>\n  );\n}\n\nCredentialPluginField.propTypes = {\n  fieldOptions: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n  }).isRequired,\n  isDisabled: PropTypes.bool,\n  isRequired: PropTypes.bool,\n};\n\nCredentialPluginField.defaultProps = {\n  isDisabled: false,\n  isRequired: false,\n};\n\nexport default CredentialPluginField;\n"]},"metadata":{},"sourceType":"module"}