{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/JumpLinks/jump-links';\nimport { JumpLinksList } from './JumpLinksList';\nexport var JumpLinksItem = function JumpLinksItem(_a) {\n  var isActive = _a.isActive,\n      href = _a.href,\n      node = _a.node,\n      children = _a.children,\n      onClick = _a.onClick,\n      className = _a.className,\n      props = __rest(_a, [\"isActive\", \"href\", \"node\", \"children\", \"onClick\", \"className\"]);\n\n  var childrenArr = React.Children.toArray(children);\n  var sublists = childrenArr.filter(function (child) {\n    return child.type === JumpLinksList;\n  });\n  children = childrenArr.filter(function (child) {\n    return child.type !== JumpLinksList;\n  });\n  return React.createElement(\"li\", Object.assign({\n    className: css(styles.jumpLinksItem, isActive && styles.modifiers.current, className)\n  }, isActive && {\n    'aria-current': 'location'\n  }, props), React.createElement(\"a\", {\n    className: styles.jumpLinksLink,\n    href: href,\n    onClick: onClick\n  }, React.createElement(\"span\", {\n    className: styles.jumpLinksLinkText\n  }, children)), sublists);\n};\nJumpLinksItem.displayName = 'JumpLinksItem';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/JumpLinks/JumpLinksItem.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,8DAAnB;AACA,SAAS,aAAT,QAA8B,iBAA9B;AAiBA,OAAO,IAAM,aAAa,GAAgD,SAA7D,aAA6D,CAAC,EAAD,EASjD;AATkD,MACzE,QADyE,GAOhE,EAPgE,CACzE,QADyE;AAAA,MAEzE,IAFyE,GAOhE,EAPgE,CAEzE,IAFyE;AAAA,MAIzE,IAJyE,GAOhE,EAPgE,CAIzE,IAJyE;AAAA,MAKzE,QALyE,GAOhE,EAPgE,CAKzE,QALyE;AAAA,MAMzE,OANyE,GAOhE,EAPgE,CAMzE,OANyE;AAAA,MAOzE,SAPyE,GAOhE,EAPgE,CAOzE,SAPyE;AAAA,MAQtE,KARsE,GAQjE,MAAA,CAAA,EAAA,EARiE,CAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,WAAA,CAQjE,CARiE;;AAUzE,MAAM,WAAW,GAAG,KAAK,CAAC,QAAN,CAAe,OAAf,CAAuB,QAAvB,CAApB;AACA,MAAM,QAAQ,GAAG,WAAW,CAAC,MAAZ,CAAmB,UAAA,KAAK;AAAA,WAAI,KAAK,CAAC,IAAN,KAAe,aAAnB;AAAA,GAAxB,CAAjB;AACA,EAAA,QAAQ,GAAG,WAAW,CAAC,MAAZ,CAAmB,UAAA,KAAK;AAAA,WAAI,KAAK,CAAC,IAAN,KAAe,aAAnB;AAAA,GAAxB,CAAX;AAEA,SACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACE,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,aAAR,EAAuB,QAAQ,IAAI,MAAM,CAAC,SAAP,CAAiB,OAApD,EAA6D,SAA7D;AADhB,GAAA,EAEO,QAAQ,IAAI;AAAE,oBAAgB;AAAlB,GAFnB,EAGM,KAHN,CAAA,EAKE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AAAG,IAAA,SAAS,EAAE,MAAM,CAAC,aAArB;AAAoC,IAAA,IAAI,EAAE,IAA1C;AAAgD,IAAA,OAAO,EAAE;AAAzD,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAE,MAAM,CAAC;AAAxB,GAAA,EAA4C,QAA5C,CADF,CALF,EAQG,QARH,CADF;AAYD,CA1BM;AA2BP,aAAa,CAAC,WAAd,GAA4B,eAA5B","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/JumpLinks/jump-links';\nimport { JumpLinksList } from './JumpLinksList';\n\nexport interface JumpLinksItemProps extends Omit<React.HTMLProps<HTMLLIElement>, 'onClick'> {\n  /** Whether this item is active. Parent JumpLinks component sets this when passed a `scrollableSelector`. */\n  isActive?: boolean;\n  /** Href for this link */\n  href?: string;\n  /** Selector or HTMLElement to spy on */\n  node?: string | HTMLElement;\n  /** Text to be rendered inside span */\n  children?: React.ReactNode;\n  /** Click handler for anchor tag. Parent JumpLinks components tap into this. */\n  onClick?: (ev: React.MouseEvent<HTMLAnchorElement>) => void;\n  /** Class to add to li */\n  className?: string;\n}\n\nexport const JumpLinksItem: React.FunctionComponent<JumpLinksItemProps> = ({\n  isActive,\n  href,\n  // eslint-disable-next-line\n  node,\n  children,\n  onClick,\n  className,\n  ...props\n}: JumpLinksItemProps) => {\n  const childrenArr = React.Children.toArray(children) as any[];\n  const sublists = childrenArr.filter(child => child.type === JumpLinksList);\n  children = childrenArr.filter(child => child.type !== JumpLinksList);\n\n  return (\n    <li\n      className={css(styles.jumpLinksItem, isActive && styles.modifiers.current, className)}\n      {...(isActive && { 'aria-current': 'location' })}\n      {...props}\n    >\n      <a className={styles.jumpLinksLink} href={href} onClick={onClick}>\n        <span className={styles.jumpLinksLinkText}>{children}</span>\n      </a>\n      {sublists}\n    </li>\n  );\n};\nJumpLinksItem.displayName = 'JumpLinksItem';\n"]},"metadata":{},"sourceType":"module"}