{"ast":null,"code":"import _defineProperty from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import React,{useState,useCallback}from'react';import{Route,Switch,useParams,useRouteMatch}from'react-router-dom';import{PageSection}from'@patternfly/react-core';import ScreenHeader from'components/ScreenHeader/ScreenHeader';import JobList from'components/JobList';import PersistentFilters from'components/PersistentFilters';import Job from'./Job';import JobTypeRedirect from'./JobTypeRedirect';import{JOB_TYPE_URL_SEGMENTS}from'../../constants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function TypeRedirect(_ref){var view=_ref.view;var _useParams=useParams(),id=_useParams.id;var _useRouteMatch=useRouteMatch(),path=_useRouteMatch.path;return/*#__PURE__*/_jsx(JobTypeRedirect,{id:id,path:path,view:view});}function Jobs(){var match=useRouteMatch();var _useState=useState({'/jobs':/*i18n*/i18n._(\"Jobs\")}),_useState2=_slicedToArray(_useState,2),breadcrumbConfig=_useState2[0],setBreadcrumbConfig=_useState2[1];var buildBreadcrumbConfig=useCallback(function(job){var _setBreadcrumbConfig;if(!job){return;}var typeSegment=JOB_TYPE_URL_SEGMENTS[job.type];setBreadcrumbConfig((_setBreadcrumbConfig={'/jobs':/*i18n*/i18n._(\"Jobs\")},_defineProperty(_setBreadcrumbConfig,\"/jobs/\".concat(typeSegment,\"/\").concat(job.id),\"\".concat(job.id,\" - \").concat(job.name)),_defineProperty(_setBreadcrumbConfig,\"/jobs/\".concat(typeSegment,\"/\").concat(job.id,\"/output\"),/*i18n*/i18n._(\"Output\")),_defineProperty(_setBreadcrumbConfig,\"/jobs/\".concat(typeSegment,\"/\").concat(job.id,\"/details\"),/*i18n*/i18n._(\"Details\")),_setBreadcrumbConfig));},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ScreenHeader,{streamType:\"job\",breadcrumbConfig:breadcrumbConfig}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:match.path,children:/*#__PURE__*/_jsx(PageSection,{children:/*#__PURE__*/_jsx(PersistentFilters,{pageKey:\"jobs\",children:/*#__PURE__*/_jsx(JobList,{showTypeColumn:true})})})}),/*#__PURE__*/_jsx(Route,{path:\"\".concat(match.path,\"/:id/details\"),children:/*#__PURE__*/_jsx(TypeRedirect,{view:\"details\"})}),/*#__PURE__*/_jsx(Route,{path:\"\".concat(match.path,\"/:id/output\"),children:/*#__PURE__*/_jsx(TypeRedirect,{view:\"output\"})}),/*#__PURE__*/_jsx(Route,{path:\"\".concat(match.path,\"/:typeSegment/:id\"),children:/*#__PURE__*/_jsx(Job,{setBreadcrumb:buildBreadcrumbConfig})}),/*#__PURE__*/_jsx(Route,{path:\"\".concat(match.path,\"/:id\"),children:/*#__PURE__*/_jsx(TypeRedirect,{})})]})]});}export{Jobs as _Jobs};export default Jobs;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Job/Jobs.js"],"names":["React","useState","useCallback","Route","Switch","useParams","useRouteMatch","PageSection","ScreenHeader","JobList","PersistentFilters","Job","JobTypeRedirect","JOB_TYPE_URL_SEGMENTS","TypeRedirect","view","id","path","Jobs","match","breadcrumbConfig","setBreadcrumbConfig","buildBreadcrumbConfig","job","typeSegment","type","name","_Jobs"],"mappings":"+OAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,WAA1B,KAA6C,OAA7C,CACA,OAASC,KAAT,CAAgBC,MAAhB,CAAwBC,SAAxB,CAAmCC,aAAnC,KAAwD,kBAAxD,CAGA,OAASC,WAAT,KAA4B,wBAA5B,CACA,MAAOC,CAAAA,YAAP,KAAyB,sCAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,8BAA9B,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,OAASC,qBAAT,KAAsC,iBAAtC,C,6IAEA,QAASC,CAAAA,YAAT,MAAgC,IAARC,CAAAA,IAAQ,MAARA,IAAQ,CAC9B,eAAeV,SAAS,EAAxB,CAAQW,EAAR,YAAQA,EAAR,CACA,mBAAiBV,aAAa,EAA9B,CAAQW,IAAR,gBAAQA,IAAR,CACA,mBAAO,KAAC,eAAD,EAAiB,EAAE,CAAED,EAArB,CAAyB,IAAI,CAAEC,IAA/B,CAAqC,IAAI,CAAEF,IAA3C,EAAP,CACD,CAED,QAASG,CAAAA,IAAT,EAAgB,CACd,GAAMC,CAAAA,KAAK,CAAGb,aAAa,EAA3B,CACA,cAAgDL,QAAQ,CAAC,CACvD,gBAAS,cAD8C,CAAD,CAAxD,wCAAOmB,gBAAP,eAAyBC,mBAAzB,eAIA,GAAMC,CAAAA,qBAAqB,CAAGpB,WAAW,CAAC,SAACqB,GAAD,CAAS,0BACjD,GAAI,CAACA,GAAL,CAAU,CACR,OACD,CAED,GAAMC,CAAAA,WAAW,CAAGX,qBAAqB,CAACU,GAAG,CAACE,IAAL,CAAzC,CACAJ,mBAAmB,wBACjB,gBAAS,cADQ,uDAEPG,WAFO,aAEQD,GAAG,CAACP,EAFZ,YAEsBO,GAAG,CAACP,EAF1B,eAEkCO,GAAG,CAACG,IAFtC,wDAGPF,WAHO,aAGQD,GAAG,CAACP,EAHZ,oBAG0B,gBAH1B,uDAIPQ,WAJO,aAIQD,GAAG,CAACP,EAJZ,qBAI2B,iBAJ3B,wBAAnB,CAMD,CAZwC,CAYtC,EAZsC,CAAzC,CAcA,mBACE,wCACE,KAAC,YAAD,EAAc,UAAU,CAAC,KAAzB,CAA+B,gBAAgB,CAAEI,gBAAjD,EADF,cAEE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAED,KAAK,CAACF,IAAzB,uBACE,KAAC,WAAD,wBACE,KAAC,iBAAD,EAAmB,OAAO,CAAC,MAA3B,uBACE,KAAC,OAAD,EAAS,cAAc,KAAvB,EADF,EADF,EADF,EADF,cAQE,KAAC,KAAD,EAAO,IAAI,WAAKE,KAAK,CAACF,IAAX,gBAAX,uBACE,KAAC,YAAD,EAAc,IAAI,CAAC,SAAnB,EADF,EARF,cAWE,KAAC,KAAD,EAAO,IAAI,WAAKE,KAAK,CAACF,IAAX,eAAX,uBACE,KAAC,YAAD,EAAc,IAAI,CAAC,QAAnB,EADF,EAXF,cAcE,KAAC,KAAD,EAAO,IAAI,WAAKE,KAAK,CAACF,IAAX,qBAAX,uBACE,KAAC,GAAD,EAAK,aAAa,CAAEK,qBAApB,EADF,EAdF,cAiBE,KAAC,KAAD,EAAO,IAAI,WAAKH,KAAK,CAACF,IAAX,QAAX,uBACE,KAAC,YAAD,IADF,EAjBF,GAFF,GADF,CA0BD,CAED,OAASC,IAAI,GAAIS,CAAAA,KAAjB,EACA,cAAeT,CAAAA,IAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Route, Switch, useParams, useRouteMatch } from 'react-router-dom';\n\nimport { t } from '@lingui/macro';\nimport { PageSection } from '@patternfly/react-core';\nimport ScreenHeader from 'components/ScreenHeader/ScreenHeader';\nimport JobList from 'components/JobList';\nimport PersistentFilters from 'components/PersistentFilters';\nimport Job from './Job';\nimport JobTypeRedirect from './JobTypeRedirect';\nimport { JOB_TYPE_URL_SEGMENTS } from '../../constants';\n\nfunction TypeRedirect({ view }) {\n  const { id } = useParams();\n  const { path } = useRouteMatch();\n  return <JobTypeRedirect id={id} path={path} view={view} />;\n}\n\nfunction Jobs() {\n  const match = useRouteMatch();\n  const [breadcrumbConfig, setBreadcrumbConfig] = useState({\n    '/jobs': t`Jobs`,\n  });\n\n  const buildBreadcrumbConfig = useCallback((job) => {\n    if (!job) {\n      return;\n    }\n\n    const typeSegment = JOB_TYPE_URL_SEGMENTS[job.type];\n    setBreadcrumbConfig({\n      '/jobs': t`Jobs`,\n      [`/jobs/${typeSegment}/${job.id}`]: `${job.id} - ${job.name}`,\n      [`/jobs/${typeSegment}/${job.id}/output`]: t`Output`,\n      [`/jobs/${typeSegment}/${job.id}/details`]: t`Details`,\n    });\n  }, []);\n\n  return (\n    <>\n      <ScreenHeader streamType=\"job\" breadcrumbConfig={breadcrumbConfig} />\n      <Switch>\n        <Route exact path={match.path}>\n          <PageSection>\n            <PersistentFilters pageKey=\"jobs\">\n              <JobList showTypeColumn />\n            </PersistentFilters>\n          </PageSection>\n        </Route>\n        <Route path={`${match.path}/:id/details`}>\n          <TypeRedirect view=\"details\" />\n        </Route>\n        <Route path={`${match.path}/:id/output`}>\n          <TypeRedirect view=\"output\" />\n        </Route>\n        <Route path={`${match.path}/:typeSegment/:id`}>\n          <Job setBreadcrumb={buildBreadcrumbConfig} />\n        </Route>\n        <Route path={`${match.path}/:id`}>\n          <TypeRedirect />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport { Jobs as _Jobs };\nexport default Jobs;\n"]},"metadata":{},"sourceType":"module"}