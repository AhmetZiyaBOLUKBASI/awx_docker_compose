{"ast":null,"code":"import _slicedToArray from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Alert/alert';\nimport accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { AlertIcon } from './AlertIcon';\nimport { capitalize, useOUIAProps } from '../../helpers';\nimport { AlertContext } from './AlertContext';\nimport maxLines from '@patternfly/react-tokens/dist/esm/c_alert__title_max_lines';\nimport { Tooltip } from '../Tooltip';\nimport { AlertToggleExpandButton } from './AlertToggleExpandButton';\nexport var AlertVariant;\n\n(function (AlertVariant) {\n  AlertVariant[\"success\"] = \"success\";\n  AlertVariant[\"danger\"] = \"danger\";\n  AlertVariant[\"warning\"] = \"warning\";\n  AlertVariant[\"info\"] = \"info\";\n  AlertVariant[\"default\"] = \"default\";\n})(AlertVariant || (AlertVariant = {}));\n\nexport var Alert = function Alert(_a) {\n  var _a$variant = _a.variant,\n      variant = _a$variant === void 0 ? AlertVariant.default : _a$variant,\n      _a$isInline = _a.isInline,\n      isInline = _a$isInline === void 0 ? false : _a$isInline,\n      _a$isPlain = _a.isPlain,\n      isPlain = _a$isPlain === void 0 ? false : _a$isPlain,\n      _a$isLiveRegion = _a.isLiveRegion,\n      isLiveRegion = _a$isLiveRegion === void 0 ? false : _a$isLiveRegion,\n      _a$variantLabel = _a.variantLabel,\n      variantLabel = _a$variantLabel === void 0 ? \"\".concat(capitalize(variant), \" alert:\") : _a$variantLabel,\n      _a$ariaLabel = _a['aria-label'],\n      ariaLabel = _a$ariaLabel === void 0 ? \"\".concat(capitalize(variant), \" Alert\") : _a$ariaLabel,\n      actionClose = _a.actionClose,\n      actionLinks = _a.actionLinks,\n      title = _a.title,\n      _a$titleHeadingLevel = _a.titleHeadingLevel,\n      TitleHeadingLevel = _a$titleHeadingLevel === void 0 ? 'h4' : _a$titleHeadingLevel,\n      _a$children = _a.children,\n      children = _a$children === void 0 ? '' : _a$children,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      ouiaId = _a.ouiaId,\n      _a$ouiaSafe = _a.ouiaSafe,\n      ouiaSafe = _a$ouiaSafe === void 0 ? true : _a$ouiaSafe,\n      _a$timeout = _a.timeout,\n      timeout = _a$timeout === void 0 ? false : _a$timeout,\n      _a$timeoutAnimation = _a.timeoutAnimation,\n      timeoutAnimation = _a$timeoutAnimation === void 0 ? 3000 : _a$timeoutAnimation,\n      _a$onTimeout = _a.onTimeout,\n      onTimeout = _a$onTimeout === void 0 ? function () {} : _a$onTimeout,\n      _a$truncateTitle = _a.truncateTitle,\n      truncateTitle = _a$truncateTitle === void 0 ? 0 : _a$truncateTitle,\n      tooltipPosition = _a.tooltipPosition,\n      customIcon = _a.customIcon,\n      _a$isExpandable = _a.isExpandable,\n      isExpandable = _a$isExpandable === void 0 ? false : _a$isExpandable,\n      _a$toggleAriaLabel = _a.toggleAriaLabel,\n      toggleAriaLabel = _a$toggleAriaLabel === void 0 ? \"\".concat(capitalize(variant), \" alert details\") : _a$toggleAriaLabel,\n      _a$onMouseEnter = _a.onMouseEnter,\n      onMouseEnter = _a$onMouseEnter === void 0 ? function () {} : _a$onMouseEnter,\n      _a$onMouseLeave = _a.onMouseLeave,\n      onMouseLeave = _a$onMouseLeave === void 0 ? function () {} : _a$onMouseLeave,\n      props = __rest(_a, [\"variant\", \"isInline\", \"isPlain\", \"isLiveRegion\", \"variantLabel\", 'aria-label', \"actionClose\", \"actionLinks\", \"title\", \"titleHeadingLevel\", \"children\", \"className\", \"ouiaId\", \"ouiaSafe\", \"timeout\", \"timeoutAnimation\", \"onTimeout\", \"truncateTitle\", \"tooltipPosition\", \"customIcon\", \"isExpandable\", \"toggleAriaLabel\", \"onMouseEnter\", \"onMouseLeave\"]);\n\n  var ouiaProps = useOUIAProps(Alert.displayName, ouiaId, ouiaSafe, variant);\n  var getHeadingContent = React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: css(accessibleStyles.screenReader)\n  }, variantLabel), title);\n  var titleRef = React.useRef(null);\n  var divRef = React.useRef();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isTooltipVisible = _useState2[0],\n      setIsTooltipVisible = _useState2[1];\n\n  React.useEffect(function () {\n    if (!titleRef.current || !truncateTitle) {\n      return;\n    }\n\n    titleRef.current.style.setProperty(maxLines.name, truncateTitle.toString());\n    var showTooltip = titleRef.current && titleRef.current.offsetHeight < titleRef.current.scrollHeight;\n\n    if (isTooltipVisible !== showTooltip) {\n      setIsTooltipVisible(showTooltip);\n    }\n  }, [titleRef, truncateTitle, isTooltipVisible]);\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      timedOut = _useState4[0],\n      setTimedOut = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      timedOutAnimation = _useState6[0],\n      setTimedOutAnimation = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isMouseOver = _useState8[0],\n      setIsMouseOver = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      containsFocus = _useState10[0],\n      setContainsFocus = _useState10[1];\n\n  var dismissed = timedOut && timedOutAnimation && !isMouseOver && !containsFocus;\n  React.useEffect(function () {\n    timeout = timeout === true ? 8000 : Number(timeout);\n\n    if (timeout > 0) {\n      var timer = setTimeout(function () {\n        return setTimedOut(true);\n      }, timeout);\n      return function () {\n        return clearTimeout(timer);\n      };\n    }\n  }, []);\n  React.useEffect(function () {\n    var onDocumentFocus = function onDocumentFocus() {\n      if (divRef.current) {\n        if (divRef.current.contains(document.activeElement)) {\n          setContainsFocus(true);\n          setTimedOutAnimation(false);\n        } else if (containsFocus) {\n          setContainsFocus(false);\n        }\n      }\n    };\n\n    document.addEventListener('focus', onDocumentFocus, true);\n    return function () {\n      return document.removeEventListener('focus', onDocumentFocus, true);\n    };\n  }, [containsFocus]);\n  React.useEffect(function () {\n    if (containsFocus === false || isMouseOver === false) {\n      var timer = setTimeout(function () {\n        return setTimedOutAnimation(true);\n      }, timeoutAnimation);\n      return function () {\n        return clearTimeout(timer);\n      };\n    }\n  }, [containsFocus, isMouseOver]);\n  React.useEffect(function () {\n    dismissed && onTimeout();\n  }, [dismissed]);\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isExpanded = _useState12[0],\n      setIsExpanded = _useState12[1];\n\n  var onToggleExpand = function onToggleExpand() {\n    setIsExpanded(!isExpanded);\n  };\n\n  var myOnMouseEnter = function myOnMouseEnter(ev) {\n    setIsMouseOver(true);\n    setTimedOutAnimation(false);\n    onMouseEnter(ev);\n  };\n\n  var myOnMouseLeave = function myOnMouseLeave(ev) {\n    setIsMouseOver(false);\n    onMouseLeave(ev);\n  };\n\n  if (dismissed) {\n    return null;\n  }\n\n  var Title = React.createElement(TitleHeadingLevel, Object.assign({}, isTooltipVisible && {\n    tabIndex: 0\n  }, {\n    ref: titleRef,\n    className: css(styles.alertTitle, truncateTitle && styles.modifiers.truncate)\n  }), getHeadingContent);\n  return React.createElement(\"div\", Object.assign({\n    ref: divRef,\n    className: css(styles.alert, isInline && styles.modifiers.inline, isPlain && styles.modifiers.plain, isExpandable && styles.modifiers.expandable, isExpanded && styles.modifiers.expanded, styles.modifiers[variant], className),\n    \"aria-label\": ariaLabel\n  }, ouiaProps, isLiveRegion && {\n    'aria-live': 'polite',\n    'aria-atomic': 'false'\n  }, {\n    onMouseEnter: myOnMouseEnter,\n    onMouseLeave: myOnMouseLeave\n  }, props), isExpandable && React.createElement(AlertContext.Provider, {\n    value: {\n      title: title,\n      variantLabel: variantLabel\n    }\n  }, React.createElement(\"div\", {\n    className: css(styles.alertToggle)\n  }, React.createElement(AlertToggleExpandButton, {\n    isExpanded: isExpanded,\n    onToggleExpand: onToggleExpand,\n    \"aria-label\": toggleAriaLabel\n  }))), React.createElement(AlertIcon, {\n    variant: variant,\n    customIcon: customIcon\n  }), isTooltipVisible ? React.createElement(Tooltip, {\n    content: getHeadingContent,\n    position: tooltipPosition\n  }, Title) : Title, actionClose && React.createElement(AlertContext.Provider, {\n    value: {\n      title: title,\n      variantLabel: variantLabel\n    }\n  }, React.createElement(\"div\", {\n    className: css(styles.alertAction)\n  }, actionClose)), children && (!isExpandable || isExpandable && isExpanded) && React.createElement(\"div\", {\n    className: css(styles.alertDescription)\n  }, children), actionLinks && React.createElement(\"div\", {\n    className: css(styles.alertActionGroup)\n  }, actionLinks));\n};\nAlert.displayName = 'Alert';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Alert/Alert.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Alert/alert';\nimport accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { AlertIcon } from './AlertIcon';\nimport { capitalize, useOUIAProps, OUIAProps } from '../../helpers';\nimport { AlertContext } from './AlertContext';\nimport maxLines from '@patternfly/react-tokens/dist/esm/c_alert__title_max_lines';\nimport { Tooltip, TooltipPosition } from '../Tooltip';\nimport { AlertToggleExpandButton } from './AlertToggleExpandButton';\n\nexport enum AlertVariant {\n  success = 'success',\n  danger = 'danger',\n  warning = 'warning',\n  info = 'info',\n  default = 'default'\n}\n\nexport interface AlertProps extends Omit<React.HTMLProps<HTMLDivElement>, 'action' | 'title'>, OUIAProps {\n  /** Adds alert variant styles  */\n  variant?: 'success' | 'danger' | 'warning' | 'info' | 'default';\n  /** Flag to indicate if the alert is inline */\n  isInline?: boolean;\n  /** Flag to indicate if the alert is plain */\n  isPlain?: boolean;\n  /** Title of the alert  */\n  title: React.ReactNode;\n  /** Sets the heading level to use for the alert title. Default is h4. */\n  titleHeadingLevel?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n  /** Close button; use the alertActionCloseButton component  */\n  actionClose?: React.ReactNode;\n  /** Action links; use a single alertActionLink component or multiple wrapped in an array or React.Fragment */\n  actionLinks?: React.ReactNode;\n  /** Content rendered inside the alert */\n  children?: React.ReactNode;\n  /** Additional classes added to the alert  */\n  className?: string;\n  /** Adds accessible text to the alert */\n  'aria-label'?: string;\n  /** Variant label text for screen readers */\n  variantLabel?: string;\n  /** Flag to indicate if the alert is in a live region */\n  isLiveRegion?: boolean;\n  /** If set to true, the timeout is 8000 milliseconds. If a number is provided, alert will be dismissed after that amount of time in milliseconds. */\n  timeout?: number | boolean;\n  /** If the user hovers over the alert and `timeout` expires, this is how long to wait before finally dismissing the alert */\n  timeoutAnimation?: number;\n  /** Function to be executed on alert timeout. Relevant when the timeout prop is set */\n  onTimeout?: () => void;\n  /** Truncate title to number of lines */\n  truncateTitle?: number;\n  /** Position of the tooltip which is displayed if text is truncated */\n  tooltipPosition?:\n    | TooltipPosition\n    | 'auto'\n    | 'top'\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'left-start'\n    | 'left-end'\n    | 'right-start'\n    | 'right-end';\n  /** Set a custom icon to the alert. If not set the icon is set according to the variant */\n  customIcon?: React.ReactNode;\n  /** Flag indicating that the alert is expandable */\n  isExpandable?: boolean;\n  /** Adds accessible text to the alert Toggle */\n  toggleAriaLabel?: string;\n}\n\nexport const Alert: React.FunctionComponent<AlertProps> = ({\n  variant = AlertVariant.default,\n  isInline = false,\n  isPlain = false,\n  isLiveRegion = false,\n  variantLabel = `${capitalize(variant)} alert:`,\n  'aria-label': ariaLabel = `${capitalize(variant)} Alert`,\n  actionClose,\n  actionLinks,\n  title,\n  titleHeadingLevel: TitleHeadingLevel = 'h4',\n  children = '',\n  className = '',\n  ouiaId,\n  ouiaSafe = true,\n  timeout = false,\n  timeoutAnimation = 3000,\n  onTimeout = () => {},\n  truncateTitle = 0,\n  tooltipPosition,\n  customIcon,\n  isExpandable = false,\n  toggleAriaLabel = `${capitalize(variant)} alert details`,\n  onMouseEnter = () => {},\n  onMouseLeave = () => {},\n  ...props\n}: AlertProps) => {\n  const ouiaProps = useOUIAProps(Alert.displayName, ouiaId, ouiaSafe, variant);\n  const getHeadingContent = (\n    <React.Fragment>\n      <span className={css(accessibleStyles.screenReader)}>{variantLabel}</span>\n      {title}\n    </React.Fragment>\n  );\n\n  const titleRef = React.useRef(null);\n  const divRef = React.useRef<HTMLDivElement>();\n  const [isTooltipVisible, setIsTooltipVisible] = useState(false);\n  React.useEffect(() => {\n    if (!titleRef.current || !truncateTitle) {\n      return;\n    }\n    titleRef.current.style.setProperty(maxLines.name, truncateTitle.toString());\n    const showTooltip = titleRef.current && titleRef.current.offsetHeight < titleRef.current.scrollHeight;\n    if (isTooltipVisible !== showTooltip) {\n      setIsTooltipVisible(showTooltip);\n    }\n  }, [titleRef, truncateTitle, isTooltipVisible]);\n\n  const [timedOut, setTimedOut] = useState(false);\n  const [timedOutAnimation, setTimedOutAnimation] = useState(true);\n  const [isMouseOver, setIsMouseOver] = useState<boolean | undefined>();\n  const [containsFocus, setContainsFocus] = useState<boolean | undefined>();\n  const dismissed = timedOut && timedOutAnimation && !isMouseOver && !containsFocus;\n  React.useEffect(() => {\n    timeout = timeout === true ? 8000 : Number(timeout);\n    if (timeout > 0) {\n      const timer = setTimeout(() => setTimedOut(true), timeout);\n      return () => clearTimeout(timer);\n    }\n  }, []);\n  React.useEffect(() => {\n    const onDocumentFocus = () => {\n      if (divRef.current) {\n        if (divRef.current.contains(document.activeElement)) {\n          setContainsFocus(true);\n          setTimedOutAnimation(false);\n        } else if (containsFocus) {\n          setContainsFocus(false);\n        }\n      }\n    };\n\n    document.addEventListener('focus', onDocumentFocus, true);\n\n    return () => document.removeEventListener('focus', onDocumentFocus, true);\n  }, [containsFocus]);\n  React.useEffect(() => {\n    if (containsFocus === false || isMouseOver === false) {\n      const timer = setTimeout(() => setTimedOutAnimation(true), timeoutAnimation);\n      return () => clearTimeout(timer);\n    }\n  }, [containsFocus, isMouseOver]);\n  React.useEffect(() => {\n    dismissed && onTimeout();\n  }, [dismissed]);\n\n  const [isExpanded, setIsExpanded] = useState(false);\n  const onToggleExpand = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  const myOnMouseEnter = (ev: React.MouseEvent<HTMLDivElement>) => {\n    setIsMouseOver(true);\n    setTimedOutAnimation(false);\n    onMouseEnter(ev);\n  };\n\n  const myOnMouseLeave = (ev: React.MouseEvent<HTMLDivElement>) => {\n    setIsMouseOver(false);\n    onMouseLeave(ev);\n  };\n\n  if (dismissed) {\n    return null;\n  }\n  const Title = (\n    <TitleHeadingLevel\n      {...(isTooltipVisible && { tabIndex: 0 })}\n      ref={titleRef}\n      className={css(styles.alertTitle, truncateTitle && styles.modifiers.truncate)}\n    >\n      {getHeadingContent}\n    </TitleHeadingLevel>\n  );\n\n  return (\n    <div\n      ref={divRef}\n      className={css(\n        styles.alert,\n        isInline && styles.modifiers.inline,\n        isPlain && styles.modifiers.plain,\n        isExpandable && styles.modifiers.expandable,\n        isExpanded && styles.modifiers.expanded,\n        styles.modifiers[variant as 'success' | 'danger' | 'warning' | 'info'],\n        className\n      )}\n      aria-label={ariaLabel}\n      {...ouiaProps}\n      {...(isLiveRegion && {\n        'aria-live': 'polite',\n        'aria-atomic': 'false'\n      })}\n      onMouseEnter={myOnMouseEnter}\n      onMouseLeave={myOnMouseLeave}\n      {...props}\n    >\n      {isExpandable && (\n        <AlertContext.Provider value={{ title, variantLabel }}>\n          <div className={css(styles.alertToggle)}>\n            <AlertToggleExpandButton\n              isExpanded={isExpanded}\n              onToggleExpand={onToggleExpand}\n              aria-label={toggleAriaLabel}\n            />\n          </div>\n        </AlertContext.Provider>\n      )}\n      <AlertIcon variant={variant} customIcon={customIcon} />\n      {isTooltipVisible ? (\n        <Tooltip content={getHeadingContent} position={tooltipPosition}>\n          {Title}\n        </Tooltip>\n      ) : (\n        Title\n      )}\n      {actionClose && (\n        <AlertContext.Provider value={{ title, variantLabel }}>\n          <div className={css(styles.alertAction)}>{actionClose}</div>\n        </AlertContext.Provider>\n      )}\n      {children && (!isExpandable || (isExpandable && isExpanded)) && (\n        <div className={css(styles.alertDescription)}>{children}</div>\n      )}\n      {actionLinks && <div className={css(styles.alertActionGroup)}>{actionLinks}</div>}\n    </div>\n  );\n};\nAlert.displayName = 'Alert';\n"]},"metadata":{},"sourceType":"module"}