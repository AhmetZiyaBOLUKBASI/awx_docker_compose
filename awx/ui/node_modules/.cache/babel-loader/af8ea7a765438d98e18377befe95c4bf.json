{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\n\nvar TbodyBase = function TbodyBase(_a) {\n  var children = _a.children,\n      className = _a.className,\n      isExpanded = _a.isExpanded,\n      innerRef = _a.innerRef,\n      _a$isEvenStriped = _a.isEvenStriped,\n      isEvenStriped = _a$isEvenStriped === void 0 ? false : _a$isEvenStriped,\n      _a$isOddStriped = _a.isOddStriped,\n      isOddStriped = _a$isOddStriped === void 0 ? false : _a$isOddStriped,\n      props = __rest(_a, [\"children\", \"className\", \"isExpanded\", \"innerRef\", \"isEvenStriped\", \"isOddStriped\"]);\n\n  return React.createElement(\"tbody\", Object.assign({\n    role: \"rowgroup\",\n    className: css(className, isExpanded && styles.modifiers.expanded, isOddStriped && styles.modifiers.striped, isEvenStriped && styles.modifiers.stripedEven),\n    ref: innerRef\n  }, props), children);\n};\n\nexport var Tbody = React.forwardRef(function (props, ref) {\n  return React.createElement(TbodyBase, Object.assign({}, props, {\n    innerRef: ref\n  }));\n});\nTbody.displayName = 'Tbody';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/TableComposable/Tbody.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,qDAAnB;;AAiBA,IAAM,SAAS,GAAwC,SAAjD,SAAiD,CAAC,EAAD,EAQtC;AARuC,MACtD,QADsD,GAMlC,EANkC,CACtD,QADsD;AAAA,MAEtD,SAFsD,GAMlC,EANkC,CAEtD,SAFsD;AAAA,MAGtD,UAHsD,GAMlC,EANkC,CAGtD,UAHsD;AAAA,MAItD,QAJsD,GAMlC,EANkC,CAItD,QAJsD;AAAA,yBAMlC,EANkC,CAKtD,aALsD;AAAA,MAKtD,aALsD,iCAKtC,KALsC;AAAA,wBAMlC,EANkC,CAMtD,YANsD;AAAA,MAMtD,YANsD,gCAMvC,KANuC;AAAA,MAOnD,KAPmD,GAO9C,MAAA,CAAA,EAAA,EAP8C,CAAA,UAAA,EAAA,WAAA,EAAA,YAAA,EAAA,UAAA,EAAA,eAAA,EAAA,cAAA,CAO9C,CAP8C;;AAQtC,SAChB,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAE,GAAG,CACZ,SADY,EAEZ,UAAU,IAAI,MAAM,CAAC,SAAP,CAAiB,QAFnB,EAGZ,YAAY,IAAI,MAAM,CAAC,SAAP,CAAiB,OAHrB,EAIZ,aAAa,IAAI,MAAM,CAAC,SAAP,CAAiB,WAJtB,CAFhB;AAQE,IAAA,GAAG,EAAE;AARP,GAAA,EASM,KATN,CAAA,EAWG,QAXH,CADgB;AAcjB,CAtBD;;AAwBA,OAAO,IAAM,KAAK,GAAG,KAAK,CAAC,UAAN,CAAiB,UAAC,KAAD,EAAoB,GAApB;AAAA,SACpC,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,IAAA,QAAQ,EAAE;AAAZ,GAAV,CAAV,CADoC;AAAA,CAAjB,CAAd;AAGP,KAAK,CAAC,WAAN,GAAoB,OAApB","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\n\nexport interface TbodyProps extends React.HTMLProps<HTMLTableSectionElement> {\n  /** Content rendered inside the <tbody> row group */\n  children?: React.ReactNode;\n  /** Additional classes added to the <tbody> element  */\n  className?: string;\n  /** Modifies the body to allow for expandable rows */\n  isExpanded?: boolean;\n  /** Forwarded ref */\n  innerRef?: React.Ref<any>;\n  /** Flag indicating the <tbody> contains oddly striped rows. */\n  isOddStriped?: boolean;\n  /** Flag indicating the <tbody> contains evenly striped rows. */\n  isEvenStriped?: boolean;\n}\n\nconst TbodyBase: React.FunctionComponent<TbodyProps> = ({\n  children,\n  className,\n  isExpanded,\n  innerRef,\n  isEvenStriped = false,\n  isOddStriped = false,\n  ...props\n}: TbodyProps) => (\n  <tbody\n    role=\"rowgroup\"\n    className={css(\n      className,\n      isExpanded && styles.modifiers.expanded,\n      isOddStriped && styles.modifiers.striped,\n      isEvenStriped && styles.modifiers.stripedEven\n    )}\n    ref={innerRef}\n    {...props}\n  >\n    {children}\n  </tbody>\n);\n\nexport const Tbody = React.forwardRef((props: TbodyProps, ref: React.Ref<HTMLTableSectionElement>) => (\n  <TbodyBase {...props} innerRef={ref} />\n));\nTbody.displayName = 'Tbody';\n"]},"metadata":{},"sourceType":"module"}