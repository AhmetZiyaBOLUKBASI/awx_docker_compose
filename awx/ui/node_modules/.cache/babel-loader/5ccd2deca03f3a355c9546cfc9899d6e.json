{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _taggedTemplateLiteral from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import{i18n}from\"@lingui/core\";import React from'react';import styled from'styled-components';import{QSConfig,SearchColumns,SortColumns}from'types';import{SelectedList,DraggableSelectedList}from'../SelectedList';import CheckboxListItem from'../CheckboxListItem';import DataListToolbar from'../DataListToolbar';import PaginatedTable,{HeaderCell,HeaderRow}from'../PaginatedTable';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ModalList=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  .pf-c-toolbar__content {\\n    padding: 0 !important;\\n  }\\n\"])));function OptionsList(_ref){var columns=_ref.columns,contentError=_ref.contentError,deselectItem=_ref.deselectItem,displayKey=_ref.displayKey,header=_ref.header,isLoading=_ref.isLoading,isSelectedDraggable=_ref.isSelectedDraggable,multiple=_ref.multiple,name=_ref.name,optionCount=_ref.optionCount,options=_ref.options,qsConfig=_ref.qsConfig,readOnly=_ref.readOnly,relatedSearchableKeys=_ref.relatedSearchableKeys,renderItemChip=_ref.renderItemChip,searchColumns=_ref.searchColumns,searchableKeys=_ref.searchableKeys,selectItem=_ref.selectItem,sortColumns=_ref.sortColumns,sortSelectedItems=_ref.sortSelectedItems,value=_ref.value;var buildHeaderRow=/*#__PURE__*/_jsx(HeaderRow,{qsConfig:qsConfig,children:(columns===null||columns===void 0?void 0:columns.length)>0?columns.map(function(col){return/*#__PURE__*/_jsx(HeaderCell,{sortKey:col.key,children:col.name},col.key);}):/*#__PURE__*/_jsx(HeaderCell,{sortKey:\"name\",children:/*i18n*/i18n._(\"Name\")})});var selectionPreview=null;if(value.length>0){if(isSelectedDraggable){selectionPreview=/*#__PURE__*/_jsx(DraggableSelectedList,{onRemove:deselectItem,onRowDrag:sortSelectedItems,selected:value});}else{selectionPreview=/*#__PURE__*/_jsx(SelectedList,{label:/*i18n*/i18n._(\"Selected\"),selected:value,onRemove:function onRemove(item){return deselectItem(item);},isReadOnly:readOnly,renderItemChip:renderItemChip,displayKey:displayKey});}}return/*#__PURE__*/_jsxs(ModalList,{children:[selectionPreview,/*#__PURE__*/_jsx(PaginatedTable,{contentError:contentError,items:options,itemCount:optionCount,pluralizedItemName:header,qsConfig:qsConfig,toolbarSearchColumns:searchColumns,toolbarSortColumns:sortColumns,toolbarSearchableKeys:searchableKeys,toolbarRelatedSearchableKeys:relatedSearchableKeys,hasContentLoading:isLoading,headerRow:buildHeaderRow,onRowClick:selectItem,renderRow:function renderRow(item,index){return/*#__PURE__*/_jsx(CheckboxListItem,{rowIndex:index,itemId:item.id,name:multiple?item[displayKey]:name,label:item[displayKey],columns:columns,item:item,isSelected:value.some(function(i){return i.id===item.id;}),onSelect:function onSelect(){return selectItem(item);},onDeselect:function onDeselect(){return deselectItem(item);},isRadio:!multiple},item.id);},renderToolbar:function renderToolbar(props){return/*#__PURE__*/_jsx(DataListToolbar,_objectSpread(_objectSpread({},props),{},{fillWidth:true}));},showPageSizeOptions:false})]});}OptionsList.defaultProps={isSelectedDraggable:false,multiple:false,renderItemChip:null,searchColumns:[],sortColumns:[],displayKey:'name'};export default OptionsList;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/OptionsList/OptionsList.js"],"names":["React","styled","QSConfig","SearchColumns","SortColumns","SelectedList","DraggableSelectedList","CheckboxListItem","DataListToolbar","PaginatedTable","HeaderCell","HeaderRow","ModalList","div","OptionsList","columns","contentError","deselectItem","displayKey","header","isLoading","isSelectedDraggable","multiple","name","optionCount","options","qsConfig","readOnly","relatedSearchableKeys","renderItemChip","searchColumns","searchableKeys","selectItem","sortColumns","sortSelectedItems","value","buildHeaderRow","length","map","col","key","selectionPreview","item","index","id","some","i","props","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  arrayOf,\n  shape,\n  bool,\n  func,\n  number,\n  string,\n  oneOfType,\n} from 'prop-types';\nimport styled from 'styled-components';\nimport { t } from '@lingui/macro';\nimport { QSConfig, SearchColumns, SortColumns } from 'types';\nimport { SelectedList, DraggableSelectedList } from '../SelectedList';\nimport CheckboxListItem from '../CheckboxListItem';\nimport DataListToolbar from '../DataListToolbar';\nimport PaginatedTable, { HeaderCell, HeaderRow } from '../PaginatedTable';\n\nconst ModalList = styled.div`\n  .pf-c-toolbar__content {\n    padding: 0 !important;\n  }\n`;\n\nfunction OptionsList({\n  columns,\n  contentError,\n  deselectItem,\n  displayKey,\n  header,\n  isLoading,\n  isSelectedDraggable,\n  multiple,\n  name,\n  optionCount,\n  options,\n  qsConfig,\n  readOnly,\n  relatedSearchableKeys,\n  renderItemChip,\n  searchColumns,\n  searchableKeys,\n  selectItem,\n  sortColumns,\n  sortSelectedItems,\n  value,\n}) {\n  const buildHeaderRow = (\n    <HeaderRow qsConfig={qsConfig}>\n      {columns?.length > 0 ? (\n        columns.map((col) => (\n          <HeaderCell key={col.key} sortKey={col.key}>\n            {col.name}\n          </HeaderCell>\n        ))\n      ) : (\n        <HeaderCell sortKey=\"name\">{t`Name`}</HeaderCell>\n      )}\n    </HeaderRow>\n  );\n  let selectionPreview = null;\n  if (value.length > 0) {\n    if (isSelectedDraggable) {\n      selectionPreview = (\n        <DraggableSelectedList\n          onRemove={deselectItem}\n          onRowDrag={sortSelectedItems}\n          selected={value}\n        />\n      );\n    } else {\n      selectionPreview = (\n        <SelectedList\n          label={t`Selected`}\n          selected={value}\n          onRemove={(item) => deselectItem(item)}\n          isReadOnly={readOnly}\n          renderItemChip={renderItemChip}\n          displayKey={displayKey}\n        />\n      );\n    }\n  }\n\n  return (\n    <ModalList>\n      {selectionPreview}\n      <PaginatedTable\n        contentError={contentError}\n        items={options}\n        itemCount={optionCount}\n        pluralizedItemName={header}\n        qsConfig={qsConfig}\n        toolbarSearchColumns={searchColumns}\n        toolbarSortColumns={sortColumns}\n        toolbarSearchableKeys={searchableKeys}\n        toolbarRelatedSearchableKeys={relatedSearchableKeys}\n        hasContentLoading={isLoading}\n        headerRow={buildHeaderRow}\n        onRowClick={selectItem}\n        renderRow={(item, index) => (\n          <CheckboxListItem\n            key={item.id}\n            rowIndex={index}\n            itemId={item.id}\n            name={multiple ? item[displayKey] : name}\n            label={item[displayKey]}\n            columns={columns}\n            item={item}\n            isSelected={value.some((i) => i.id === item.id)}\n            onSelect={() => selectItem(item)}\n            onDeselect={() => deselectItem(item)}\n            isRadio={!multiple}\n          />\n        )}\n        renderToolbar={(props) => <DataListToolbar {...props} fillWidth />}\n        showPageSizeOptions={false}\n      />\n    </ModalList>\n  );\n}\n\nconst Item = shape({\n  id: oneOfType([number, string]).isRequired,\n  name: string.isRequired,\n  url: string,\n});\nOptionsList.propTypes = {\n  deselectItem: func.isRequired,\n  displayKey: string,\n  isSelectedDraggable: bool,\n  multiple: bool,\n  optionCount: number.isRequired,\n  options: arrayOf(Item).isRequired,\n  qsConfig: QSConfig.isRequired,\n  renderItemChip: func,\n  searchColumns: SearchColumns,\n  selectItem: func.isRequired,\n  sortColumns: SortColumns,\n  value: arrayOf(Item).isRequired,\n};\nOptionsList.defaultProps = {\n  isSelectedDraggable: false,\n  multiple: false,\n  renderItemChip: null,\n  searchColumns: [],\n  sortColumns: [],\n  displayKey: 'name',\n};\n\nexport default OptionsList;\n"]},"metadata":{},"sourceType":"module"}