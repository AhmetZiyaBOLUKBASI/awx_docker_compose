{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Breadcrumb/breadcrumb';\nimport { css } from '@patternfly/react-styles';\nimport { useOUIAProps } from '../../helpers';\nexport var Breadcrumb = function Breadcrumb(_a) {\n  var _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      _a$ariaLabel = _a['aria-label'],\n      ariaLabel = _a$ariaLabel === void 0 ? 'Breadcrumb' : _a$ariaLabel,\n      ouiaId = _a.ouiaId,\n      _a$ouiaSafe = _a.ouiaSafe,\n      ouiaSafe = _a$ouiaSafe === void 0 ? true : _a$ouiaSafe,\n      props = __rest(_a, [\"children\", \"className\", 'aria-label', \"ouiaId\", \"ouiaSafe\"]);\n\n  var ouiaProps = useOUIAProps(Breadcrumb.displayName, ouiaId, ouiaSafe);\n  return React.createElement(\"nav\", Object.assign({}, props, {\n    \"aria-label\": ariaLabel,\n    className: css(styles.breadcrumb, className)\n  }, ouiaProps), React.createElement(\"ol\", {\n    className: styles.breadcrumbList\n  }, React.Children.map(children, function (child, index) {\n    var showDivider = index > 0;\n\n    if (React.isValidElement(child)) {\n      return React.cloneElement(child, {\n        showDivider: showDivider\n      });\n    }\n\n    return child;\n  })));\n};\nBreadcrumb.displayName = 'Breadcrumb';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Breadcrumb/Breadcrumb.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,+DAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,SAAS,YAAT,QAAwC,eAAxC;AAWA,OAAO,IAAM,UAAU,GAA6C,SAAvD,UAAuD,CAAC,EAAD,EAO9C;AAP+C,oBAKpD,EALoD,CACnE,QADmE;AAAA,MACnE,QADmE,4BACxD,IADwD;AAAA,qBAKpD,EALoD,CAEnE,SAFmE;AAAA,MAEnE,SAFmE,6BAEvD,EAFuD;AAAA,qBAKpD,EALoD,CAGnE,YAHmE;AAAA,MAGrD,SAHqD,6BAGzC,YAHyC;AAAA,MAInE,MAJmE,GAKpD,EALoD,CAInE,MAJmE;AAAA,oBAKpD,EALoD,CAKnE,QALmE;AAAA,MAKnE,QALmE,4BAKxD,IALwD;AAAA,MAMhE,KANgE,GAM3D,MAAA,CAAA,EAAA,EAN2D,CAAA,UAAA,EAAA,WAAA,EAAA,YAAA,EAAA,QAAA,EAAA,UAAA,CAM3D,CAN2D;;AAQnE,MAAM,SAAS,GAAG,YAAY,CAAC,UAAU,CAAC,WAAZ,EAAyB,MAAzB,EAAiC,QAAjC,CAA9B;AACA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAS,KAAT,EAAc;AAAA,kBAAc,SAAd;AAAyB,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,UAAR,EAAoB,SAApB;AAAvC,GAAd,EAAyF,SAAzF,CAAA,EACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAI,IAAA,SAAS,EAAE,MAAM,CAAC;AAAtB,GAAA,EACG,KAAK,CAAC,QAAN,CAAe,GAAf,CAAmB,QAAnB,EAA6B,UAAC,KAAD,EAAQ,KAAR,EAAiB;AAC7C,QAAM,WAAW,GAAG,KAAK,GAAG,CAA5B;;AACA,QAAI,KAAK,CAAC,cAAN,CAAqB,KAArB,CAAJ,EAAiC;AAC/B,aAAO,KAAK,CAAC,YAAN,CAAmB,KAAnB,EAA0B;AAAE,QAAA,WAAW,EAAX;AAAF,OAA1B,CAAP;AACD;;AAED,WAAO,KAAP;AACD,GAPA,CADH,CADF,CADF;AAcD,CAvBM;AAwBP,UAAU,CAAC,WAAX,GAAyB,YAAzB","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Breadcrumb/breadcrumb';\nimport { css } from '@patternfly/react-styles';\nimport { useOUIAProps, OUIAProps } from '../../helpers';\n\nexport interface BreadcrumbProps extends React.HTMLProps<HTMLElement>, OUIAProps {\n  /** Children nodes be rendered to the BreadCrumb. Should be of type BreadCrumbItem. */\n  children?: React.ReactNode;\n  /** Additional classes added to the breadcrumb nav. */\n  className?: string;\n  /** Aria label added to the breadcrumb nav. */\n  'aria-label'?: string;\n}\n\nexport const Breadcrumb: React.FunctionComponent<BreadcrumbProps> = ({\n  children = null,\n  className = '',\n  'aria-label': ariaLabel = 'Breadcrumb',\n  ouiaId,\n  ouiaSafe = true,\n  ...props\n}: BreadcrumbProps) => {\n  const ouiaProps = useOUIAProps(Breadcrumb.displayName, ouiaId, ouiaSafe);\n  return (\n    <nav {...props} aria-label={ariaLabel} className={css(styles.breadcrumb, className)} {...ouiaProps}>\n      <ol className={styles.breadcrumbList}>\n        {React.Children.map(children, (child, index) => {\n          const showDivider = index > 0;\n          if (React.isValidElement(child)) {\n            return React.cloneElement(child, { showDivider });\n          }\n\n          return child;\n        })}\n      </ol>\n    </nav>\n  );\n};\nBreadcrumb.displayName = 'Breadcrumb';\n"]},"metadata":{},"sourceType":"module"}