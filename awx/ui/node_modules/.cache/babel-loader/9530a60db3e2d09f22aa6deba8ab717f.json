{"ast":null,"code":"import _toConsumableArray from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport getWindow from '../dom-utils/getWindow';\nvar passive = {\n  passive: true\n};\n/**\n *\n */\n\nfunction effect(_ref) {\n  var state = _ref.state,\n      instance = _ref.instance,\n      options = _ref.options;\n  var _options$scroll = options.scroll,\n      scroll = _options$scroll === void 0 ? true : _options$scroll,\n      _options$resize = options.resize,\n      resize = _options$resize === void 0 ? true : _options$resize;\n  var window = getWindow(state.elements.popper);\n  var scrollParents = [].concat(_toConsumableArray(state.scrollParents.reference), _toConsumableArray(state.scrollParents.popper));\n\n  if (scroll) {\n    scrollParents.forEach(function (scrollParent) {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return function () {\n    if (scroll) {\n      scrollParents.forEach(function (scrollParent) {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n}\n\nexport default {\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: function fn() {},\n  effect: effect,\n  data: {}\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/modifiers/eventListeners.ts"],"names":[],"mappings":";AAEA,OAAO,SAAP,MAAsB,wBAAtB;AAQA,IAAM,OAAO,GAAG;AAAE,EAAA,OAAO,EAAE;AAAX,CAAhB;AAEA;;AAEG;;AACH,SAAS,MAAT,OAAwE;AAAA,MAAtD,KAAsD,QAAtD,KAAsD;AAAA,MAA/C,QAA+C,QAA/C,QAA+C;AAAA,MAArC,OAAqC,QAArC,OAAqC;AACtE,wBAAyC,OAAzC,CAAQ,MAAR;AAAA,MAAQ,MAAR,gCAAiB,IAAjB;AAAA,wBAAyC,OAAzC,CAAuB,MAAvB;AAAA,MAAuB,MAAvB,gCAAgC,IAAhC;AAEA,MAAM,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,QAAN,CAAe,MAAhB,CAAxB;AACA,MAAM,aAAa,gCAAO,KAAK,CAAC,aAAN,CAAoB,SAA3B,sBAAyC,KAAK,CAAC,aAAN,CAAoB,MAA7D,EAAnB;;AAEA,MAAI,MAAJ,EAAY;AACV,IAAA,aAAa,CAAC,OAAd,CAAsB,UAAA,YAAY,EAAG;AACnC,MAAA,YAAY,CAAC,gBAAb,CAA8B,QAA9B,EAAwC,QAAQ,CAAC,MAAjD,EAAyD,OAAzD;AACD,KAFD;AAGD;;AAED,MAAI,MAAJ,EAAY;AACV,IAAA,MAAM,CAAC,gBAAP,CAAwB,QAAxB,EAAkC,QAAQ,CAAC,MAA3C,EAAmD,OAAnD;AACD;;AAED,SAAO,YAAK;AACV,QAAI,MAAJ,EAAY;AACV,MAAA,aAAa,CAAC,OAAd,CAAsB,UAAA,YAAY,EAAG;AACnC,QAAA,YAAY,CAAC,mBAAb,CAAiC,QAAjC,EAA2C,QAAQ,CAAC,MAApD,EAA4D,OAA5D;AACD,OAFD;AAGD;;AAED,QAAI,MAAJ,EAAY;AACV,MAAA,MAAM,CAAC,mBAAP,CAA2B,QAA3B,EAAqC,QAAQ,CAAC,MAA9C,EAAsD,OAAtD;AACD;AACF,GAVD;AAWD;;AAID,eAAe;AACb,EAAA,IAAI,EAAE,gBADO;AAEb,EAAA,OAAO,EAAE,IAFI;AAGb,EAAA,KAAK,EAAE,OAHM;AAIb,EAAA,EAAE,EAAE,cAAK,CAAG,CAJC;AAKb,EAAA,MAAM,EAAN,MALa;AAMb,EAAA,IAAI,EAAE;AANO,CAAf","sourcesContent":["// @ts-nocheck\nimport { ModifierArguments, Modifier } from '../types';\nimport getWindow from '../dom-utils/getWindow';\n\n// eslint-disable-next-line import/no-unused-modules\nexport interface Options {\n  scroll: boolean;\n  resize: boolean;\n}\n\nconst passive = { passive: true };\n\n/**\n *\n */\nfunction effect({ state, instance, options }: ModifierArguments<Options>) {\n  const { scroll = true, resize = true } = options;\n\n  const window = getWindow(state.elements.popper);\n  const scrollParents = [...state.scrollParents.reference, ...state.scrollParents.popper];\n\n  if (scroll) {\n    scrollParents.forEach(scrollParent => {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return () => {\n    if (scroll) {\n      scrollParents.forEach(scrollParent => {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type EventListenersModifier = Modifier<'eventListeners', Options>;\nexport default {\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: () => {},\n  effect,\n  data: {}\n} as EventListenersModifier;\n"]},"metadata":{},"sourceType":"module"}