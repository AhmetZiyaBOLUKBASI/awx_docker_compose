{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/HelperText/helper-text';\nimport { css } from '@patternfly/react-styles';\nexport var HelperText = function HelperText(_a) {\n  var children = _a.children,\n      className = _a.className,\n      _a$component = _a.component,\n      component = _a$component === void 0 ? 'div' : _a$component,\n      id = _a.id,\n      _a$isLiveRegion = _a.isLiveRegion,\n      isLiveRegion = _a$isLiveRegion === void 0 ? false : _a$isLiveRegion,\n      props = __rest(_a, [\"children\", \"className\", \"component\", \"id\", \"isLiveRegion\"]);\n\n  var Component = component;\n  return React.createElement(Component, Object.assign({\n    id: id,\n    className: css(styles.helperText, className)\n  }, isLiveRegion && {\n    'aria-live': 'polite'\n  }, props), children);\n};\nHelperText.displayName = 'HelperText';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/HelperText/HelperText.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,gEAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AAoBA,OAAO,IAAM,UAAU,GAA6C,SAAvD,UAAuD,CAAC,EAAD,EAO9C;AAP+C,MACnE,QADmE,GAK/C,EAL+C,CACnE,QADmE;AAAA,MAEnE,SAFmE,GAK/C,EAL+C,CAEnE,SAFmE;AAAA,qBAK/C,EAL+C,CAGnE,SAHmE;AAAA,MAGnE,SAHmE,6BAGvD,KAHuD;AAAA,MAInE,EAJmE,GAK/C,EAL+C,CAInE,EAJmE;AAAA,wBAK/C,EAL+C,CAKnE,YALmE;AAAA,MAKnE,YALmE,gCAKpD,KALoD;AAAA,MAMhE,KANgE,GAM3D,MAAA,CAAA,EAAA,EAN2D,CAAA,UAAA,EAAA,WAAA,EAAA,WAAA,EAAA,IAAA,EAAA,cAAA,CAM3D,CAN2D;;AAQnE,MAAM,SAAS,GAAG,SAAlB;AACA,SACE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,MAAA,CAAA,MAAA,CAAA;AACR,IAAA,EAAE,EAAE,EADI;AAER,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,UAAR,EAAoB,SAApB;AAFN,GAAA,EAGH,YAAY,IAAI;AAAE,iBAAa;AAAf,GAHb,EAIJ,KAJI,CAAV,EAMG,QANH,CADF;AAUD,CAnBM;AAoBP,UAAU,CAAC,WAAX,GAAyB,YAAzB","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/HelperText/helper-text';\nimport { css } from '@patternfly/react-styles';\n\nexport interface HelperTextProps extends React.HTMLProps<HTMLDivElement | HTMLUListElement> {\n  /** Content rendered inside the helper text container. */\n  children?: React.ReactNode;\n  /** Additional classes applied to the helper text container. */\n  className?: string;\n  /** Component type of the helper text container */\n  component?: 'div' | 'ul';\n  /** ID for the helper text container. The value of this prop can be passed into a form component's\n   * aria-describedby prop when you intend for all helper text items to be announced to\n   * assistive technologies.\n   */\n  id?: string;\n  /** Flag for indicating whether the helper text container is a live region. Use this prop when you\n   * expect or intend for any helper text items within the container to be dynamically updated.\n   */\n  isLiveRegion?: boolean;\n}\n\nexport const HelperText: React.FunctionComponent<HelperTextProps> = ({\n  children,\n  className,\n  component = 'div',\n  id,\n  isLiveRegion = false,\n  ...props\n}: HelperTextProps) => {\n  const Component = component as any;\n  return (\n    <Component\n      id={id}\n      className={css(styles.helperText, className)}\n      {...(isLiveRegion && { 'aria-live': 'polite' })}\n      {...props}\n    >\n      {children}\n    </Component>\n  );\n};\nHelperText.displayName = 'HelperText';\n"]},"metadata":{},"sourceType":"module"}