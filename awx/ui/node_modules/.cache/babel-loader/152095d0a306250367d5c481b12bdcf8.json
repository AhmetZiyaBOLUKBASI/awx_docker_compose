{"ast":null,"code":"import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useEffect,useCallback,useRef}from'react';import{Route,Switch,Redirect,Link,useParams,useRouteMatch}from'react-router-dom';import{CaretLeftIcon}from'@patternfly/react-icons';import{Card,PageSection}from'@patternfly/react-core';import{InventorySourcesAPI}from'api';import ContentError from'components/ContentError';import ContentLoading from'components/ContentLoading';import RoutedTabs from'components/RoutedTabs';import{getSearchableKeys}from'components/PaginatedTable';import useRequest from'hooks/useRequest';import{getJobModel}from'util/jobs';import WorkflowOutputNavigation from'components/WorkflowOutputNavigation';import JobDetail from'./JobDetail';import JobOutput from'./JobOutput';import{WorkflowOutput}from'./WorkflowOutput';import useWsJob from'./useWsJob';// maps the displayed url segments to actual api types\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var JOB_URL_SEGMENT_MAP={playbook:'job',project:'project_update',management:'system_job',system:'system_job',inventory:'inventory_update',command:'ad_hoc_command',workflow:'workflow_job'};function Job(_ref){var setBreadcrumb=_ref.setBreadcrumb;var _useParams=useParams(),id=_useParams.id,typeSegment=_useParams.typeSegment;var match=useRouteMatch();var type=JOB_URL_SEGMENT_MAP[typeSegment];var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _jobDetailData$summar,_jobDetailData$summar2,_choices,_choices$data,_choices$data$actions,_choices$data$actions2,_choices$data$actions3,_eventOptions,_eventOptions2,_eventOptions2$action;var eventOptions,relatedJobData,_yield$getJobModel$re,jobDetailData,_yield$getJobModel$re2,jobEventOptions,_yield$getJobModel$re3,results,_yield$getJobModel$re4,_results,choices;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:eventOptions={};relatedJobData={};_context.next=4;return getJobModel(type).readDetail(id);case 4:_yield$getJobModel$re=_context.sent;jobDetailData=_yield$getJobModel$re.data;if(!(type!=='workflow_job')){_context.next=12;break;}_context.next=9;return getJobModel(type).readEventOptions(id);case 9:_yield$getJobModel$re2=_context.sent;jobEventOptions=_yield$getJobModel$re2.data;eventOptions=jobEventOptions;case 12:if(!jobDetailData.related.source_workflow_job){_context.next=18;break;}_context.next=15;return getJobModel('workflow_job').readNodes(jobDetailData.summary_fields.source_workflow_job.id);case 15:_yield$getJobModel$re3=_context.sent;results=_yield$getJobModel$re3.data.results;relatedJobData=results;case 18:if(!(jobDetailData!==null&&jobDetailData!==void 0&&(_jobDetailData$summar=jobDetailData.summary_fields)!==null&&_jobDetailData$summar!==void 0&&(_jobDetailData$summar2=_jobDetailData$summar.credentials)!==null&&_jobDetailData$summar2!==void 0&&_jobDetailData$summar2.find(function(cred){return cred.kind==='vault';}))){_context.next=24;break;}_context.next=21;return getJobModel(type).readCredentials(jobDetailData.id);case 21:_yield$getJobModel$re4=_context.sent;_results=_yield$getJobModel$re4.data.results;jobDetailData.summary_fields.credentials=_results;case 24:setBreadcrumb(jobDetailData);if(!(jobDetailData.type==='inventory_update')){_context.next=29;break;}_context.next=28;return InventorySourcesAPI.readOptions();case 28:choices=_context.sent;case 29:return _context.abrupt(\"return\",{inventorySourceChoices:((_choices=choices)===null||_choices===void 0?void 0:(_choices$data=_choices.data)===null||_choices$data===void 0?void 0:(_choices$data$actions=_choices$data.actions)===null||_choices$data$actions===void 0?void 0:(_choices$data$actions2=_choices$data$actions.GET)===null||_choices$data$actions2===void 0?void 0:(_choices$data$actions3=_choices$data$actions2.source)===null||_choices$data$actions3===void 0?void 0:_choices$data$actions3.choices)||[],jobDetail:jobDetailData,relatedJobs:relatedJobData,eventRelatedSearchableKeys:(((_eventOptions=eventOptions)===null||_eventOptions===void 0?void 0:_eventOptions.related_search_fields)||[]).map(function(val){return val.slice(0,-8);}),eventSearchableKeys:getSearchableKeys((_eventOptions2=eventOptions)===null||_eventOptions2===void 0?void 0:(_eventOptions2$action=_eventOptions2.actions)===null||_eventOptions2$action===void 0?void 0:_eventOptions2$action.GET)});case 30:case\"end\":return _context.stop();}}},_callee);})),[id,type,setBreadcrumb]),{jobDetail:null,inventorySourceChoices:[],eventRelatedSearchableKeys:[],eventSearchableKeys:[],relatedJobs:[]}),isLoading=_useRequest.isLoading,error=_useRequest.error,fetchJob=_useRequest.request,_useRequest$result=_useRequest.result,jobDetail=_useRequest$result.jobDetail,eventRelatedSearchableKeys=_useRequest$result.eventRelatedSearchableKeys,eventSearchableKeys=_useRequest$result.eventSearchableKeys,inventorySourceChoices=_useRequest$result.inventorySourceChoices,relatedJobs=_useRequest$result.relatedJobs;useEffect(function(){fetchJob();},[fetchJob]);var job=useWsJob(jobDetail);var ref=useRef(null);var tabsArray=[{name:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CaretLeftIcon,{}),/*i18n*/i18n._(\"Back to Jobs\")]}),link:\"/jobs\",isBackButton:true,id:99},{name:/*i18n*/i18n._(\"Details\"),link:\"\".concat(match.url,\"/details\"),id:0},{name:/*i18n*/i18n._(\"Output\"),link:\"\".concat(match.url,\"/output\"),id:1}];if((relatedJobs===null||relatedJobs===void 0?void 0:relatedJobs.length)>0){tabsArray.push({name:/*#__PURE__*/_jsx(WorkflowOutputNavigation,{parentRef:ref,relatedJobs:relatedJobs}),link:undefined,id:2,hasstyle:'margin-left: auto'});}if(isLoading){return/*#__PURE__*/_jsx(PageSection,{children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(ContentLoading,{})})});}if(error){var _error$response;return/*#__PURE__*/_jsx(PageSection,{children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(ContentError,{error:error,children:((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===404&&/*#__PURE__*/_jsxs(\"span\",{children:[/*i18n*/i18n._(\"The page you requested could not be found.\"),' ',/*#__PURE__*/_jsx(Link,{to:\"/jobs\",children:/*i18n*/i18n._(\"View all Jobs.\")})]})})})});}return/*#__PURE__*/_jsx(PageSection,{children:/*#__PURE__*/_jsx(\"div\",{ref:ref,children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(RoutedTabs,{isWorkflow:match.url.startsWith('/jobs/workflow'),tabsArray:tabsArray}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Redirect,{from:\"/jobs/system/:id\",to:\"/jobs/management/:id\",exact:true}),/*#__PURE__*/_jsx(Redirect,{from:\"/jobs/:typeSegment/:id\",to:\"/jobs/:typeSegment/:id/output\",exact:true}),job&&[/*#__PURE__*/_jsx(Route,{path:\"/jobs/:typeSegment/:id/details\",children:/*#__PURE__*/_jsx(JobDetail,{job:job,inventorySourceLabels:inventorySourceChoices})},job.type==='workflow_job'?'workflow-details':'details'),/*#__PURE__*/_jsx(Route,{path:\"/jobs/:typeSegment/:id/output\",children:job.type==='workflow_job'?/*#__PURE__*/_jsx(WorkflowOutput,{job:job}):/*#__PURE__*/_jsx(JobOutput,{job:job,eventRelatedSearchableKeys:eventRelatedSearchableKeys,eventSearchableKeys:eventSearchableKeys})},\"output\"),/*#__PURE__*/_jsx(Route,{path:\"*\",children:/*#__PURE__*/_jsx(ContentError,{isNotFound:true,children:/*#__PURE__*/_jsx(Link,{to:\"/jobs/\".concat(typeSegment,\"/\").concat(id,\"/details\"),children:/*i18n*/i18n._(\"View Job Details\")})})},\"not-found\")]]})]})})});}export default Job;export{Job as _Job};","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Job/Job.js"],"names":["React","useEffect","useCallback","useRef","Route","Switch","Redirect","Link","useParams","useRouteMatch","CaretLeftIcon","Card","PageSection","InventorySourcesAPI","ContentError","ContentLoading","RoutedTabs","getSearchableKeys","useRequest","getJobModel","WorkflowOutputNavigation","JobDetail","JobOutput","WorkflowOutput","useWsJob","JOB_URL_SEGMENT_MAP","playbook","project","management","system","inventory","command","workflow","Job","setBreadcrumb","id","typeSegment","match","type","eventOptions","relatedJobData","readDetail","jobDetailData","data","readEventOptions","jobEventOptions","related","source_workflow_job","readNodes","summary_fields","results","credentials","find","cred","kind","readCredentials","readOptions","choices","inventorySourceChoices","actions","GET","source","jobDetail","relatedJobs","eventRelatedSearchableKeys","related_search_fields","map","val","slice","eventSearchableKeys","isLoading","error","fetchJob","request","result","job","ref","tabsArray","name","link","isBackButton","url","length","push","undefined","hasstyle","response","status","startsWith","_Job"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useRef } from 'react';\nimport {\n  Route,\n  Switch,\n  Redirect,\n  Link,\n  useParams,\n  useRouteMatch,\n} from 'react-router-dom';\n\nimport { t } from '@lingui/macro';\nimport { CaretLeftIcon } from '@patternfly/react-icons';\nimport { Card, PageSection } from '@patternfly/react-core';\nimport { InventorySourcesAPI } from 'api';\nimport ContentError from 'components/ContentError';\nimport ContentLoading from 'components/ContentLoading';\nimport RoutedTabs from 'components/RoutedTabs';\nimport { getSearchableKeys } from 'components/PaginatedTable';\nimport useRequest from 'hooks/useRequest';\nimport { getJobModel } from 'util/jobs';\nimport WorkflowOutputNavigation from 'components/WorkflowOutputNavigation';\nimport JobDetail from './JobDetail';\nimport JobOutput from './JobOutput';\nimport { WorkflowOutput } from './WorkflowOutput';\nimport useWsJob from './useWsJob';\n\n// maps the displayed url segments to actual api types\nexport const JOB_URL_SEGMENT_MAP = {\n  playbook: 'job',\n  project: 'project_update',\n  management: 'system_job',\n  system: 'system_job',\n  inventory: 'inventory_update',\n  command: 'ad_hoc_command',\n  workflow: 'workflow_job',\n};\n\nfunction Job({ setBreadcrumb }) {\n  const { id, typeSegment } = useParams();\n  const match = useRouteMatch();\n\n  const type = JOB_URL_SEGMENT_MAP[typeSegment];\n\n  const {\n    isLoading,\n    error,\n    request: fetchJob,\n    result: {\n      jobDetail,\n      eventRelatedSearchableKeys,\n      eventSearchableKeys,\n      inventorySourceChoices,\n      relatedJobs,\n    },\n  } = useRequest(\n    useCallback(async () => {\n      let eventOptions = {};\n      let relatedJobData = {};\n      const { data: jobDetailData } = await getJobModel(type).readDetail(id);\n      if (type !== 'workflow_job') {\n        const { data: jobEventOptions } = await getJobModel(\n          type\n        ).readEventOptions(id);\n        eventOptions = jobEventOptions;\n      }\n      if (jobDetailData.related.source_workflow_job) {\n        const {\n          data: { results },\n        } = await getJobModel('workflow_job').readNodes(\n          jobDetailData.summary_fields.source_workflow_job.id\n        );\n        relatedJobData = results;\n      }\n      if (\n        jobDetailData?.summary_fields?.credentials?.find(\n          (cred) => cred.kind === 'vault'\n        )\n      ) {\n        const {\n          data: { results },\n        } = await getJobModel(type).readCredentials(jobDetailData.id);\n\n        jobDetailData.summary_fields.credentials = results;\n      }\n\n      setBreadcrumb(jobDetailData);\n      let choices;\n      if (jobDetailData.type === 'inventory_update') {\n        choices = await InventorySourcesAPI.readOptions();\n      }\n\n      return {\n        inventorySourceChoices:\n          choices?.data?.actions?.GET?.source?.choices || [],\n        jobDetail: jobDetailData,\n        relatedJobs: relatedJobData,\n        eventRelatedSearchableKeys: (\n          eventOptions?.related_search_fields || []\n        ).map((val) => val.slice(0, -8)),\n        eventSearchableKeys: getSearchableKeys(eventOptions?.actions?.GET),\n      };\n    }, [id, type, setBreadcrumb]),\n    {\n      jobDetail: null,\n      inventorySourceChoices: [],\n      eventRelatedSearchableKeys: [],\n      eventSearchableKeys: [],\n      relatedJobs: [],\n    }\n  );\n\n  useEffect(() => {\n    fetchJob();\n  }, [fetchJob]);\n\n  const job = useWsJob(jobDetail);\n  const ref = useRef(null);\n  const tabsArray = [\n    {\n      name: (\n        <>\n          <CaretLeftIcon />\n          {t`Back to Jobs`}\n        </>\n      ),\n      link: `/jobs`,\n      isBackButton: true,\n      id: 99,\n    },\n    { name: t`Details`, link: `${match.url}/details`, id: 0 },\n    { name: t`Output`, link: `${match.url}/output`, id: 1 },\n  ];\n  if (relatedJobs?.length > 0) {\n    tabsArray.push({\n      name: (\n        <WorkflowOutputNavigation parentRef={ref} relatedJobs={relatedJobs} />\n      ),\n      link: undefined,\n      id: 2,\n      hasstyle: 'margin-left: auto',\n    });\n  }\n\n  if (isLoading) {\n    return (\n      <PageSection>\n        <Card>\n          <ContentLoading />\n        </Card>\n      </PageSection>\n    );\n  }\n\n  if (error) {\n    return (\n      <PageSection>\n        <Card>\n          <ContentError error={error}>\n            {error.response?.status === 404 && (\n              <span>\n                {t`The page you requested could not be found.`}{' '}\n                <Link to=\"/jobs\">{t`View all Jobs.`}</Link>\n              </span>\n            )}\n          </ContentError>\n        </Card>\n      </PageSection>\n    );\n  }\n\n  return (\n    <PageSection>\n      <div ref={ref}>\n        <Card>\n          <RoutedTabs\n            isWorkflow={match.url.startsWith('/jobs/workflow')}\n            tabsArray={tabsArray}\n          />\n          <Switch>\n            <Redirect from=\"/jobs/system/:id\" to=\"/jobs/management/:id\" exact />\n            <Redirect\n              from=\"/jobs/:typeSegment/:id\"\n              to=\"/jobs/:typeSegment/:id/output\"\n              exact\n            />\n            {job && [\n              <Route\n                key={\n                  job.type === 'workflow_job' ? 'workflow-details' : 'details'\n                }\n                path=\"/jobs/:typeSegment/:id/details\"\n              >\n                <JobDetail\n                  job={job}\n                  inventorySourceLabels={inventorySourceChoices}\n                />\n              </Route>,\n              <Route key=\"output\" path=\"/jobs/:typeSegment/:id/output\">\n                {job.type === 'workflow_job' ? (\n                  <WorkflowOutput job={job} />\n                ) : (\n                  <JobOutput\n                    job={job}\n                    eventRelatedSearchableKeys={eventRelatedSearchableKeys}\n                    eventSearchableKeys={eventSearchableKeys}\n                  />\n                )}\n              </Route>,\n              <Route key=\"not-found\" path=\"*\">\n                <ContentError isNotFound>\n                  <Link to={`/jobs/${typeSegment}/${id}/details`}>\n                    {t`View Job Details`}\n                  </Link>\n                </ContentError>\n              </Route>,\n            ]}\n          </Switch>\n        </Card>\n      </div>\n    </PageSection>\n  );\n}\n\nexport default Job;\nexport { Job as _Job };\n"]},"metadata":{},"sourceType":"module"}