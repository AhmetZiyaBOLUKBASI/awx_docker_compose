{"ast":null,"code":"import _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\n/**\n * header.tsx\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\n\nimport * as React from 'react';\nimport { ProviderContext } from './provider';\nimport { HeaderRow } from './header-row';\n\nvar BaseHeader = /*#__PURE__*/function (_React$Component) {\n  _inherits(BaseHeader, _React$Component);\n\n  var _super = _createSuper(BaseHeader);\n\n  function BaseHeader() {\n    _classCallCheck(this, BaseHeader);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BaseHeader, [{\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          children = _a.children,\n          headerRows = _a.headerRows,\n          onRow = _a.onRow,\n          renderers = _a.renderers,\n          columns = _a.columns,\n          props = __rest(_a, [\"children\", \"headerRows\", \"onRow\", \"renderers\", \"columns\"]); // If headerRows aren't passed, default to bodyColumns as header rows\n\n\n      return React.createElement(renderers.header.wrapper, props, [(headerRows || [columns]).map(function (rowData, rowIndex) {\n        return React.createElement(HeaderRow, {\n          key: \"\".concat(rowIndex, \"-header-row\"),\n          renderers: renderers.header,\n          onRow: onRow,\n          rowData: rowData,\n          rowIndex: rowIndex\n        });\n      })].concat(children));\n    }\n  }]);\n\n  return BaseHeader;\n}(React.Component);\n\nexport var Header = function Header(props) {\n  return React.createElement(ProviderContext.Consumer, null, function (_ref) {\n    var columns = _ref.columns,\n        renderers = _ref.renderers;\n    return React.createElement(BaseHeader, Object.assign({\n      columns: columns,\n      renderers: renderers\n    }, props));\n  });\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/Table/base/header.tsx"],"names":[],"mappings":";;;;;AAAA;;;;;AAKG;;AACH,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAAS,eAAT,QAAgC,YAAhC;AACA,SAAS,SAAT,QAA0B,cAA1B;;IAWM,U;;;;;;;;;;;;;WACJ,kBAAM;AACE,UAAA,EAAA,GAAgE,KAAhE,KAAA;AAAA,UAAE,QAAF,GAAiD,EAAjD,CAAE,QAAF;AAAA,UAAY,UAAZ,GAAiD,EAAjD,CAAY,UAAZ;AAAA,UAAwB,KAAxB,GAAiD,EAAjD,CAAwB,KAAxB;AAAA,UAA+B,SAA/B,GAAiD,EAAjD,CAA+B,SAA/B;AAAA,UAA0C,OAA1C,GAAiD,EAAjD,CAA0C,OAA1C;AAAA,UAAsD,KAAtD,GAA2D,MAAA,CAAA,EAAA,EAA3D,CAAA,UAAA,EAAA,YAAA,EAAA,OAAA,EAAA,WAAA,EAAA,SAAA,CAA2D,CAA3D,CADF,CAGJ;;;AACA,aAAO,KAAK,CAAC,aAAN,CACL,SAAS,CAAC,MAAV,CAAiB,OADZ,EAEL,KAFK,EAGL,CACE,CAAC,UAAU,IAAK,CAAC,OAAD,CAAhB,EAA2C,GAA3C,CAA+C,UAAC,OAAD,EAAU,QAAV;AAAA,eAC7C,KAAK,CAAC,aAAN,CAAoB,SAApB,EAA+B;AAC7B,UAAA,GAAG,YAAK,QAAL,gBAD0B;AAE7B,UAAA,SAAS,EAAE,SAAS,CAAC,MAFQ;AAG7B,UAAA,KAAK,EAAL,KAH6B;AAI7B,UAAA,OAAO,EAAP,OAJ6B;AAK7B,UAAA,QAAQ,EAAR;AAL6B,SAA/B,CAD6C;AAAA,OAA/C,CADF,EAUE,MAVF,CAUS,QAVT,CAHK,CAAP;AAeD;;;;EApBsB,KAAK,CAAC,S;;AAuB/B,OAAO,IAAM,MAAM,GAAG,SAAT,MAAS,CAAC,KAAD;AAAA,SACpB,KAAA,CAAA,aAAA,CAAC,eAAe,CAAC,QAAjB,EAAyB,IAAzB,EACG;AAAA,QAAG,OAAH,QAAG,OAAH;AAAA,QAAY,SAAZ,QAAY,SAAZ;AAAA,WAA4B,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,MAAA,CAAA,MAAA,CAAA;AAAC,MAAA,OAAO,EAAE,OAAV;AAAmB,MAAA,SAAS,EAAE;AAA9B,KAAA,EAA6C,KAA7C,CAAX,CAA5B;AAAA,GADH,CADoB;AAAA,CAAf","sourcesContent":["/**\n * header.tsx\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport * as React from 'react';\nimport { createElementType, RowsType, ColumnsType, RenderersTypes } from './types';\nimport { ProviderContext } from './provider';\nimport { HeaderRow } from './header-row';\n\nexport interface HeaderProps {\n  headerRows?: RowsType[] | ColumnsType; // array of rows arrays\n  children?: React.ReactNode;\n  columns?: ColumnsType;\n  renderers?: RenderersTypes['renderers'];\n  onRow?: Function;\n  className?: string;\n}\n\nclass BaseHeader extends React.Component<HeaderProps, {}> {\n  render() {\n    const { children, headerRows, onRow, renderers, columns, ...props } = this.props;\n\n    // If headerRows aren't passed, default to bodyColumns as header rows\n    return React.createElement(\n      renderers.header.wrapper as createElementType,\n      props,\n      [\n        (headerRows || ([columns] as ColumnsType)).map((rowData, rowIndex) =>\n          React.createElement(HeaderRow, {\n            key: `${rowIndex}-header-row`,\n            renderers: renderers.header,\n            onRow,\n            rowData,\n            rowIndex\n          })\n        )\n      ].concat(children as any)\n    );\n  }\n}\n\nexport const Header = (props: HeaderProps) => (\n  <ProviderContext.Consumer>\n    {({ columns, renderers }) => <BaseHeader columns={columns} renderers={renderers} {...props} />}\n  </ProviderContext.Consumer>\n);\n"]},"metadata":{},"sourceType":"module"}