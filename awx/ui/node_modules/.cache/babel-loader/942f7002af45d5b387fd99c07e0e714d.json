{"ast":null,"code":"import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useState}from'react';import{Button}from'@patternfly/react-core';import{TableComposable,Thead,Tr,Th,Tbody}from'@patternfly/react-table';import AlertModal from'components/AlertModal';import ContentEmpty from'components/ContentEmpty';import ContentLoading from'components/ContentLoading';import useSelected from'hooks/useSelected';import SurveyListItem from'./SurveyListItem';import SurveyToolbar from'./SurveyToolbar';import SurveyReorderModal from'./SurveyReorderModal';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function SurveyList(_ref){var isLoading=_ref.isLoading,survey=_ref.survey,surveyEnabled=_ref.surveyEnabled,toggleSurvey=_ref.toggleSurvey,updateSurvey=_ref.updateSurvey,deleteSurvey=_ref.deleteSurvey,canEdit=_ref.canEdit;var questions=(survey===null||survey===void 0?void 0:survey.spec)||[];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isDeleteModalOpen=_useState2[0],setIsDeleteModalOpen=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isOrderModalOpen=_useState4[0],setIsOrderModalOpen=_useState4[1];var _useSelected=useSelected(questions),selected=_useSelected.selected,isAllSelected=_useSelected.isAllSelected,setSelected=_useSelected.setSelected,selectAll=_useSelected.selectAll,clearSelected=_useSelected.clearSelected;var handleSelect=function handleSelect(item){if(selected.some(function(q){return q.variable===item.variable;})){setSelected(selected.filter(function(q){return q.variable!==item.variable;}));}else{setSelected(selected.concat(item));}};var handleDelete=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!isAllSelected){_context.next=5;break;}_context.next=3;return deleteSurvey();case 3:_context.next=7;break;case 5:_context.next=7;return updateSurvey(questions.filter(function(q){return!selected.includes(q);}));case 7:setIsDeleteModalOpen(false);clearSelected();case 9:case\"end\":return _context.stop();}}},_callee);}));return function handleDelete(){return _ref2.apply(this,arguments);};}();var deleteModal=/*#__PURE__*/_jsxs(AlertModal,{variant:\"danger\",title:isAllSelected?/*i18n*/i18n._(\"Delete Survey\"):/*i18n*/i18n._(\"Delete Questions\"),isOpen:isDeleteModalOpen,onClose:function onClose(){setIsDeleteModalOpen(false);clearSelected();},actions:[/*#__PURE__*/_jsx(Button,{ouiaId:\"delete-confirm-button\",variant:\"danger\",\"aria-label\":/*i18n*/i18n._(\"confirm delete\"),onClick:handleDelete,children:/*i18n*/i18n._(\"Delete\")},\"delete\"),/*#__PURE__*/_jsx(Button,{ouiaId:\"delete-cancel-button\",variant:\"link\",\"aria-label\":/*i18n*/i18n._(\"cancel delete\"),onClick:function onClick(){setIsDeleteModalOpen(false);clearSelected();},children:/*i18n*/i18n._(\"Cancel\")},\"cancel\")],children:[/*#__PURE__*/_jsx(\"div\",{children:/*i18n*/i18n._(\"This action will delete the following:\")}),selected.map(function(question){return/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:question.question_name}),/*#__PURE__*/_jsx(\"br\",{})]},question.variable);})]});var content;if(isLoading){content=/*#__PURE__*/_jsx(ContentLoading,{});}else{content=/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(TableComposable,{ouiaId:\"survey-list\",children:[/*#__PURE__*/_jsx(Thead,{children:/*#__PURE__*/_jsxs(Tr,{ouiaId:\"survey-table-header\",children:[/*#__PURE__*/_jsx(Th,{}),/*#__PURE__*/_jsx(Th,{dataLabel:/*i18n*/i18n._(\"Name\"),children:/*i18n*/i18n._(\"Name\")}),/*#__PURE__*/_jsx(Th,{dataLabel:/*i18n*/i18n._(\"Type\"),children:/*i18n*/i18n._(\"Type\")}),/*#__PURE__*/_jsx(Th,{dataLabel:/*i18n*/i18n._(\"Default\"),children:/*i18n*/i18n._(\"Default\")}),/*#__PURE__*/_jsx(Th,{dataLabel:/*i18n*/i18n._(\"Actions\"),children:/*i18n*/i18n._(\"Actions\")})]})}),/*#__PURE__*/_jsx(Tbody,{children:questions===null||questions===void 0?void 0:questions.map(function(question,index){return/*#__PURE__*/_jsx(SurveyListItem,{isLast:index===questions.length-1,isFirst:index===0,question:question,isChecked:selected.some(function(q){return q.variable===question.variable;}),onSelect:function onSelect(){return handleSelect(question);},canEdit:canEdit,rowIndex:index},question.variable);})})]}),isDeleteModalOpen&&deleteModal,isOrderModalOpen&&/*#__PURE__*/_jsx(SurveyReorderModal,{isOrderModalOpen:isOrderModalOpen,onCloseOrderModal:function onCloseOrderModal(){return setIsOrderModalOpen(false);},questions:questions,onSave:function onSave(newOrder){updateSurvey(newOrder);setIsOrderModalOpen(false);}})]});}var emptyList=!questions||(questions===null||questions===void 0?void 0:questions.length)<=0;if(emptyList&&!isLoading){content=/*#__PURE__*/_jsx(ContentEmpty,{message:/*i18n*/i18n._(\"Please add survey questions.\"),title:/*i18n*/i18n._(\"No survey questions found.\")});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(SurveyToolbar,{onOpenOrderModal:questions.length>1&&function(){setIsOrderModalOpen(true);},isAllSelected:isAllSelected,onSelectAll:selectAll,surveyEnabled:surveyEnabled,onToggleSurvey:toggleSurvey,isDeleteDisabled:(selected===null||selected===void 0?void 0:selected.length)===0,canEdit:canEdit,emptyList:emptyList,onToggleDeleteModal:function onToggleDeleteModal(){return setIsDeleteModalOpen(true);}}),content]});}export default SurveyList;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Template/Survey/SurveyList.js"],"names":["React","useState","Button","TableComposable","Thead","Tr","Th","Tbody","AlertModal","ContentEmpty","ContentLoading","useSelected","SurveyListItem","SurveyToolbar","SurveyReorderModal","SurveyList","isLoading","survey","surveyEnabled","toggleSurvey","updateSurvey","deleteSurvey","canEdit","questions","spec","isDeleteModalOpen","setIsDeleteModalOpen","isOrderModalOpen","setIsOrderModalOpen","selected","isAllSelected","setSelected","selectAll","clearSelected","handleSelect","item","some","q","variable","filter","concat","handleDelete","includes","deleteModal","map","question","question_name","content","index","length","newOrder","emptyList"],"mappings":"uVAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAGA,OAASC,MAAT,KAAuB,wBAAvB,CACA,OAASC,eAAT,CAA0BC,KAA1B,CAAiCC,EAAjC,CAAqCC,EAArC,CAAyCC,KAAzC,KAAsD,yBAAtD,CACA,MAAOC,CAAAA,UAAP,KAAuB,uBAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,yBAAzB,CACA,MAAOC,CAAAA,cAAP,KAA2B,2BAA3B,CAEA,MAAOC,CAAAA,WAAP,KAAwB,mBAAxB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,sBAA/B,C,6IAEA,QAASC,CAAAA,UAAT,MAQG,IAPDC,CAAAA,SAOC,MAPDA,SAOC,CANDC,MAMC,MANDA,MAMC,CALDC,aAKC,MALDA,aAKC,CAJDC,YAIC,MAJDA,YAIC,CAHDC,YAGC,MAHDA,YAGC,CAFDC,YAEC,MAFDA,YAEC,CADDC,OACC,MADDA,OACC,CACD,GAAMC,CAAAA,SAAS,CAAG,CAAAN,MAAM,OAAN,EAAAA,MAAM,SAAN,QAAAA,MAAM,CAAEO,IAAR,GAAgB,EAAlC,CACA,cAAkDvB,QAAQ,CAAC,KAAD,CAA1D,wCAAOwB,iBAAP,eAA0BC,oBAA1B,eACA,eAAgDzB,QAAQ,CAAC,KAAD,CAAxD,yCAAO0B,gBAAP,eAAyBC,mBAAzB,eAEA,iBACEjB,WAAW,CAACY,SAAD,CADb,CAAQM,QAAR,cAAQA,QAAR,CAAkBC,aAAlB,cAAkBA,aAAlB,CAAiCC,WAAjC,cAAiCA,WAAjC,CAA8CC,SAA9C,cAA8CA,SAA9C,CAAyDC,aAAzD,cAAyDA,aAAzD,CAGA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,CAAU,CAC7B,GAAIN,QAAQ,CAACO,IAAT,CAAc,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,QAAF,GAAeH,IAAI,CAACG,QAA3B,EAAd,CAAJ,CAAwD,CACtDP,WAAW,CAACF,QAAQ,CAACU,MAAT,CAAgB,SAACF,CAAD,QAAOA,CAAAA,CAAC,CAACC,QAAF,GAAeH,IAAI,CAACG,QAA3B,EAAhB,CAAD,CAAX,CACD,CAFD,IAEO,CACLP,WAAW,CAACF,QAAQ,CAACW,MAAT,CAAgBL,IAAhB,CAAD,CAAX,CACD,CACF,CAND,CAQA,GAAMM,CAAAA,YAAY,2FAAG,uIACfX,aADe,+CAEXT,CAAAA,YAAY,EAFD,2DAIXD,CAAAA,YAAY,CAACG,SAAS,CAACgB,MAAV,CAAiB,SAACF,CAAD,QAAO,CAACR,QAAQ,CAACa,QAAT,CAAkBL,CAAlB,CAAR,EAAjB,CAAD,CAJD,QAMnBX,oBAAoB,CAAC,KAAD,CAApB,CACAO,aAAa,GAPM,sDAAH,kBAAZQ,CAAAA,YAAY,2CAAlB,CAUA,GAAME,CAAAA,WAAW,cACf,MAAC,UAAD,EACE,OAAO,CAAC,QADV,CAEE,KAAK,CAAEb,aAAa,SAAG,uBAAH,SAAsB,0BAF5C,CAGE,MAAM,CAAEL,iBAHV,CAIE,OAAO,CAAE,kBAAM,CACbC,oBAAoB,CAAC,KAAD,CAApB,CACAO,aAAa,GACd,CAPH,CAQE,OAAO,CAAE,cACP,KAAC,MAAD,EACE,MAAM,CAAC,uBADT,CAGE,OAAO,CAAC,QAHV,CAIE,qBAAY,wBAJd,CAKE,OAAO,CAAEQ,YALX,kBAOG,gBAPH,EAEM,QAFN,CADO,cAUP,KAAC,MAAD,EACE,MAAM,CAAC,sBADT,CAGE,OAAO,CAAC,MAHV,CAIE,qBAAY,uBAJd,CAKE,OAAO,CAAE,kBAAM,CACbf,oBAAoB,CAAC,KAAD,CAApB,CACAO,aAAa,GACd,CARH,kBAUG,gBAVH,EAEM,QAFN,CAVO,CARX,wBAgCE,6BAAM,gDAAN,EAhCF,CAiCGJ,QAAQ,CAACe,GAAT,CAAa,SAACC,QAAD,qBACZ,qCACE,wBAASA,QAAQ,CAACC,aAAlB,EADF,cAEE,aAFF,GAAWD,QAAQ,CAACP,QAApB,CADY,EAAb,CAjCH,GADF,CA2CA,GAAIS,CAAAA,OAAJ,CACA,GAAI/B,SAAJ,CAAe,CACb+B,OAAO,cAAG,KAAC,cAAD,IAAV,CACD,CAFD,IAEO,CACLA,OAAO,cACL,wCACE,MAAC,eAAD,EAAiB,MAAM,CAAC,aAAxB,wBACE,KAAC,KAAD,wBACE,MAAC,EAAD,EAAI,MAAM,CAAC,qBAAX,wBACE,KAAC,EAAD,IADF,cAEE,KAAC,EAAD,EAAI,SAAS,SAAE,cAAf,kBAAyB,cAAzB,EAFF,cAGE,KAAC,EAAD,EAAI,SAAS,SAAE,cAAf,kBAAyB,cAAzB,EAHF,cAIE,KAAC,EAAD,EAAI,SAAS,SAAE,iBAAf,kBAA4B,iBAA5B,EAJF,cAKE,KAAC,EAAD,EAAI,SAAS,SAAE,iBAAf,kBAA4B,iBAA5B,EALF,GADF,EADF,cAUE,KAAC,KAAD,WACGxB,SADH,SACGA,SADH,iBACGA,SAAS,CAAEqB,GAAX,CAAe,SAACC,QAAD,CAAWG,KAAX,qBACd,KAAC,cAAD,EAEE,MAAM,CAAEA,KAAK,GAAKzB,SAAS,CAAC0B,MAAV,CAAmB,CAFvC,CAGE,OAAO,CAAED,KAAK,GAAK,CAHrB,CAIE,QAAQ,CAAEH,QAJZ,CAKE,SAAS,CAAEhB,QAAQ,CAACO,IAAT,CACT,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,QAAF,GAAeO,QAAQ,CAACP,QAA/B,EADS,CALb,CAQE,QAAQ,CAAE,0BAAMJ,CAAAA,YAAY,CAACW,QAAD,CAAlB,EARZ,CASE,OAAO,CAAEvB,OATX,CAUE,QAAQ,CAAE0B,KAVZ,EACOH,QAAQ,CAACP,QADhB,CADc,EAAf,CADH,EAVF,GADF,CA4BGb,iBAAiB,EAAIkB,WA5BxB,CA6BGhB,gBAAgB,eACf,KAAC,kBAAD,EACE,gBAAgB,CAAEA,gBADpB,CAEE,iBAAiB,CAAE,mCAAMC,CAAAA,mBAAmB,CAAC,KAAD,CAAzB,EAFrB,CAGE,SAAS,CAAEL,SAHb,CAIE,MAAM,CAAE,gBAAC2B,QAAD,CAAc,CACpB9B,YAAY,CAAC8B,QAAD,CAAZ,CACAtB,mBAAmB,CAAC,KAAD,CAAnB,CACD,CAPH,EA9BJ,GADF,CA2CD,CAED,GAAMuB,CAAAA,SAAS,CAAG,CAAC5B,SAAD,EAAc,CAAAA,SAAS,OAAT,EAAAA,SAAS,SAAT,QAAAA,SAAS,CAAE0B,MAAX,GAAqB,CAArD,CAEA,GAAIE,SAAS,EAAI,CAACnC,SAAlB,CAA6B,CAC3B+B,OAAO,cACL,KAAC,YAAD,EACE,OAAO,SAAE,sCADX,CAEE,KAAK,SAAE,oCAFT,EADF,CAMD,CACD,mBACE,wCACE,KAAC,aAAD,EACE,gBAAgB,CACdxB,SAAS,CAAC0B,MAAV,CAAmB,CAAnB,EACC,UAAM,CACLrB,mBAAmB,CAAC,IAAD,CAAnB,CACD,CALL,CAOE,aAAa,CAAEE,aAPjB,CAQE,WAAW,CAAEE,SARf,CASE,aAAa,CAAEd,aATjB,CAUE,cAAc,CAAEC,YAVlB,CAWE,gBAAgB,CAAE,CAAAU,QAAQ,OAAR,EAAAA,QAAQ,SAAR,QAAAA,QAAQ,CAAEoB,MAAV,IAAqB,CAXzC,CAYE,OAAO,CAAE3B,OAZX,CAaE,SAAS,CAAE6B,SAbb,CAcE,mBAAmB,CAAE,qCAAMzB,CAAAA,oBAAoB,CAAC,IAAD,CAA1B,EAdvB,EADF,CAiBGqB,OAjBH,GADF,CAqBD,CAED,cAAehC,CAAAA,UAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport { t } from '@lingui/macro';\nimport { Button } from '@patternfly/react-core';\nimport { TableComposable, Thead, Tr, Th, Tbody } from '@patternfly/react-table';\nimport AlertModal from 'components/AlertModal';\nimport ContentEmpty from 'components/ContentEmpty';\nimport ContentLoading from 'components/ContentLoading';\n\nimport useSelected from 'hooks/useSelected';\nimport SurveyListItem from './SurveyListItem';\nimport SurveyToolbar from './SurveyToolbar';\nimport SurveyReorderModal from './SurveyReorderModal';\n\nfunction SurveyList({\n  isLoading,\n  survey,\n  surveyEnabled,\n  toggleSurvey,\n  updateSurvey,\n  deleteSurvey,\n  canEdit,\n}) {\n  const questions = survey?.spec || [];\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isOrderModalOpen, setIsOrderModalOpen] = useState(false);\n\n  const { selected, isAllSelected, setSelected, selectAll, clearSelected } =\n    useSelected(questions);\n\n  const handleSelect = (item) => {\n    if (selected.some((q) => q.variable === item.variable)) {\n      setSelected(selected.filter((q) => q.variable !== item.variable));\n    } else {\n      setSelected(selected.concat(item));\n    }\n  };\n\n  const handleDelete = async () => {\n    if (isAllSelected) {\n      await deleteSurvey();\n    } else {\n      await updateSurvey(questions.filter((q) => !selected.includes(q)));\n    }\n    setIsDeleteModalOpen(false);\n    clearSelected();\n  };\n\n  const deleteModal = (\n    <AlertModal\n      variant=\"danger\"\n      title={isAllSelected ? t`Delete Survey` : t`Delete Questions`}\n      isOpen={isDeleteModalOpen}\n      onClose={() => {\n        setIsDeleteModalOpen(false);\n        clearSelected();\n      }}\n      actions={[\n        <Button\n          ouiaId=\"delete-confirm-button\"\n          key=\"delete\"\n          variant=\"danger\"\n          aria-label={t`confirm delete`}\n          onClick={handleDelete}\n        >\n          {t`Delete`}\n        </Button>,\n        <Button\n          ouiaId=\"delete-cancel-button\"\n          key=\"cancel\"\n          variant=\"link\"\n          aria-label={t`cancel delete`}\n          onClick={() => {\n            setIsDeleteModalOpen(false);\n            clearSelected();\n          }}\n        >\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <div>{t`This action will delete the following:`}</div>\n      {selected.map((question) => (\n        <span key={question.variable}>\n          <strong>{question.question_name}</strong>\n          <br />\n        </span>\n      ))}\n    </AlertModal>\n  );\n\n  let content;\n  if (isLoading) {\n    content = <ContentLoading />;\n  } else {\n    content = (\n      <>\n        <TableComposable ouiaId=\"survey-list\">\n          <Thead>\n            <Tr ouiaId=\"survey-table-header\">\n              <Th />\n              <Th dataLabel={t`Name`}>{t`Name`}</Th>\n              <Th dataLabel={t`Type`}>{t`Type`}</Th>\n              <Th dataLabel={t`Default`}>{t`Default`}</Th>\n              <Th dataLabel={t`Actions`}>{t`Actions`}</Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {questions?.map((question, index) => (\n              <SurveyListItem\n                key={question.variable}\n                isLast={index === questions.length - 1}\n                isFirst={index === 0}\n                question={question}\n                isChecked={selected.some(\n                  (q) => q.variable === question.variable\n                )}\n                onSelect={() => handleSelect(question)}\n                canEdit={canEdit}\n                rowIndex={index}\n              />\n            ))}\n          </Tbody>\n        </TableComposable>\n        {isDeleteModalOpen && deleteModal}\n        {isOrderModalOpen && (\n          <SurveyReorderModal\n            isOrderModalOpen={isOrderModalOpen}\n            onCloseOrderModal={() => setIsOrderModalOpen(false)}\n            questions={questions}\n            onSave={(newOrder) => {\n              updateSurvey(newOrder);\n              setIsOrderModalOpen(false);\n            }}\n          />\n        )}\n      </>\n    );\n  }\n\n  const emptyList = !questions || questions?.length <= 0;\n\n  if (emptyList && !isLoading) {\n    content = (\n      <ContentEmpty\n        message={t`Please add survey questions.`}\n        title={t`No survey questions found.`}\n      />\n    );\n  }\n  return (\n    <>\n      <SurveyToolbar\n        onOpenOrderModal={\n          questions.length > 1 &&\n          (() => {\n            setIsOrderModalOpen(true);\n          })\n        }\n        isAllSelected={isAllSelected}\n        onSelectAll={selectAll}\n        surveyEnabled={surveyEnabled}\n        onToggleSurvey={toggleSurvey}\n        isDeleteDisabled={selected?.length === 0}\n        canEdit={canEdit}\n        emptyList={emptyList}\n        onToggleDeleteModal={() => setIsDeleteModalOpen(true)}\n      />\n      {content}\n    </>\n  );\n}\n\nexport default SurveyList;\n"]},"metadata":{},"sourceType":"module"}