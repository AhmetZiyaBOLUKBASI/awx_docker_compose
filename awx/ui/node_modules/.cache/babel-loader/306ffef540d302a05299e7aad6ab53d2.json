{"ast":null,"code":"import _defineProperty from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useCallback,useEffect,useState}from'react';import{Route,Switch,useLocation}from'react-router-dom';import{Card,PageSection}from'@patternfly/react-core';import{useUserProfile}from'contexts/Config';import useRequest from'hooks/useRequest';import{SettingsAPI}from'api';import ScreenHeader from'components/ScreenHeader';import ContentLoading from'components/ContentLoading';import PersistentFilters from'components/PersistentFilters';import InstanceGroupAdd from'./InstanceGroupAdd';import InstanceGroupList from'./InstanceGroupList';import InstanceGroup from'./InstanceGroup';import ContainerGroupAdd from'./ContainerGroupAdd';import ContainerGroup from'./ContainerGroup';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function InstanceGroups(){var _useLocation=useLocation(),pathname=_useLocation.pathname;var _useUserProfile=useUserProfile(),isSuperUser=_useUserProfile.isSuperUser,isSystemAuditor=_useUserProfile.isSystemAuditor;var userCanReadSettings=isSuperUser||isSystemAuditor;var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$SettingsAPI$re,IS_K8S;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return SettingsAPI.readCategory('all');case 2:_yield$SettingsAPI$re=_context.sent;IS_K8S=_yield$SettingsAPI$re.data.IS_K8S;return _context.abrupt(\"return\",{isKubernetes:IS_K8S});case 5:case\"end\":return _context.stop();}}},_callee);})),[]),{isKubernetes:false}),settingsRequest=_useRequest.request,isSettingsRequestLoading=_useRequest.isLoading,settingsRequestError=_useRequest.error,isKubernetes=_useRequest.result.isKubernetes;useEffect(function(){userCanReadSettings&&settingsRequest();},[settingsRequest,userCanReadSettings]);var _useState=useState({'/instance_groups':/*i18n*/i18n._(\"Instance Groups\"),'/instance_groups/add':/*i18n*/i18n._(\"Create new instance group\"),'/instance_groups/container_group/add':/*i18n*/i18n._(\"Create new container group\")}),_useState2=_slicedToArray(_useState,2),breadcrumbConfig=_useState2[0],setBreadcrumbConfig=_useState2[1];var buildBreadcrumbConfig=useCallback(function(instanceGroups,instance){var _setBreadcrumbConfig;if(!instanceGroups){return;}setBreadcrumbConfig((_setBreadcrumbConfig={'/instance_groups':/*i18n*/i18n._(\"Instance Groups\"),'/instance_groups/add':/*i18n*/i18n._(\"Create new instance group\"),'/instance_groups/container_group/add':/*i18n*/i18n._(\"Create new container group\")},_defineProperty(_setBreadcrumbConfig,\"/instance_groups/\".concat(instanceGroups.id,\"/details\"),/*i18n*/i18n._(\"Details\")),_defineProperty(_setBreadcrumbConfig,\"/instance_groups/\".concat(instanceGroups.id,\"/instances\"),/*i18n*/i18n._(\"Instances\")),_defineProperty(_setBreadcrumbConfig,\"/instance_groups/\".concat(instanceGroups.id,\"/instances/\").concat(instance===null||instance===void 0?void 0:instance.id),\"\".concat(instance===null||instance===void 0?void 0:instance.hostname)),_defineProperty(_setBreadcrumbConfig,\"/instance_groups/\".concat(instanceGroups.id,\"/instances/\").concat(instance===null||instance===void 0?void 0:instance.id,\"/details\"),/*i18n*/i18n._(\"Instance details\")),_defineProperty(_setBreadcrumbConfig,\"/instance_groups/\".concat(instanceGroups.id,\"/jobs\"),/*i18n*/i18n._(\"Jobs\")),_defineProperty(_setBreadcrumbConfig,\"/instance_groups/\".concat(instanceGroups.id,\"/edit\"),/*i18n*/i18n._(\"Edit details\")),_defineProperty(_setBreadcrumbConfig,\"/instance_groups/\".concat(instanceGroups.id),\"\".concat(instanceGroups.name)),_defineProperty(_setBreadcrumbConfig,\"/instance_groups/container_group/\".concat(instanceGroups.id,\"/details\"),/*i18n*/i18n._(\"Details\")),_defineProperty(_setBreadcrumbConfig,\"/instance_groups/container_group/\".concat(instanceGroups.id,\"/jobs\"),/*i18n*/i18n._(\"Jobs\")),_defineProperty(_setBreadcrumbConfig,\"/instance_groups/container_group/\".concat(instanceGroups.id,\"/edit\"),/*i18n*/i18n._(\"Edit details\")),_defineProperty(_setBreadcrumbConfig,\"/instance_groups/container_group/\".concat(instanceGroups.id),\"\".concat(instanceGroups.name)),_setBreadcrumbConfig));},[]);var streamType=pathname.includes('instances')?'instance':'instance_group';return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ScreenHeader,{streamType:streamType,breadcrumbConfig:breadcrumbConfig}),isSettingsRequestLoading?/*#__PURE__*/_jsx(PageSection,{children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(ContentLoading,{})})}):/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/instance_groups/container_group/add\",children:/*#__PURE__*/_jsx(ContainerGroupAdd,{})}),/*#__PURE__*/_jsx(Route,{path:\"/instance_groups/container_group/:id\",children:/*#__PURE__*/_jsx(ContainerGroup,{setBreadcrumb:buildBreadcrumbConfig})}),!isKubernetes&&/*#__PURE__*/_jsx(Route,{path:\"/instance_groups/add\",children:/*#__PURE__*/_jsx(InstanceGroupAdd,{})}),/*#__PURE__*/_jsx(Route,{path:\"/instance_groups/:id\",children:/*#__PURE__*/_jsx(InstanceGroup,{setBreadcrumb:buildBreadcrumbConfig})}),/*#__PURE__*/_jsx(Route,{path:\"/instance_groups\",children:/*#__PURE__*/_jsx(PersistentFilters,{pageKey:\"instanceGroups\",children:/*#__PURE__*/_jsx(InstanceGroupList,{isKubernetes:isKubernetes,isSettingsRequestLoading:isSettingsRequestLoading,settingsRequestError:settingsRequestError})})})]})]});}export default InstanceGroups;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/InstanceGroup/InstanceGroups.js"],"names":["React","useCallback","useEffect","useState","Route","Switch","useLocation","Card","PageSection","useUserProfile","useRequest","SettingsAPI","ScreenHeader","ContentLoading","PersistentFilters","InstanceGroupAdd","InstanceGroupList","InstanceGroup","ContainerGroupAdd","ContainerGroup","InstanceGroups","pathname","isSuperUser","isSystemAuditor","userCanReadSettings","readCategory","IS_K8S","data","isKubernetes","settingsRequest","request","isSettingsRequestLoading","isLoading","settingsRequestError","error","result","breadcrumbConfig","setBreadcrumbConfig","buildBreadcrumbConfig","instanceGroups","instance","id","hostname","name","streamType","includes"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\n\nimport { t } from '@lingui/macro';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport { Card, PageSection } from '@patternfly/react-core';\n\nimport { useUserProfile } from 'contexts/Config';\nimport useRequest from 'hooks/useRequest';\nimport { SettingsAPI } from 'api';\nimport ScreenHeader from 'components/ScreenHeader';\nimport ContentLoading from 'components/ContentLoading';\nimport PersistentFilters from 'components/PersistentFilters';\nimport InstanceGroupAdd from './InstanceGroupAdd';\nimport InstanceGroupList from './InstanceGroupList';\nimport InstanceGroup from './InstanceGroup';\nimport ContainerGroupAdd from './ContainerGroupAdd';\nimport ContainerGroup from './ContainerGroup';\n\nfunction InstanceGroups() {\n  const { pathname } = useLocation();\n  const { isSuperUser, isSystemAuditor } = useUserProfile();\n  const userCanReadSettings = isSuperUser || isSystemAuditor;\n\n  const {\n    request: settingsRequest,\n    isLoading: isSettingsRequestLoading,\n    error: settingsRequestError,\n    result: { isKubernetes },\n  } = useRequest(\n    useCallback(async () => {\n      const {\n        data: { IS_K8S },\n      } = await SettingsAPI.readCategory('all');\n      return {\n        isKubernetes: IS_K8S,\n      };\n    }, []),\n    { isKubernetes: false }\n  );\n  useEffect(() => {\n    userCanReadSettings && settingsRequest();\n  }, [settingsRequest, userCanReadSettings]);\n\n  const [breadcrumbConfig, setBreadcrumbConfig] = useState({\n    '/instance_groups': t`Instance Groups`,\n    '/instance_groups/add': t`Create new instance group`,\n    '/instance_groups/container_group/add': t`Create new container group`,\n  });\n\n  const buildBreadcrumbConfig = useCallback((instanceGroups, instance) => {\n    if (!instanceGroups) {\n      return;\n    }\n    setBreadcrumbConfig({\n      '/instance_groups': t`Instance Groups`,\n      '/instance_groups/add': t`Create new instance group`,\n      '/instance_groups/container_group/add': t`Create new container group`,\n\n      [`/instance_groups/${instanceGroups.id}/details`]: t`Details`,\n      [`/instance_groups/${instanceGroups.id}/instances`]: t`Instances`,\n      [`/instance_groups/${instanceGroups.id}/instances/${instance?.id}`]: `${instance?.hostname}`,\n      [`/instance_groups/${instanceGroups.id}/instances/${instance?.id}/details`]: t`Instance details`,\n      [`/instance_groups/${instanceGroups.id}/jobs`]: t`Jobs`,\n      [`/instance_groups/${instanceGroups.id}/edit`]: t`Edit details`,\n      [`/instance_groups/${instanceGroups.id}`]: `${instanceGroups.name}`,\n\n      [`/instance_groups/container_group/${instanceGroups.id}/details`]: t`Details`,\n      [`/instance_groups/container_group/${instanceGroups.id}/jobs`]: t`Jobs`,\n      [`/instance_groups/container_group/${instanceGroups.id}/edit`]: t`Edit details`,\n      [`/instance_groups/container_group/${instanceGroups.id}`]: `${instanceGroups.name}`,\n    });\n  }, []);\n\n  const streamType = pathname.includes('instances')\n    ? 'instance'\n    : 'instance_group';\n\n  return (\n    <>\n      <ScreenHeader\n        streamType={streamType}\n        breadcrumbConfig={breadcrumbConfig}\n      />\n      {isSettingsRequestLoading ? (\n        <PageSection>\n          <Card>\n            <ContentLoading />\n          </Card>\n        </PageSection>\n      ) : (\n        <Switch>\n          <Route path=\"/instance_groups/container_group/add\">\n            <ContainerGroupAdd />\n          </Route>\n          <Route path=\"/instance_groups/container_group/:id\">\n            <ContainerGroup setBreadcrumb={buildBreadcrumbConfig} />\n          </Route>\n          {!isKubernetes && (\n            <Route path=\"/instance_groups/add\">\n              <InstanceGroupAdd />\n            </Route>\n          )}\n          <Route path=\"/instance_groups/:id\">\n            <InstanceGroup setBreadcrumb={buildBreadcrumbConfig} />\n          </Route>\n          <Route path=\"/instance_groups\">\n            <PersistentFilters pageKey=\"instanceGroups\">\n              <InstanceGroupList\n                isKubernetes={isKubernetes}\n                isSettingsRequestLoading={isSettingsRequestLoading}\n                settingsRequestError={settingsRequestError}\n              />\n            </PersistentFilters>\n          </Route>\n        </Switch>\n      )}\n    </>\n  );\n}\n\nexport default InstanceGroups;\n"]},"metadata":{},"sourceType":"module"}