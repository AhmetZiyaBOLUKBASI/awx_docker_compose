{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import React,{useCallback}from'react';import{useHistory,useParams}from'react-router-dom';import{CardBody}from'components/Card';import{TokensAPI,UsersAPI}from'api';import useRequest from'hooks/useRequest';import UserTokenForm from'../shared/UserTokenForm';import{jsx as _jsx}from\"react/jsx-runtime\";function UserTokenAdd(_ref){var onSuccessfulAdd=_ref.onSuccessfulAdd;var history=useHistory();var _useParams=useParams(),userId=_useParams.id;var _useRequest=useRequest(useCallback(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData){var response,_formData$application;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!formData.application){_context.next=6;break;}_context.next=3;return UsersAPI.createToken(userId,_objectSpread(_objectSpread({},formData),{},{application:((_formData$application=formData.application)===null||_formData$application===void 0?void 0:_formData$application.id)||null}));case 3:response=_context.sent;_context.next=9;break;case 6:_context.next=8;return TokensAPI.create(formData);case 8:response=_context.sent;case 9:onSuccessfulAdd(response.data);history.push(\"/users/\".concat(userId,\"/tokens/\").concat(response.data.id,\"/details\"));case 11:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}(),[history,userId,onSuccessfulAdd])),submitError=_useRequest.error,handleSubmit=_useRequest.request;var handleCancel=function handleCancel(){history.push(\"/users/\".concat(userId,\"/tokens\"));};return/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(UserTokenForm,{handleCancel:handleCancel,handleSubmit:handleSubmit,submitError:submitError})});}export default UserTokenAdd;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/User/UserTokenAdd/UserTokenAdd.js"],"names":["React","useCallback","useHistory","useParams","CardBody","TokensAPI","UsersAPI","useRequest","UserTokenForm","UserTokenAdd","onSuccessfulAdd","history","userId","id","formData","application","createToken","response","create","data","push","submitError","error","handleSubmit","request","handleCancel"],"mappings":"uTAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,KAAmC,OAAnC,CACA,OAASC,UAAT,CAAqBC,SAArB,KAAsC,kBAAtC,CAEA,OAASC,QAAT,KAAyB,iBAAzB,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,KAApC,CACA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CACA,MAAOC,CAAAA,aAAP,KAA0B,yBAA1B,C,2CAEA,QAASC,CAAAA,YAAT,MAA2C,IAAnBC,CAAAA,eAAmB,MAAnBA,eAAmB,CACzC,GAAMC,CAAAA,OAAO,CAAGT,UAAU,EAA1B,CACA,eAAuBC,SAAS,EAAhC,CAAYS,MAAZ,YAAQC,EAAR,CACA,gBAAsDN,UAAU,CAC9DN,WAAW,2FACT,iBAAOa,QAAP,yJAEMA,QAAQ,CAACC,WAFf,+CAGqBT,CAAAA,QAAQ,CAACU,WAAT,CAAqBJ,MAArB,gCACZE,QADY,MAEfC,WAAW,CAAE,wBAAAD,QAAQ,CAACC,WAAT,sEAAsBF,EAAtB,GAA4B,IAF1B,GAHrB,QAGII,QAHJ,kEAQqBZ,CAAAA,SAAS,CAACa,MAAV,CAAiBJ,QAAjB,CARrB,QAQIG,QARJ,sBAWEP,eAAe,CAACO,QAAQ,CAACE,IAAV,CAAf,CAEAR,OAAO,CAACS,IAAR,kBAAuBR,MAAvB,oBAAwCK,QAAQ,CAACE,IAAT,CAAcN,EAAtD,cAbF,uDADS,gEAgBT,CAACF,OAAD,CAAUC,MAAV,CAAkBF,eAAlB,CAhBS,CADmD,CAAhE,CAAeW,WAAf,aAAQC,KAAR,CAAqCC,YAArC,aAA4BC,OAA5B,CAqBA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBd,OAAO,CAACS,IAAR,kBAAuBR,MAAvB,aACD,CAFD,CAIA,mBACE,KAAC,QAAD,wBACE,KAAC,aAAD,EACE,YAAY,CAAEa,YADhB,CAEE,YAAY,CAAEF,YAFhB,CAGE,WAAW,CAAEF,WAHf,EADF,EADF,CASD,CACD,cAAeZ,CAAAA,YAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { CardBody } from 'components/Card';\nimport { TokensAPI, UsersAPI } from 'api';\nimport useRequest from 'hooks/useRequest';\nimport UserTokenForm from '../shared/UserTokenForm';\n\nfunction UserTokenAdd({ onSuccessfulAdd }) {\n  const history = useHistory();\n  const { id: userId } = useParams();\n  const { error: submitError, request: handleSubmit } = useRequest(\n    useCallback(\n      async (formData) => {\n        let response;\n        if (formData.application) {\n          response = await UsersAPI.createToken(userId, {\n            ...formData,\n            application: formData.application?.id || null,\n          });\n        } else {\n          response = await TokensAPI.create(formData);\n        }\n\n        onSuccessfulAdd(response.data);\n\n        history.push(`/users/${userId}/tokens/${response.data.id}/details`);\n      },\n      [history, userId, onSuccessfulAdd]\n    )\n  );\n\n  const handleCancel = () => {\n    history.push(`/users/${userId}/tokens`);\n  };\n\n  return (\n    <CardBody>\n      <UserTokenForm\n        handleCancel={handleCancel}\n        handleSubmit={handleSubmit}\n        submitError={submitError}\n      />\n    </CardBody>\n  );\n}\nexport default UserTokenAdd;\n"]},"metadata":{},"sourceType":"module"}