{"ast":null,"code":"/* eslint-disable no-undef */importScripts('d3-collection.v1.min.js');importScripts('d3-dispatch.v1.min.js');importScripts('d3-quadtree.v1.min.js');importScripts('d3-timer.v1.min.js');importScripts('d3-force.v1.min.js');onmessage=function calculateLayout(_ref){var _ref$data=_ref.data,nodes=_ref$data.nodes,links=_ref$data.links;var simulation=d3.forceSimulation(nodes).force('charge',d3.forceManyBody(15).strength(-50)).force('link',d3.forceLink(links).id(function(d){return d.hostname;})).force('collide',d3.forceCollide(62)).force('forceX',d3.forceX(0)).force('forceY',d3.forceY(0)).stop();for(var i=0,n=Math.ceil(Math.log(simulation.alphaMin())/Math.log(1-simulation.alphaDecay()));i<n;++i){postMessage({type:'tick',progress:i/n});simulation.tick();}postMessage({type:'end',nodes:nodes,links:links});};","map":{"version":3,"sources":["/awx_devel/awx/ui/src/util/simulationWorker.js"],"names":["importScripts","onmessage","calculateLayout","data","nodes","links","simulation","d3","forceSimulation","force","forceManyBody","strength","forceLink","id","d","hostname","forceCollide","forceX","forceY","stop","i","n","Math","ceil","log","alphaMin","alphaDecay","postMessage","type","progress","tick"],"mappings":"AAAA,6BACAA,aAAa,CAAC,yBAAD,CAAb,CACAA,aAAa,CAAC,uBAAD,CAAb,CACAA,aAAa,CAAC,uBAAD,CAAb,CACAA,aAAa,CAAC,oBAAD,CAAb,CACAA,aAAa,CAAC,oBAAD,CAAb,CAEAC,SAAS,CAAG,QAASC,CAAAA,eAAT,MAAqD,oBAA1BC,IAA0B,CAAlBC,KAAkB,WAAlBA,KAAkB,CAAXC,KAAW,WAAXA,KAAW,CAC/D,GAAMC,CAAAA,UAAU,CAAGC,EAAE,CAClBC,eADgB,CACAJ,KADA,EAEhBK,KAFgB,CAEV,QAFU,CAEAF,EAAE,CAACG,aAAH,CAAiB,EAAjB,EAAqBC,QAArB,CAA8B,CAAC,EAA/B,CAFA,EAGhBF,KAHgB,CAIf,MAJe,CAKfF,EAAE,CAACK,SAAH,CAAaP,KAAb,EAAoBQ,EAApB,CAAuB,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,QAAT,EAAvB,CALe,EAOhBN,KAPgB,CAOV,SAPU,CAOCF,EAAE,CAACS,YAAH,CAAgB,EAAhB,CAPD,EAQhBP,KARgB,CAQV,QARU,CAQAF,EAAE,CAACU,MAAH,CAAU,CAAV,CARA,EAShBR,KATgB,CASV,QATU,CASAF,EAAE,CAACW,MAAH,CAAU,CAAV,CATA,EAUhBC,IAVgB,EAAnB,CAYA,IACE,GAAIC,CAAAA,CAAC,CAAG,CAAR,CACEC,CAAC,CAAGC,IAAI,CAACC,IAAL,CACFD,IAAI,CAACE,GAAL,CAASlB,UAAU,CAACmB,QAAX,EAAT,EAAkCH,IAAI,CAACE,GAAL,CAAS,EAAIlB,UAAU,CAACoB,UAAX,EAAb,CADhC,CAFR,CAKEN,CAAC,CAAGC,CALN,CAME,EAAED,CANJ,CAOE,CACAO,WAAW,CAAC,CAAEC,IAAI,CAAE,MAAR,CAAgBC,QAAQ,CAAET,CAAC,CAAGC,CAA9B,CAAD,CAAX,CACAf,UAAU,CAACwB,IAAX,GACD,CAEDH,WAAW,CAAC,CAAEC,IAAI,CAAE,KAAR,CAAexB,KAAK,CAALA,KAAf,CAAsBC,KAAK,CAALA,KAAtB,CAAD,CAAX,CACD,CA1BD","sourcesContent":["/* eslint-disable no-undef */\nimportScripts('d3-collection.v1.min.js');\nimportScripts('d3-dispatch.v1.min.js');\nimportScripts('d3-quadtree.v1.min.js');\nimportScripts('d3-timer.v1.min.js');\nimportScripts('d3-force.v1.min.js');\n\nonmessage = function calculateLayout({ data: { nodes, links } }) {\n  const simulation = d3\n    .forceSimulation(nodes)\n    .force('charge', d3.forceManyBody(15).strength(-50))\n    .force(\n      'link',\n      d3.forceLink(links).id((d) => d.hostname)\n    )\n    .force('collide', d3.forceCollide(62))\n    .force('forceX', d3.forceX(0))\n    .force('forceY', d3.forceY(0))\n    .stop();\n\n  for (\n    let i = 0,\n      n = Math.ceil(\n        Math.log(simulation.alphaMin()) / Math.log(1 - simulation.alphaDecay())\n      );\n    i < n;\n    ++i\n  ) {\n    postMessage({ type: 'tick', progress: i / n });\n    simulation.tick();\n  }\n\n  postMessage({ type: 'end', nodes, links });\n};\n"]},"metadata":{},"sourceType":"module"}