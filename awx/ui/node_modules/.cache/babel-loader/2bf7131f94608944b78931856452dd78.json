{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Popover/popover';\nimport { Title, TitleSizes } from '../Title';\nimport { PopoverHeaderIcon } from './PopoverHeaderIcon';\nimport { PopoverHeaderText } from './PopoverHeaderText';\nexport var PopoverHeader = function PopoverHeader(_a) {\n  var children = _a.children,\n      icon = _a.icon,\n      className = _a.className,\n      _a$titleHeadingLevel = _a.titleHeadingLevel,\n      titleHeadingLevel = _a$titleHeadingLevel === void 0 ? 'h6' : _a$titleHeadingLevel,\n      alertSeverityVariant = _a.alertSeverityVariant,\n      id = _a.id,\n      alertSeverityScreenReaderText = _a.alertSeverityScreenReaderText,\n      props = __rest(_a, [\"children\", \"icon\", \"className\", \"titleHeadingLevel\", \"alertSeverityVariant\", \"id\", \"alertSeverityScreenReaderText\"]);\n\n  var HeadingLevel = titleHeadingLevel;\n  return icon || alertSeverityVariant ? React.createElement(\"header\", Object.assign({\n    className: css('pf-c-popover__header', className),\n    id: id\n  }, props), React.createElement(HeadingLevel, {\n    className: css(styles.popoverTitle, icon && styles.modifiers.icon)\n  }, icon && React.createElement(PopoverHeaderIcon, null, icon), alertSeverityVariant && alertSeverityScreenReaderText && React.createElement(\"span\", {\n    className: \"pf-u-screen-reader\"\n  }, alertSeverityScreenReaderText), React.createElement(PopoverHeaderText, null, children))) : React.createElement(Title, Object.assign({\n    headingLevel: titleHeadingLevel,\n    size: TitleSizes.md,\n    id: id,\n    className: className\n  }, props), children);\n};\nPopoverHeader.displayName = 'PopoverHeader';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Popover/PopoverHeader.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,yDAAnB;AACA,SAAS,KAAT,EAAgB,UAAhB,QAAkC,UAAlC;AACA,SAAS,iBAAT,QAAkC,qBAAlC;AACA,SAAS,iBAAT,QAAkC,qBAAlC;AAmBA,OAAO,IAAM,aAAa,GAAgD,SAA7D,aAA6D,CAAC,EAAD,EASjD;AATkD,MACzE,QADyE,GAO5C,EAP4C,CACzE,QADyE;AAAA,MAEzE,IAFyE,GAO5C,EAP4C,CAEzE,IAFyE;AAAA,MAGzE,SAHyE,GAO5C,EAP4C,CAGzE,SAHyE;AAAA,6BAO5C,EAP4C,CAIzE,iBAJyE;AAAA,MAIzE,iBAJyE,qCAIrD,IAJqD;AAAA,MAKzE,oBALyE,GAO5C,EAP4C,CAKzE,oBALyE;AAAA,MAMzE,EANyE,GAO5C,EAP4C,CAMzE,EANyE;AAAA,MAOzE,6BAPyE,GAO5C,EAP4C,CAOzE,6BAPyE;AAAA,MAQtE,KARsE,GAQjE,MAAA,CAAA,EAAA,EARiE,CAAA,UAAA,EAAA,MAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,sBAAA,EAAA,IAAA,EAAA,+BAAA,CAQjE,CARiE;;AAUzE,MAAM,YAAY,GAAG,iBAArB;AAEA,SAAO,IAAI,IAAI,oBAAR,GACL,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AAAQ,IAAA,SAAS,EAAE,GAAG,CAAC,sBAAD,EAAyB,SAAzB,CAAtB;AAA2D,IAAA,EAAE,EAAE;AAA/D,GAAA,EAAuE,KAAvE,CAAA,EACE,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa;AAAC,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,YAAR,EAAsB,IAAI,IAAI,MAAM,CAAC,SAAP,CAAiB,IAA/C;AAAf,GAAb,EACG,IAAI,IAAI,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAkB,IAAlB,EAAoB,IAApB,CADX,EAEG,oBAAoB,IAAI,6BAAxB,IACC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAC;AAAhB,GAAA,EAAsC,6BAAtC,CAHJ,EAKE,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAkB,IAAlB,EAAoB,QAApB,CALF,CADF,CADK,GAWL,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM,MAAA,CAAA,MAAA,CAAA;AAAC,IAAA,YAAY,EAAE,iBAAf;AAAkC,IAAA,IAAI,EAAE,UAAU,CAAC,EAAnD;AAAuD,IAAA,EAAE,EAAE,EAA3D;AAA+D,IAAA,SAAS,EAAE;AAA1E,GAAA,EAAyF,KAAzF,CAAN,EACG,QADH,CAXF;AAeD,CA3BM;AA4BP,aAAa,CAAC,WAAd,GAA4B,eAA5B","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Popover/popover';\nimport { Title, TitleSizes } from '../Title';\nimport { PopoverHeaderIcon } from './PopoverHeaderIcon';\nimport { PopoverHeaderText } from './PopoverHeaderText';\n\nexport interface PopoverHeaderProps extends Omit<React.HTMLProps<HTMLHeadingElement>, 'size'> {\n  /** Content of the popover header. */\n  children: React.ReactNode;\n  /** Indicates the header contains an icon. */\n  icon?: React.ReactNode;\n  /** Class to be applied to the header. */\n  className?: string;\n  /** Heading level of the header title */\n  titleHeadingLevel?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n  /** Severity variants for an alert popover. This modifies the color of the header to match the severity. */\n  alertSeverityVariant?: 'default' | 'info' | 'warning' | 'success' | 'danger';\n  /** Id of the header */\n  id?: string;\n  /** Text announced by screen reader when alert severity variant is set to indicate severity level */\n  alertSeverityScreenReaderText?: string;\n}\n\nexport const PopoverHeader: React.FunctionComponent<PopoverHeaderProps> = ({\n  children,\n  icon,\n  className,\n  titleHeadingLevel = 'h6',\n  alertSeverityVariant,\n  id,\n  alertSeverityScreenReaderText,\n  ...props\n}: PopoverHeaderProps) => {\n  const HeadingLevel = titleHeadingLevel;\n\n  return icon || alertSeverityVariant ? (\n    <header className={css('pf-c-popover__header', className)} id={id} {...props}>\n      <HeadingLevel className={css(styles.popoverTitle, icon && styles.modifiers.icon)}>\n        {icon && <PopoverHeaderIcon>{icon}</PopoverHeaderIcon>}\n        {alertSeverityVariant && alertSeverityScreenReaderText && (\n          <span className=\"pf-u-screen-reader\">{alertSeverityScreenReaderText}</span>\n        )}\n        <PopoverHeaderText>{children}</PopoverHeaderText>\n      </HeadingLevel>\n    </header>\n  ) : (\n    <Title headingLevel={titleHeadingLevel} size={TitleSizes.md} id={id} className={className} {...props}>\n      {children}\n    </Title>\n  );\n};\nPopoverHeader.displayName = 'PopoverHeader';\n"]},"metadata":{},"sourceType":"module"}