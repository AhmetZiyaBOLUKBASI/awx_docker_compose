{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import React,{useEffect,useState}from'react';import{Alert,AlertActionCloseButton,AlertGroup}from'@patternfly/react-core';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CredentialPluginTestAlert(_ref){var credentialName=_ref.credentialName,successResponse=_ref.successResponse,errorResponse=_ref.errorResponse;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),testMessage=_useState2[0],setTestMessage=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),testVariant=_useState4[0],setTestVariant=_useState4[1];useEffect(function(){if(errorResponse){var _errorResponse$respon,_errorResponse$respon2;if(errorResponse!==null&&errorResponse!==void 0&&(_errorResponse$respon=errorResponse.response)!==null&&_errorResponse$respon!==void 0&&(_errorResponse$respon2=_errorResponse$respon.data)!==null&&_errorResponse$respon2!==void 0&&_errorResponse$respon2.inputs){if(errorResponse.response.data.inputs.startsWith('HTTP')){var _errorResponse$respon3=errorResponse.response.data.inputs.split('\\n'),_errorResponse$respon4=_slicedToArray(_errorResponse$respon3,2),errorCode=_errorResponse$respon4[0],errorStr=_errorResponse$respon4[1];try{var errorJSON=JSON.parse(errorStr);setTestMessage(\"\".concat(errorCode).concat(errorJSON!==null&&errorJSON!==void 0&&errorJSON.errors[0]?\": \".concat(errorJSON.errors[0]):''));}catch(_unused){setTestMessage(errorResponse.response.data.inputs);}}else{setTestMessage(errorResponse.response.data.inputs);}}else{setTestMessage(/*i18n*/i18n._(\"Something went wrong with the request to test this credential and metadata.\"));}setTestVariant('danger');}else if(successResponse){setTestMessage(/*i18n*/i18n._(\"Test passed\"));setTestVariant('success');}},[successResponse,errorResponse]);return/*#__PURE__*/_jsx(AlertGroup,{isToast:true,children:testMessage&&testVariant&&/*#__PURE__*/_jsx(Alert,{actionClose:/*#__PURE__*/_jsx(AlertActionCloseButton,{onClose:function onClose(){setTestMessage(null);setTestVariant(null);}}),title:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"b\",{id:\"credential-plugin-test-name\",children:credentialName}),/*#__PURE__*/_jsx(\"p\",{id:\"credential-plugin-test-message\",children:testMessage})]}),variant:testVariant,ouiaId:\"credential-plugin-test-alert\"})});}CredentialPluginTestAlert.defaultProps={successResponse:null,errorResponse:null};export default CredentialPluginTestAlert;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Credential/shared/CredentialPlugins/CredentialPluginTestAlert.js"],"names":["React","useEffect","useState","Alert","AlertActionCloseButton","AlertGroup","CredentialPluginTestAlert","credentialName","successResponse","errorResponse","testMessage","setTestMessage","testVariant","setTestVariant","response","data","inputs","startsWith","split","errorCode","errorStr","errorJSON","JSON","parse","errors","defaultProps"],"mappings":"sIAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CAIA,OACEC,KADF,CAEEC,sBAFF,CAGEC,UAHF,KAIO,wBAJP,C,6IAMA,QAASC,CAAAA,yBAAT,MAIG,IAHDC,CAAAA,cAGC,MAHDA,cAGC,CAFDC,eAEC,MAFDA,eAEC,CADDC,aACC,MADDA,aACC,CACD,cAAsCP,QAAQ,CAAC,EAAD,CAA9C,wCAAOQ,WAAP,eAAoBC,cAApB,eACA,eAAsCT,QAAQ,CAAC,KAAD,CAA9C,yCAAOU,WAAP,eAAoBC,cAApB,eACAZ,SAAS,CAAC,UAAM,CACd,GAAIQ,aAAJ,CAAmB,kDACjB,GAAIA,aAAJ,SAAIA,aAAJ,kCAAIA,aAAa,CAAEK,QAAnB,kEAAI,sBAAyBC,IAA7B,2CAAI,uBAA+BC,MAAnC,CAA2C,CACzC,GAAIP,aAAa,CAACK,QAAd,CAAuBC,IAAvB,CAA4BC,MAA5B,CAAmCC,UAAnC,CAA8C,MAA9C,CAAJ,CAA2D,CACzD,2BACER,aAAa,CAACK,QAAd,CAAuBC,IAAvB,CAA4BC,MAA5B,CAAmCE,KAAnC,CAAyC,IAAzC,CADF,iEAAOC,SAAP,2BAAkBC,QAAlB,2BAEA,GAAI,CACF,GAAMC,CAAAA,SAAS,CAAGC,IAAI,CAACC,KAAL,CAAWH,QAAX,CAAlB,CACAT,cAAc,WACTQ,SADS,SAEVE,SAAS,OAAT,EAAAA,SAAS,SAAT,EAAAA,SAAS,CAAEG,MAAX,CAAkB,CAAlB,cAA4BH,SAAS,CAACG,MAAV,CAAiB,CAAjB,CAA5B,EAAoD,EAF1C,EAAd,CAKD,CAAC,cAAM,CACNb,cAAc,CAACF,aAAa,CAACK,QAAd,CAAuBC,IAAvB,CAA4BC,MAA7B,CAAd,CACD,CACF,CAbD,IAaO,CACLL,cAAc,CAACF,aAAa,CAACK,QAAd,CAAuBC,IAAvB,CAA4BC,MAA7B,CAAd,CACD,CACF,CAjBD,IAiBO,CACLL,cAAc,SACZ,qFADY,CAAd,CAGD,CACDE,cAAc,CAAC,QAAD,CAAd,CACD,CAxBD,IAwBO,IAAIL,eAAJ,CAAqB,CAC1BG,cAAc,SAAC,qBAAD,CAAd,CACAE,cAAc,CAAC,SAAD,CAAd,CACD,CACF,CA7BQ,CA6BN,CAACL,eAAD,CAAkBC,aAAlB,CA7BM,CAAT,CA+BA,mBACE,KAAC,UAAD,EAAY,OAAO,KAAnB,UACGC,WAAW,EAAIE,WAAf,eACC,KAAC,KAAD,EACE,WAAW,cACT,KAAC,sBAAD,EACE,OAAO,CAAE,kBAAM,CACbD,cAAc,CAAC,IAAD,CAAd,CACAE,cAAc,CAAC,IAAD,CAAd,CACD,CAJH,EAFJ,CASE,KAAK,cACH,wCACE,UAAG,EAAE,CAAC,6BAAN,UAAqCN,cAArC,EADF,cAEE,UAAG,EAAE,CAAC,gCAAN,UAAwCG,WAAxC,EAFF,GAVJ,CAeE,OAAO,CAAEE,WAfX,CAgBE,MAAM,CAAC,8BAhBT,EAFJ,EADF,CAwBD,CAQDN,yBAAyB,CAACmB,YAA1B,CAAyC,CACvCjB,eAAe,CAAE,IADsB,CAEvCC,aAAa,CAAE,IAFwB,CAAzC,CAKA,cAAeH,CAAAA,yBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { t } from '@lingui/macro';\nimport { string, shape } from 'prop-types';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  AlertGroup,\n} from '@patternfly/react-core';\n\nfunction CredentialPluginTestAlert({\n  credentialName,\n  successResponse,\n  errorResponse,\n}) {\n  const [testMessage, setTestMessage] = useState('');\n  const [testVariant, setTestVariant] = useState(false);\n  useEffect(() => {\n    if (errorResponse) {\n      if (errorResponse?.response?.data?.inputs) {\n        if (errorResponse.response.data.inputs.startsWith('HTTP')) {\n          const [errorCode, errorStr] =\n            errorResponse.response.data.inputs.split('\\n');\n          try {\n            const errorJSON = JSON.parse(errorStr);\n            setTestMessage(\n              `${errorCode}${\n                errorJSON?.errors[0] ? `: ${errorJSON.errors[0]}` : ''\n              }`\n            );\n          } catch {\n            setTestMessage(errorResponse.response.data.inputs);\n          }\n        } else {\n          setTestMessage(errorResponse.response.data.inputs);\n        }\n      } else {\n        setTestMessage(\n          t`Something went wrong with the request to test this credential and metadata.`\n        );\n      }\n      setTestVariant('danger');\n    } else if (successResponse) {\n      setTestMessage(t`Test passed`);\n      setTestVariant('success');\n    }\n  }, [successResponse, errorResponse]);\n\n  return (\n    <AlertGroup isToast>\n      {testMessage && testVariant && (\n        <Alert\n          actionClose={\n            <AlertActionCloseButton\n              onClose={() => {\n                setTestMessage(null);\n                setTestVariant(null);\n              }}\n            />\n          }\n          title={\n            <>\n              <b id=\"credential-plugin-test-name\">{credentialName}</b>\n              <p id=\"credential-plugin-test-message\">{testMessage}</p>\n            </>\n          }\n          variant={testVariant}\n          ouiaId=\"credential-plugin-test-alert\"\n        />\n      )}\n    </AlertGroup>\n  );\n}\n\nCredentialPluginTestAlert.propTypes = {\n  credentialName: string.isRequired,\n  successResponse: shape({}),\n  errorResponse: shape({}),\n};\n\nCredentialPluginTestAlert.defaultProps = {\n  successResponse: null,\n  errorResponse: null,\n};\n\nexport default CredentialPluginTestAlert;\n"]},"metadata":{},"sourceType":"module"}