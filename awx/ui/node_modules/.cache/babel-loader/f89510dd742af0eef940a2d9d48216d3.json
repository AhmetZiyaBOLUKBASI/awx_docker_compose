{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import React,{useCallback}from'react';import{useField,useFormikContext}from'formik';import getDocsBaseUrl from'util/getDocsBaseUrl';import{useConfig}from'contexts/Config';import CredentialLookup from'components/Lookup/CredentialLookup';import{OptionsField,SourceVarsField,VerbosityField,EnabledVarField,EnabledValueField,HostFilterField}from'./SharedFields';import helpText from'../Inventory.helptext';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EC2SubForm=function EC2SubForm(){var _useFormikContext=useFormikContext(),setFieldValue=_useFormikContext.setFieldValue,setFieldTouched=_useFormikContext.setFieldTouched;var _useField=useField('credential'),_useField2=_slicedToArray(_useField,2),credentialField=_useField2[0],credentialMeta=_useField2[1];var config=useConfig();var handleCredentialUpdate=useCallback(function(value){setFieldValue('credential',value);setFieldTouched('credential',true,false);},[setFieldValue,setFieldTouched]);var docsBaseUrl=getDocsBaseUrl(config);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CredentialLookup,{helperTextInvalid:credentialMeta.error,isValid:!credentialMeta.touched||!credentialMeta.error,credentialTypeNamespace:\"aws\",label:/*i18n*/i18n._(\"Credential\"),value:credentialField.value,onChange:handleCredentialUpdate}),/*#__PURE__*/_jsx(VerbosityField,{}),/*#__PURE__*/_jsx(HostFilterField,{}),/*#__PURE__*/_jsx(EnabledVarField,{}),/*#__PURE__*/_jsx(EnabledValueField,{}),/*#__PURE__*/_jsx(OptionsField,{}),/*#__PURE__*/_jsx(SourceVarsField,{popoverContent:helpText.sourceVars(docsBaseUrl,'ec2')})]});};export default EC2SubForm;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Inventory/shared/InventorySourceSubForms/EC2SubForm.js"],"names":["React","useCallback","useField","useFormikContext","getDocsBaseUrl","useConfig","CredentialLookup","OptionsField","SourceVarsField","VerbosityField","EnabledVarField","EnabledValueField","HostFilterField","helpText","EC2SubForm","setFieldValue","setFieldTouched","credentialField","credentialMeta","config","handleCredentialUpdate","value","docsBaseUrl","error","touched","sourceVars"],"mappings":"sIAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,KAAmC,OAAnC,CACA,OAASC,QAAT,CAAmBC,gBAAnB,KAA2C,QAA3C,CAEA,MAAOC,CAAAA,cAAP,KAA2B,qBAA3B,CACA,OAASC,SAAT,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oCAA7B,CACA,OACEC,YADF,CAEEC,eAFF,CAGEC,cAHF,CAIEC,eAJF,CAKEC,iBALF,CAMEC,eANF,KAOO,gBAPP,CAQA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,C,6IAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,sBAA2CX,gBAAgB,EAA3D,CAAQY,aAAR,mBAAQA,aAAR,CAAuBC,eAAvB,mBAAuBA,eAAvB,CACA,cAA0Cd,QAAQ,CAAC,YAAD,CAAlD,wCAAOe,eAAP,eAAwBC,cAAxB,eACA,GAAMC,CAAAA,MAAM,CAAGd,SAAS,EAAxB,CACA,GAAMe,CAAAA,sBAAsB,CAAGnB,WAAW,CACxC,SAACoB,KAAD,CAAW,CACTN,aAAa,CAAC,YAAD,CAAeM,KAAf,CAAb,CACAL,eAAe,CAAC,YAAD,CAAe,IAAf,CAAqB,KAArB,CAAf,CACD,CAJuC,CAKxC,CAACD,aAAD,CAAgBC,eAAhB,CALwC,CAA1C,CAOA,GAAMM,CAAAA,WAAW,CAAGlB,cAAc,CAACe,MAAD,CAAlC,CAEA,mBACE,wCACE,KAAC,gBAAD,EACE,iBAAiB,CAAED,cAAc,CAACK,KADpC,CAEE,OAAO,CAAE,CAACL,cAAc,CAACM,OAAhB,EAA2B,CAACN,cAAc,CAACK,KAFtD,CAGE,uBAAuB,CAAC,KAH1B,CAIE,KAAK,SAAE,oBAJT,CAKE,KAAK,CAAEN,eAAe,CAACI,KALzB,CAME,QAAQ,CAAED,sBANZ,EADF,cASE,KAAC,cAAD,IATF,cAUE,KAAC,eAAD,IAVF,cAWE,KAAC,eAAD,IAXF,cAYE,KAAC,iBAAD,IAZF,cAaE,KAAC,YAAD,IAbF,cAcE,KAAC,eAAD,EACE,cAAc,CAAEP,QAAQ,CAACY,UAAT,CAAoBH,WAApB,CAAiC,KAAjC,CADlB,EAdF,GADF,CAoBD,CAjCD,CAmCA,cAAeR,CAAAA,UAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport { useField, useFormikContext } from 'formik';\nimport { t } from '@lingui/macro';\nimport getDocsBaseUrl from 'util/getDocsBaseUrl';\nimport { useConfig } from 'contexts/Config';\nimport CredentialLookup from 'components/Lookup/CredentialLookup';\nimport {\n  OptionsField,\n  SourceVarsField,\n  VerbosityField,\n  EnabledVarField,\n  EnabledValueField,\n  HostFilterField,\n} from './SharedFields';\nimport helpText from '../Inventory.helptext';\n\nconst EC2SubForm = () => {\n  const { setFieldValue, setFieldTouched } = useFormikContext();\n  const [credentialField, credentialMeta] = useField('credential');\n  const config = useConfig();\n  const handleCredentialUpdate = useCallback(\n    (value) => {\n      setFieldValue('credential', value);\n      setFieldTouched('credential', true, false);\n    },\n    [setFieldValue, setFieldTouched]\n  );\n  const docsBaseUrl = getDocsBaseUrl(config);\n\n  return (\n    <>\n      <CredentialLookup\n        helperTextInvalid={credentialMeta.error}\n        isValid={!credentialMeta.touched || !credentialMeta.error}\n        credentialTypeNamespace=\"aws\"\n        label={t`Credential`}\n        value={credentialField.value}\n        onChange={handleCredentialUpdate}\n      />\n      <VerbosityField />\n      <HostFilterField />\n      <EnabledVarField />\n      <EnabledValueField />\n      <OptionsField />\n      <SourceVarsField\n        popoverContent={helpText.sourceVars(docsBaseUrl, 'ec2')}\n      />\n    </>\n  );\n};\n\nexport default EC2SubForm;\n"]},"metadata":{},"sourceType":"module"}