{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/EmptyState/empty-state';\nexport var EmptyStateIcon = function EmptyStateIcon(_a) {\n  var _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      IconComponent = _a.icon,\n      AnyComponent = _a.component,\n      _a$variant = _a.variant,\n      variant = _a$variant === void 0 ? 'icon' : _a$variant,\n      props = __rest(_a, [\"className\", \"icon\", \"component\", \"variant\"]);\n\n  var classNames = css(styles.emptyStateIcon, className);\n  return variant === 'icon' ? React.createElement(IconComponent, Object.assign({\n    className: classNames\n  }, props, {\n    \"aria-hidden\": \"true\"\n  })) : React.createElement(\"div\", {\n    className: classNames\n  }, React.createElement(AnyComponent, null));\n};\nEmptyStateIcon.displayName = 'EmptyStateIcon';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/EmptyState/EmptyStateIcon.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,gEAAnB;AAoBA,OAAO,IAAM,cAAc,GAAiD,SAA/D,cAA+D,CAAC,EAAD,EAMlD;AANmD,qBAI3D,EAJ2D,CAC3E,SAD2E;AAAA,MAC3E,SAD2E,6BAC/D,EAD+D;AAAA,MAErE,aAFqE,GAI3D,EAJ2D,CAE3E,IAF2E;AAAA,MAGhE,YAHgE,GAI3D,EAJ2D,CAG3E,SAH2E;AAAA,mBAI3D,EAJ2D,CAI3E,OAJ2E;AAAA,MAI3E,OAJ2E,2BAIjE,MAJiE;AAAA,MAKxE,KALwE,GAKnE,MAAA,CAAA,EAAA,EALmE,CAAA,WAAA,EAAA,MAAA,EAAA,WAAA,EAAA,SAAA,CAKnE,CALmE;;AAO3E,MAAM,UAAU,GAAG,GAAG,CAAC,MAAM,CAAC,cAAR,EAAwB,SAAxB,CAAtB;AACA,SAAO,OAAO,KAAK,MAAZ,GACL,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc,MAAA,CAAA,MAAA,CAAA;AAAC,IAAA,SAAS,EAAE;AAAZ,GAAA,EAA4B,KAA5B,EAAiC;AAAA,mBAAc;AAAd,GAAjC,CAAd,CADK,GAGL,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE;AAAhB,GAAA,EACE,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,CADF,CAHF;AAOD,CAfM;AAgBP,cAAc,CAAC,WAAf,GAA6B,gBAA7B","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/EmptyState/empty-state';\n\nexport interface IconProps extends Omit<React.HTMLProps<SVGElement>, 'size'> {\n  /** Changes the color of the icon.  */\n  color?: string;\n}\n\nexport interface EmptyStateIconProps extends IconProps {\n  /** Additional classes added to the EmptyState */\n  className?: string;\n  /** Icon component to be rendered inside the EmptyState on icon variant\n   * Usually a CheckCircleIcon, ExclamationCircleIcon, LockIcon, PlusCircleIcon, RocketIcon\n   * SearchIcon, or WrenchIcon */\n  icon?: React.ComponentType<any>;\n  /** Component to be rendered inside the EmptyState on container variant */\n  component?: React.ComponentType<any>;\n  /** Adds empty state icon variant styles  */\n  variant?: 'icon' | 'container';\n}\n\nexport const EmptyStateIcon: React.FunctionComponent<EmptyStateIconProps> = ({\n  className = '',\n  icon: IconComponent,\n  component: AnyComponent,\n  variant = 'icon',\n  ...props\n}: EmptyStateIconProps) => {\n  const classNames = css(styles.emptyStateIcon, className);\n  return variant === 'icon' ? (\n    <IconComponent className={classNames} {...props} aria-hidden=\"true\" />\n  ) : (\n    <div className={classNames}>\n      <AnyComponent />\n    </div>\n  );\n};\nEmptyStateIcon.displayName = 'EmptyStateIcon';\n"]},"metadata":{},"sourceType":"module"}