{"ast":null,"code":"import * as React from 'react';\nexport var ToggleTemplate = function ToggleTemplate(_ref) {\n  var _ref$firstIndex = _ref.firstIndex,\n      firstIndex = _ref$firstIndex === void 0 ? 0 : _ref$firstIndex,\n      _ref$lastIndex = _ref.lastIndex,\n      lastIndex = _ref$lastIndex === void 0 ? 0 : _ref$lastIndex,\n      _ref$itemCount = _ref.itemCount,\n      itemCount = _ref$itemCount === void 0 ? 0 : _ref$itemCount,\n      _ref$itemsTitle = _ref.itemsTitle,\n      itemsTitle = _ref$itemsTitle === void 0 ? 'items' : _ref$itemsTitle,\n      _ref$ofWord = _ref.ofWord,\n      ofWord = _ref$ofWord === void 0 ? 'of' : _ref$ofWord;\n  return React.createElement(React.Fragment, null, React.createElement(\"b\", null, firstIndex, \" - \", lastIndex), ' ', ofWord, \" \", React.createElement(\"b\", null, itemCount), \" \", itemsTitle);\n};\nToggleTemplate.displayName = 'ToggleTemplate';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Pagination/ToggleTemplate.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAeA,OAAO,IAAM,cAAc,GAAiD,SAA/D,cAA+D;AAAA,6BAC1E,UAD0E;AAAA,MAC1E,UAD0E,gCAC7D,CAD6D;AAAA,4BAE1E,SAF0E;AAAA,MAE1E,SAF0E,+BAE9D,CAF8D;AAAA,4BAG1E,SAH0E;AAAA,MAG1E,SAH0E,+BAG9D,CAH8D;AAAA,6BAI1E,UAJ0E;AAAA,MAI1E,UAJ0E,gCAI7D,OAJ6D;AAAA,yBAK1E,MAL0E;AAAA,MAK1E,MAL0E,4BAKjE,IALiE;AAAA,SAO1E,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,QAAP,EAAe,IAAf,EACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,IAAA,EACG,UADH,E,KAAA,EACkB,SADlB,CADF,EAGO,GAHP,EAIG,MAJH,E,GAAA,EAIW,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,IAAA,EAAI,SAAJ,CAJX,E,GAAA,EAI+B,UAJ/B,CAP0E;AAAA,CAArE;AAcP,cAAc,CAAC,WAAf,GAA6B,gBAA7B","sourcesContent":["import * as React from 'react';\n\nexport interface ToggleTemplateProps {\n  /** The first index of the items being paginated */\n  firstIndex?: number;\n  /** The last index of the items being paginated */\n  lastIndex?: number;\n  /** The total number of items being paginated */\n  itemCount?: number;\n  /** The type or title of the items being paginated */\n  itemsTitle?: string;\n  /** The word that joins the index and itemCount/itemsTitle */\n  ofWord?: React.ReactNode;\n}\n\nexport const ToggleTemplate: React.FunctionComponent<ToggleTemplateProps> = ({\n  firstIndex = 0,\n  lastIndex = 0,\n  itemCount = 0,\n  itemsTitle = 'items',\n  ofWord = 'of'\n}: ToggleTemplateProps) => (\n  <React.Fragment>\n    <b>\n      {firstIndex} - {lastIndex}\n    </b>{' '}\n    {ofWord} <b>{itemCount}</b> {itemsTitle}\n  </React.Fragment>\n);\nToggleTemplate.displayName = 'ToggleTemplate';\n"]},"metadata":{},"sourceType":"module"}