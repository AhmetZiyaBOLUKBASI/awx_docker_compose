{"ast":null,"code":"import _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/SimpleList/simple-list';\nimport { SimpleListContext } from './SimpleList';\nexport var SimpleListItem = /*#__PURE__*/function (_React$Component) {\n  _inherits(SimpleListItem, _React$Component);\n\n  var _super = _createSuper(SimpleListItem);\n\n  function SimpleListItem() {\n    var _this;\n\n    _classCallCheck(this, SimpleListItem);\n\n    _this = _super.apply(this, arguments);\n    _this.ref = React.createRef();\n    return _this;\n  }\n\n  _createClass(SimpleListItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _a = this.props,\n          children = _a.children,\n          isCurrent = _a.isCurrent,\n          isActive = _a.isActive,\n          className = _a.className,\n          Component = _a.component,\n          componentClassName = _a.componentClassName,\n          componentProps = _a.componentProps,\n          _onClick = _a.onClick,\n          type = _a.type,\n          href = _a.href,\n          itemId = _a.itemId,\n          props = __rest(_a, [\"children\", \"isCurrent\", \"isActive\", \"className\", \"component\", \"componentClassName\", \"componentProps\", \"onClick\", \"type\", \"href\", \"itemId\"]);\n\n      return React.createElement(SimpleListContext.Consumer, null, function (_ref) {\n        var currentRef = _ref.currentRef,\n            updateCurrentRef = _ref.updateCurrentRef,\n            isControlled = _ref.isControlled;\n        var isButton = Component === 'button';\n        var isCurrentItem = _this2.ref && currentRef && isControlled ? currentRef.current === _this2.ref.current : isActive || isCurrent;\n        var additionalComponentProps = isButton ? {\n          type: type\n        } : {\n          tabIndex: 0,\n          href: href\n        };\n        return React.createElement(\"li\", Object.assign({\n          className: css(className)\n        }, props), React.createElement(Component, Object.assign({\n          className: css(styles.simpleListItemLink, isCurrentItem && styles.modifiers.current, componentClassName),\n          onClick: function onClick(evt) {\n            _onClick(evt);\n\n            updateCurrentRef(_this2.ref, _this2.props);\n          },\n          ref: _this2.ref\n        }, componentProps, additionalComponentProps), children));\n      });\n    }\n  }]);\n\n  return SimpleListItem;\n}(React.Component);\nSimpleListItem.displayName = 'SimpleListItem';\nSimpleListItem.defaultProps = {\n  children: null,\n  className: '',\n  isActive: false,\n  isCurrent: false,\n  component: 'button',\n  componentClassName: '',\n  type: 'button',\n  href: '',\n  onClick: function onClick() {}\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/SimpleList/SimpleListItem.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/SimpleList/simple-list';\nimport { SimpleListContext } from './SimpleList';\n\nexport interface SimpleListItemProps {\n  /** id for the item. */\n  itemId?: number | string;\n  /** Content rendered inside the SimpleList item */\n  children?: React.ReactNode;\n  /** Additional classes added to the SimpleList <li> */\n  className?: string;\n  /** Component type of the SimpleList item */\n  component?: 'button' | 'a';\n  /** Additional classes added to the SimpleList <a> or <button> */\n  componentClassName?: string;\n  /** Additional props added to the SimpleList <a> or <button> */\n  componentProps?: any;\n  /** Indicates if the link is current/highlighted */\n  isActive?: boolean;\n  /** @deprecated please use isActive instead */\n  isCurrent?: boolean;\n  /** OnClick callback for the SimpleList item */\n  onClick?: (event: React.MouseEvent | React.ChangeEvent) => void;\n  /** Type of button SimpleList item */\n  type?: 'button' | 'submit' | 'reset';\n  /** Default hyperlink location */\n  href?: string;\n}\n\nexport class SimpleListItem extends React.Component<SimpleListItemProps> {\n  static displayName = 'SimpleListItem';\n  ref = React.createRef<any>();\n  static defaultProps: SimpleListItemProps = {\n    children: null,\n    className: '',\n    isActive: false,\n    isCurrent: false,\n    component: 'button',\n    componentClassName: '',\n    type: 'button',\n    href: '',\n    onClick: () => {}\n  };\n\n  render() {\n    const {\n      children,\n      isCurrent,\n      isActive,\n      className,\n      component: Component,\n      componentClassName,\n      componentProps,\n      onClick,\n      type,\n      href,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      itemId,\n      ...props\n    } = this.props;\n    return (\n      <SimpleListContext.Consumer>\n        {({ currentRef, updateCurrentRef, isControlled }) => {\n          const isButton = Component === 'button';\n          const isCurrentItem =\n            this.ref && currentRef && isControlled ? currentRef.current === this.ref.current : isActive || isCurrent;\n\n          const additionalComponentProps = isButton\n            ? {\n                type\n              }\n            : {\n                tabIndex: 0,\n                href\n              };\n\n          return (\n            <li className={css(className)} {...props}>\n              <Component\n                className={css(\n                  styles.simpleListItemLink,\n                  isCurrentItem && styles.modifiers.current,\n                  componentClassName\n                )}\n                onClick={(evt: React.MouseEvent) => {\n                  onClick(evt);\n                  updateCurrentRef(this.ref, this.props);\n                }}\n                ref={this.ref}\n                {...componentProps}\n                {...additionalComponentProps}\n              >\n                {children}\n              </Component>\n            </li>\n          );\n        }}\n      </SimpleListContext.Consumer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}