{"ast":null,"code":"import _classCallCheck from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import Base from'../Base';var Users=/*#__PURE__*/function(_Base){_inherits(Users,_Base);var _super=_createSuper(Users);function Users(http){var _this;_classCallCheck(this,Users);_this=_super.call(this,http);_this.baseUrl='api/v2/users/';return _this;}_createClass(Users,[{key:\"associateRole\",value:function associateRole(userId,roleId){return this.http.post(\"\".concat(this.baseUrl).concat(userId,\"/roles/\"),{id:roleId});}},{key:\"createToken\",value:function createToken(userId,data){return this.http.post(\"\".concat(this.baseUrl).concat(userId,\"/authorized_tokens/\"),data);}},{key:\"disassociateRole\",value:function disassociateRole(userId,roleId){return this.http.post(\"\".concat(this.baseUrl).concat(userId,\"/roles/\"),{id:roleId,disassociate:true});}},{key:\"readOrganizations\",value:function readOrganizations(userId,params){return this.http.get(\"\".concat(this.baseUrl).concat(userId,\"/organizations/\"),{params:params});}},{key:\"readOrganizationOptions\",value:function readOrganizationOptions(userId,params){return this.http.options(\"\".concat(this.baseUrl).concat(userId,\"/organizations/\"),{params:params});}},{key:\"readRoles\",value:function readRoles(userId,params){return this.http.get(\"\".concat(this.baseUrl).concat(userId,\"/roles/\"),{params:params});}},{key:\"readRoleOptions\",value:function readRoleOptions(userId){return this.http.options(\"\".concat(this.baseUrl).concat(userId,\"/roles/\"));}},{key:\"readTeams\",value:function readTeams(userId,params){return this.http.get(\"\".concat(this.baseUrl).concat(userId,\"/teams/\"),{params:params});}},{key:\"readTeamsOptions\",value:function readTeamsOptions(userId){return this.http.options(\"\".concat(this.baseUrl).concat(userId,\"/teams/\"));}},{key:\"readTokens\",value:function readTokens(userId,params){return this.http.get(\"\".concat(this.baseUrl).concat(userId,\"/tokens/\"),{params:params});}},{key:\"readAdminOfOrganizations\",value:function readAdminOfOrganizations(userId,params){return this.http.get(\"\".concat(this.baseUrl).concat(userId,\"/admin_of_organizations/\"),{params:params});}},{key:\"readTokenOptions\",value:function readTokenOptions(userId){return this.http.options(\"\".concat(this.baseUrl).concat(userId,\"/tokens/\"));}}]);return Users;}(Base);export default Users;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/api/models/Users.js"],"names":["Base","Users","http","baseUrl","userId","roleId","post","id","data","disassociate","params","get","options"],"mappings":"4YAAA,MAAOA,CAAAA,IAAP,KAAiB,SAAjB,C,GAEMC,CAAAA,K,oFACJ,eAAYC,IAAZ,CAAkB,uCAChB,uBAAMA,IAAN,EACA,MAAKC,OAAL,CAAe,eAAf,CAFgB,aAGjB,C,+CAED,uBAAcC,MAAd,CAAsBC,MAAtB,CAA8B,CAC5B,MAAO,MAAKH,IAAL,CAAUI,IAAV,WAAkB,KAAKH,OAAvB,SAAiCC,MAAjC,YAAkD,CACvDG,EAAE,CAAEF,MADmD,CAAlD,CAAP,CAGD,C,2BAED,qBAAYD,MAAZ,CAAoBI,IAApB,CAA0B,CACxB,MAAO,MAAKN,IAAL,CAAUI,IAAV,WAAkB,KAAKH,OAAvB,SAAiCC,MAAjC,wBAA8DI,IAA9D,CAAP,CACD,C,gCAED,0BAAiBJ,MAAjB,CAAyBC,MAAzB,CAAiC,CAC/B,MAAO,MAAKH,IAAL,CAAUI,IAAV,WAAkB,KAAKH,OAAvB,SAAiCC,MAAjC,YAAkD,CACvDG,EAAE,CAAEF,MADmD,CAEvDI,YAAY,CAAE,IAFyC,CAAlD,CAAP,CAID,C,iCAED,2BAAkBL,MAAlB,CAA0BM,MAA1B,CAAkC,CAChC,MAAO,MAAKR,IAAL,CAAUS,GAAV,WAAiB,KAAKR,OAAtB,SAAgCC,MAAhC,oBAAyD,CAC9DM,MAAM,CAANA,MAD8D,CAAzD,CAAP,CAGD,C,uCAED,iCAAwBN,MAAxB,CAAgCM,MAAhC,CAAwC,CACtC,MAAO,MAAKR,IAAL,CAAUU,OAAV,WAAqB,KAAKT,OAA1B,SAAoCC,MAApC,oBAA6D,CAClEM,MAAM,CAANA,MADkE,CAA7D,CAAP,CAGD,C,yBAED,mBAAUN,MAAV,CAAkBM,MAAlB,CAA0B,CACxB,MAAO,MAAKR,IAAL,CAAUS,GAAV,WAAiB,KAAKR,OAAtB,SAAgCC,MAAhC,YAAiD,CACtDM,MAAM,CAANA,MADsD,CAAjD,CAAP,CAGD,C,+BAED,yBAAgBN,MAAhB,CAAwB,CACtB,MAAO,MAAKF,IAAL,CAAUU,OAAV,WAAqB,KAAKT,OAA1B,SAAoCC,MAApC,YAAP,CACD,C,yBAED,mBAAUA,MAAV,CAAkBM,MAAlB,CAA0B,CACxB,MAAO,MAAKR,IAAL,CAAUS,GAAV,WAAiB,KAAKR,OAAtB,SAAgCC,MAAhC,YAAiD,CACtDM,MAAM,CAANA,MADsD,CAAjD,CAAP,CAGD,C,gCAED,0BAAiBN,MAAjB,CAAyB,CACvB,MAAO,MAAKF,IAAL,CAAUU,OAAV,WAAqB,KAAKT,OAA1B,SAAoCC,MAApC,YAAP,CACD,C,0BAED,oBAAWA,MAAX,CAAmBM,MAAnB,CAA2B,CACzB,MAAO,MAAKR,IAAL,CAAUS,GAAV,WAAiB,KAAKR,OAAtB,SAAgCC,MAAhC,aAAkD,CACvDM,MAAM,CAANA,MADuD,CAAlD,CAAP,CAGD,C,wCAED,kCAAyBN,MAAzB,CAAiCM,MAAjC,CAAyC,CACvC,MAAO,MAAKR,IAAL,CAAUS,GAAV,WAAiB,KAAKR,OAAtB,SAAgCC,MAAhC,6BAAkE,CACvEM,MAAM,CAANA,MADuE,CAAlE,CAAP,CAGD,C,gCAED,0BAAiBN,MAAjB,CAAyB,CACvB,MAAO,MAAKF,IAAL,CAAUU,OAAV,WAAqB,KAAKT,OAA1B,SAAoCC,MAApC,aAAP,CACD,C,mBArEiBJ,I,EAwEpB,cAAeC,CAAAA,KAAf","sourcesContent":["import Base from '../Base';\n\nclass Users extends Base {\n  constructor(http) {\n    super(http);\n    this.baseUrl = 'api/v2/users/';\n  }\n\n  associateRole(userId, roleId) {\n    return this.http.post(`${this.baseUrl}${userId}/roles/`, {\n      id: roleId,\n    });\n  }\n\n  createToken(userId, data) {\n    return this.http.post(`${this.baseUrl}${userId}/authorized_tokens/`, data);\n  }\n\n  disassociateRole(userId, roleId) {\n    return this.http.post(`${this.baseUrl}${userId}/roles/`, {\n      id: roleId,\n      disassociate: true,\n    });\n  }\n\n  readOrganizations(userId, params) {\n    return this.http.get(`${this.baseUrl}${userId}/organizations/`, {\n      params,\n    });\n  }\n\n  readOrganizationOptions(userId, params) {\n    return this.http.options(`${this.baseUrl}${userId}/organizations/`, {\n      params,\n    });\n  }\n\n  readRoles(userId, params) {\n    return this.http.get(`${this.baseUrl}${userId}/roles/`, {\n      params,\n    });\n  }\n\n  readRoleOptions(userId) {\n    return this.http.options(`${this.baseUrl}${userId}/roles/`);\n  }\n\n  readTeams(userId, params) {\n    return this.http.get(`${this.baseUrl}${userId}/teams/`, {\n      params,\n    });\n  }\n\n  readTeamsOptions(userId) {\n    return this.http.options(`${this.baseUrl}${userId}/teams/`);\n  }\n\n  readTokens(userId, params) {\n    return this.http.get(`${this.baseUrl}${userId}/tokens/`, {\n      params,\n    });\n  }\n\n  readAdminOfOrganizations(userId, params) {\n    return this.http.get(`${this.baseUrl}${userId}/admin_of_organizations/`, {\n      params,\n    });\n  }\n\n  readTokenOptions(userId) {\n    return this.http.options(`${this.baseUrl}${userId}/tokens/`);\n  }\n}\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}