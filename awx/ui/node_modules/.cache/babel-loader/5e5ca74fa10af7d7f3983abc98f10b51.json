{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Alert/alert';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport InfoCircleIcon from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\nimport BellIcon from '@patternfly/react-icons/dist/esm/icons/bell-icon';\nexport var variantIcons = {\n  success: CheckCircleIcon,\n  danger: ExclamationCircleIcon,\n  warning: ExclamationTriangleIcon,\n  info: InfoCircleIcon,\n  default: BellIcon\n};\nexport var AlertIcon = function AlertIcon(_a) {\n  var variant = _a.variant,\n      customIcon = _a.customIcon,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      props = __rest(_a, [\"variant\", \"customIcon\", \"className\"]);\n\n  var Icon = variantIcons[variant];\n  return React.createElement(\"div\", Object.assign({}, props, {\n    className: css(styles.alertIcon, className)\n  }), customIcon || React.createElement(Icon, null));\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Alert/AlertIcon.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,qDAAnB;AACA,OAAO,eAAP,MAA4B,0DAA5B;AACA,OAAO,qBAAP,MAAkC,gEAAlC;AACA,OAAO,uBAAP,MAAoC,kEAApC;AACA,OAAO,cAAP,MAA2B,yDAA3B;AACA,OAAO,QAAP,MAAqB,kDAArB;AAEA,OAAO,IAAM,YAAY,GAAG;AAC1B,EAAA,OAAO,EAAE,eADiB;AAE1B,EAAA,MAAM,EAAE,qBAFkB;AAG1B,EAAA,OAAO,EAAE,uBAHiB;AAI1B,EAAA,IAAI,EAAE,cAJoB;AAK1B,EAAA,OAAO,EAAE;AALiB,CAArB;AAiBP,OAAO,IAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,EAAD,EAAsE;AAArE,MAAE,OAAF,GAAqC,EAArC,CAAE,OAAF;AAAA,MAAW,UAAX,GAAqC,EAArC,CAAW,UAAX;AAAA,qBAAqC,EAArC,CAAuB,SAAvB;AAAA,MAAuB,SAAvB,6BAAmC,EAAnC;AAAA,MAA0C,KAA1C,GAA+C,MAAA,CAAA,EAAA,EAA/C,CAAA,SAAA,EAAA,YAAA,EAAA,WAAA,CAA+C,CAA/C;;AACxB,MAAM,IAAI,GAAG,YAAY,CAAC,OAAD,CAAzB;AACA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAS,KAAT,EAAc;AAAE,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,SAAR,EAAmB,SAAnB;AAAhB,GAAd,CAAA,EACG,UAAU,IAAI,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK,IAAL,CADjB,CADF;AAKD,CAPM","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Alert/alert';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport InfoCircleIcon from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\nimport BellIcon from '@patternfly/react-icons/dist/esm/icons/bell-icon';\n\nexport const variantIcons = {\n  success: CheckCircleIcon,\n  danger: ExclamationCircleIcon,\n  warning: ExclamationTriangleIcon,\n  info: InfoCircleIcon,\n  default: BellIcon\n};\n\nexport interface AlertIconProps extends React.HTMLProps<HTMLDivElement> {\n  /** variant */\n  variant: 'success' | 'danger' | 'warning' | 'info' | 'default';\n  /** className */\n  className?: string;\n  /** A custom icon. If not set the icon is set according to the variant */\n  customIcon?: React.ReactNode;\n}\n\nexport const AlertIcon = ({ variant, customIcon, className = '', ...props }: AlertIconProps) => {\n  const Icon = variantIcons[variant];\n  return (\n    <div {...props} className={css(styles.alertIcon, className)}>\n      {customIcon || <Icon />}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}