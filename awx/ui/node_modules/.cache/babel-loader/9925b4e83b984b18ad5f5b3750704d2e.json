{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ProgressStepper/progress-stepper';\nimport { css } from '@patternfly/react-styles';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ResourcesFullIcon from '@patternfly/react-icons/dist/esm/icons/resources-full-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nvar variantIcons = {\n  default: undefined,\n  pending: undefined,\n  success: React.createElement(CheckCircleIcon, null),\n  info: React.createElement(ResourcesFullIcon, null),\n  warning: React.createElement(ExclamationTriangleIcon, null),\n  danger: React.createElement(ExclamationCircleIcon, null)\n};\nvar variantStyle = {\n  default: '',\n  info: styles.modifiers.info,\n  success: styles.modifiers.success,\n  pending: styles.modifiers.pending,\n  warning: styles.modifiers.warning,\n  danger: styles.modifiers.danger\n};\nexport var ProgressStep = function ProgressStep(_a) {\n  var children = _a.children,\n      className = _a.className,\n      variant = _a.variant,\n      isCurrent = _a.isCurrent,\n      description = _a.description,\n      icon = _a.icon,\n      titleId = _a.titleId,\n      ariaLabel = _a['aria-label'],\n      popoverRender = _a.popoverRender,\n      props = __rest(_a, [\"children\", \"className\", \"variant\", \"isCurrent\", \"description\", \"icon\", \"titleId\", 'aria-label', \"popoverRender\"]);\n\n  var _icon = icon !== undefined ? icon : variantIcons[variant];\n\n  var Component = popoverRender !== undefined ? 'button' : 'div';\n  var stepRef = React.useRef();\n\n  if (props.id === undefined || titleId === undefined) {\n    /* eslint-disable no-console */\n    console.warn('ProgressStep: The titleId and id properties are required to make this component accessible, and one or both of these properties are missing.');\n  }\n\n  return React.createElement(\"li\", Object.assign({\n    className: css(styles.progressStepperStep, variantStyle[variant], isCurrent && styles.modifiers.current, className),\n    \"aria-label\": ariaLabel\n  }, isCurrent && {\n    'aria-current': 'step'\n  }, props), React.createElement(\"div\", {\n    className: css(styles.progressStepperStepConnector)\n  }, React.createElement(\"span\", {\n    className: css(styles.progressStepperStepIcon)\n  }, _icon && _icon)), React.createElement(\"div\", {\n    className: css(styles.progressStepperStepMain)\n  }, React.createElement(Component, Object.assign({\n    className: css(styles.progressStepperStepTitle, popoverRender && styles.modifiers.helpText),\n    id: titleId,\n    ref: stepRef\n  }, popoverRender && {\n    type: 'button'\n  }, props.id !== undefined && titleId !== undefined && {\n    'aria-labelledby': \"\".concat(props.id, \" \").concat(titleId)\n  }), children, popoverRender && popoverRender(stepRef)), description && React.createElement(\"div\", {\n    className: css(styles.progressStepperStepDescription)\n  }, description)));\n};\nProgressStep.displayName = 'ProgressStep';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/ProgressStepper/ProgressStep.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ProgressStepper/progress-stepper';\nimport { css } from '@patternfly/react-styles';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ResourcesFullIcon from '@patternfly/react-icons/dist/esm/icons/resources-full-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\n\nexport interface ProgressStepProps\n  extends React.DetailedHTMLProps<React.LiHTMLAttributes<HTMLLIElement>, HTMLLIElement> {\n  /** Content rendered inside the progress step. */\n  children?: React.ReactNode;\n  /** Additional classes applied to the progress step container. */\n  className?: string;\n  /** Variant of the progress step. Each variant has a default icon. */\n  variant?: 'default' | 'success' | 'info' | 'pending' | 'warning' | 'danger';\n  /** Flag indicating the progress step is the current step. */\n  isCurrent?: boolean;\n  /** Custom icon of a progress step. Will override default icons provided by the variant. */\n  icon?: React.ReactNode;\n  /** Description text of a progress step. */\n  description?: string;\n  /** ID of the title of the progress step. */\n  titleId?: string;\n  /** Accessible label for the progress step. Should communicate all information being communicated by the progress\n   * step's icon, including the variant and the completed status. */\n  'aria-label'?: string;\n  /** Forwards the step ref to rendered function.  Use this prop to add a popover to the step.*/\n  popoverRender?: (stepRef: React.RefObject<any>) => React.ReactNode;\n}\n\nconst variantIcons = {\n  default: undefined as any,\n  pending: undefined as any,\n  success: <CheckCircleIcon />,\n  info: <ResourcesFullIcon />,\n  warning: <ExclamationTriangleIcon />,\n  danger: <ExclamationCircleIcon />\n};\n\nconst variantStyle = {\n  default: '',\n  info: styles.modifiers.info,\n  success: styles.modifiers.success,\n  pending: styles.modifiers.pending,\n  warning: styles.modifiers.warning,\n  danger: styles.modifiers.danger\n};\n\nexport const ProgressStep: React.FunctionComponent<ProgressStepProps> = ({\n  children,\n  className,\n  variant,\n  isCurrent,\n  description,\n  icon,\n  titleId,\n  'aria-label': ariaLabel,\n  popoverRender,\n  ...props\n}: ProgressStepProps) => {\n  const _icon = icon !== undefined ? icon : variantIcons[variant];\n  const Component = popoverRender !== undefined ? 'button' : 'div';\n  const stepRef = React.useRef();\n\n  if (props.id === undefined || titleId === undefined) {\n    /* eslint-disable no-console */\n    console.warn(\n      'ProgressStep: The titleId and id properties are required to make this component accessible, and one or both of these properties are missing.'\n    );\n  }\n\n  return (\n    <li\n      className={css(\n        styles.progressStepperStep,\n        variantStyle[variant],\n        isCurrent && styles.modifiers.current,\n        className\n      )}\n      aria-label={ariaLabel}\n      {...(isCurrent && { 'aria-current': 'step' })}\n      {...props}\n    >\n      <div className={css(styles.progressStepperStepConnector)}>\n        <span className={css(styles.progressStepperStepIcon)}>{_icon && _icon}</span>\n      </div>\n      <div className={css(styles.progressStepperStepMain)}>\n        <Component\n          className={css(styles.progressStepperStepTitle, popoverRender && styles.modifiers.helpText)}\n          id={titleId}\n          ref={stepRef}\n          {...(popoverRender && { type: 'button' })}\n          {...(props.id !== undefined && titleId !== undefined && { 'aria-labelledby': `${props.id} ${titleId}` })}\n        >\n          {children}\n          {popoverRender && popoverRender(stepRef)}\n        </Component>\n        {description && <div className={css(styles.progressStepperStepDescription)}>{description}</div>}\n      </div>\n    </li>\n  );\n};\n\nProgressStep.displayName = 'ProgressStep';\n"]},"metadata":{},"sourceType":"module"}