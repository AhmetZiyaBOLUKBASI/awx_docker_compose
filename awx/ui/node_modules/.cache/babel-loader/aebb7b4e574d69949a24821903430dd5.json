{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport EllipsisVIcon from '@patternfly/react-icons/dist/esm/icons/ellipsis-v-icon';\nimport { Toggle } from './Toggle';\nexport var KebabToggle = function KebabToggle(_a) {\n  var _a$id = _a.id,\n      id = _a$id === void 0 ? '' : _a$id,\n      _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      _a$isOpen = _a.isOpen,\n      isOpen = _a$isOpen === void 0 ? false : _a$isOpen,\n      _a$ariaLabel = _a['aria-label'],\n      ariaLabel = _a$ariaLabel === void 0 ? 'Actions' : _a$ariaLabel,\n      _a$parentRef = _a.parentRef,\n      parentRef = _a$parentRef === void 0 ? null : _a$parentRef,\n      _a$getMenuRef = _a.getMenuRef,\n      getMenuRef = _a$getMenuRef === void 0 ? null : _a$getMenuRef,\n      _a$isActive = _a.isActive,\n      isActive = _a$isActive === void 0 ? false : _a$isActive,\n      _a$isPlain = _a.isPlain,\n      isPlain = _a$isPlain === void 0 ? false : _a$isPlain,\n      _a$isDisabled = _a.isDisabled,\n      isDisabled = _a$isDisabled === void 0 ? false : _a$isDisabled,\n      _a$bubbleEvent = _a.bubbleEvent,\n      bubbleEvent = _a$bubbleEvent === void 0 ? false : _a$bubbleEvent,\n      _a$onToggle = _a.onToggle,\n      onToggle = _a$onToggle === void 0 ? function () {\n    return undefined;\n  } : _a$onToggle,\n      ref = _a.ref,\n      props = __rest(_a, [\"id\", \"children\", \"className\", \"isOpen\", 'aria-label', \"parentRef\", \"getMenuRef\", \"isActive\", \"isPlain\", \"isDisabled\", \"bubbleEvent\", \"onToggle\", \"ref\"]);\n\n  return React.createElement(Toggle, Object.assign({\n    id: id,\n    className: className,\n    isOpen: isOpen,\n    \"aria-label\": ariaLabel,\n    parentRef: parentRef,\n    getMenuRef: getMenuRef,\n    isActive: isActive,\n    isPlain: isPlain,\n    isDisabled: isDisabled,\n    onToggle: onToggle,\n    bubbleEvent: bubbleEvent\n  }, props), React.createElement(EllipsisVIcon, null));\n};\nKebabToggle.displayName = 'KebabToggle';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Dropdown/KebabToggle.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,OAAO,aAAP,MAA0B,wDAA1B;AACA,SAAS,MAAT,QAAuB,UAAvB;AA+BA,OAAO,IAAM,WAAW,GAA8C,SAAzD,WAAyD,CAAC,EAAD,EAiB/C;AAjBgD,cAelE,EAfkE,CACrE,EADqE;AAAA,MACrE,EADqE,sBAChE,EADgE;AAAA,oBAelE,EAfkE,CAGrE,QAHqE;AAAA,MAGrE,QAHqE,4BAG1D,IAH0D;AAAA,qBAelE,EAfkE,CAIrE,SAJqE;AAAA,MAIrE,SAJqE,6BAIzD,EAJyD;AAAA,kBAelE,EAfkE,CAKrE,MALqE;AAAA,MAKrE,MALqE,0BAK5D,KAL4D;AAAA,qBAelE,EAfkE,CAMrE,YANqE;AAAA,MAMvD,SANuD,6BAM3C,SAN2C;AAAA,qBAelE,EAfkE,CAOrE,SAPqE;AAAA,MAOrE,SAPqE,6BAOzD,IAPyD;AAAA,sBAelE,EAfkE,CAQrE,UARqE;AAAA,MAQrE,UARqE,8BAQxD,IARwD;AAAA,oBAelE,EAfkE,CASrE,QATqE;AAAA,MASrE,QATqE,4BAS1D,KAT0D;AAAA,mBAelE,EAfkE,CAUrE,OAVqE;AAAA,MAUrE,OAVqE,2BAU3D,KAV2D;AAAA,sBAelE,EAfkE,CAWrE,UAXqE;AAAA,MAWrE,UAXqE,8BAWxD,KAXwD;AAAA,uBAelE,EAfkE,CAYrE,WAZqE;AAAA,MAYrE,WAZqE,+BAYvD,KAZuD;AAAA,oBAelE,EAfkE,CAarE,QAbqE;AAAA,MAarE,QAbqE,4BAa1D;AAAA,WAAM,SAAN;AAAA,GAb0D;AAAA,MAerE,GAfqE,GAelE,EAfkE,CAerE,GAfqE;AAAA,MAgBlE,KAhBkE,GAgB7D,MAAA,CAAA,EAAA,EAhB6D,CAAA,IAAA,EAAA,UAAA,EAAA,WAAA,EAAA,QAAA,EAAA,YAAA,EAAA,WAAA,EAAA,YAAA,EAAA,UAAA,EAAA,SAAA,EAAA,YAAA,EAAA,aAAA,EAAA,UAAA,EAAA,KAAA,CAgB7D,CAhB6D;;AAiB/C,SACtB,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO,MAAA,CAAA,MAAA,CAAA;AACL,IAAA,EAAE,EAAE,EADC;AAEL,IAAA,SAAS,EAAE,SAFN;AAGL,IAAA,MAAM,EAAE,MAHH;AAGS,kBACF,SAJP;AAKL,IAAA,SAAS,EAAE,SALN;AAML,IAAA,UAAU,EAAE,UANP;AAOL,IAAA,QAAQ,EAAE,QAPL;AAQL,IAAA,OAAO,EAAE,OARJ;AASL,IAAA,UAAU,EAAE,UATP;AAUL,IAAA,QAAQ,EAAE,QAVL;AAWL,IAAA,WAAW,EAAE;AAXR,GAAA,EAYD,KAZC,CAAP,EAcE,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc,IAAd,CAdF,CADsB;AAiBvB,CAlCM;AAmCP,WAAW,CAAC,WAAZ,GAA0B,aAA1B","sourcesContent":["import * as React from 'react';\nimport { DropdownToggleProps } from './DropdownToggle';\nimport EllipsisVIcon from '@patternfly/react-icons/dist/esm/icons/ellipsis-v-icon';\nimport { Toggle } from './Toggle';\n\nexport interface KebabToggleProps extends DropdownToggleProps {\n  /** HTML ID of dropdown toggle */\n  id?: string;\n  /** Anything which can be rendered as dropdown toggle */\n  children?: React.ReactNode;\n  /** Classess applied to root element of dropdown toggle */\n  className?: string;\n  /** Flag to indicate if menu is opened */\n  isOpen?: boolean;\n  /** Label Toggle button */\n  'aria-label'?: string;\n  /** Callback called when toggle is clicked */\n  onToggle?: (value: boolean, event: any) => void;\n  /** Element which wraps toggle */\n  parentRef?: any;\n  /** The menu element */\n  getMenuRef?: () => HTMLElement;\n  /** Forces active state */\n  isActive?: boolean;\n  /** Disables the dropdown toggle */\n  isDisabled?: boolean;\n  /** Display the toggle with no border or background */\n  isPlain?: boolean;\n  /** Type to put on the button */\n  type?: 'button' | 'submit' | 'reset';\n  /** Allows selecting toggle to select parent */\n  bubbleEvent?: boolean;\n}\n\nexport const KebabToggle: React.FunctionComponent<KebabToggleProps> = ({\n  id = '',\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  children = null,\n  className = '',\n  isOpen = false,\n  'aria-label': ariaLabel = 'Actions',\n  parentRef = null,\n  getMenuRef = null,\n  isActive = false,\n  isPlain = false,\n  isDisabled = false,\n  bubbleEvent = false,\n  onToggle = () => undefined as void,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ref, // Types of Ref are different for React.FunctionComponent vs React.Component\n  ...props\n}: KebabToggleProps) => (\n  <Toggle\n    id={id}\n    className={className}\n    isOpen={isOpen}\n    aria-label={ariaLabel}\n    parentRef={parentRef}\n    getMenuRef={getMenuRef}\n    isActive={isActive}\n    isPlain={isPlain}\n    isDisabled={isDisabled}\n    onToggle={onToggle}\n    bubbleEvent={bubbleEvent}\n    {...props}\n  >\n    <EllipsisVIcon />\n  </Toggle>\n);\nKebabToggle.displayName = 'KebabToggle';\n"]},"metadata":{},"sourceType":"module"}