{"ast":null,"code":"import*as d3 from'd3';import{getWidth,getHeight}from'./helpers';/**\n * useZoom provides a collection of zoom behaviors/functions for D3 graphs\n * Params: string value of parent and child classnames\n * The following hierarchy should be followed:\n * <div id=\"chart\">\n *  <svg><-- parent -->\n *    <g><-- child -->\n *  </svg>\n * </div>\n * Returns: {\n *  zoom: d3 zoom behavior/object/function to apply on selected elements\n *  zoomIn: function that zooms in\n *  zoomOut: function that zooms out\n *  zoomFit: function that scales child element to fit within parent element\n *  resetZoom: function resets the zoom level to its initial value\n * }\n */export default function useZoom(parentSelector,childSelector){if(typeof parentSelector!=='string'&&typeof childSelector!=='string'){return false;}var zoom=d3.zoom().on('zoom',function(_ref){var transform=_ref.transform;d3.select(childSelector).attr('transform',transform);});var zoomIn=function zoomIn(){d3.select(parentSelector).transition().call(zoom.scaleBy,2);};var zoomOut=function zoomOut(){d3.select(parentSelector).transition().call(zoom.scaleBy,0.5);};var resetZoom=function resetZoom(){var parent=d3.select(parentSelector).node();var width=parent.clientWidth;var height=parent.clientHeight;d3.select(parentSelector).transition().duration(750).call(zoom.transform,d3.zoomIdentity,d3.zoomTransform(d3.select(parentSelector).node()).invert([width/2,height/2]));};var zoomFit=function zoomFit(){var bounds=d3.select(childSelector).node().getBBox();var fullWidth=getWidth(parentSelector);var fullHeight=getHeight(parentSelector);var width=bounds.width,height=bounds.height;var midX=bounds.x+width/2;var midY=bounds.y+height/2;if(width===0||height===0)return;// nothing to fit\nvar scale=0.8/Math.max(width/fullWidth,height/fullHeight);var translate=[fullWidth/2-scale*midX,fullHeight/2-scale*midY];var x=translate[0],y=translate[1];d3.select(parentSelector).transition().duration(750).call(zoom.transform,d3.zoomIdentity.translate(x,y).scale(scale));};return{zoom:zoom,zoomIn:zoomIn,zoomOut:zoomOut,zoomFit:zoomFit,resetZoom:resetZoom};}","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/TopologyView/utils/useZoom.js"],"names":["d3","getWidth","getHeight","useZoom","parentSelector","childSelector","zoom","on","transform","select","attr","zoomIn","transition","call","scaleBy","zoomOut","resetZoom","parent","node","width","clientWidth","height","clientHeight","duration","zoomIdentity","zoomTransform","invert","zoomFit","bounds","getBBox","fullWidth","fullHeight","midX","x","midY","y","scale","Math","max","translate"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,EAAZ,KAAoB,IAApB,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,WAApC,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,cAAe,SAASC,CAAAA,OAAT,CAAiBC,cAAjB,CAAiCC,aAAjC,CAAgD,CAC7D,GAAI,MAAOD,CAAAA,cAAP,GAA0B,QAA1B,EAAsC,MAAOC,CAAAA,aAAP,GAAyB,QAAnE,CAA6E,CAC3E,MAAO,MAAP,CACD,CACD,GAAMC,CAAAA,IAAI,CAAGN,EAAE,CAACM,IAAH,GAAUC,EAAV,CAAa,MAAb,CAAqB,cAAmB,IAAhBC,CAAAA,SAAgB,MAAhBA,SAAgB,CACnDR,EAAE,CAACS,MAAH,CAAUJ,aAAV,EAAyBK,IAAzB,CAA8B,WAA9B,CAA2CF,SAA3C,EACD,CAFY,CAAb,CAGA,GAAMG,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnBX,EAAE,CAACS,MAAH,CAAUL,cAAV,EAA0BQ,UAA1B,GAAuCC,IAAvC,CAA4CP,IAAI,CAACQ,OAAjD,CAA0D,CAA1D,EACD,CAFD,CAGA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpBf,EAAE,CAACS,MAAH,CAAUL,cAAV,EAA0BQ,UAA1B,GAAuCC,IAAvC,CAA4CP,IAAI,CAACQ,OAAjD,CAA0D,GAA1D,EACD,CAFD,CAGA,GAAME,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAMC,CAAAA,MAAM,CAAGjB,EAAE,CAACS,MAAH,CAAUL,cAAV,EAA0Bc,IAA1B,EAAf,CACA,GAAMC,CAAAA,KAAK,CAAGF,MAAM,CAACG,WAArB,CACA,GAAMC,CAAAA,MAAM,CAAGJ,MAAM,CAACK,YAAtB,CACAtB,EAAE,CAACS,MAAH,CAAUL,cAAV,EACGQ,UADH,GAEGW,QAFH,CAEY,GAFZ,EAGGV,IAHH,CAIIP,IAAI,CAACE,SAJT,CAKIR,EAAE,CAACwB,YALP,CAMIxB,EAAE,CACCyB,aADH,CACiBzB,EAAE,CAACS,MAAH,CAAUL,cAAV,EAA0Bc,IAA1B,EADjB,EAEGQ,MAFH,CAEU,CAACP,KAAK,CAAG,CAAT,CAAYE,MAAM,CAAG,CAArB,CAFV,CANJ,EAUD,CAdD,CAeA,GAAMM,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB,GAAMC,CAAAA,MAAM,CAAG5B,EAAE,CAACS,MAAH,CAAUJ,aAAV,EAAyBa,IAAzB,GAAgCW,OAAhC,EAAf,CACA,GAAMC,CAAAA,SAAS,CAAG7B,QAAQ,CAACG,cAAD,CAA1B,CACA,GAAM2B,CAAAA,UAAU,CAAG7B,SAAS,CAACE,cAAD,CAA5B,CACA,GAAQe,CAAAA,KAAR,CAA0BS,MAA1B,CAAQT,KAAR,CAAeE,MAAf,CAA0BO,MAA1B,CAAeP,MAAf,CACA,GAAMW,CAAAA,IAAI,CAAGJ,MAAM,CAACK,CAAP,CAAWd,KAAK,CAAG,CAAhC,CACA,GAAMe,CAAAA,IAAI,CAAGN,MAAM,CAACO,CAAP,CAAWd,MAAM,CAAG,CAAjC,CACA,GAAIF,KAAK,GAAK,CAAV,EAAeE,MAAM,GAAK,CAA9B,CAAiC,OAAQ;AACzC,GAAMe,CAAAA,KAAK,CAAG,IAAMC,IAAI,CAACC,GAAL,CAASnB,KAAK,CAAGW,SAAjB,CAA4BT,MAAM,CAAGU,UAArC,CAApB,CACA,GAAMQ,CAAAA,SAAS,CAAG,CAChBT,SAAS,CAAG,CAAZ,CAAgBM,KAAK,CAAGJ,IADR,CAEhBD,UAAU,CAAG,CAAb,CAAiBK,KAAK,CAAGF,IAFT,CAAlB,CAIA,GAAOD,CAAAA,CAAP,CAAeM,SAAf,IAAUJ,CAAV,CAAeI,SAAf,IACAvC,EAAE,CAACS,MAAH,CAAUL,cAAV,EACGQ,UADH,GAEGW,QAFH,CAEY,GAFZ,EAGGV,IAHH,CAGQP,IAAI,CAACE,SAHb,CAGwBR,EAAE,CAACwB,YAAH,CAAgBe,SAAhB,CAA0BN,CAA1B,CAA6BE,CAA7B,EAAgCC,KAAhC,CAAsCA,KAAtC,CAHxB,EAID,CAlBD,CAoBA,MAAO,CACL9B,IAAI,CAAJA,IADK,CAELK,MAAM,CAANA,MAFK,CAGLI,OAAO,CAAPA,OAHK,CAILY,OAAO,CAAPA,OAJK,CAKLX,SAAS,CAATA,SALK,CAAP,CAOD","sourcesContent":["import * as d3 from 'd3';\nimport { getWidth, getHeight } from './helpers';\n\n/**\n * useZoom provides a collection of zoom behaviors/functions for D3 graphs\n * Params: string value of parent and child classnames\n * The following hierarchy should be followed:\n * <div id=\"chart\">\n *  <svg><-- parent -->\n *    <g><-- child -->\n *  </svg>\n * </div>\n * Returns: {\n *  zoom: d3 zoom behavior/object/function to apply on selected elements\n *  zoomIn: function that zooms in\n *  zoomOut: function that zooms out\n *  zoomFit: function that scales child element to fit within parent element\n *  resetZoom: function resets the zoom level to its initial value\n * }\n */\n\nexport default function useZoom(parentSelector, childSelector) {\n  if (typeof parentSelector !== 'string' && typeof childSelector !== 'string') {\n    return false;\n  }\n  const zoom = d3.zoom().on('zoom', ({ transform }) => {\n    d3.select(childSelector).attr('transform', transform);\n  });\n  const zoomIn = () => {\n    d3.select(parentSelector).transition().call(zoom.scaleBy, 2);\n  };\n  const zoomOut = () => {\n    d3.select(parentSelector).transition().call(zoom.scaleBy, 0.5);\n  };\n  const resetZoom = () => {\n    const parent = d3.select(parentSelector).node();\n    const width = parent.clientWidth;\n    const height = parent.clientHeight;\n    d3.select(parentSelector)\n      .transition()\n      .duration(750)\n      .call(\n        zoom.transform,\n        d3.zoomIdentity,\n        d3\n          .zoomTransform(d3.select(parentSelector).node())\n          .invert([width / 2, height / 2])\n      );\n  };\n  const zoomFit = () => {\n    const bounds = d3.select(childSelector).node().getBBox();\n    const fullWidth = getWidth(parentSelector);\n    const fullHeight = getHeight(parentSelector);\n    const { width, height } = bounds;\n    const midX = bounds.x + width / 2;\n    const midY = bounds.y + height / 2;\n    if (width === 0 || height === 0) return; // nothing to fit\n    const scale = 0.8 / Math.max(width / fullWidth, height / fullHeight);\n    const translate = [\n      fullWidth / 2 - scale * midX,\n      fullHeight / 2 - scale * midY,\n    ];\n    const [x, y] = translate;\n    d3.select(parentSelector)\n      .transition()\n      .duration(750)\n      .call(zoom.transform, d3.zoomIdentity.translate(x, y).scale(scale));\n  };\n\n  return {\n    zoom,\n    zoomIn,\n    zoomOut,\n    zoomFit,\n    resetZoom,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}