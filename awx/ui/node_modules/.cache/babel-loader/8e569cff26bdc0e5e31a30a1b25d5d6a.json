{"ast":null,"code":"import React,{useEffect}from'react';import{JobEventLine,JobEventLineToggle,JobEventLineNumber,JobEventLineText,JobEventEllipsis}from'./shared';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function JobEvent(_ref){var style=_ref.style,lineTextHtml=_ref.lineTextHtml,isClickable=_ref.isClickable,onJobEventClick=_ref.onJobEventClick,event=_ref.event,measure=_ref.measure,isCollapsed=_ref.isCollapsed,onToggleCollapsed=_ref.onToggleCollapsed,hasChildren=_ref.hasChildren,jobStatus=_ref.jobStatus;var numOutputLines=(lineTextHtml===null||lineTextHtml===void 0?void 0:lineTextHtml.length)||0;useEffect(function(){var timeout=setTimeout(measure,0);return function(){clearTimeout(timeout);};},[numOutputLines,isCollapsed,measure,jobStatus]);var toggleLineIndex=-1;if(hasChildren){lineTextHtml.forEach(function(_ref2,index){var html=_ref2.html;if(html){toggleLineIndex=index;}});}return!event.stdout?null:/*#__PURE__*/_jsx(\"div\",{style:style,type:event.type,children:lineTextHtml.map(function(_ref3,index){var lineNumber=_ref3.lineNumber,html=_ref3.html;if(lineNumber<0){return null;}var canToggle=index===toggleLineIndex;return/*#__PURE__*/_jsxs(JobEventLine,{onClick:isClickable?onJobEventClick:undefined,isFirst:lineNumber===0,isClickable:isClickable,children:[/*#__PURE__*/_jsx(JobEventLineToggle,{canToggle:canToggle,isCollapsed:isCollapsed,onToggle:onToggleCollapsed}),/*#__PURE__*/_jsxs(JobEventLineNumber,{children:[lineNumber,/*#__PURE__*/_jsx(JobEventEllipsis,{isCollapsed:isCollapsed&&canToggle})]}),/*#__PURE__*/_jsx(JobEventLineText,{type:\"job_event_line_text\",dangerouslySetInnerHTML:{__html:html}})]},\"\".concat(event.counter,\"-\").concat(lineNumber));})});}export default JobEvent;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Job/JobOutput/JobEvent.js"],"names":["React","useEffect","JobEventLine","JobEventLineToggle","JobEventLineNumber","JobEventLineText","JobEventEllipsis","JobEvent","style","lineTextHtml","isClickable","onJobEventClick","event","measure","isCollapsed","onToggleCollapsed","hasChildren","jobStatus","numOutputLines","length","timeout","setTimeout","clearTimeout","toggleLineIndex","forEach","index","html","stdout","type","map","lineNumber","canToggle","undefined","__html","counter"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OACEC,YADF,CAEEC,kBAFF,CAGEC,kBAHF,CAIEC,gBAJF,CAKEC,gBALF,KAMO,UANP,C,wFAQA,QAASC,CAAAA,QAAT,MAWG,IAVDC,CAAAA,KAUC,MAVDA,KAUC,CATDC,YASC,MATDA,YASC,CARDC,WAQC,MARDA,WAQC,CAPDC,eAOC,MAPDA,eAOC,CANDC,KAMC,MANDA,KAMC,CALDC,OAKC,MALDA,OAKC,CAJDC,WAIC,MAJDA,WAIC,CAHDC,iBAGC,MAHDA,iBAGC,CAFDC,WAEC,MAFDA,WAEC,CADDC,SACC,MADDA,SACC,CACD,GAAMC,CAAAA,cAAc,CAAG,CAAAT,YAAY,OAAZ,EAAAA,YAAY,SAAZ,QAAAA,YAAY,CAAEU,MAAd,GAAwB,CAA/C,CACAlB,SAAS,CAAC,UAAM,CACd,GAAMmB,CAAAA,OAAO,CAAGC,UAAU,CAACR,OAAD,CAAU,CAAV,CAA1B,CACA,MAAO,WAAM,CACXS,YAAY,CAACF,OAAD,CAAZ,CACD,CAFD,CAGD,CALQ,CAKN,CAACF,cAAD,CAAiBJ,WAAjB,CAA8BD,OAA9B,CAAuCI,SAAvC,CALM,CAAT,CAOA,GAAIM,CAAAA,eAAe,CAAG,CAAC,CAAvB,CACA,GAAIP,WAAJ,CAAiB,CACfP,YAAY,CAACe,OAAb,CAAqB,eAAWC,KAAX,CAAqB,IAAlBC,CAAAA,IAAkB,OAAlBA,IAAkB,CACxC,GAAIA,IAAJ,CAAU,CACRH,eAAe,CAAGE,KAAlB,CACD,CACF,CAJD,EAKD,CACD,MAAO,CAACb,KAAK,CAACe,MAAP,CAAgB,IAAhB,cACL,YAAK,KAAK,CAAEnB,KAAZ,CAAmB,IAAI,CAAEI,KAAK,CAACgB,IAA/B,UACGnB,YAAY,CAACoB,GAAb,CAAiB,eAAuBJ,KAAvB,CAAiC,IAA9BK,CAAAA,UAA8B,OAA9BA,UAA8B,CAAlBJ,IAAkB,OAAlBA,IAAkB,CACjD,GAAII,UAAU,CAAG,CAAjB,CAAoB,CAClB,MAAO,KAAP,CACD,CACD,GAAMC,CAAAA,SAAS,CAAGN,KAAK,GAAKF,eAA5B,CACA,mBACE,MAAC,YAAD,EACE,OAAO,CAAEb,WAAW,CAAGC,eAAH,CAAqBqB,SAD3C,CAGE,OAAO,CAAEF,UAAU,GAAK,CAH1B,CAIE,WAAW,CAAEpB,WAJf,wBAME,KAAC,kBAAD,EACE,SAAS,CAAEqB,SADb,CAEE,WAAW,CAAEjB,WAFf,CAGE,QAAQ,CAAEC,iBAHZ,EANF,cAWE,MAAC,kBAAD,YACGe,UADH,cAEE,KAAC,gBAAD,EAAkB,WAAW,CAAEhB,WAAW,EAAIiB,SAA9C,EAFF,GAXF,cAeE,KAAC,gBAAD,EACE,IAAI,CAAC,qBADP,CAEE,uBAAuB,CAAE,CACvBE,MAAM,CAAEP,IADe,CAF3B,EAfF,aAEUd,KAAK,CAACsB,OAFhB,aAE2BJ,UAF3B,EADF,CAwBD,CA7BA,CADH,EADF,CAkCD,CAED,cAAevB,CAAAA,QAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  JobEventLine,\n  JobEventLineToggle,\n  JobEventLineNumber,\n  JobEventLineText,\n  JobEventEllipsis,\n} from './shared';\n\nfunction JobEvent({\n  style,\n  lineTextHtml,\n  isClickable,\n  onJobEventClick,\n  event,\n  measure,\n  isCollapsed,\n  onToggleCollapsed,\n  hasChildren,\n  jobStatus,\n}) {\n  const numOutputLines = lineTextHtml?.length || 0;\n  useEffect(() => {\n    const timeout = setTimeout(measure, 0);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [numOutputLines, isCollapsed, measure, jobStatus]);\n\n  let toggleLineIndex = -1;\n  if (hasChildren) {\n    lineTextHtml.forEach(({ html }, index) => {\n      if (html) {\n        toggleLineIndex = index;\n      }\n    });\n  }\n  return !event.stdout ? null : (\n    <div style={style} type={event.type}>\n      {lineTextHtml.map(({ lineNumber, html }, index) => {\n        if (lineNumber < 0) {\n          return null;\n        }\n        const canToggle = index === toggleLineIndex;\n        return (\n          <JobEventLine\n            onClick={isClickable ? onJobEventClick : undefined}\n            key={`${event.counter}-${lineNumber}`}\n            isFirst={lineNumber === 0}\n            isClickable={isClickable}\n          >\n            <JobEventLineToggle\n              canToggle={canToggle}\n              isCollapsed={isCollapsed}\n              onToggle={onToggleCollapsed}\n            />\n            <JobEventLineNumber>\n              {lineNumber}\n              <JobEventEllipsis isCollapsed={isCollapsed && canToggle} />\n            </JobEventLineNumber>\n            <JobEventLineText\n              type=\"job_event_line_text\"\n              dangerouslySetInnerHTML={{\n                __html: html,\n              }}\n            />\n          </JobEventLine>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default JobEvent;\n"]},"metadata":{},"sourceType":"module"}