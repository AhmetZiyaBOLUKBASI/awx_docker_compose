{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import React from'react';import{useField}from'formik';import StepName from'../LaunchPrompt/steps/StepName';import AdHocCredentialStep from'./AdHocCredentialStep';import{jsx as _jsx}from\"react/jsx-runtime\";var STEP_ID='credentials';export default function useAdHocExecutionEnvironmentStep(visited,credentialTypeId){var _useField=useField('credentials'),_useField2=_slicedToArray(_useField,3),field=_useField2[0],meta=_useField2[1],helpers=_useField2[2];var hasError=Object.keys(visited).includes('credentials')&&!field.value.length&&meta.touched;return{step:{id:STEP_ID,key:3,name:/*#__PURE__*/_jsx(StepName,{hasErrors:hasError,id:\"credential-step\",children:/*i18n*/i18n._(\"Credential\")}),component:/*#__PURE__*/_jsx(AdHocCredentialStep,{credentialTypeId:credentialTypeId}),enableNext:true,nextButtonText:/*i18n*/i18n._(\"Next\")},hasError:hasError,validate:function validate(){if(!meta.value.length){helpers.setError('A credential must be selected');}},setTouched:function setTouched(setFieldTouched){setFieldTouched('credentials',true,false);}};}","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/AdHocCommands/useAdHocCredentialStep.js"],"names":["React","useField","StepName","AdHocCredentialStep","STEP_ID","useAdHocExecutionEnvironmentStep","visited","credentialTypeId","field","meta","helpers","hasError","Object","keys","includes","value","length","touched","step","id","key","name","component","enableNext","nextButtonText","validate","setError","setTouched","setFieldTouched"],"mappings":"sIAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,QAAzB,CAEA,MAAOC,CAAAA,QAAP,KAAqB,gCAArB,CACA,MAAOC,CAAAA,mBAAP,KAAgC,uBAAhC,C,2CAEA,GAAMC,CAAAA,OAAO,CAAG,aAAhB,CACA,cAAe,SAASC,CAAAA,gCAAT,CACbC,OADa,CAEbC,gBAFa,CAGb,CACA,cAA+BN,QAAQ,CAAC,aAAD,CAAvC,wCAAOO,KAAP,eAAcC,IAAd,eAAoBC,OAApB,eACA,GAAMC,CAAAA,QAAQ,CACZC,MAAM,CAACC,IAAP,CAAYP,OAAZ,EAAqBQ,QAArB,CAA8B,aAA9B,GACA,CAACN,KAAK,CAACO,KAAN,CAAYC,MADb,EAEAP,IAAI,CAACQ,OAHP,CAKA,MAAO,CACLC,IAAI,CAAE,CACJC,EAAE,CAAEf,OADA,CAEJgB,GAAG,CAAE,CAFD,CAGJC,IAAI,cACF,KAAC,QAAD,EAAU,SAAS,CAAEV,QAArB,CAA+B,EAAE,CAAC,iBAAlC,kBACG,oBADH,EAJE,CAQJW,SAAS,cAAE,KAAC,mBAAD,EAAqB,gBAAgB,CAAEf,gBAAvC,EARP,CASJgB,UAAU,CAAE,IATR,CAUJC,cAAc,SAAE,cAVZ,CADD,CAaLb,QAAQ,CAARA,QAbK,CAcLc,QAAQ,CAAE,mBAAM,CACd,GAAI,CAAChB,IAAI,CAACM,KAAL,CAAWC,MAAhB,CAAwB,CACtBN,OAAO,CAACgB,QAAR,CAAiB,+BAAjB,EACD,CACF,CAlBI,CAmBLC,UAAU,CAAE,oBAACC,eAAD,CAAqB,CAC/BA,eAAe,CAAC,aAAD,CAAgB,IAAhB,CAAsB,KAAtB,CAAf,CACD,CArBI,CAAP,CAuBD","sourcesContent":["import React from 'react';\nimport { useField } from 'formik';\nimport { t } from '@lingui/macro';\nimport StepName from '../LaunchPrompt/steps/StepName';\nimport AdHocCredentialStep from './AdHocCredentialStep';\n\nconst STEP_ID = 'credentials';\nexport default function useAdHocExecutionEnvironmentStep(\n  visited,\n  credentialTypeId\n) {\n  const [field, meta, helpers] = useField('credentials');\n  const hasError =\n    Object.keys(visited).includes('credentials') &&\n    !field.value.length &&\n    meta.touched;\n\n  return {\n    step: {\n      id: STEP_ID,\n      key: 3,\n      name: (\n        <StepName hasErrors={hasError} id=\"credential-step\">\n          {t`Credential`}\n        </StepName>\n      ),\n      component: <AdHocCredentialStep credentialTypeId={credentialTypeId} />,\n      enableNext: true,\n      nextButtonText: t`Next`,\n    },\n    hasError,\n    validate: () => {\n      if (!meta.value.length) {\n        helpers.setError('A credential must be selected');\n      }\n    },\n    setTouched: (setFieldTouched) => {\n      setFieldTouched('credentials', true, false);\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}