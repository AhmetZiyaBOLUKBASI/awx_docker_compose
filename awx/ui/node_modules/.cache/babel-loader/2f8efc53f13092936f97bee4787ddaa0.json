{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Slider/slider';\nimport { css } from '@patternfly/react-styles';\nexport var SliderStep = function SliderStep(_a) {\n  var className = _a.className,\n      label = _a.label,\n      value = _a.value,\n      _a$isTickHidden = _a.isTickHidden,\n      isTickHidden = _a$isTickHidden === void 0 ? false : _a$isTickHidden,\n      _a$isLabelHidden = _a.isLabelHidden,\n      isLabelHidden = _a$isLabelHidden === void 0 ? false : _a$isLabelHidden,\n      _a$isActive = _a.isActive,\n      isActive = _a$isActive === void 0 ? false : _a$isActive,\n      props = __rest(_a, [\"className\", \"label\", \"value\", \"isTickHidden\", \"isLabelHidden\", \"isActive\"]);\n\n  var style = {\n    '--pf-c-slider__step--Left': \"\".concat(value, \"%\")\n  };\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.sliderStep, isActive && styles.modifiers.active, className),\n    style: style\n  }, props), !isTickHidden && React.createElement(\"div\", {\n    className: css(styles.sliderStepTick)\n  }), !isLabelHidden && label && React.createElement(\"div\", {\n    className: css(styles.sliderStepLabel)\n  }, label));\n};\nSliderStep.displayName = 'SliderStep';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Slider/SliderStep.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,uDAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AAiBA,OAAO,IAAM,UAAU,GAA6C,SAAvD,UAAuD,CAAC,EAAD,EAQ9C;AAR+C,MACnE,SADmE,GAMnD,EANmD,CACnE,SADmE;AAAA,MAEnE,KAFmE,GAMnD,EANmD,CAEnE,KAFmE;AAAA,MAGnE,KAHmE,GAMnD,EANmD,CAGnE,KAHmE;AAAA,wBAMnD,EANmD,CAInE,YAJmE;AAAA,MAInE,YAJmE,gCAIpD,KAJoD;AAAA,yBAMnD,EANmD,CAKnE,aALmE;AAAA,MAKnE,aALmE,iCAKnD,KALmD;AAAA,oBAMnD,EANmD,CAMnE,QANmE;AAAA,MAMnE,QANmE,4BAMxD,KANwD;AAAA,MAOhE,KAPgE,GAO3D,MAAA,CAAA,EAAA,EAP2D,CAAA,WAAA,EAAA,OAAA,EAAA,OAAA,EAAA,cAAA,EAAA,eAAA,EAAA,UAAA,CAO3D,CAP2D;;AASnE,MAAM,KAAK,GAAG;AAAE,2CAAgC,KAAhC;AAAF,GAAd;AACA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AAAK,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,UAAR,EAAoB,QAAQ,IAAI,MAAM,CAAC,SAAP,CAAiB,MAAjD,EAAyD,SAAzD,CAAnB;AAAwF,IAAA,KAAK,EAAE;AAA/F,GAAA,EAA0G,KAA1G,CAAA,EACG,CAAC,YAAD,IAAiB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,cAAR;AAAnB,GAAA,CADpB,EAEG,CAAC,aAAD,IAAkB,KAAlB,IAA2B,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,eAAR;AAAnB,GAAA,EAA8C,KAA9C,CAF9B,CADF;AAMD,CAhBM;AAiBP,UAAU,CAAC,WAAX,GAAyB,YAAzB","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Slider/slider';\nimport { css } from '@patternfly/react-styles';\n\nexport interface SliderStepProps extends Omit<React.HTMLProps<HTMLDivElement>, 'label'> {\n  /** Additional classes added to the slider steps. */\n  className?: string;\n  /** Step value **/\n  value?: number;\n  /** Step label **/\n  label?: string;\n  /** Flag indicating that the tick should be hidden */\n  isTickHidden?: boolean;\n  /** Flag indicating that the label should be hidden */\n  isLabelHidden?: boolean;\n  /** Flag indicating the step is active */\n  isActive?: boolean;\n}\n\nexport const SliderStep: React.FunctionComponent<SliderStepProps> = ({\n  className,\n  label,\n  value,\n  isTickHidden = false,\n  isLabelHidden = false,\n  isActive = false,\n  ...props\n}: SliderStepProps) => {\n  const style = { '--pf-c-slider__step--Left': `${value}%` } as React.CSSProperties;\n  return (\n    <div className={css(styles.sliderStep, isActive && styles.modifiers.active, className)} style={style} {...props}>\n      {!isTickHidden && <div className={css(styles.sliderStepTick)} />}\n      {!isLabelHidden && label && <div className={css(styles.sliderStepLabel)}>{label}</div>}\n    </div>\n  );\n};\nSliderStep.displayName = 'SliderStep';\n"]},"metadata":{},"sourceType":"module"}