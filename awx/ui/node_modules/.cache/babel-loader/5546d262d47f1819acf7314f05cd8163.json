{"ast":null,"code":"import{i18n}from\"@lingui/core\";import React from'react';import{Button,DropdownItem,Tooltip}from'@patternfly/react-core';import{useKebabifiedMenu}from'contexts/Kebabified';import{jsx as _jsx}from\"react/jsx-runtime\";function ToolbarSyncSourceButton(_ref){var onClick=_ref.onClick;var _useKebabifiedMenu=useKebabifiedMenu(),isKebabified=_useKebabifiedMenu.isKebabified;if(isKebabified){return/*#__PURE__*/_jsx(DropdownItem,{ouiaId:\"sync-all-button\",component:\"button\",onClick:onClick,children:/*i18n*/i18n._(\"Sync all\")},\"add\");}return/*#__PURE__*/_jsx(Tooltip,{content:/*i18n*/i18n._(\"Sync all sources\"),position:\"top\",children:/*#__PURE__*/_jsx(Button,{ouiaId:\"sync-all-button\",onClick:onClick,\"aria-label\":/*i18n*/i18n._(\"Sync all\"),variant:\"secondary\",children:/*i18n*/i18n._(\"Sync all\")})},\"update\");}ToolbarSyncSourceButton.defaultProps={onClick:null};export default ToolbarSyncSourceButton;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/PaginatedTable/ToolbarSyncSourceButton.js"],"names":["React","Button","DropdownItem","Tooltip","useKebabifiedMenu","ToolbarSyncSourceButton","onClick","isKebabified","defaultProps"],"mappings":"+BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,MAAT,CAAiBC,YAAjB,CAA+BC,OAA/B,KAA8C,wBAA9C,CAGA,OAASC,iBAAT,KAAkC,qBAAlC,C,2CAEA,QAASC,CAAAA,uBAAT,MAA8C,IAAXC,CAAAA,OAAW,MAAXA,OAAW,CAC5C,uBAAyBF,iBAAiB,EAA1C,CAAQG,YAAR,oBAAQA,YAAR,CAEA,GAAIA,YAAJ,CAAkB,CAChB,mBACE,KAAC,YAAD,EACE,MAAM,CAAC,iBADT,CAGE,SAAS,CAAC,QAHZ,CAIE,OAAO,CAAED,OAJX,kBAMG,kBANH,EAEM,KAFN,CADF,CAUD,CAED,mBACE,KAAC,OAAD,EAAsB,OAAO,SAAE,0BAA/B,CAAoD,QAAQ,CAAC,KAA7D,uBACE,KAAC,MAAD,EACE,MAAM,CAAC,iBADT,CAEE,OAAO,CAAEA,OAFX,CAGE,qBAAY,kBAHd,CAIE,OAAO,CAAC,WAJV,kBAMG,kBANH,EADF,EAAa,QAAb,CADF,CAYD,CAKDD,uBAAuB,CAACG,YAAxB,CAAuC,CACrCF,OAAO,CAAE,IAD4B,CAAvC,CAIA,cAAeD,CAAAA,uBAAf","sourcesContent":["import React from 'react';\nimport { func } from 'prop-types';\nimport { Button, DropdownItem, Tooltip } from '@patternfly/react-core';\n\nimport { t } from '@lingui/macro';\nimport { useKebabifiedMenu } from 'contexts/Kebabified';\n\nfunction ToolbarSyncSourceButton({ onClick }) {\n  const { isKebabified } = useKebabifiedMenu();\n\n  if (isKebabified) {\n    return (\n      <DropdownItem\n        ouiaId=\"sync-all-button\"\n        key=\"add\"\n        component=\"button\"\n        onClick={onClick}\n      >\n        {t`Sync all`}\n      </DropdownItem>\n    );\n  }\n\n  return (\n    <Tooltip key=\"update\" content={t`Sync all sources`} position=\"top\">\n      <Button\n        ouiaId=\"sync-all-button\"\n        onClick={onClick}\n        aria-label={t`Sync all`}\n        variant=\"secondary\"\n      >\n        {t`Sync all`}\n      </Button>\n    </Tooltip>\n  );\n}\n\nToolbarSyncSourceButton.propTypes = {\n  onClick: func,\n};\nToolbarSyncSourceButton.defaultProps = {\n  onClick: null,\n};\n\nexport default ToolbarSyncSourceButton;\n"]},"metadata":{},"sourceType":"module"}