{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import React,{useCallback}from'react';import{Formik,useField,useFormikContext}from'formik';import{Form,FormGroup,Tooltip}from'@patternfly/react-core';import{required}from'util/validators';import FormField,{FormSubmitError}from'../FormField';import FormActionGroup from'../FormActionGroup/FormActionGroup';import{VariablesField}from'../CodeEditor';import{InventoryLookup}from'../Lookup';import{FormColumnLayout,FormFullWidthLayout}from'../FormLayout';import Popover from'../Popover';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var InventoryLookupField=function InventoryLookupField(_ref){var _inventoryField$value;var isDisabled=_ref.isDisabled;var _useFormikContext=useFormikContext(),setFieldValue=_useFormikContext.setFieldValue,setFieldTouched=_useFormikContext.setFieldTouched;var _useField=useField('inventory'),_useField2=_slicedToArray(_useField,3),inventoryField=_useField2[0],inventoryMeta=_useField2[1],inventoryHelpers=_useField2[2];var handleInventoryUpdate=useCallback(function(value){setFieldValue('inventory',value);setFieldTouched('inventory',true,false);},[setFieldValue,setFieldTouched]);var renderInventoryLookup=/*#__PURE__*/_jsx(InventoryLookup,{fieldId:\"inventory-lookup\",value:inventoryField.value,onBlur:function onBlur(){return inventoryHelpers.setTouched();},tooltip:/*i18n*/i18n._(\"Select the inventory that this host will belong to.\"),isValid:!inventoryMeta.touched||!inventoryMeta.error,helperTextInvalid:inventoryMeta.error,onChange:handleInventoryUpdate,required:true,touched:inventoryMeta.touched,error:inventoryMeta.error,validate:required(/*i18n*/i18n._(\"Select a value for this field\")),isDisabled:isDisabled,hideSmartInventories:true,autoPopulate:!((_inventoryField$value=inventoryField.value)!==null&&_inventoryField$value!==void 0&&_inventoryField$value.id)});return/*#__PURE__*/_jsx(FormGroup,{label:/*i18n*/i18n._(\"Inventory\"),labelIcon:/*#__PURE__*/_jsx(Popover,{content:/*i18n*/i18n._(\"Select the inventory that this host will belong to.\")}),isRequired:true,fieldId:\"inventory-lookup\",validated:!inventoryMeta.touched||!inventoryMeta.error?'default':'error',helperTextInvalid:inventoryMeta.error,children:isDisabled?/*#__PURE__*/_jsx(Tooltip,{content:/*i18n*/i18n._(\"Unable to change inventory on a host\"),children:renderInventoryLookup}):renderInventoryLookup});};var HostForm=function HostForm(_ref2){var _host$summary_fields;var handleCancel=_ref2.handleCancel,handleSubmit=_ref2.handleSubmit,host=_ref2.host,isInventoryVisible=_ref2.isInventoryVisible,submitError=_ref2.submitError,disableInventoryLookup=_ref2.disableInventoryLookup;return/*#__PURE__*/_jsx(Formik,{initialValues:{name:host.name,description:host.description,inventory:((_host$summary_fields=host.summary_fields)===null||_host$summary_fields===void 0?void 0:_host$summary_fields.inventory)||null,variables:host.variables},onSubmit:handleSubmit,children:function children(formik){return/*#__PURE__*/_jsx(Form,{autoComplete:\"off\",onSubmit:formik.handleSubmit,children:/*#__PURE__*/_jsxs(FormColumnLayout,{children:[/*#__PURE__*/_jsx(FormField,{id:\"host-name\",name:\"name\",type:\"text\",label:/*i18n*/i18n._(\"Name\"),validate:required(null),isRequired:true}),/*#__PURE__*/_jsx(FormField,{id:\"host-description\",name:\"description\",type:\"text\",label:/*i18n*/i18n._(\"Description\")}),isInventoryVisible&&/*#__PURE__*/_jsx(InventoryLookupField,{isDisabled:disableInventoryLookup}),/*#__PURE__*/_jsx(FormFullWidthLayout,{children:/*#__PURE__*/_jsx(VariablesField,{id:\"host-variables\",name:\"variables\",label:/*i18n*/i18n._(\"Variables\")})}),submitError&&/*#__PURE__*/_jsx(FormSubmitError,{error:submitError}),/*#__PURE__*/_jsx(FormActionGroup,{onCancel:handleCancel,onSubmit:formik.handleSubmit})]})});}});};HostForm.defaultProps={host:{name:'',description:'',inventory:undefined,variables:'---\\n',summary_fields:{inventory:null}},isInventoryVisible:true,submitError:null,disableInventoryLookup:false};export{HostForm as _HostForm};export default HostForm;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/HostForm/HostForm.js"],"names":["React","useCallback","Formik","useField","useFormikContext","Form","FormGroup","Tooltip","required","FormField","FormSubmitError","FormActionGroup","VariablesField","InventoryLookup","FormColumnLayout","FormFullWidthLayout","Popover","InventoryLookupField","isDisabled","setFieldValue","setFieldTouched","inventoryField","inventoryMeta","inventoryHelpers","handleInventoryUpdate","value","renderInventoryLookup","setTouched","touched","error","id","HostForm","handleCancel","handleSubmit","host","isInventoryVisible","submitError","disableInventoryLookup","name","description","inventory","summary_fields","variables","formik","defaultProps","undefined","_HostForm"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport { bool, func, shape } from 'prop-types';\nimport { Formik, useField, useFormikContext } from 'formik';\nimport { t } from '@lingui/macro';\nimport { Form, FormGroup, Tooltip } from '@patternfly/react-core';\nimport { required } from 'util/validators';\nimport FormField, { FormSubmitError } from '../FormField';\nimport FormActionGroup from '../FormActionGroup/FormActionGroup';\nimport { VariablesField } from '../CodeEditor';\nimport { InventoryLookup } from '../Lookup';\nimport { FormColumnLayout, FormFullWidthLayout } from '../FormLayout';\nimport Popover from '../Popover';\n\nconst InventoryLookupField = ({ isDisabled }) => {\n  const { setFieldValue, setFieldTouched } = useFormikContext();\n  const [inventoryField, inventoryMeta, inventoryHelpers] =\n    useField('inventory');\n\n  const handleInventoryUpdate = useCallback(\n    (value) => {\n      setFieldValue('inventory', value);\n      setFieldTouched('inventory', true, false);\n    },\n    [setFieldValue, setFieldTouched]\n  );\n\n  const renderInventoryLookup = (\n    <InventoryLookup\n      fieldId=\"inventory-lookup\"\n      value={inventoryField.value}\n      onBlur={() => inventoryHelpers.setTouched()}\n      tooltip={t`Select the inventory that this host will belong to.`}\n      isValid={!inventoryMeta.touched || !inventoryMeta.error}\n      helperTextInvalid={inventoryMeta.error}\n      onChange={handleInventoryUpdate}\n      required\n      touched={inventoryMeta.touched}\n      error={inventoryMeta.error}\n      validate={required(t`Select a value for this field`)}\n      isDisabled={isDisabled}\n      hideSmartInventories\n      autoPopulate={!inventoryField.value?.id}\n    />\n  );\n\n  return (\n    <FormGroup\n      label={t`Inventory`}\n      labelIcon={\n        <Popover\n          content={t`Select the inventory that this host will belong to.`}\n        />\n      }\n      isRequired\n      fieldId=\"inventory-lookup\"\n      validated={\n        !inventoryMeta.touched || !inventoryMeta.error ? 'default' : 'error'\n      }\n      helperTextInvalid={inventoryMeta.error}\n    >\n      {isDisabled ? (\n        <Tooltip content={t`Unable to change inventory on a host`}>\n          {renderInventoryLookup}\n        </Tooltip>\n      ) : (\n        renderInventoryLookup\n      )}\n    </FormGroup>\n  );\n};\n\nconst HostForm = ({\n  handleCancel,\n  handleSubmit,\n  host,\n  isInventoryVisible,\n  submitError,\n  disableInventoryLookup,\n}) => (\n  <Formik\n    initialValues={{\n      name: host.name,\n      description: host.description,\n      inventory: host.summary_fields?.inventory || null,\n      variables: host.variables,\n    }}\n    onSubmit={handleSubmit}\n  >\n    {(formik) => (\n      <Form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n        <FormColumnLayout>\n          <FormField\n            id=\"host-name\"\n            name=\"name\"\n            type=\"text\"\n            label={t`Name`}\n            validate={required(null)}\n            isRequired\n          />\n          <FormField\n            id=\"host-description\"\n            name=\"description\"\n            type=\"text\"\n            label={t`Description`}\n          />\n          {isInventoryVisible && (\n            <InventoryLookupField isDisabled={disableInventoryLookup} />\n          )}\n          <FormFullWidthLayout>\n            <VariablesField\n              id=\"host-variables\"\n              name=\"variables\"\n              label={t`Variables`}\n            />\n          </FormFullWidthLayout>\n          {submitError && <FormSubmitError error={submitError} />}\n          <FormActionGroup\n            onCancel={handleCancel}\n            onSubmit={formik.handleSubmit}\n          />\n        </FormColumnLayout>\n      </Form>\n    )}\n  </Formik>\n);\n\nHostForm.propTypes = {\n  handleCancel: func.isRequired,\n  handleSubmit: func.isRequired,\n  host: shape({}),\n  isInventoryVisible: bool,\n  submitError: shape({}),\n  disableInventoryLookup: bool,\n};\n\nHostForm.defaultProps = {\n  host: {\n    name: '',\n    description: '',\n    inventory: undefined,\n    variables: '---\\n',\n    summary_fields: {\n      inventory: null,\n    },\n  },\n  isInventoryVisible: true,\n  submitError: null,\n  disableInventoryLookup: false,\n};\n\nexport { HostForm as _HostForm };\nexport default HostForm;\n"]},"metadata":{},"sourceType":"module"}