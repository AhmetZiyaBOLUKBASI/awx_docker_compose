{"ast":null,"code":"import _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/OverflowMenu/overflow-menu';\nimport { css } from '@patternfly/react-styles';\nimport { OverflowMenuContext } from './OverflowMenuContext';\nimport mdBreakpoint from '@patternfly/react-tokens/dist/esm/global_breakpoint_md';\nimport lgBreakpoint from '@patternfly/react-tokens/dist/esm/global_breakpoint_lg';\nimport xlBreakpoint from '@patternfly/react-tokens/dist/esm/global_breakpoint_xl';\nimport xl2Breakpoint from '@patternfly/react-tokens/dist/esm/global_breakpoint_2xl';\nimport { debounce, canUseDOM } from '../../helpers/util';\nvar breakpoints = {\n  md: mdBreakpoint,\n  lg: lgBreakpoint,\n  xl: xlBreakpoint,\n  '2xl': xl2Breakpoint\n};\nexport var OverflowMenu = /*#__PURE__*/function (_React$Component) {\n  _inherits(OverflowMenu, _React$Component);\n\n  var _super = _createSuper(OverflowMenu);\n\n  function OverflowMenu(props) {\n    var _this;\n\n    _classCallCheck(this, OverflowMenu);\n\n    _this = _super.call(this, props);\n\n    _this.handleResize = function () {\n      var breakpointPx = breakpoints[_this.props.breakpoint];\n\n      if (!breakpointPx) {\n        // eslint-disable-next-line no-console\n        console.error('OverflowMenu will not be visible without a valid breakpoint.');\n        return;\n      }\n\n      var breakpointWidth = Number(breakpointPx.value.replace('px', ''));\n      var isBelowBreakpoint = window.innerWidth < breakpointWidth;\n\n      _this.setState({\n        isBelowBreakpoint: isBelowBreakpoint\n      });\n    };\n\n    _this.state = {\n      isBelowBreakpoint: false\n    };\n    return _this;\n  }\n\n  _createClass(OverflowMenu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleResize();\n\n      if (canUseDOM) {\n        window.addEventListener('resize', debounce(this.handleResize, 250));\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (canUseDOM) {\n        window.removeEventListener('resize', debounce(this.handleResize, 250));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      var _a = this.props,\n          className = _a.className,\n          breakpoint = _a.breakpoint,\n          children = _a.children,\n          props = __rest(_a, [\"className\", \"breakpoint\", \"children\"]);\n\n      return React.createElement(\"div\", Object.assign({}, props, {\n        className: css(styles.overflowMenu, className)\n      }), React.createElement(OverflowMenuContext.Provider, {\n        value: {\n          isBelowBreakpoint: this.state.isBelowBreakpoint\n        }\n      }, children));\n    }\n  }]);\n\n  return OverflowMenu;\n}(React.Component);\nOverflowMenu.displayName = 'OverflowMenu';\nOverflowMenu.contextType = OverflowMenuContext;","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/OverflowMenu/OverflowMenu.tsx"],"names":[],"mappings":";;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,oEAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,SAAS,mBAAT,QAAoC,uBAApC;AACA,OAAO,YAAP,MAAyB,wDAAzB;AACA,OAAO,YAAP,MAAyB,wDAAzB;AACA,OAAO,YAAP,MAAyB,wDAAzB;AACA,OAAO,aAAP,MAA0B,yDAA1B;AACA,SAAS,QAAT,EAAmB,SAAnB,QAAoC,oBAApC;AAEA,IAAM,WAAW,GAAG;AAClB,EAAA,EAAE,EAAE,YADc;AAElB,EAAA,EAAE,EAAE,YAFc;AAGlB,EAAA,EAAE,EAAE,YAHc;AAIlB,SAAO;AAJW,CAApB;AAoBA,WAAa,YAAb;AAAA;;AAAA;;AAEE,wBAAY,KAAZ,EAAoC;AAAA;;AAAA;;AAClC,8BAAM,KAAN;;AAmBF,UAAA,YAAA,GAAe,YAAK;AAClB,UAAM,YAAY,GAAG,WAAW,CAAC,MAAK,KAAL,CAAW,UAAZ,CAAhC;;AACA,UAAI,CAAC,YAAL,EAAmB;AACjB;AACA,QAAA,OAAO,CAAC,KAAR,CAAc,8DAAd;AACA;AACD;;AACD,UAAM,eAAe,GAAG,MAAM,CAAC,YAAY,CAAC,KAAb,CAAmB,OAAnB,CAA2B,IAA3B,EAAiC,EAAjC,CAAD,CAA9B;AACA,UAAM,iBAAiB,GAAG,MAAM,CAAC,UAAP,GAAoB,eAA9C;;AACA,YAAK,QAAL,CAAc;AAAE,QAAA,iBAAiB,EAAjB;AAAF,OAAd;AACD,KAVD;;AAlBE,UAAK,KAAL,GAAa;AACX,MAAA,iBAAiB,EAAE;AADR,KAAb;AAFkC;AAKnC;;AAPH;AAAA;AAAA,WASE,6BAAiB;AACf,WAAK,YAAL;;AACA,UAAI,SAAJ,EAAe;AACb,QAAA,MAAM,CAAC,gBAAP,CAAwB,QAAxB,EAAkC,QAAQ,CAAC,KAAK,YAAN,EAAoB,GAApB,CAA1C;AACD;AACF;AAdH;AAAA;AAAA,WAgBE,gCAAoB;AAClB,UAAI,SAAJ,EAAe;AACb,QAAA,MAAM,CAAC,mBAAP,CAA2B,QAA3B,EAAqC,QAAQ,CAAC,KAAK,YAAN,EAAoB,GAApB,CAA7C;AACD;AACF;AApBH;AAAA;AAAA,WAkCE,kBAAM;AACJ;AACM,UAAA,EAAA,GAAgD,KAAhD,KAAA;AAAA,UAAE,SAAF,GAAiC,EAAjC,CAAE,SAAF;AAAA,UAAa,UAAb,GAAiC,EAAjC,CAAa,UAAb;AAAA,UAAyB,QAAzB,GAAiC,EAAjC,CAAyB,QAAzB;AAAA,UAAsC,KAAtC,GAA2C,MAAA,CAAA,EAAA,EAA3C,CAAA,WAAA,EAAA,YAAA,EAAA,UAAA,CAA2C,CAA3C;;AAEN,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAS,KAAT,EAAc;AAAE,QAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,YAAR,EAAsB,SAAtB;AAAhB,OAAd,CAAA,EACE,KAAA,CAAA,aAAA,CAAC,mBAAmB,CAAC,QAArB,EAA6B;AAAC,QAAA,KAAK,EAAE;AAAE,UAAA,iBAAiB,EAAE,KAAK,KAAL,CAAW;AAAhC;AAAR,OAA7B,EACG,QADH,CADF,CADF;AAOD;AA7CH;;AAAA;AAAA,EAAkC,KAAK,CAAC,SAAxC;AACS,YAAA,CAAA,WAAA,GAAc,cAAd;AA+CT,YAAY,CAAC,WAAb,GAA2B,mBAA3B","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/OverflowMenu/overflow-menu';\nimport { css } from '@patternfly/react-styles';\nimport { OverflowMenuContext } from './OverflowMenuContext';\nimport mdBreakpoint from '@patternfly/react-tokens/dist/esm/global_breakpoint_md';\nimport lgBreakpoint from '@patternfly/react-tokens/dist/esm/global_breakpoint_lg';\nimport xlBreakpoint from '@patternfly/react-tokens/dist/esm/global_breakpoint_xl';\nimport xl2Breakpoint from '@patternfly/react-tokens/dist/esm/global_breakpoint_2xl';\nimport { debounce, canUseDOM } from '../../helpers/util';\n\nconst breakpoints = {\n  md: mdBreakpoint,\n  lg: lgBreakpoint,\n  xl: xlBreakpoint,\n  '2xl': xl2Breakpoint\n};\n\nexport interface OverflowMenuProps extends React.HTMLProps<HTMLDivElement> {\n  /** Any elements that can be rendered in the menu */\n  children?: any;\n  /** Additional classes added to the OverflowMenu. */\n  className?: string;\n  /** Indicates breakpoint at which to switch between horizontal menu and vertical dropdown */\n  breakpoint: 'md' | 'lg' | 'xl' | '2xl';\n}\n\nexport interface OverflowMenuState extends React.HTMLProps<HTMLDivElement> {\n  isBelowBreakpoint: boolean;\n}\n\nexport class OverflowMenu extends React.Component<OverflowMenuProps, OverflowMenuState> {\n  static displayName = 'OverflowMenu';\n  constructor(props: OverflowMenuProps) {\n    super(props);\n    this.state = {\n      isBelowBreakpoint: false\n    };\n  }\n\n  componentDidMount() {\n    this.handleResize();\n    if (canUseDOM) {\n      window.addEventListener('resize', debounce(this.handleResize, 250));\n    }\n  }\n\n  componentWillUnmount() {\n    if (canUseDOM) {\n      window.removeEventListener('resize', debounce(this.handleResize, 250));\n    }\n  }\n\n  handleResize = () => {\n    const breakpointPx = breakpoints[this.props.breakpoint];\n    if (!breakpointPx) {\n      // eslint-disable-next-line no-console\n      console.error('OverflowMenu will not be visible without a valid breakpoint.');\n      return;\n    }\n    const breakpointWidth = Number(breakpointPx.value.replace('px', ''));\n    const isBelowBreakpoint = window.innerWidth < breakpointWidth;\n    this.setState({ isBelowBreakpoint });\n  };\n\n  render() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { className, breakpoint, children, ...props } = this.props;\n\n    return (\n      <div {...props} className={css(styles.overflowMenu, className)}>\n        <OverflowMenuContext.Provider value={{ isBelowBreakpoint: this.state.isBelowBreakpoint }}>\n          {children}\n        </OverflowMenuContext.Provider>\n      </div>\n    );\n  }\n}\n\nOverflowMenu.contextType = OverflowMenuContext;\n"]},"metadata":{},"sourceType":"module"}