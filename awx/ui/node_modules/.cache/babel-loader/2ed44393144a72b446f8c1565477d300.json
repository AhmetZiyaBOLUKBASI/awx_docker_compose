{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import React,{useContext,useState}from'react';import{Button,FormGroup,Modal}from'@patternfly/react-core';import{WorkflowDispatchContext,WorkflowStateContext}from'contexts/Workflow';import AnsibleSelect from'components/AnsibleSelect';import{jsx as _jsx}from\"react/jsx-runtime\";function LinkModal(_ref){var header=_ref.header,onConfirm=_ref.onConfirm;var dispatch=useContext(WorkflowDispatchContext);var _useContext=useContext(WorkflowStateContext),linkToEdit=_useContext.linkToEdit;var _useState=useState(linkToEdit?linkToEdit.linkType:'success'),_useState2=_slicedToArray(_useState,2),linkType=_useState2[0],setLinkType=_useState2[1];return/*#__PURE__*/_jsx(Modal,{width:600,header:header,isOpen:true,title:/*i18n*/i18n._(\"Workflow Link\"),\"aria-label\":/*i18n*/i18n._(\"Workflow link modal\"),onClose:function onClose(){return dispatch({type:'CANCEL_LINK_MODAL'});},actions:[/*#__PURE__*/_jsx(Button,{ouiaId:\"link-confirm-button\",id:\"link-confirm\",variant:\"primary\",\"aria-label\":/*i18n*/i18n._(\"Save link changes\"),onClick:function onClick(){return onConfirm(linkType);},children:/*i18n*/i18n._(\"Save\")},\"save\"),/*#__PURE__*/_jsx(Button,{ouiaId:\"link-cancel-button\",id:\"link-cancel\",variant:\"link\",\"aria-label\":/*i18n*/i18n._(\"Cancel link changes\"),onClick:function onClick(){return dispatch({type:'CANCEL_LINK_MODAL'});},children:/*i18n*/i18n._(\"Cancel\")},\"cancel\")],children:/*#__PURE__*/_jsx(FormGroup,{fieldId:\"link-select\",label:/*i18n*/i18n._(\"Run\"),children:/*#__PURE__*/_jsx(AnsibleSelect,{id:\"link-select\",name:\"linkType\",value:linkType,data:[{value:'always',key:'always',label:/*i18n*/i18n._(\"Always\")},{value:'success',key:'success',label:/*i18n*/i18n._(\"On Success\")},{value:'failure',key:'failure',label:/*i18n*/i18n._(\"On Failure\")}],onChange:function onChange(event,value){setLinkType(value);}})})});}export default LinkModal;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Template/WorkflowJobTemplateVisualizer/Modals/LinkModals/LinkModal.js"],"names":["React","useContext","useState","Button","FormGroup","Modal","WorkflowDispatchContext","WorkflowStateContext","AnsibleSelect","LinkModal","header","onConfirm","dispatch","linkToEdit","linkType","setLinkType","type","value","key","label","event"],"mappings":"sIAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,KAA4C,OAA5C,CACA,OAASC,MAAT,CAAiBC,SAAjB,CAA4BC,KAA5B,KAAyC,wBAAzC,CAIA,OACEC,uBADF,CAEEC,oBAFF,KAGO,mBAHP,CAIA,MAAOC,CAAAA,aAAP,KAA0B,0BAA1B,C,2CAEA,QAASC,CAAAA,SAAT,MAA0C,IAArBC,CAAAA,MAAqB,MAArBA,MAAqB,CAAbC,SAAa,MAAbA,SAAa,CACxC,GAAMC,CAAAA,QAAQ,CAAGX,UAAU,CAACK,uBAAD,CAA3B,CACA,gBAAuBL,UAAU,CAACM,oBAAD,CAAjC,CAAQM,UAAR,aAAQA,UAAR,CACA,cAAgCX,QAAQ,CACtCW,UAAU,CAAGA,UAAU,CAACC,QAAd,CAAyB,SADG,CAAxC,wCAAOA,QAAP,eAAiBC,WAAjB,eAGA,mBACE,KAAC,KAAD,EACE,KAAK,CAAE,GADT,CAEE,MAAM,CAAEL,MAFV,CAGE,MAAM,KAHR,CAIE,KAAK,SAAE,uBAJT,CAKE,qBAAY,6BALd,CAME,OAAO,CAAE,yBAAME,CAAAA,QAAQ,CAAC,CAAEI,IAAI,CAAE,mBAAR,CAAD,CAAd,EANX,CAOE,OAAO,CAAE,cACP,KAAC,MAAD,EACE,MAAM,CAAC,qBADT,CAEE,EAAE,CAAC,cAFL,CAIE,OAAO,CAAC,SAJV,CAKE,qBAAY,2BALd,CAME,OAAO,CAAE,yBAAML,CAAAA,SAAS,CAACG,QAAD,CAAf,EANX,kBAQG,cARH,EAGM,MAHN,CADO,cAWP,KAAC,MAAD,EACE,MAAM,CAAC,oBADT,CAEE,EAAE,CAAC,aAFL,CAIE,OAAO,CAAC,MAJV,CAKE,qBAAY,6BALd,CAME,OAAO,CAAE,yBAAMF,CAAAA,QAAQ,CAAC,CAAEI,IAAI,CAAE,mBAAR,CAAD,CAAd,EANX,kBAQG,gBARH,EAGM,QAHN,CAXO,CAPX,uBA8BE,KAAC,SAAD,EAAW,OAAO,CAAC,aAAnB,CAAiC,KAAK,SAAE,aAAxC,uBACE,KAAC,aAAD,EACE,EAAE,CAAC,aADL,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAEF,QAHT,CAIE,IAAI,CAAE,CACJ,CACEG,KAAK,CAAE,QADT,CAEEC,GAAG,CAAE,QAFP,CAGEC,KAAK,SAAE,gBAHT,CADI,CAMJ,CACEF,KAAK,CAAE,SADT,CAEEC,GAAG,CAAE,SAFP,CAGEC,KAAK,SAAE,oBAHT,CANI,CAWJ,CACEF,KAAK,CAAE,SADT,CAEEC,GAAG,CAAE,SAFP,CAGEC,KAAK,SAAE,oBAHT,CAXI,CAJR,CAqBE,QAAQ,CAAE,kBAACC,KAAD,CAAQH,KAAR,CAAkB,CAC1BF,WAAW,CAACE,KAAD,CAAX,CACD,CAvBH,EADF,EA9BF,EADF,CA4DD,CAMD,cAAeR,CAAAA,SAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Button, FormGroup, Modal } from '@patternfly/react-core';\n\nimport { t } from '@lingui/macro';\nimport { func } from 'prop-types';\nimport {\n  WorkflowDispatchContext,\n  WorkflowStateContext,\n} from 'contexts/Workflow';\nimport AnsibleSelect from 'components/AnsibleSelect';\n\nfunction LinkModal({ header, onConfirm }) {\n  const dispatch = useContext(WorkflowDispatchContext);\n  const { linkToEdit } = useContext(WorkflowStateContext);\n  const [linkType, setLinkType] = useState(\n    linkToEdit ? linkToEdit.linkType : 'success'\n  );\n  return (\n    <Modal\n      width={600}\n      header={header}\n      isOpen\n      title={t`Workflow Link`}\n      aria-label={t`Workflow link modal`}\n      onClose={() => dispatch({ type: 'CANCEL_LINK_MODAL' })}\n      actions={[\n        <Button\n          ouiaId=\"link-confirm-button\"\n          id=\"link-confirm\"\n          key=\"save\"\n          variant=\"primary\"\n          aria-label={t`Save link changes`}\n          onClick={() => onConfirm(linkType)}\n        >\n          {t`Save`}\n        </Button>,\n        <Button\n          ouiaId=\"link-cancel-button\"\n          id=\"link-cancel\"\n          key=\"cancel\"\n          variant=\"link\"\n          aria-label={t`Cancel link changes`}\n          onClick={() => dispatch({ type: 'CANCEL_LINK_MODAL' })}\n        >\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <FormGroup fieldId=\"link-select\" label={t`Run`}>\n        <AnsibleSelect\n          id=\"link-select\"\n          name=\"linkType\"\n          value={linkType}\n          data={[\n            {\n              value: 'always',\n              key: 'always',\n              label: t`Always`,\n            },\n            {\n              value: 'success',\n              key: 'success',\n              label: t`On Success`,\n            },\n            {\n              value: 'failure',\n              key: 'failure',\n              label: t`On Failure`,\n            },\n          ]}\n          onChange={(event, value) => {\n            setLinkType(value);\n          }}\n        />\n      </FormGroup>\n    </Modal>\n  );\n}\n\nLinkModal.propTypes = {\n  onConfirm: func.isRequired,\n};\n\nexport default LinkModal;\n"]},"metadata":{},"sourceType":"module"}