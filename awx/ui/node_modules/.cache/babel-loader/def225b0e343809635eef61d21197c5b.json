{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import React from'react';import{Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var buildAnchor=function buildAnchor(obj,resource,activity){var url;var name;// try/except pattern asserts that:\n// if we encounter a case where a UI url can't or\n// shouldn't be generated, just supply the name of the resource\ntry{// catch-all case to avoid generating urls if a resource has been deleted\n// if a resource still exists, it'll be serialized in the activity's summary_fields\nif(!activity.summary_fields[resource]){throw new Error('The referenced resource no longer exists');}switch(resource){case'custom_inventory_script':url=\"/inventory_scripts/\".concat(obj.id,\"/\");break;case'group':if(activity.operation==='create'||activity.operation==='delete'){// the API formats the changes.inventory field as str 'myInventoryName-PrimaryKey'\nvar _activity$changes$inv=activity.changes.inventory.split('-').slice(-1),_activity$changes$inv2=_slicedToArray(_activity$changes$inv,1),inventory_id=_activity$changes$inv2[0];url=\"/inventories/inventory/\".concat(inventory_id,\"/groups/\").concat(activity.changes.id,\"/details/\");}else{url=\"/inventories/inventory/\".concat(activity.summary_fields.inventory[0].id,\"/groups/\").concat(activity.changes.id||activity.changes.object1_pk,\"/details/\");}break;case'host':url=\"/hosts/\".concat(obj.id,\"/\");break;case'job':url=\"/jobs/\".concat(obj.id,\"/\");break;case'inventory':url=(obj===null||obj===void 0?void 0:obj.kind)==='smart'?\"/inventories/smart_inventory/\".concat(obj.id,\"/\"):\"/inventories/inventory/\".concat(obj.id,\"/\");break;case'schedule':// schedule urls depend on the resource they're associated with\nif(activity.summary_fields.job_template){var jt_id=activity.summary_fields.job_template[0].id;url=\"/templates/job_template/\".concat(jt_id,\"/schedules/\").concat(obj.id,\"/\");}else if(activity.summary_fields.workflow_job_template){var wfjt_id=activity.summary_fields.workflow_job_template[0].id;url=\"/templates/workflow_job_template/\".concat(wfjt_id,\"/schedules/\").concat(obj.id,\"/\");}else if(activity.summary_fields.project){url=\"/projects/\".concat(activity.summary_fields.project[0].id,\"/schedules/\").concat(obj.id,\"/\");}else if(activity.summary_fields.system_job_template){url=null;}else{// urls for inventory sync schedules currently depend on having\n// an inventory id and group id\nthrow new Error('activity.summary_fields to build this url not implemented yet');}break;case'setting':url=\"/settings/\";break;case'notification_template':url=\"/notification_templates/\".concat(obj.id,\"/\");break;case'role':throw new Error('role object management is not consolidated to a single UI view');case'job_template':url=\"/templates/job_template/\".concat(obj.id,\"/\");break;case'workflow_job_template':url=\"/templates/workflow_job_template/\".concat(obj.id,\"/\");break;case'workflow_job_template_node':{var _activity$summary_fie=activity.summary_fields.workflow_job_template[0],_wfjt_id=_activity$summary_fie.id,wfjt_name=_activity$summary_fie.name;url=\"/templates/workflow_job_template/\".concat(_wfjt_id,\"/\");name=wfjt_name;break;}case'workflow_job':url=\"/jobs/workflow/\".concat(obj.id,\"/\");break;case'label':url=null;break;case'inventory_source':{var inventoryId=(obj.inventory||'').split('-').reverse()[0];url=\"/inventories/inventory/\".concat(inventoryId,\"/sources/\").concat(obj.id,\"/details/\");break;}case'o_auth2_application':url=\"/applications/\".concat(obj.id,\"/\");break;case'workflow_approval':url=\"/jobs/workflow/\".concat(activity.summary_fields.workflow_job[0].id,\"/output/\");name=\"\".concat(activity.summary_fields.workflow_job[0].name,\" | \").concat(activity.summary_fields.workflow_approval[0].name);break;case'workflow_approval_template':url=\"/templates/workflow_job_template/\".concat(activity.summary_fields.workflow_job_template[0].id,\"/visualizer/\");name=\"\".concat(activity.summary_fields.workflow_job_template[0].name,\" | \").concat(activity.summary_fields.workflow_approval_template[0].name);break;default:url=\"/\".concat(resource,\"s/\").concat(obj.id,\"/\");}name=name||obj.name||obj.username;if(url){return/*#__PURE__*/_jsx(Link,{to:url,children:name});}return/*#__PURE__*/_jsx(\"span\",{children:name});}catch(err){return/*#__PURE__*/_jsx(\"span\",{children:obj.name||obj.username||''});}};var getPastTense=function getPastTense(item){return /e$/.test(item)?\"\".concat(item,\"d\"):\"\".concat(item,\"ed\");};var isGroupRelationship=function isGroupRelationship(item){return item.object1==='group'&&item.object2==='group'&&item.summary_fields.group.length>1;};var buildLabeledLink=function buildLabeledLink(label,link){return/*#__PURE__*/_jsxs(\"span\",{children:[label,\" \",link]});};function ActivityStreamDescription(_ref){var _activity$changes,_activity$changes$sta;var activity=_ref.activity;var labeledLinks=[];// Activity stream objects will outlive the resources they reference\n// in that case, summary_fields will not be available - show generic error text instead\ntry{switch(activity.object_association){// explicit role dis+associations\ncase'role':{var object1=activity.object1,object2=activity.object2;// if object1 winds up being the role's resource, we need to swap the objects\n// in order to make the sentence make sense.\nif(activity.object_type===object1){object1=activity.object2;object2=activity.object1;}// object1 field is resource targeted by the dis+association\n// object2 field is the resource the role is inherited from\n// summary_field.role[0] contains ref info about the role\nswitch(activity.operation){// expected outcome: \"disassociated <object2> role_name from <object1>\"\ncase'disassociate':if(isGroupRelationship(activity)){labeledLinks.push(buildLabeledLink(getPastTense(activity.operation),buildAnchor(activity.summary_fields.group[1],object2,activity)));labeledLinks.push(buildLabeledLink(\"\".concat(activity.summary_fields.role[0].role_field,\" from\"),buildAnchor(activity.summary_fields.group[0],object1,activity)));}else{labeledLinks.push(buildLabeledLink(getPastTense(activity.operation),buildAnchor(activity.summary_fields[object2][0],object2,activity)));labeledLinks.push(buildLabeledLink(\"\".concat(activity.summary_fields.role[0].role_field,\" from\"),buildAnchor(activity.summary_fields[object1][0],object1,activity)));}break;// expected outcome: \"associated <object2> role_name to <object1>\"\ncase'associate':if(isGroupRelationship(activity)){labeledLinks.push(buildLabeledLink(getPastTense(activity.operation),buildAnchor(activity.summary_fields.group[1],object2,activity)));labeledLinks.push(buildLabeledLink(\"\".concat(activity.summary_fields.role[0].role_field,\" to\"),buildAnchor(activity.summary_fields.group[0],object1,activity)));}else{labeledLinks.push(buildLabeledLink(getPastTense(activity.operation),buildAnchor(activity.summary_fields[object2][0],object2,activity)));labeledLinks.push(buildLabeledLink(\"\".concat(activity.summary_fields.role[0].role_field,\" to\"),buildAnchor(activity.summary_fields[object1][0],object1,activity)));}break;default:break;}break;// inherited role dis+associations (logic identical to case 'role')\n}case'parents':// object1 field is resource targeted by the dis+association\n// object2 field is the resource the role is inherited from\n// summary_field.role[0] contains ref info about the role\nswitch(activity.operation){// expected outcome: \"disassociated <object2> role_name from <object1>\"\ncase'disassociate':if(isGroupRelationship(activity)){labeledLinks.push(buildLabeledLink(\"\".concat(getPastTense(activity.operation),\" \").concat(activity.object2),buildAnchor(activity.summary_fields.group[1],activity.object2,activity)));labeledLinks.push(buildLabeledLink(\"from \".concat(activity.object1),buildAnchor(activity.summary_fields.group[0],activity.object1,activity)));}else{labeledLinks.push(buildLabeledLink(getPastTense(activity.operation),buildAnchor(activity.summary_fields[activity.object2][0],activity.object2,activity)));labeledLinks.push(buildLabeledLink(\"\".concat(activity.summary_fields.role[0].role_field,\" from\"),buildAnchor(activity.summary_fields[activity.object1][0],activity.object1,activity)));}break;// expected outcome: \"associated <object2> role_name to <object1>\"\ncase'associate':if(isGroupRelationship(activity)){labeledLinks.push(buildLabeledLink(\"\".concat(getPastTense(activity.operation),\" \").concat(activity.object1),buildAnchor(activity.summary_fields.group[0],activity.object1,activity)));labeledLinks.push(buildLabeledLink(\"to \".concat(activity.object2),buildAnchor(activity.summary_fields.group[1],activity.object2,activity)));}else{labeledLinks.push(buildLabeledLink(getPastTense(activity.operation),buildAnchor(activity.summary_fields[activity.object2][0],activity.object2,activity)));labeledLinks.push(buildLabeledLink(\"\".concat(activity.summary_fields.role[0].role_field,\" to\"),buildAnchor(activity.summary_fields[activity.object1][0],activity.object1,activity)));}break;default:break;}break;// CRUD operations / resource on resource dis+associations\ndefault:switch(activity.operation){// expected outcome: \"disassociated <object2> from <object1>\"\ncase'disassociate':if(isGroupRelationship(activity)){labeledLinks.push(buildLabeledLink(\"\".concat(getPastTense(activity.operation),\" \").concat(activity.object2),buildAnchor(activity.summary_fields.group[1],activity.object2,activity)));labeledLinks.push(buildLabeledLink(\"from \".concat(activity.object1),buildAnchor(activity.summary_fields.group[0],activity.object1,activity)));}else if(activity.object1==='workflow_job_template_node'&&activity.object2==='workflow_job_template_node'){labeledLinks.push(buildLabeledLink(\"\".concat(getPastTense(activity.operation),\" two nodes on workflow\"),buildAnchor(activity.summary_fields[activity.object1[0]],activity.object1,activity)));}else{labeledLinks.push(buildLabeledLink(\"\".concat(getPastTense(activity.operation),\" \").concat(activity.object2),buildAnchor(activity.summary_fields[activity.object2][0],activity.object2,activity)));labeledLinks.push(buildLabeledLink(\"from \".concat(activity.object1),buildAnchor(activity.summary_fields[activity.object1][0],activity.object1,activity)));}break;// expected outcome \"associated <object2> to <object1>\"\ncase'associate':// groups are the only resource that can be associated/disassociated into each other\nif(isGroupRelationship(activity)){labeledLinks.push(buildLabeledLink(\"\".concat(getPastTense(activity.operation),\" \").concat(activity.object1),buildAnchor(activity.summary_fields.group[0],activity.object1,activity)));labeledLinks.push(buildLabeledLink(\"to \".concat(activity.object2),buildAnchor(activity.summary_fields.group[1],activity.object2,activity)));}else if(activity.object1==='workflow_job_template_node'&&activity.object2==='workflow_job_template_node'){labeledLinks.push(buildLabeledLink(\"\".concat(getPastTense(activity.operation),\" two nodes on workflow\"),buildAnchor(activity.summary_fields[activity.object1[0]],activity.object1,activity)));}else{labeledLinks.push(buildLabeledLink(\"\".concat(getPastTense(activity.operation),\" \").concat(activity.object1),buildAnchor(activity.summary_fields[activity.object1][0],activity.object1,activity)));labeledLinks.push(buildLabeledLink(\"to \".concat(activity.object2),buildAnchor(activity.summary_fields[activity.object2][0],activity.object2,activity)));}break;case'delete':labeledLinks.push(buildLabeledLink(\"\".concat(getPastTense(activity.operation),\" \").concat(activity.object1),buildAnchor(activity.changes,activity.object1,activity)));break;// expected outcome: \"operation <object1>\"\ncase'update':if(activity.object1==='workflow_approval'&&(activity===null||activity===void 0?void 0:(_activity$changes=activity.changes)===null||_activity$changes===void 0?void 0:(_activity$changes$sta=_activity$changes.status)===null||_activity$changes$sta===void 0?void 0:_activity$changes$sta.length)===2){var operationText='';if(activity.changes.status[1]==='successful'){operationText=/*i18n*/i18n._(\"approved\");}else if(activity.changes.status[1]==='failed'){if(activity.changes.timed_out&&activity.changes.timed_out[1]===true){operationText=/*i18n*/i18n._(\"timed out\");}else{operationText=/*i18n*/i18n._(\"denied\");}}else{operationText=/*i18n*/i18n._(\"updated\");}labeledLinks.push(buildLabeledLink(\"\".concat(operationText,\" \").concat(activity.object1),buildAnchor(activity.summary_fields[activity.object1][0],activity.object1,activity)));}else{labeledLinks.push(buildLabeledLink(\"\".concat(getPastTense(activity.operation),\" \").concat(activity.object1),buildAnchor(activity.summary_fields[activity.object1][0],activity.object1,activity)));}break;case'create':labeledLinks.push(buildLabeledLink(\"\".concat(getPastTense(activity.operation),\" \").concat(activity.object1),buildAnchor(activity.changes,activity.object1,activity)));break;default:break;}break;}}catch(err){return/*#__PURE__*/_jsx(\"span\",{children:/*i18n*/i18n._(\"Event summary not available\")});}return/*#__PURE__*/_jsx(\"span\",{children:labeledLinks.reduce(function(acc,x){return acc===null?x:/*#__PURE__*/_jsxs(_Fragment,{children:[acc,\" \",x]});},null)});}export default ActivityStreamDescription;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/ActivityStream/ActivityStreamDescription.js"],"names":["React","Link","buildAnchor","obj","resource","activity","url","name","summary_fields","Error","id","operation","changes","inventory","split","slice","inventory_id","object1_pk","kind","job_template","jt_id","workflow_job_template","wfjt_id","project","system_job_template","wfjt_name","inventoryId","reverse","workflow_job","workflow_approval","workflow_approval_template","username","err","getPastTense","item","test","isGroupRelationship","object1","object2","group","length","buildLabeledLink","label","link","ActivityStreamDescription","labeledLinks","object_association","object_type","push","role","role_field","status","operationText","timed_out","reduce","acc","x"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { t } from '@lingui/macro';\n\nconst buildAnchor = (obj, resource, activity) => {\n  let url;\n  let name;\n  // try/except pattern asserts that:\n  // if we encounter a case where a UI url can't or\n  // shouldn't be generated, just supply the name of the resource\n  try {\n    // catch-all case to avoid generating urls if a resource has been deleted\n    // if a resource still exists, it'll be serialized in the activity's summary_fields\n    if (!activity.summary_fields[resource]) {\n      throw new Error('The referenced resource no longer exists');\n    }\n    switch (resource) {\n      case 'custom_inventory_script':\n        url = `/inventory_scripts/${obj.id}/`;\n        break;\n      case 'group':\n        if (\n          activity.operation === 'create' ||\n          activity.operation === 'delete'\n        ) {\n          // the API formats the changes.inventory field as str 'myInventoryName-PrimaryKey'\n          const [inventory_id] = activity.changes.inventory\n            .split('-')\n            .slice(-1);\n          url = `/inventories/inventory/${inventory_id}/groups/${activity.changes.id}/details/`;\n        } else {\n          url = `/inventories/inventory/${\n            activity.summary_fields.inventory[0].id\n          }/groups/${\n            activity.changes.id || activity.changes.object1_pk\n          }/details/`;\n        }\n        break;\n      case 'host':\n        url = `/hosts/${obj.id}/`;\n        break;\n      case 'job':\n        url = `/jobs/${obj.id}/`;\n        break;\n      case 'inventory':\n        url =\n          obj?.kind === 'smart'\n            ? `/inventories/smart_inventory/${obj.id}/`\n            : `/inventories/inventory/${obj.id}/`;\n        break;\n      case 'schedule':\n        // schedule urls depend on the resource they're associated with\n        if (activity.summary_fields.job_template) {\n          const jt_id = activity.summary_fields.job_template[0].id;\n          url = `/templates/job_template/${jt_id}/schedules/${obj.id}/`;\n        } else if (activity.summary_fields.workflow_job_template) {\n          const wfjt_id = activity.summary_fields.workflow_job_template[0].id;\n          url = `/templates/workflow_job_template/${wfjt_id}/schedules/${obj.id}/`;\n        } else if (activity.summary_fields.project) {\n          url = `/projects/${activity.summary_fields.project[0].id}/schedules/${obj.id}/`;\n        } else if (activity.summary_fields.system_job_template) {\n          url = null;\n        } else {\n          // urls for inventory sync schedules currently depend on having\n          // an inventory id and group id\n          throw new Error(\n            'activity.summary_fields to build this url not implemented yet'\n          );\n        }\n        break;\n      case 'setting':\n        url = `/settings/`;\n        break;\n      case 'notification_template':\n        url = `/notification_templates/${obj.id}/`;\n        break;\n      case 'role':\n        throw new Error(\n          'role object management is not consolidated to a single UI view'\n        );\n      case 'job_template':\n        url = `/templates/job_template/${obj.id}/`;\n        break;\n      case 'workflow_job_template':\n        url = `/templates/workflow_job_template/${obj.id}/`;\n        break;\n      case 'workflow_job_template_node': {\n        const { id: wfjt_id, name: wfjt_name } =\n          activity.summary_fields.workflow_job_template[0];\n        url = `/templates/workflow_job_template/${wfjt_id}/`;\n        name = wfjt_name;\n        break;\n      }\n      case 'workflow_job':\n        url = `/jobs/workflow/${obj.id}/`;\n        break;\n      case 'label':\n        url = null;\n        break;\n      case 'inventory_source': {\n        const inventoryId = (obj.inventory || '').split('-').reverse()[0];\n        url = `/inventories/inventory/${inventoryId}/sources/${obj.id}/details/`;\n        break;\n      }\n      case 'o_auth2_application':\n        url = `/applications/${obj.id}/`;\n        break;\n      case 'workflow_approval':\n        url = `/jobs/workflow/${activity.summary_fields.workflow_job[0].id}/output/`;\n        name = `${activity.summary_fields.workflow_job[0].name} | ${activity.summary_fields.workflow_approval[0].name}`;\n        break;\n      case 'workflow_approval_template':\n        url = `/templates/workflow_job_template/${activity.summary_fields.workflow_job_template[0].id}/visualizer/`;\n        name = `${activity.summary_fields.workflow_job_template[0].name} | ${activity.summary_fields.workflow_approval_template[0].name}`;\n        break;\n      default:\n        url = `/${resource}s/${obj.id}/`;\n    }\n\n    name = name || obj.name || obj.username;\n\n    if (url) {\n      return <Link to={url}>{name}</Link>;\n    }\n\n    return <span>{name}</span>;\n  } catch (err) {\n    return <span>{obj.name || obj.username || ''}</span>;\n  }\n};\n\nconst getPastTense = (item) => (/e$/.test(item) ? `${item}d` : `${item}ed`);\n\nconst isGroupRelationship = (item) =>\n  item.object1 === 'group' &&\n  item.object2 === 'group' &&\n  item.summary_fields.group.length > 1;\n\nconst buildLabeledLink = (label, link) => (\n  <span>\n    {label} {link}\n  </span>\n);\n\nfunction ActivityStreamDescription({ activity }) {\n  const labeledLinks = [];\n  // Activity stream objects will outlive the resources they reference\n  // in that case, summary_fields will not be available - show generic error text instead\n  try {\n    switch (activity.object_association) {\n      // explicit role dis+associations\n      case 'role': {\n        let { object1, object2 } = activity;\n\n        // if object1 winds up being the role's resource, we need to swap the objects\n        // in order to make the sentence make sense.\n        if (activity.object_type === object1) {\n          object1 = activity.object2;\n          object2 = activity.object1;\n        }\n\n        // object1 field is resource targeted by the dis+association\n        // object2 field is the resource the role is inherited from\n        // summary_field.role[0] contains ref info about the role\n        switch (activity.operation) {\n          // expected outcome: \"disassociated <object2> role_name from <object1>\"\n          case 'disassociate':\n            if (isGroupRelationship(activity)) {\n              labeledLinks.push(\n                buildLabeledLink(\n                  getPastTense(activity.operation),\n                  buildAnchor(\n                    activity.summary_fields.group[1],\n                    object2,\n                    activity\n                  )\n                )\n              );\n              labeledLinks.push(\n                buildLabeledLink(\n                  `${activity.summary_fields.role[0].role_field} from`,\n                  buildAnchor(\n                    activity.summary_fields.group[0],\n                    object1,\n                    activity\n                  )\n                )\n              );\n            } else {\n              labeledLinks.push(\n                buildLabeledLink(\n                  getPastTense(activity.operation),\n                  buildAnchor(\n                    activity.summary_fields[object2][0],\n                    object2,\n                    activity\n                  )\n                )\n              );\n              labeledLinks.push(\n                buildLabeledLink(\n                  `${activity.summary_fields.role[0].role_field} from`,\n                  buildAnchor(\n                    activity.summary_fields[object1][0],\n                    object1,\n                    activity\n                  )\n                )\n              );\n            }\n            break;\n          // expected outcome: \"associated <object2> role_name to <object1>\"\n          case 'associate':\n            if (isGroupRelationship(activity)) {\n              labeledLinks.push(\n                buildLabeledLink(\n                  getPastTense(activity.operation),\n                  buildAnchor(\n                    activity.summary_fields.group[1],\n                    object2,\n                    activity\n                  )\n                )\n              );\n              labeledLinks.push(\n                buildLabeledLink(\n                  `${activity.summary_fields.role[0].role_field} to`,\n                  buildAnchor(\n                    activity.summary_fields.group[0],\n                    object1,\n                    activity\n                  )\n                )\n              );\n            } else {\n              labeledLinks.push(\n                buildLabeledLink(\n                  getPastTense(activity.operation),\n                  buildAnchor(\n                    activity.summary_fields[object2][0],\n                    object2,\n                    activity\n                  )\n                )\n              );\n              labeledLinks.push(\n                buildLabeledLink(\n                  `${activity.summary_fields.role[0].role_field} to`,\n                  buildAnchor(\n                    activity.summary_fields[object1][0],\n                    object1,\n                    activity\n                  )\n                )\n              );\n            }\n            break;\n          default:\n            break;\n        }\n        break;\n        // inherited role dis+associations (logic identical to case 'role')\n      }\n      case 'parents':\n        // object1 field is resource targeted by the dis+association\n        // object2 field is the resource the role is inherited from\n        // summary_field.role[0] contains ref info about the role\n        switch (activity.operation) {\n          // expected outcome: \"disassociated <object2> role_name from <object1>\"\n          case 'disassociate':\n            if (isGroupRelationship(activity)) {\n              labeledLinks.push(\n                buildLabeledLink(\n                  `${getPastTense(activity.operation)} ${activity.object2}`,\n                  buildAnchor(\n                    activity.summary_fields.group[1],\n                    activity.object2,\n                    activity\n                  )\n                )\n              );\n              labeledLinks.push(\n                buildLabeledLink(\n                  `from ${activity.object1}`,\n                  buildAnchor(\n                    activity.summary_fields.group[0],\n                    activity.object1,\n                    activity\n                  )\n                )\n              );\n            } else {\n              labeledLinks.push(\n                buildLabeledLink(\n                  getPastTense(activity.operation),\n                  buildAnchor(\n                    activity.summary_fields[activity.object2][0],\n                    activity.object2,\n                    activity\n                  )\n                )\n              );\n              labeledLinks.push(\n                buildLabeledLink(\n                  `${activity.summary_fields.role[0].role_field} from`,\n                  buildAnchor(\n                    activity.summary_fields[activity.object1][0],\n                    activity.object1,\n                    activity\n                  )\n                )\n              );\n            }\n            break;\n          // expected outcome: \"associated <object2> role_name to <object1>\"\n          case 'associate':\n            if (isGroupRelationship(activity)) {\n              labeledLinks.push(\n                buildLabeledLink(\n                  `${getPastTense(activity.operation)} ${activity.object1}`,\n                  buildAnchor(\n                    activity.summary_fields.group[0],\n                    activity.object1,\n                    activity\n                  )\n                )\n              );\n              labeledLinks.push(\n                buildLabeledLink(\n                  `to ${activity.object2}`,\n                  buildAnchor(\n                    activity.summary_fields.group[1],\n                    activity.object2,\n                    activity\n                  )\n                )\n              );\n            } else {\n              labeledLinks.push(\n                buildLabeledLink(\n                  getPastTense(activity.operation),\n                  buildAnchor(\n                    activity.summary_fields[activity.object2][0],\n                    activity.object2,\n                    activity\n                  )\n                )\n              );\n              labeledLinks.push(\n                buildLabeledLink(\n                  `${activity.summary_fields.role[0].role_field} to`,\n                  buildAnchor(\n                    activity.summary_fields[activity.object1][0],\n                    activity.object1,\n                    activity\n                  )\n                )\n              );\n            }\n            break;\n          default:\n            break;\n        }\n        break;\n      // CRUD operations / resource on resource dis+associations\n      default:\n        switch (activity.operation) {\n          // expected outcome: \"disassociated <object2> from <object1>\"\n          case 'disassociate':\n            if (isGroupRelationship(activity)) {\n              labeledLinks.push(\n                buildLabeledLink(\n                  `${getPastTense(activity.operation)} ${activity.object2}`,\n                  buildAnchor(\n                    activity.summary_fields.group[1],\n                    activity.object2,\n                    activity\n                  )\n                )\n              );\n              labeledLinks.push(\n                buildLabeledLink(\n                  `from ${activity.object1}`,\n                  buildAnchor(\n                    activity.summary_fields.group[0],\n                    activity.object1,\n                    activity\n                  )\n                )\n              );\n            } else if (\n              activity.object1 === 'workflow_job_template_node' &&\n              activity.object2 === 'workflow_job_template_node'\n            ) {\n              labeledLinks.push(\n                buildLabeledLink(\n                  `${getPastTense(activity.operation)} two nodes on workflow`,\n                  buildAnchor(\n                    activity.summary_fields[activity.object1[0]],\n                    activity.object1,\n                    activity\n                  )\n                )\n              );\n            } else {\n              labeledLinks.push(\n                buildLabeledLink(\n                  `${getPastTense(activity.operation)} ${activity.object2}`,\n                  buildAnchor(\n                    activity.summary_fields[activity.object2][0],\n                    activity.object2,\n                    activity\n                  )\n                )\n              );\n              labeledLinks.push(\n                buildLabeledLink(\n                  `from ${activity.object1}`,\n                  buildAnchor(\n                    activity.summary_fields[activity.object1][0],\n                    activity.object1,\n                    activity\n                  )\n                )\n              );\n            }\n            break;\n          // expected outcome \"associated <object2> to <object1>\"\n          case 'associate':\n            // groups are the only resource that can be associated/disassociated into each other\n            if (isGroupRelationship(activity)) {\n              labeledLinks.push(\n                buildLabeledLink(\n                  `${getPastTense(activity.operation)} ${activity.object1}`,\n                  buildAnchor(\n                    activity.summary_fields.group[0],\n                    activity.object1,\n                    activity\n                  )\n                )\n              );\n              labeledLinks.push(\n                buildLabeledLink(\n                  `to ${activity.object2}`,\n                  buildAnchor(\n                    activity.summary_fields.group[1],\n                    activity.object2,\n                    activity\n                  )\n                )\n              );\n            } else if (\n              activity.object1 === 'workflow_job_template_node' &&\n              activity.object2 === 'workflow_job_template_node'\n            ) {\n              labeledLinks.push(\n                buildLabeledLink(\n                  `${getPastTense(activity.operation)} two nodes on workflow`,\n                  buildAnchor(\n                    activity.summary_fields[activity.object1[0]],\n                    activity.object1,\n                    activity\n                  )\n                )\n              );\n            } else {\n              labeledLinks.push(\n                buildLabeledLink(\n                  `${getPastTense(activity.operation)} ${activity.object1}`,\n                  buildAnchor(\n                    activity.summary_fields[activity.object1][0],\n                    activity.object1,\n                    activity\n                  )\n                )\n              );\n              labeledLinks.push(\n                buildLabeledLink(\n                  `to ${activity.object2}`,\n                  buildAnchor(\n                    activity.summary_fields[activity.object2][0],\n                    activity.object2,\n                    activity\n                  )\n                )\n              );\n            }\n            break;\n          case 'delete':\n            labeledLinks.push(\n              buildLabeledLink(\n                `${getPastTense(activity.operation)} ${activity.object1}`,\n                buildAnchor(activity.changes, activity.object1, activity)\n              )\n            );\n            break;\n          // expected outcome: \"operation <object1>\"\n          case 'update':\n            if (\n              activity.object1 === 'workflow_approval' &&\n              activity?.changes?.status?.length === 2\n            ) {\n              let operationText = '';\n              if (activity.changes.status[1] === 'successful') {\n                operationText = t`approved`;\n              } else if (activity.changes.status[1] === 'failed') {\n                if (\n                  activity.changes.timed_out &&\n                  activity.changes.timed_out[1] === true\n                ) {\n                  operationText = t`timed out`;\n                } else {\n                  operationText = t`denied`;\n                }\n              } else {\n                operationText = t`updated`;\n              }\n              labeledLinks.push(\n                buildLabeledLink(\n                  `${operationText} ${activity.object1}`,\n                  buildAnchor(\n                    activity.summary_fields[activity.object1][0],\n                    activity.object1,\n                    activity\n                  )\n                )\n              );\n            } else {\n              labeledLinks.push(\n                buildLabeledLink(\n                  `${getPastTense(activity.operation)} ${activity.object1}`,\n                  buildAnchor(\n                    activity.summary_fields[activity.object1][0],\n                    activity.object1,\n                    activity\n                  )\n                )\n              );\n            }\n            break;\n          case 'create':\n            labeledLinks.push(\n              buildLabeledLink(\n                `${getPastTense(activity.operation)} ${activity.object1}`,\n                buildAnchor(activity.changes, activity.object1, activity)\n              )\n            );\n            break;\n          default:\n            break;\n        }\n        break;\n    }\n  } catch (err) {\n    return <span>{t`Event summary not available`}</span>;\n  }\n\n  return (\n    <span>\n      {labeledLinks.reduce(\n        (acc, x) =>\n          acc === null ? (\n            x\n          ) : (\n            <>\n              {acc} {x}\n            </>\n          ),\n        null\n      )}\n    </span>\n  );\n}\n\nexport default ActivityStreamDescription;\n"]},"metadata":{},"sourceType":"module"}