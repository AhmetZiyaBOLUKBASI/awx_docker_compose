{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Toolbar/toolbar';\nimport { css } from '@patternfly/react-styles';\nexport var ToolbarExpandIconWrapper = function ToolbarExpandIconWrapper(_a) {\n  var children = _a.children,\n      className = _a.className,\n      props = __rest(_a, [\"children\", \"className\"]);\n\n  return React.createElement(\"span\", Object.assign({}, props, {\n    className: css(styles.toolbarExpandAllIcon, className)\n  }), children);\n};\nToolbarExpandIconWrapper.displayName = 'ToolbarExpandIconWrapper';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Toolbar/ToolbarExpandIconWrapper.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,yDAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AASA,OAAO,IAAM,wBAAwB,GAA2D,SAAnF,wBAAmF,CAAC,EAAD,EAI5D;AAJ6D,MAC/F,QAD+F,GAEtF,EAFsF,CAC/F,QAD+F;AAAA,MAE/F,SAF+F,GAEtF,EAFsF,CAE/F,SAF+F;AAAA,MAG5F,KAH4F,GAGvF,MAAA,CAAA,EAAA,EAHuF,CAAA,UAAA,EAAA,WAAA,CAGvF,CAHuF;;AAI5D,SACnC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAU,KAAV,EAAe;AAAE,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,oBAAR,EAA8B,SAA9B;AAAhB,GAAf,CAAA,EACG,QADH,CADmC;AAIpC,CARM;AASP,wBAAwB,CAAC,WAAzB,GAAuC,0BAAvC","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Toolbar/toolbar';\nimport { css } from '@patternfly/react-styles';\n\nexport interface ToolbarExpandIconWrapperProps extends React.HTMLProps<HTMLSpanElement> {\n  /** Icon content used for the expand all or collapse all indication. */\n  children?: React.ReactNode;\n  /** Additional classes added to the span */\n  className?: string;\n}\n\nexport const ToolbarExpandIconWrapper: React.FunctionComponent<ToolbarExpandIconWrapperProps> = ({\n  children,\n  className,\n  ...props\n}: ToolbarExpandIconWrapperProps) => (\n  <span {...props} className={css(styles.toolbarExpandAllIcon, className)}>\n    {children}\n  </span>\n);\nToolbarExpandIconWrapper.displayName = 'ToolbarExpandIconWrapper';\n"]},"metadata":{},"sourceType":"module"}