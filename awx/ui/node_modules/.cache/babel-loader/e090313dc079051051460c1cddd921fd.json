{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/OptionsMenu/options-menu';\nimport { DropdownItem } from '../Dropdown';\nimport CheckIcon from '@patternfly/react-icons/dist/esm/icons/check-icon';\nexport var OptionsMenuItem = function OptionsMenuItem(_a) {\n  var _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      _a$isSelected = _a.isSelected,\n      isSelected = _a$isSelected === void 0 ? false : _a$isSelected,\n      _a$onSelect = _a.onSelect,\n      onSelect = _a$onSelect === void 0 ? function () {\n    return null;\n  } : _a$onSelect,\n      _a$id = _a.id,\n      id = _a$id === void 0 ? '' : _a$id,\n      isDisabled = _a.isDisabled,\n      props = __rest(_a, [\"children\", \"isSelected\", \"onSelect\", \"id\", \"isDisabled\"]);\n\n  return React.createElement(DropdownItem, Object.assign({\n    id: id,\n    component: \"button\",\n    isDisabled: isDisabled,\n    onClick: function onClick(event) {\n      return onSelect(event);\n    }\n  }, isDisabled && {\n    'aria-disabled': true\n  }, props), children, isSelected && React.createElement(\"span\", {\n    className: css(styles.optionsMenuMenuItemIcon)\n  }, React.createElement(CheckIcon, {\n    \"aria-hidden\": isSelected\n  })));\n};\nOptionsMenuItem.displayName = 'OptionsMenuItem';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/OptionsMenu/OptionsMenuItem.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,kEAAnB;AACA,SAAS,YAAT,QAA6B,aAA7B;AACA,OAAO,SAAP,MAAsB,mDAAtB;AAkBA,OAAO,IAAM,eAAe,GAAkD,SAAjE,eAAiE,CAAC,EAAD,EAOnD;AAPoD,oBAKnE,EALmE,CAC7E,QAD6E;AAAA,MAC7E,QAD6E,4BAClE,IADkE;AAAA,sBAKnE,EALmE,CAE7E,UAF6E;AAAA,MAE7E,UAF6E,8BAEhE,KAFgE;AAAA,oBAKnE,EALmE,CAG7E,QAH6E;AAAA,MAG7E,QAH6E,4BAGlE;AAAA,WAAM,IAAN;AAAA,GAHkE;AAAA,cAKnE,EALmE,CAI7E,EAJ6E;AAAA,MAI7E,EAJ6E,sBAIxE,EAJwE;AAAA,MAK7E,UAL6E,GAKnE,EALmE,CAK7E,UAL6E;AAAA,MAM1E,KAN0E,GAMrE,MAAA,CAAA,EAAA,EANqE,CAAA,UAAA,EAAA,YAAA,EAAA,UAAA,EAAA,IAAA,EAAA,YAAA,CAMrE,CANqE;;AAOnD,SAC1B,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,MAAA,CAAA,MAAA,CAAA;AACX,IAAA,EAAE,EAAE,EADO;AAEX,IAAA,SAAS,EAAC,QAFC;AAGX,IAAA,UAAU,EAAE,UAHD;AAIX,IAAA,OAAO,EAAE,iBAAC,KAAD;AAAA,aAAgB,QAAQ,CAAC,KAAD,CAAxB;AAAA;AAJE,GAAA,EAKN,UAAU,IAAI;AAAE,qBAAiB;AAAnB,GALR,EAMP,KANO,CAAb,EAQG,QARH,EASG,UAAU,IACT,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,uBAAR;AAApB,GAAA,EACE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU;AAAA,mBAAc;AAAd,GAAV,CADF,CAVJ,CAD0B;AAgB3B,CAvBM;AAwBP,eAAe,CAAC,WAAhB,GAA8B,iBAA9B","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/OptionsMenu/options-menu';\nimport { DropdownItem } from '../Dropdown';\nimport CheckIcon from '@patternfly/react-icons/dist/esm/icons/check-icon';\n\nexport interface OptionsMenuItemProps\n  extends Omit<React.HTMLProps<HTMLAnchorElement>, 'onSelect' | 'onClick' | 'onKeyDown' | 'type'> {\n  /** Anything which can be rendered as an options menu item */\n  children?: React.ReactNode;\n  /** Classes applied to root element of an options menu item */\n  className?: string;\n  /** Render options menu item as selected */\n  isSelected?: boolean;\n  /** Render options menu item as disabled option */\n  isDisabled?: boolean;\n  /** Callback for when this options menu item is selected */\n  onSelect?: (event?: React.MouseEvent<HTMLAnchorElement> | React.KeyboardEvent) => void;\n  /** Unique id of this options menu item */\n  id?: string;\n}\n\nexport const OptionsMenuItem: React.FunctionComponent<OptionsMenuItemProps> = ({\n  children = null as React.ReactNode,\n  isSelected = false,\n  onSelect = () => null as any,\n  id = '',\n  isDisabled,\n  ...props\n}: OptionsMenuItemProps) => (\n  <DropdownItem\n    id={id}\n    component=\"button\"\n    isDisabled={isDisabled}\n    onClick={(event: any) => onSelect(event)}\n    {...(isDisabled && { 'aria-disabled': true })}\n    {...props}\n  >\n    {children}\n    {isSelected && (\n      <span className={css(styles.optionsMenuMenuItemIcon)}>\n        <CheckIcon aria-hidden={isSelected} />\n      </span>\n    )}\n  </DropdownItem>\n);\nOptionsMenuItem.displayName = 'OptionsMenuItem';\n"]},"metadata":{},"sourceType":"module"}