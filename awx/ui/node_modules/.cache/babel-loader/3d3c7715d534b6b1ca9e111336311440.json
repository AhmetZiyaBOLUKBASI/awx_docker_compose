{"ast":null,"code":"import{i18n}from\"@lingui/core\";import React from'react';import{Link}from'react-router-dom';import{Chip,Tooltip,Button}from'@patternfly/react-core';import{Tr,Td}from'@patternfly/react-table';import{PencilAltIcon}from'@patternfly/react-icons';import styled from'styled-components';import ChipGroup from'components/ChipGroup';import{ActionItem,ActionsTd}from'components/PaginatedTable';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Required=styled.span.withConfig({displayName:\"SurveyListItem__Required\",componentId:\"sc-1hs1fj1-0\"})([\"color:var(--pf-global--danger-color--100);margin-left:var(--pf-global--spacer--xs);\"]);var SurveyActionsTd=styled(ActionsTd).withConfig({displayName:\"SurveyListItem__SurveyActionsTd\",componentId:\"sc-1hs1fj1-1\"})([\"&&{padding-right:35px;}\"]);function SurveyListItem(_ref){var canEdit=_ref.canEdit,question=_ref.question,isChecked=_ref.isChecked,onSelect=_ref.onSelect,rowIndex=_ref.rowIndex;return/*#__PURE__*/_jsxs(Tr,{ouiaId:\"survey-row-\".concat(question.variable),children:[/*#__PURE__*/_jsx(Td,{\"data-cy\":\"\".concat(question.variable,\"-select\"),select:{rowIndex:rowIndex,isSelected:isChecked,onSelect:onSelect},dataLabel:/*i18n*/i18n._(\"Selected\")}),/*#__PURE__*/_jsx(Td,{\"data-cy\":\"\".concat(question.variable,\"-name\"),id:\"survey-list-item-\".concat(question.variable),dataLabel:/*i18n*/i18n._(\"Name\"),children:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Link,{to:\"survey/edit?question_variable=\".concat(encodeURIComponent(question.variable)),children:/*#__PURE__*/_jsx(\"b\",{children:question.question_name})}),question.required&&/*#__PURE__*/_jsx(Required,{\"aria-label\":/*i18n*/i18n._(\"Required\"),className:\"pf-c-form__label-required\",\"aria-hidden\":\"true\",children:\"*\"})]})}),/*#__PURE__*/_jsx(Td,{\"data-cy\":\"\".concat(question.variable,\"-type\"),dataLabel:/*i18n*/i18n._(\"Type\"),children:question.type}),/*#__PURE__*/_jsxs(Td,{dataLabel:/*i18n*/i18n._(\"Default\"),children:[[question.type].includes('password')&&/*#__PURE__*/_jsx(\"span\",{children:/*i18n*/i18n._(\"encrypted\").toUpperCase()}),[question.type].includes('multiselect')&&question.default.length>0&&/*#__PURE__*/_jsx(ChipGroup,{numChips:5,totalChips:question.default.split('\\n').length,ouiaId:\"multiselect-default-chips\",children:question.default.split('\\n').map(function(chip){return/*#__PURE__*/_jsx(Chip,{isReadOnly:true,ouiaId:\"multiselect-default-\".concat(chip,\"-chip\"),children:chip},chip);})}),![question.type].includes('password')&&![question.type].includes('multiselect')&&/*#__PURE__*/_jsx(\"span\",{children:question.default})]}),/*#__PURE__*/_jsx(SurveyActionsTd,{dataLabel:/*i18n*/i18n._(\"Actions\"),children:/*#__PURE__*/_jsx(ActionItem,{visible:canEdit,children:/*#__PURE__*/_jsx(Tooltip,{content:/*i18n*/i18n._(\"Edit Survey\"),position:\"top\",children:/*#__PURE__*/_jsx(Button,{ouiaId:\"edit-survey-\".concat(question.variable),variant:\"plain\",component:Link,to:\"survey/edit?question_variable=\".concat(encodeURIComponent(question.variable)),children:/*#__PURE__*/_jsx(PencilAltIcon,{})})})})})]});}export default SurveyListItem;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Template/Survey/SurveyListItem.js"],"names":["React","Link","Chip","Tooltip","Button","Tr","Td","PencilAltIcon","styled","ChipGroup","ActionItem","ActionsTd","Required","span","SurveyActionsTd","SurveyListItem","canEdit","question","isChecked","onSelect","rowIndex","variable","isSelected","encodeURIComponent","question_name","required","type","includes","toUpperCase","default","length","split","map","chip"],"mappings":"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","sourcesContent":["import 'styled-components/macro';\nimport React from 'react';\nimport { t } from '@lingui/macro';\nimport { Link } from 'react-router-dom';\nimport { Chip, Tooltip, Button } from '@patternfly/react-core';\n\nimport { Tr, Td } from '@patternfly/react-table';\nimport { PencilAltIcon } from '@patternfly/react-icons';\nimport styled from 'styled-components';\nimport ChipGroup from 'components/ChipGroup';\nimport { ActionItem, ActionsTd } from 'components/PaginatedTable';\n\nconst Required = styled.span`\n  color: var(--pf-global--danger-color--100);\n  margin-left: var(--pf-global--spacer--xs);\n`;\n\nconst SurveyActionsTd = styled(ActionsTd)`\n  && {\n    padding-right: 35px;\n  }\n`;\n\nfunction SurveyListItem({ canEdit, question, isChecked, onSelect, rowIndex }) {\n  return (\n    <Tr ouiaId={`survey-row-${question.variable}`}>\n      <Td\n        data-cy={`${question.variable}-select`}\n        select={{\n          rowIndex,\n          isSelected: isChecked,\n          onSelect,\n        }}\n        dataLabel={t`Selected`}\n      />\n      <Td\n        data-cy={`${question.variable}-name`}\n        id={`survey-list-item-${question.variable}`}\n        dataLabel={t`Name`}\n      >\n        <>\n          <Link\n            to={`survey/edit?question_variable=${encodeURIComponent(\n              question.variable\n            )}`}\n          >\n            <b>{question.question_name}</b>\n          </Link>\n          {question.required && (\n            <Required\n              aria-label={t`Required`}\n              className=\"pf-c-form__label-required\"\n              aria-hidden=\"true\"\n            >\n              *\n            </Required>\n          )}\n        </>\n      </Td>\n      <Td data-cy={`${question.variable}-type`} dataLabel={t`Type`}>\n        {question.type}\n      </Td>\n      <Td dataLabel={t`Default`}>\n        {[question.type].includes('password') && (\n          <span>{t`encrypted`.toUpperCase()}</span>\n        )}\n        {[question.type].includes('multiselect') &&\n          question.default.length > 0 && (\n            <ChipGroup\n              numChips={5}\n              totalChips={question.default.split('\\n').length}\n              ouiaId=\"multiselect-default-chips\"\n            >\n              {question.default.split('\\n').map((chip) => (\n                <Chip\n                  key={chip}\n                  isReadOnly\n                  ouiaId={`multiselect-default-${chip}-chip`}\n                >\n                  {chip}\n                </Chip>\n              ))}\n            </ChipGroup>\n          )}\n        {![question.type].includes('password') &&\n          ![question.type].includes('multiselect') && (\n            <span>{question.default}</span>\n          )}\n      </Td>\n      <SurveyActionsTd dataLabel={t`Actions`}>\n        <ActionItem visible={canEdit}>\n          <Tooltip content={t`Edit Survey`} position=\"top\">\n            <Button\n              ouiaId={`edit-survey-${question.variable}`}\n              variant=\"plain\"\n              component={Link}\n              to={`survey/edit?question_variable=${encodeURIComponent(\n                question.variable\n              )}`}\n            >\n              <PencilAltIcon />\n            </Button>\n          </Tooltip>\n        </ActionItem>\n      </SurveyActionsTd>\n    </Tr>\n  );\n}\nexport default SurveyListItem;\n"]},"metadata":{},"sourceType":"module"}