{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/ToggleGroup/toggle-group';\nimport { ToggleGroupItem } from './ToggleGroupItem';\nexport var ToggleGroup = function ToggleGroup(_a) {\n  var className = _a.className,\n      children = _a.children,\n      _a$isCompact = _a.isCompact,\n      isCompact = _a$isCompact === void 0 ? false : _a$isCompact,\n      _a$areAllGroupsDisabl = _a.areAllGroupsDisabled,\n      areAllGroupsDisabled = _a$areAllGroupsDisabl === void 0 ? false : _a$areAllGroupsDisabl,\n      ariaLabel = _a['aria-label'],\n      props = __rest(_a, [\"className\", \"children\", \"isCompact\", \"areAllGroupsDisabled\", 'aria-label']);\n\n  var toggleGroupItemList = React.Children.map(children, function (child) {\n    var childCompName = child.type.name;\n    return childCompName !== ToggleGroupItem.name ? child : React.cloneElement(child, areAllGroupsDisabled ? {\n      isDisabled: true\n    } : {});\n  });\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.toggleGroup, isCompact && styles.modifiers.compact, className),\n    role: \"group\",\n    \"aria-label\": ariaLabel\n  }, props), toggleGroupItemList);\n};\nToggleGroup.displayName = 'ToggleGroup';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/ToggleGroup/ToggleGroup.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,kEAAnB;AACA,SAAS,eAAT,QAAgC,mBAAhC;AAeA,OAAO,IAAM,WAAW,GAA8C,SAAzD,WAAyD,CAAC,EAAD,EAO/C;AAPgD,MACrE,SADqE,GAK9C,EAL8C,CACrE,SADqE;AAAA,MAErE,QAFqE,GAK9C,EAL8C,CAErE,QAFqE;AAAA,qBAK9C,EAL8C,CAGrE,SAHqE;AAAA,MAGrE,SAHqE,6BAGzD,KAHyD;AAAA,8BAK9C,EAL8C,CAIrE,oBAJqE;AAAA,MAIrE,oBAJqE,sCAI9C,KAJ8C;AAAA,MAKvD,SALuD,GAK9C,EAL8C,CAKrE,YALqE;AAAA,MAMlE,KANkE,GAM7D,MAAA,CAAA,EAAA,EAN6D,CAAA,WAAA,EAAA,UAAA,EAAA,WAAA,EAAA,sBAAA,EAAA,YAAA,CAM7D,CAN6D;;AAQrE,MAAM,mBAAmB,GAAG,KAAK,CAAC,QAAN,CAAe,GAAf,CAAmB,QAAnB,EAA6B,UAAA,KAAK,EAAG;AAC/D,QAAM,aAAa,GAAI,KAAa,CAAC,IAAd,CAAmB,IAA1C;AACA,WAAO,aAAa,KAAK,eAAe,CAAC,IAAlC,GACH,KADG,GAEH,KAAK,CAAC,YAAN,CAAmB,KAAnB,EAAgD,oBAAoB,GAAG;AAAE,MAAA,UAAU,EAAE;AAAd,KAAH,GAA0B,EAA9F,CAFJ;AAGD,GAL2B,CAA5B;AAOA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACE,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,WAAR,EAAqB,SAAS,IAAI,MAAM,CAAC,SAAP,CAAiB,OAAnD,EAA4D,SAA5D,CADhB;AAEE,IAAA,IAAI,EAAC,OAFP;AAEc,kBACA;AAHd,GAAA,EAIM,KAJN,CAAA,EAMG,mBANH,CADF;AAUD,CAzBM;AA0BP,WAAW,CAAC,WAAZ,GAA0B,aAA1B","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/ToggleGroup/toggle-group';\nimport { ToggleGroupItem } from './ToggleGroupItem';\n\nexport interface ToggleGroupProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered inside the toggle group */\n  children?: React.ReactNode;\n  /** Additional classes added to the toggle group */\n  className?: string;\n  /** Modifies the toggle group to include compact styling. */\n  isCompact?: boolean;\n  /** Disable all toggle group items under this component. */\n  areAllGroupsDisabled?: boolean;\n  /** Accessible label for the toggle group */\n  'aria-label'?: string;\n}\n\nexport const ToggleGroup: React.FunctionComponent<ToggleGroupProps> = ({\n  className,\n  children,\n  isCompact = false,\n  areAllGroupsDisabled = false,\n  'aria-label': ariaLabel,\n  ...props\n}: ToggleGroupProps) => {\n  const toggleGroupItemList = React.Children.map(children, child => {\n    const childCompName = (child as any).type.name;\n    return childCompName !== ToggleGroupItem.name\n      ? child\n      : React.cloneElement(child as React.ReactElement, areAllGroupsDisabled ? { isDisabled: true } : {});\n  });\n\n  return (\n    <div\n      className={css(styles.toggleGroup, isCompact && styles.modifiers.compact, className)}\n      role=\"group\"\n      aria-label={ariaLabel}\n      {...props}\n    >\n      {toggleGroupItemList}\n    </div>\n  );\n};\nToggleGroup.displayName = 'ToggleGroup';\n"]},"metadata":{},"sourceType":"module"}