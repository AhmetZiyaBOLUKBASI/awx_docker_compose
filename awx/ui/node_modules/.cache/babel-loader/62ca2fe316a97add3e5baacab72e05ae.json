{"ast":null,"code":"import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useCallback,useState}from'react';import{MinusCircleIcon}from'@patternfly/react-icons';import{Button,Tooltip}from'@patternfly/react-core';import{getJobModel}from'util/jobs';import useRequest,{useDismissableError}from'hooks/useRequest';import AlertModal from'../AlertModal';import ErrorDetail from'../ErrorDetail';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function JobCancelButton(_ref){var _cancelError$response;var errorTitle=_ref.errorTitle,title=_ref.title,showIconButton=_ref.showIconButton,errorMessage=_ref.errorMessage,buttonText=_ref.buttonText,_ref$style=_ref.style,style=_ref$style===void 0?{}:_ref$style,_ref$job=_ref.job,job=_ref$job===void 0?{}:_ref$job,isDisabled=_ref.isDisabled,tooltip=_ref.tooltip,cancelationMessage=_ref.cancelationMessage,onCancelWorkflow=_ref.onCancelWorkflow;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsOpen(false);_context.next=3;return getJobModel(job.type).cancel(job.id);case 3:if(onCancelWorkflow){onCancelWorkflow();}case 4:case\"end\":return _context.stop();}}},_callee);})),[job.id,job.type,onCancelWorkflow]),{}),cancelError=_useRequest.error,cancelJob=_useRequest.request;var _useDismissableError=useDismissableError(cancelError),error=_useDismissableError.error,dismissCancelError=_useDismissableError.dismissError;var isAlreadyCancelled=(cancelError===null||cancelError===void 0?void 0:(_cancelError$response=cancelError.response)===null||_cancelError$response===void 0?void 0:_cancelError$response.status)===405;var renderTooltip=function renderTooltip(){if(tooltip){return tooltip;}return isAlreadyCancelled?null:title;};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Tooltip,{content:renderTooltip(),children:/*#__PURE__*/_jsx(\"div\",{children:showIconButton?/*#__PURE__*/_jsx(Button,{isDisabled:isDisabled||isAlreadyCancelled,\"aria-label\":title,ouiaId:\"cancel-job-button\",onClick:function onClick(){return setIsOpen(true);},variant:\"plain\",style:style,children:/*#__PURE__*/_jsx(MinusCircleIcon,{})}):/*#__PURE__*/_jsx(Button,{isDisabled:isDisabled||isAlreadyCancelled,\"aria-label\":title,variant:\"secondary\",ouiaId:\"cancel-job-button\",onClick:function onClick(){return setIsOpen(true);},style:style,children:buttonText||/*i18n*/i18n._(\"Cancel Job\")})})}),isOpen&&/*#__PURE__*/_jsx(AlertModal,{isOpen:isOpen,variant:\"danger\",onClose:function onClose(){return setIsOpen(false);},title:title,label:title,actions:[/*#__PURE__*/_jsx(Button,{id:\"cancel-job-confirm-button\",variant:\"danger\",\"aria-label\":/*i18n*/i18n._(\"Confirm cancel job\"),ouiaId:\"cancel-job-confirm-button\",onClick:cancelJob,children:/*i18n*/i18n._(\"Confirm cancellation\")},\"delete\"),/*#__PURE__*/_jsx(Button,{id:\"cancel-job-return-button\",ouiaId:\"return\",\"aria-label\":/*i18n*/i18n._(\"Return\"),variant:\"secondary\",onClick:function onClick(){return setIsOpen(false);},children:/*i18n*/i18n._(\"Return\")},\"cancel\")],children:cancelationMessage!==null&&cancelationMessage!==void 0?cancelationMessage:/*i18n*/i18n._(\"Are you sure you want to cancel this job?\")}),error&&!isAlreadyCancelled&&/*#__PURE__*/_jsxs(AlertModal,{isOpen:error,variant:\"danger\",onClose:dismissCancelError,title:errorTitle,label:errorTitle,children:[errorMessage,/*#__PURE__*/_jsx(ErrorDetail,{error:error})]})]});}export default JobCancelButton;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/JobCancelButton/JobCancelButton.js"],"names":["React","useCallback","useState","MinusCircleIcon","Button","Tooltip","getJobModel","useRequest","useDismissableError","AlertModal","ErrorDetail","JobCancelButton","errorTitle","title","showIconButton","errorMessage","buttonText","style","job","isDisabled","tooltip","cancelationMessage","onCancelWorkflow","isOpen","setIsOpen","type","cancel","id","cancelError","error","cancelJob","request","dismissCancelError","dismissError","isAlreadyCancelled","response","status","renderTooltip"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { t } from '@lingui/macro';\nimport { MinusCircleIcon } from '@patternfly/react-icons';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport { getJobModel } from 'util/jobs';\nimport useRequest, { useDismissableError } from 'hooks/useRequest';\nimport AlertModal from '../AlertModal';\nimport ErrorDetail from '../ErrorDetail';\n\nfunction JobCancelButton({\n  errorTitle,\n  title,\n  showIconButton,\n  errorMessage,\n  buttonText,\n  style = {},\n  job = {},\n  isDisabled,\n  tooltip,\n  cancelationMessage,\n  onCancelWorkflow,\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const { error: cancelError, request: cancelJob } = useRequest(\n    useCallback(async () => {\n      setIsOpen(false);\n      await getJobModel(job.type).cancel(job.id);\n\n      if (onCancelWorkflow) {\n        onCancelWorkflow();\n      }\n    }, [job.id, job.type, onCancelWorkflow]),\n    {}\n  );\n  const { error, dismissError: dismissCancelError } =\n    useDismissableError(cancelError);\n\n  const isAlreadyCancelled = cancelError?.response?.status === 405;\n  const renderTooltip = () => {\n    if (tooltip) {\n      return tooltip;\n    }\n    return isAlreadyCancelled ? null : title;\n  };\n  return (\n    <>\n      <Tooltip content={renderTooltip()}>\n        <div>\n          {showIconButton ? (\n            <Button\n              isDisabled={isDisabled || isAlreadyCancelled}\n              aria-label={title}\n              ouiaId=\"cancel-job-button\"\n              onClick={() => setIsOpen(true)}\n              variant=\"plain\"\n              style={style}\n            >\n              <MinusCircleIcon />\n            </Button>\n          ) : (\n            <Button\n              isDisabled={isDisabled || isAlreadyCancelled}\n              aria-label={title}\n              variant=\"secondary\"\n              ouiaId=\"cancel-job-button\"\n              onClick={() => setIsOpen(true)}\n              style={style}\n            >\n              {buttonText || t`Cancel Job`}\n            </Button>\n          )}\n        </div>\n      </Tooltip>\n      {isOpen && (\n        <AlertModal\n          isOpen={isOpen}\n          variant=\"danger\"\n          onClose={() => setIsOpen(false)}\n          title={title}\n          label={title}\n          actions={[\n            <Button\n              id=\"cancel-job-confirm-button\"\n              key=\"delete\"\n              variant=\"danger\"\n              aria-label={t`Confirm cancel job`}\n              ouiaId=\"cancel-job-confirm-button\"\n              onClick={cancelJob}\n            >\n              {t`Confirm cancellation`}\n            </Button>,\n            <Button\n              id=\"cancel-job-return-button\"\n              key=\"cancel\"\n              ouiaId=\"return\"\n              aria-label={t`Return`}\n              variant=\"secondary\"\n              onClick={() => setIsOpen(false)}\n            >\n              {t`Return`}\n            </Button>,\n          ]}\n        >\n          {cancelationMessage ?? t`Are you sure you want to cancel this job?`}\n        </AlertModal>\n      )}\n      {error && !isAlreadyCancelled && (\n        <AlertModal\n          isOpen={error}\n          variant=\"danger\"\n          onClose={dismissCancelError}\n          title={errorTitle}\n          label={errorTitle}\n        >\n          {errorMessage}\n          <ErrorDetail error={error} />\n        </AlertModal>\n      )}\n    </>\n  );\n}\n\nexport default JobCancelButton;\n"]},"metadata":{},"sourceType":"module"}