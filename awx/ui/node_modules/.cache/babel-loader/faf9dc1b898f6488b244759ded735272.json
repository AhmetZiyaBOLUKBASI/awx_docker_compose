{"ast":null,"code":"import _objectWithoutProperties from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";import _toConsumableArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _defineProperty from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _excluded=[\"project\",\"submitError\"];import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";/* eslint no-nested-ternary: 0 */import React,{useCallback,useState,useEffect}from'react';import{Formik,useField,useFormikContext}from'formik';import{Form,FormGroup,Title}from'@patternfly/react-core';import{useConfig}from'contexts/Config';import AnsibleSelect from'components/AnsibleSelect';import ContentError from'components/ContentError';import ContentLoading from'components/ContentLoading';import FormActionGroup from'components/FormActionGroup/FormActionGroup';import FormField,{FormSubmitError}from'components/FormField';import OrganizationLookup from'components/Lookup/OrganizationLookup';import ExecutionEnvironmentLookup from'components/Lookup/ExecutionEnvironmentLookup';import{CredentialTypesAPI,ProjectsAPI}from'api';import{required}from'util/validators';import{FormColumnLayout,SubFormLayout}from'components/FormLayout';import projectHelpText from'./Project.helptext';import{GitSubForm,SvnSubForm,ArchiveSubForm,InsightsSubForm,ManualSubForm}from'./ProjectSubForms';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var fetchCredentials=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(credential){var _yield$Promise$all,_yield$Promise$all2,_yield$Promise$all2$,scmCredentialType,_yield$Promise$all2$2,insightsCredentialType,credential_type_id;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Promise.all([CredentialTypesAPI.read({kind:'scm'}),CredentialTypesAPI.read({name:'Insights'})]);case 2:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);_yield$Promise$all2$=_slicedToArray(_yield$Promise$all2[0].data.results,1);scmCredentialType=_yield$Promise$all2$[0];_yield$Promise$all2$2=_slicedToArray(_yield$Promise$all2[1].data.results,1);insightsCredentialType=_yield$Promise$all2$2[0];if(credential){_context.next=10;break;}return _context.abrupt(\"return\",{scm:{typeId:scmCredentialType.id},insights:{typeId:insightsCredentialType.id}});case 10:credential_type_id=credential.credential_type_id;return _context.abrupt(\"return\",{scm:{typeId:scmCredentialType.id,value:credential_type_id===scmCredentialType.id?credential:null},insights:{typeId:insightsCredentialType.id,value:credential_type_id===insightsCredentialType.id?credential:null}});case 12:case\"end\":return _context.stop();}}},_callee);}));return function fetchCredentials(_x){return _ref.apply(this,arguments);};}();function ProjectFormFields(_ref2){var _organizationField$va;var project=_ref2.project,project_base_dir=_ref2.project_base_dir,project_local_paths=_ref2.project_local_paths,formik=_ref2.formik,setCredentials=_ref2.setCredentials,credentials=_ref2.credentials,scmTypeOptions=_ref2.scmTypeOptions,setScmSubFormState=_ref2.setScmSubFormState,scmSubFormState=_ref2.scmSubFormState;var scmFormFields={scm_url:'',scm_branch:'',scm_refspec:'',credential:'',scm_clean:false,scm_delete_on_update:false,scm_track_submodules:false,scm_update_on_launch:false,allow_override:false,scm_update_cache_timeout:0};var _useFormikContext=useFormikContext(),setFieldValue=_useFormikContext.setFieldValue,setFieldTouched=_useFormikContext.setFieldTouched;var _useField=useField({name:'scm_type',validate:required(/*i18n*/i18n._(\"Set a value for this field\"))}),_useField2=_slicedToArray(_useField,3),scmTypeField=_useField2[0],scmTypeMeta=_useField2[1],scmTypeHelpers=_useField2[2];var _useField3=useField('organization'),_useField4=_slicedToArray(_useField3,3),organizationField=_useField4[0],organizationMeta=_useField4[1],organizationHelpers=_useField4[2];var _useField5=useField('default_environment'),_useField6=_slicedToArray(_useField5,3),executionEnvironmentField=_useField6[0],executionEnvironmentMeta=_useField6[1],executionEnvironmentHelpers=_useField6[2];/* Save current scm subform field values to state */var saveSubFormState=function saveSubFormState(form){var currentScmFormFields=_objectSpread({},scmFormFields);Object.keys(currentScmFormFields).forEach(function(label){currentScmFormFields[label]=form.values[label];});setScmSubFormState(currentScmFormFields);};/**\n   * If scm type is !== the initial scm type value,\n   * reset scm subform field values to defaults.\n   * If scm type is === the initial scm type value,\n   * reset scm subform field values to scmSubFormState.\n   */var resetScmTypeFields=function resetScmTypeFields(value,form){if(form.values.scm_type===form.initialValues.scm_type){saveSubFormState(formik);}Object.keys(scmFormFields).forEach(function(label){if(value===form.initialValues.scm_type){form.setFieldValue(label,scmSubFormState[label]);}else{form.setFieldValue(label,scmFormFields[label]);}form.setFieldTouched(label,false);});};var handleCredentialSelection=useCallback(function(type,value){setCredentials(_objectSpread(_objectSpread({},credentials),{},_defineProperty({},type,_objectSpread(_objectSpread({},credentials[type]),{},{value:value}))));},[credentials,setCredentials]);var handleOrganizationUpdate=useCallback(function(value){setFieldValue('organization',value);setFieldTouched('organization',true,false);},[setFieldValue,setFieldTouched]);var handleExecutionEnvironmentUpdate=useCallback(function(value){setFieldValue('default_environment',value);setFieldTouched('default_environment',true,false);},[setFieldValue,setFieldTouched]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FormField,{id:\"project-name\",label:/*i18n*/i18n._(\"Name\"),name:\"name\",type:\"text\",validate:required(null),isRequired:true}),/*#__PURE__*/_jsx(FormField,{id:\"project-description\",label:/*i18n*/i18n._(\"Description\"),name:\"description\",type:\"text\"}),/*#__PURE__*/_jsx(OrganizationLookup,{helperTextInvalid:organizationMeta.error,isValid:!organizationMeta.touched||!organizationMeta.error,onBlur:function onBlur(){return organizationHelpers.setTouched();},onChange:handleOrganizationUpdate,value:organizationField.value,required:true,autoPopulate:!(project!==null&&project!==void 0&&project.id),validate:required(/*i18n*/i18n._(\"Select a value for this field\"))}),/*#__PURE__*/_jsx(ExecutionEnvironmentLookup,{helperTextInvalid:executionEnvironmentMeta.error,isValid:!executionEnvironmentMeta.touched||!executionEnvironmentMeta.error,onBlur:function onBlur(){return executionEnvironmentHelpers.setTouched();},value:executionEnvironmentField.value,popoverContent:projectHelpText.executionEnvironment,onChange:handleExecutionEnvironmentUpdate,tooltip:/*i18n*/i18n._(\"Select an organization before editing the default execution environment.\"),globallyAvailable:true,isDisabled:!organizationField.value,organizationId:(_organizationField$va=organizationField.value)===null||_organizationField$va===void 0?void 0:_organizationField$va.id,isDefaultEnvironment:true,fieldName:\"default_environment\"}),/*#__PURE__*/_jsx(FormGroup,{fieldId:\"project-scm-type\",helperTextInvalid:scmTypeMeta.error,isRequired:true,validated:!scmTypeMeta.touched||!scmTypeMeta.error?'default':'error',label:/*i18n*/i18n._(\"Source Control Type\"),children:/*#__PURE__*/_jsx(AnsibleSelect,_objectSpread(_objectSpread({},scmTypeField),{},{id:\"scm_type\",data:[{value:'',key:'',label:/*i18n*/i18n._(\"Choose a Source Control Type\"),isDisabled:true}].concat(_toConsumableArray(scmTypeOptions.map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),value=_ref4[0],label=_ref4[1];if(value===''){value='manual';}return{label:label,value:value,key:value};}))),onChange:function onChange(event,value){scmTypeHelpers.setValue(value);resetScmTypeFields(value,formik);}}))}),formik.values.scm_type!==''&&/*#__PURE__*/_jsxs(SubFormLayout,{children:[/*#__PURE__*/_jsx(Title,{size:\"md\",headingLevel:\"h4\",children:/*i18n*/i18n._(\"Type Details\")}),/*#__PURE__*/_jsx(FormColumnLayout,{children:{manual:/*#__PURE__*/_jsx(ManualSubForm,{localPath:formik.initialValues.local_path,project_base_dir:project_base_dir,project_local_paths:project_local_paths}),git:/*#__PURE__*/_jsx(GitSubForm,{credential:credentials.scm,onCredentialSelection:handleCredentialSelection,scmUpdateOnLaunch:formik.values.scm_update_on_launch}),svn:/*#__PURE__*/_jsx(SvnSubForm,{credential:credentials.scm,onCredentialSelection:handleCredentialSelection,scmUpdateOnLaunch:formik.values.scm_update_on_launch}),archive:/*#__PURE__*/_jsx(ArchiveSubForm,{credential:credentials.scm,onCredentialSelection:handleCredentialSelection,scmUpdateOnLaunch:formik.values.scm_update_on_launch}),insights:/*#__PURE__*/_jsx(InsightsSubForm,{credential:credentials.insights,onCredentialSelection:handleCredentialSelection,scmUpdateOnLaunch:formik.values.scm_update_on_launch,autoPopulateCredential:!(project!==null&&project!==void 0&&project.id)||(project===null||project===void 0?void 0:project.scm_type)!=='insights'})}[formik.values.scm_type]})]})]});}function ProjectForm(_ref5){var _project$summary_fiel2,_project$summary_fiel3;var project=_ref5.project,submitError=_ref5.submitError,props=_objectWithoutProperties(_ref5,_excluded);var handleCancel=props.handleCancel,handleSubmit=props.handleSubmit;var _project$summary_fiel=project.summary_fields,summary_fields=_project$summary_fiel===void 0?{}:_project$summary_fiel;var _useConfig=useConfig(),project_base_dir=_useConfig.project_base_dir,project_local_paths=_useConfig.project_local_paths;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),contentError=_useState2[0],setContentError=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var _useState5=useState({scm_url:'',scm_branch:'',scm_refspec:'',credential:'',scm_clean:false,scm_delete_on_update:false,scm_track_submodules:false,scm_update_on_launch:false,allow_override:false,scm_update_cache_timeout:0}),_useState6=_slicedToArray(_useState5,2),scmSubFormState=_useState6[0],setScmSubFormState=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),scmTypeOptions=_useState8[0],setScmTypeOptions=_useState8[1];var _useState9=useState({scm:{typeId:null,value:null},insights:{typeId:null,value:null}}),_useState10=_slicedToArray(_useState9,2),credentials=_useState10[0],setCredentials=_useState10[1];useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var credentialResponse,_yield$ProjectsAPI$re,choices;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;credentialResponse=fetchCredentials(summary_fields.credential);_context2.next=4;return ProjectsAPI.readOptions();case 4:_yield$ProjectsAPI$re=_context2.sent;choices=_yield$ProjectsAPI$re.data.actions.GET.scm_type.choices;_context2.t0=setCredentials;_context2.next=9;return credentialResponse;case 9:_context2.t1=_context2.sent;(0,_context2.t0)(_context2.t1);setScmTypeOptions(choices);_context2.next=17;break;case 14:_context2.prev=14;_context2.t2=_context2[\"catch\"](0);setContentError(_context2.t2);case 17:_context2.prev=17;setIsLoading(false);return _context2.finish(17);case 20:case\"end\":return _context2.stop();}}},_callee2,null,[[0,14,17,20]]);}));return _fetchData.apply(this,arguments);}fetchData();},[summary_fields.credential]);if(isLoading){return/*#__PURE__*/_jsx(ContentLoading,{});}if(contentError){return/*#__PURE__*/_jsx(ContentError,{error:contentError});}return/*#__PURE__*/_jsx(Formik,{initialValues:{allow_override:project.allow_override||false,base_dir:project_base_dir||'',credential:project.credential||'',description:project.description||'',local_path:project.local_path||'',name:project.name||'',organization:((_project$summary_fiel2=project.summary_fields)===null||_project$summary_fiel2===void 0?void 0:_project$summary_fiel2.organization)||null,scm_branch:project.scm_branch||'',scm_clean:project.scm_clean||false,scm_delete_on_update:project.scm_delete_on_update||false,scm_track_submodules:project.scm_track_submodules||false,scm_refspec:project.scm_refspec||'',scm_type:project.scm_type===''?'manual':project.scm_type===undefined?'':project.scm_type,scm_update_cache_timeout:project.scm_update_cache_timeout||0,scm_update_on_launch:project.scm_update_on_launch||false,scm_url:project.scm_url||'',default_environment:((_project$summary_fiel3=project.summary_fields)===null||_project$summary_fiel3===void 0?void 0:_project$summary_fiel3.default_environment)||null},onSubmit:handleSubmit,children:function children(formik){return/*#__PURE__*/_jsx(Form,{autoComplete:\"off\",onSubmit:formik.handleSubmit,children:/*#__PURE__*/_jsxs(FormColumnLayout,{children:[/*#__PURE__*/_jsx(ProjectFormFields,{project:project,project_base_dir:project_base_dir,project_local_paths:project_local_paths,formik:formik,setCredentials:setCredentials,credentials:credentials,scmTypeOptions:scmTypeOptions,setScmSubFormState:setScmSubFormState,scmSubFormState:scmSubFormState}),/*#__PURE__*/_jsx(FormSubmitError,{error:submitError}),/*#__PURE__*/_jsx(FormActionGroup,{onCancel:handleCancel,onSubmit:formik.handleSubmit})]})});}});}ProjectForm.defaultProps={project:{},submitError:null};export default ProjectForm;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Project/shared/ProjectForm.js"],"names":["React","useCallback","useState","useEffect","Formik","useField","useFormikContext","Form","FormGroup","Title","useConfig","AnsibleSelect","ContentError","ContentLoading","FormActionGroup","FormField","FormSubmitError","OrganizationLookup","ExecutionEnvironmentLookup","CredentialTypesAPI","ProjectsAPI","required","FormColumnLayout","SubFormLayout","projectHelpText","GitSubForm","SvnSubForm","ArchiveSubForm","InsightsSubForm","ManualSubForm","fetchCredentials","credential","Promise","all","read","kind","name","data","results","scmCredentialType","insightsCredentialType","scm","typeId","id","insights","credential_type_id","value","ProjectFormFields","project","project_base_dir","project_local_paths","formik","setCredentials","credentials","scmTypeOptions","setScmSubFormState","scmSubFormState","scmFormFields","scm_url","scm_branch","scm_refspec","scm_clean","scm_delete_on_update","scm_track_submodules","scm_update_on_launch","allow_override","scm_update_cache_timeout","setFieldValue","setFieldTouched","validate","scmTypeField","scmTypeMeta","scmTypeHelpers","organizationField","organizationMeta","organizationHelpers","executionEnvironmentField","executionEnvironmentMeta","executionEnvironmentHelpers","saveSubFormState","form","currentScmFormFields","Object","keys","forEach","label","values","resetScmTypeFields","scm_type","initialValues","handleCredentialSelection","type","handleOrganizationUpdate","handleExecutionEnvironmentUpdate","error","touched","setTouched","executionEnvironment","key","isDisabled","map","event","setValue","manual","local_path","git","svn","archive","ProjectForm","submitError","props","handleCancel","handleSubmit","summary_fields","contentError","setContentError","isLoading","setIsLoading","setScmTypeOptions","fetchData","credentialResponse","readOptions","choices","actions","GET","base_dir","description","organization","undefined","default_environment","defaultProps"],"mappings":"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","sourcesContent":["/* eslint no-nested-ternary: 0 */\nimport React, { useCallback, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { t } from '@lingui/macro';\nimport { Formik, useField, useFormikContext } from 'formik';\nimport { Form, FormGroup, Title } from '@patternfly/react-core';\nimport { useConfig } from 'contexts/Config';\nimport AnsibleSelect from 'components/AnsibleSelect';\nimport ContentError from 'components/ContentError';\nimport ContentLoading from 'components/ContentLoading';\nimport FormActionGroup from 'components/FormActionGroup/FormActionGroup';\nimport FormField, { FormSubmitError } from 'components/FormField';\nimport OrganizationLookup from 'components/Lookup/OrganizationLookup';\nimport ExecutionEnvironmentLookup from 'components/Lookup/ExecutionEnvironmentLookup';\nimport { CredentialTypesAPI, ProjectsAPI } from 'api';\nimport { required } from 'util/validators';\nimport { FormColumnLayout, SubFormLayout } from 'components/FormLayout';\nimport projectHelpText from './Project.helptext';\nimport {\n  GitSubForm,\n  SvnSubForm,\n  ArchiveSubForm,\n  InsightsSubForm,\n  ManualSubForm,\n} from './ProjectSubForms';\n\nconst fetchCredentials = async (credential) => {\n  const [\n    {\n      data: {\n        results: [scmCredentialType],\n      },\n    },\n    {\n      data: {\n        results: [insightsCredentialType],\n      },\n    },\n  ] = await Promise.all([\n    CredentialTypesAPI.read({ kind: 'scm' }),\n    CredentialTypesAPI.read({ name: 'Insights' }),\n  ]);\n\n  if (!credential) {\n    return {\n      scm: { typeId: scmCredentialType.id },\n      insights: { typeId: insightsCredentialType.id },\n    };\n  }\n\n  const { credential_type_id } = credential;\n  return {\n    scm: {\n      typeId: scmCredentialType.id,\n      value: credential_type_id === scmCredentialType.id ? credential : null,\n    },\n    insights: {\n      typeId: insightsCredentialType.id,\n      value:\n        credential_type_id === insightsCredentialType.id ? credential : null,\n    },\n  };\n};\n\nfunction ProjectFormFields({\n  project,\n  project_base_dir,\n  project_local_paths,\n  formik,\n  setCredentials,\n  credentials,\n  scmTypeOptions,\n  setScmSubFormState,\n  scmSubFormState,\n}) {\n  const scmFormFields = {\n    scm_url: '',\n    scm_branch: '',\n    scm_refspec: '',\n    credential: '',\n    scm_clean: false,\n    scm_delete_on_update: false,\n    scm_track_submodules: false,\n    scm_update_on_launch: false,\n    allow_override: false,\n    scm_update_cache_timeout: 0,\n  };\n\n  const { setFieldValue, setFieldTouched } = useFormikContext();\n\n  const [scmTypeField, scmTypeMeta, scmTypeHelpers] = useField({\n    name: 'scm_type',\n    validate: required(t`Set a value for this field`),\n  });\n  const [organizationField, organizationMeta, organizationHelpers] =\n    useField('organization');\n\n  const [\n    executionEnvironmentField,\n    executionEnvironmentMeta,\n    executionEnvironmentHelpers,\n  ] = useField('default_environment');\n\n  /* Save current scm subform field values to state */\n  const saveSubFormState = (form) => {\n    const currentScmFormFields = { ...scmFormFields };\n\n    Object.keys(currentScmFormFields).forEach((label) => {\n      currentScmFormFields[label] = form.values[label];\n    });\n\n    setScmSubFormState(currentScmFormFields);\n  };\n\n  /**\n   * If scm type is !== the initial scm type value,\n   * reset scm subform field values to defaults.\n   * If scm type is === the initial scm type value,\n   * reset scm subform field values to scmSubFormState.\n   */\n  const resetScmTypeFields = (value, form) => {\n    if (form.values.scm_type === form.initialValues.scm_type) {\n      saveSubFormState(formik);\n    }\n\n    Object.keys(scmFormFields).forEach((label) => {\n      if (value === form.initialValues.scm_type) {\n        form.setFieldValue(label, scmSubFormState[label]);\n      } else {\n        form.setFieldValue(label, scmFormFields[label]);\n      }\n      form.setFieldTouched(label, false);\n    });\n  };\n\n  const handleCredentialSelection = useCallback(\n    (type, value) => {\n      setCredentials({\n        ...credentials,\n        [type]: {\n          ...credentials[type],\n          value,\n        },\n      });\n    },\n    [credentials, setCredentials]\n  );\n\n  const handleOrganizationUpdate = useCallback(\n    (value) => {\n      setFieldValue('organization', value);\n      setFieldTouched('organization', true, false);\n    },\n    [setFieldValue, setFieldTouched]\n  );\n\n  const handleExecutionEnvironmentUpdate = useCallback(\n    (value) => {\n      setFieldValue('default_environment', value);\n      setFieldTouched('default_environment', true, false);\n    },\n    [setFieldValue, setFieldTouched]\n  );\n\n  return (\n    <>\n      <FormField\n        id=\"project-name\"\n        label={t`Name`}\n        name=\"name\"\n        type=\"text\"\n        validate={required(null)}\n        isRequired\n      />\n      <FormField\n        id=\"project-description\"\n        label={t`Description`}\n        name=\"description\"\n        type=\"text\"\n      />\n      <OrganizationLookup\n        helperTextInvalid={organizationMeta.error}\n        isValid={!organizationMeta.touched || !organizationMeta.error}\n        onBlur={() => organizationHelpers.setTouched()}\n        onChange={handleOrganizationUpdate}\n        value={organizationField.value}\n        required\n        autoPopulate={!project?.id}\n        validate={required(t`Select a value for this field`)}\n      />\n      <ExecutionEnvironmentLookup\n        helperTextInvalid={executionEnvironmentMeta.error}\n        isValid={\n          !executionEnvironmentMeta.touched || !executionEnvironmentMeta.error\n        }\n        onBlur={() => executionEnvironmentHelpers.setTouched()}\n        value={executionEnvironmentField.value}\n        popoverContent={projectHelpText.executionEnvironment}\n        onChange={handleExecutionEnvironmentUpdate}\n        tooltip={t`Select an organization before editing the default execution environment.`}\n        globallyAvailable\n        isDisabled={!organizationField.value}\n        organizationId={organizationField.value?.id}\n        isDefaultEnvironment\n        fieldName=\"default_environment\"\n      />\n      <FormGroup\n        fieldId=\"project-scm-type\"\n        helperTextInvalid={scmTypeMeta.error}\n        isRequired\n        validated={\n          !scmTypeMeta.touched || !scmTypeMeta.error ? 'default' : 'error'\n        }\n        label={t`Source Control Type`}\n      >\n        <AnsibleSelect\n          {...scmTypeField}\n          id=\"scm_type\"\n          data={[\n            {\n              value: '',\n              key: '',\n              label: t`Choose a Source Control Type`,\n              isDisabled: true,\n            },\n            ...scmTypeOptions.map(([value, label]) => {\n              if (value === '') {\n                value = 'manual';\n              }\n              return {\n                label,\n                value,\n                key: value,\n              };\n            }),\n          ]}\n          onChange={(event, value) => {\n            scmTypeHelpers.setValue(value);\n            resetScmTypeFields(value, formik);\n          }}\n        />\n      </FormGroup>\n      {formik.values.scm_type !== '' && (\n        <SubFormLayout>\n          <Title size=\"md\" headingLevel=\"h4\">\n            {t`Type Details`}\n          </Title>\n          <FormColumnLayout>\n            {\n              {\n                manual: (\n                  <ManualSubForm\n                    localPath={formik.initialValues.local_path}\n                    project_base_dir={project_base_dir}\n                    project_local_paths={project_local_paths}\n                  />\n                ),\n                git: (\n                  <GitSubForm\n                    credential={credentials.scm}\n                    onCredentialSelection={handleCredentialSelection}\n                    scmUpdateOnLaunch={formik.values.scm_update_on_launch}\n                  />\n                ),\n                svn: (\n                  <SvnSubForm\n                    credential={credentials.scm}\n                    onCredentialSelection={handleCredentialSelection}\n                    scmUpdateOnLaunch={formik.values.scm_update_on_launch}\n                  />\n                ),\n                archive: (\n                  <ArchiveSubForm\n                    credential={credentials.scm}\n                    onCredentialSelection={handleCredentialSelection}\n                    scmUpdateOnLaunch={formik.values.scm_update_on_launch}\n                  />\n                ),\n                insights: (\n                  <InsightsSubForm\n                    credential={credentials.insights}\n                    onCredentialSelection={handleCredentialSelection}\n                    scmUpdateOnLaunch={formik.values.scm_update_on_launch}\n                    autoPopulateCredential={\n                      !project?.id || project?.scm_type !== 'insights'\n                    }\n                  />\n                ),\n              }[formik.values.scm_type]\n            }\n          </FormColumnLayout>\n        </SubFormLayout>\n      )}\n    </>\n  );\n}\n\nfunction ProjectForm({ project, submitError, ...props }) {\n  const { handleCancel, handleSubmit } = props;\n  const { summary_fields = {} } = project;\n  const { project_base_dir, project_local_paths } = useConfig();\n  const [contentError, setContentError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [scmSubFormState, setScmSubFormState] = useState({\n    scm_url: '',\n    scm_branch: '',\n    scm_refspec: '',\n    credential: '',\n    scm_clean: false,\n    scm_delete_on_update: false,\n    scm_track_submodules: false,\n    scm_update_on_launch: false,\n    allow_override: false,\n    scm_update_cache_timeout: 0,\n  });\n  const [scmTypeOptions, setScmTypeOptions] = useState(null);\n  const [credentials, setCredentials] = useState({\n    scm: { typeId: null, value: null },\n    insights: { typeId: null, value: null },\n  });\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const credentialResponse = fetchCredentials(summary_fields.credential);\n        const {\n          data: {\n            actions: {\n              GET: {\n                scm_type: { choices },\n              },\n            },\n          },\n        } = await ProjectsAPI.readOptions();\n\n        setCredentials(await credentialResponse);\n        setScmTypeOptions(choices);\n      } catch (error) {\n        setContentError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchData();\n  }, [summary_fields.credential]);\n\n  if (isLoading) {\n    return <ContentLoading />;\n  }\n\n  if (contentError) {\n    return <ContentError error={contentError} />;\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        allow_override: project.allow_override || false,\n        base_dir: project_base_dir || '',\n        credential: project.credential || '',\n        description: project.description || '',\n        local_path: project.local_path || '',\n        name: project.name || '',\n        organization: project.summary_fields?.organization || null,\n        scm_branch: project.scm_branch || '',\n        scm_clean: project.scm_clean || false,\n        scm_delete_on_update: project.scm_delete_on_update || false,\n        scm_track_submodules: project.scm_track_submodules || false,\n        scm_refspec: project.scm_refspec || '',\n        scm_type:\n          project.scm_type === ''\n            ? 'manual'\n            : project.scm_type === undefined\n            ? ''\n            : project.scm_type,\n        scm_update_cache_timeout: project.scm_update_cache_timeout || 0,\n        scm_update_on_launch: project.scm_update_on_launch || false,\n        scm_url: project.scm_url || '',\n        default_environment:\n          project.summary_fields?.default_environment || null,\n      }}\n      onSubmit={handleSubmit}\n    >\n      {(formik) => (\n        <Form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n          <FormColumnLayout>\n            <ProjectFormFields\n              project={project}\n              project_base_dir={project_base_dir}\n              project_local_paths={project_local_paths}\n              formik={formik}\n              setCredentials={setCredentials}\n              credentials={credentials}\n              scmTypeOptions={scmTypeOptions}\n              setScmSubFormState={setScmSubFormState}\n              scmSubFormState={scmSubFormState}\n            />\n            <FormSubmitError error={submitError} />\n            <FormActionGroup\n              onCancel={handleCancel}\n              onSubmit={formik.handleSubmit}\n            />\n          </FormColumnLayout>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nProjectForm.propTypes = {\n  handleCancel: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  project: PropTypes.shape({}),\n  submitError: PropTypes.shape({}),\n};\n\nProjectForm.defaultProps = {\n  project: {},\n  submitError: null,\n};\n\nexport default ProjectForm;\n"]},"metadata":{},"sourceType":"module"}