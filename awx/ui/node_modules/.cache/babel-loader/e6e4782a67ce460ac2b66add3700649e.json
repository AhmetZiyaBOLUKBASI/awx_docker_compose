{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/NotificationDrawer/notification-drawer';\nexport var NotificationDrawerListItem = function NotificationDrawerListItem(_a) {\n  var _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      _a$isHoverable = _a.isHoverable,\n      isHoverable = _a$isHoverable === void 0 ? true : _a$isHoverable,\n      _a$isRead = _a.isRead,\n      isRead = _a$isRead === void 0 ? false : _a$isRead,\n      _a$onClick = _a.onClick,\n      _onClick = _a$onClick === void 0 ? function (event) {\n    return undefined;\n  } : _a$onClick,\n      _a$tabIndex = _a.tabIndex,\n      tabIndex = _a$tabIndex === void 0 ? 0 : _a$tabIndex,\n      _a$variant = _a.variant,\n      variant = _a$variant === void 0 ? 'default' : _a$variant,\n      props = __rest(_a, [\"children\", \"className\", \"isHoverable\", \"isRead\", \"onClick\", \"tabIndex\", \"variant\"]);\n\n  var onKeyDown = function onKeyDown(event) {\n    // Accessibility function. Click on the list item when pressing Enter or Space on it.\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.target.click();\n    }\n  };\n\n  return React.createElement(\"li\", Object.assign({}, props, {\n    className: css(styles.notificationDrawerListItem, isHoverable && styles.modifiers.hoverable, styles.modifiers[variant], isRead && styles.modifiers.read, className),\n    tabIndex: tabIndex,\n    onClick: function onClick(e) {\n      return _onClick(e);\n    },\n    onKeyDown: onKeyDown\n  }), children);\n};\nNotificationDrawerListItem.displayName = 'NotificationDrawerListItem';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/NotificationDrawer/NotificationDrawerListItem.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,gFAAnB;AAmBA,OAAO,IAAM,0BAA0B,GAA6D,SAAvF,0BAAuF,CAAC,EAAD,EAU9D;AAV+D,oBAQhF,EARgF,CACnG,QADmG;AAAA,MACnG,QADmG,4BACxF,IADwF;AAAA,qBAQhF,EARgF,CAEnG,SAFmG;AAAA,MAEnG,SAFmG,6BAEvF,EAFuF;AAAA,uBAQhF,EARgF,CAGnG,WAHmG;AAAA,MAGnG,WAHmG,+BAGrF,IAHqF;AAAA,kBAQhF,EARgF,CAInG,MAJmG;AAAA,MAInG,MAJmG,0BAI1F,KAJ0F;AAAA,mBAQhF,EARgF,CAMnG,OANmG;AAAA,MAMnG,QANmG,2BAMzF,UAAC,KAAD;AAAA,WAA6B,SAA7B;AAAA,GANyF;AAAA,oBAQhF,EARgF,CAOnG,QAPmG;AAAA,MAOnG,QAPmG,4BAOxF,CAPwF;AAAA,mBAQhF,EARgF,CAQnG,OARmG;AAAA,MAQnG,OARmG,2BAQzF,SARyF;AAAA,MAShG,KATgG,GAS3F,MAAA,CAAA,EAAA,EAT2F,CAAA,UAAA,EAAA,WAAA,EAAA,aAAA,EAAA,QAAA,EAAA,SAAA,EAAA,UAAA,EAAA,SAAA,CAS3F,CAT2F;;AAWnG,MAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,KAAD,EAA+B;AAC/C;AACA,QAAI,KAAK,CAAC,GAAN,KAAc,OAAd,IAAyB,KAAK,CAAC,GAAN,KAAc,GAA3C,EAAgD;AAC7C,MAAA,KAAK,CAAC,MAAN,CAA6B,KAA7B;AACF;AACF,GALD;;AAMA,SACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACM,KADN,EACW;AACT,IAAA,SAAS,EAAE,GAAG,CACZ,MAAM,CAAC,0BADK,EAEZ,WAAW,IAAI,MAAM,CAAC,SAAP,CAAiB,SAFpB,EAGZ,MAAM,CAAC,SAAP,CAAiB,OAAjB,CAHY,EAIZ,MAAM,IAAI,MAAM,CAAC,SAAP,CAAiB,IAJf,EAKZ,SALY,CADL;AAQT,IAAA,QAAQ,EAAE,QARD;AAST,IAAA,OAAO,EAAE,iBAAA,CAAC;AAAA,aAAI,QAAO,CAAC,CAAD,CAAX;AAAA,KATD;AAUT,IAAA,SAAS,EAAE;AAVF,GADX,CAAA,EAaG,QAbH,CADF;AAiBD,CAlCM;AAmCP,0BAA0B,CAAC,WAA3B,GAAyC,4BAAzC","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/NotificationDrawer/notification-drawer';\n\nexport interface NotificationDrawerListItemProps extends React.HTMLProps<HTMLLIElement> {\n  /**  Content rendered inside the list item */\n  children?: React.ReactNode;\n  /**  Additional classes added to the list item */\n  className?: string;\n  /**  Modifies the list item to include hover styles on :hover */\n  isHoverable?: boolean;\n  /**  Adds styling to the list item to indicate it has been read */\n  isRead?: boolean;\n  /**  Callback for when a list item is clicked */\n  onClick?: (event: any) => void;\n  /**  Tab index for the list item */\n  tabIndex?: number;\n  /**  Variant indicates the severity level */\n  variant?: 'default' | 'success' | 'danger' | 'warning' | 'info';\n}\n\nexport const NotificationDrawerListItem: React.FunctionComponent<NotificationDrawerListItemProps> = ({\n  children = null,\n  className = '',\n  isHoverable = true,\n  isRead = false,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onClick = (event: React.MouseEvent) => undefined as any,\n  tabIndex = 0,\n  variant = 'default',\n  ...props\n}: NotificationDrawerListItemProps) => {\n  const onKeyDown = (event: React.KeyboardEvent) => {\n    // Accessibility function. Click on the list item when pressing Enter or Space on it.\n    if (event.key === 'Enter' || event.key === ' ') {\n      (event.target as HTMLElement).click();\n    }\n  };\n  return (\n    <li\n      {...props}\n      className={css(\n        styles.notificationDrawerListItem,\n        isHoverable && styles.modifiers.hoverable,\n        styles.modifiers[variant],\n        isRead && styles.modifiers.read,\n        className\n      )}\n      tabIndex={tabIndex}\n      onClick={e => onClick(e)}\n      onKeyDown={onKeyDown}\n    >\n      {children}\n    </li>\n  );\n};\nNotificationDrawerListItem.displayName = 'NotificationDrawerListItem';\n"]},"metadata":{},"sourceType":"module"}