{"ast":null,"code":"import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { SortColumn, SortByDirection } from '../../SortColumn';\nimport StarIcon from '@patternfly/react-icons/dist/esm/icons/star-icon';\nexport var sortableFavorites = function sortableFavorites(sort) {\n  return function () {\n    return sortable(React.createElement(StarIcon, {\n      \"aria-hidden\": true\n    }), {\n      columnIndex: sort.columnIndex,\n      className: styles.modifiers.favorite,\n      ariaLabel: 'Sort favorites',\n      column: {\n        extraParams: {\n          sortBy: sort.sortBy,\n          onSort: sort === null || sort === void 0 ? void 0 : sort.onSort\n        }\n      }\n    });\n  };\n};\nexport var sortable = function sortable(label, _ref) {\n  var columnIndex = _ref.columnIndex,\n      column = _ref.column,\n      property = _ref.property,\n      className = _ref.className,\n      ariaLabel = _ref.ariaLabel;\n  var _column$extraParams = column.extraParams,\n      sortBy = _column$extraParams.sortBy,\n      onSort = _column$extraParams.onSort;\n  var extraData = {\n    columnIndex: columnIndex,\n    column: column,\n    property: property\n  };\n  var isSortedBy = sortBy && columnIndex === sortBy.index;\n  /**\n   * @param {React.MouseEvent} event - React mouse event\n   */\n\n  function sortClicked(event) {\n    var reversedDirection;\n\n    if (!isSortedBy) {\n      reversedDirection = sortBy.defaultDirection ? sortBy.defaultDirection : SortByDirection.asc;\n    } else {\n      reversedDirection = sortBy.direction === SortByDirection.asc ? SortByDirection.desc : SortByDirection.asc;\n    } // tslint:disable-next-line:no-unused-expression\n\n\n    onSort && onSort(event, columnIndex, reversedDirection, extraData);\n  }\n\n  return {\n    className: css(styles.tableSort, isSortedBy && styles.modifiers.selected, className),\n    'aria-sort': isSortedBy ? \"\".concat(sortBy.direction, \"ending\") : 'none',\n    children: React.createElement(SortColumn, {\n      isSortedBy: isSortedBy,\n      sortDirection: isSortedBy ? sortBy.direction : '',\n      onSort: sortClicked,\n      \"aria-label\": ariaLabel\n    }, label)\n  };\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/Table/utils/decorators/sortable.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,qDAAnB;AAEA,SAAS,UAAT,EAAqB,eAArB,QAA4C,kBAA5C;AACA,OAAO,QAAP,MAAqB,kDAArB;AAEA,OAAO,IAAM,iBAAiB,GAAG,SAApB,iBAAoB,CAAC,IAAD;AAAA,SAAe;AAAA,WAC9C,QAAQ,CAAC,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AAAA,qBAAA;AAAA,KAAT,CAAD,EAA2B;AACjC,MAAA,WAAW,EAAE,IAAI,CAAC,WADe;AAEjC,MAAA,SAAS,EAAE,MAAM,CAAC,SAAP,CAAiB,QAFK;AAGjC,MAAA,SAAS,EAAE,gBAHsB;AAIjC,MAAA,MAAM,EAAE;AACN,QAAA,WAAW,EAAE;AACX,UAAA,MAAM,EAAE,IAAI,CAAC,MADF;AAEX,UAAA,MAAM,EAAE,IAAI,KAAA,IAAJ,IAAA,IAAI,KAAA,KAAA,CAAJ,GAAI,KAAA,CAAJ,GAAA,IAAI,CAAE;AAFH;AADP;AAJyB,KAA3B,CADsC;AAAA,GAAf;AAAA,CAA1B;AAaP,OAAO,IAAM,QAAQ,GAAe,SAAvB,QAAuB,CAClC,KADkC,QAGhC;AAAA,MADA,WACA,QADA,WACA;AAAA,MADa,MACb,QADa,MACb;AAAA,MADqB,QACrB,QADqB,QACrB;AAAA,MAD+B,SAC/B,QAD+B,SAC/B;AAAA,MAD0C,SAC1C,QAD0C,SAC1C;AACF,4BAEI,MAFJ,CACE,WADF;AAAA,MACiB,MADjB,uBACiB,MADjB;AAAA,MACyB,MADzB,uBACyB,MADzB;AAIA,MAAM,SAAS,GAAG;AAChB,IAAA,WAAW,EAAX,WADgB;AAEhB,IAAA,MAAM,EAAN,MAFgB;AAGhB,IAAA,QAAQ,EAAR;AAHgB,GAAlB;AAMA,MAAM,UAAU,GAAG,MAAM,IAAI,WAAW,KAAK,MAAM,CAAC,KAApD;AACA;;AAEG;;AACH,WAAS,WAAT,CAAqB,KAArB,EAA4C;AAC1C,QAAI,iBAAJ;;AACA,QAAI,CAAC,UAAL,EAAiB;AACf,MAAA,iBAAiB,GAAG,MAAM,CAAC,gBAAP,GAA2B,MAAM,CAAC,gBAAlC,GAAyE,eAAe,CAAC,GAA7G;AACD,KAFD,MAEO;AACL,MAAA,iBAAiB,GAAG,MAAM,CAAC,SAAP,KAAqB,eAAe,CAAC,GAArC,GAA2C,eAAe,CAAC,IAA3D,GAAkE,eAAe,CAAC,GAAtG;AACD,KANyC,CAO1C;;;AACA,IAAA,MAAM,IAAI,MAAM,CAAC,KAAD,EAAQ,WAAR,EAAqB,iBAArB,EAAwC,SAAxC,CAAhB;AACD;;AAED,SAAO;AACL,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,SAAR,EAAmB,UAAU,IAAI,MAAM,CAAC,SAAP,CAAiB,QAAlD,EAA4D,SAA5D,CADT;AAEL,iBAAa,UAAU,aAAM,MAAM,CAAC,SAAb,cAAiC,MAFnD;AAGL,IAAA,QAAQ,EACN,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AACT,MAAA,UAAU,EAAE,UADH;AAET,MAAA,aAAa,EAAE,UAAU,GAAG,MAAM,CAAC,SAAV,GAAsB,EAFtC;AAGT,MAAA,MAAM,EAAE,WAHC;AAGU,oBACP;AAJH,KAAX,EAMG,KANH;AAJG,GAAP;AAcD,CA3CM","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { IExtra, IFormatterValueType, ITransform } from '../../TableTypes';\nimport { SortColumn, SortByDirection } from '../../SortColumn';\nimport StarIcon from '@patternfly/react-icons/dist/esm/icons/star-icon';\n\nexport const sortableFavorites = (sort: any) => () =>\n  sortable(<StarIcon aria-hidden />, {\n    columnIndex: sort.columnIndex,\n    className: styles.modifiers.favorite,\n    ariaLabel: 'Sort favorites',\n    column: {\n      extraParams: {\n        sortBy: sort.sortBy,\n        onSort: sort?.onSort\n      }\n    }\n  });\n\nexport const sortable: ITransform = (\n  label: IFormatterValueType,\n  { columnIndex, column, property, className, ariaLabel }: IExtra\n) => {\n  const {\n    extraParams: { sortBy, onSort }\n  } = column;\n\n  const extraData = {\n    columnIndex,\n    column,\n    property\n  };\n\n  const isSortedBy = sortBy && columnIndex === sortBy.index;\n  /**\n   * @param {React.MouseEvent} event - React mouse event\n   */\n  function sortClicked(event: React.MouseEvent) {\n    let reversedDirection: SortByDirection;\n    if (!isSortedBy) {\n      reversedDirection = sortBy.defaultDirection ? (sortBy.defaultDirection as SortByDirection) : SortByDirection.asc;\n    } else {\n      reversedDirection = sortBy.direction === SortByDirection.asc ? SortByDirection.desc : SortByDirection.asc;\n    }\n    // tslint:disable-next-line:no-unused-expression\n    onSort && onSort(event, columnIndex, reversedDirection, extraData);\n  }\n\n  return {\n    className: css(styles.tableSort, isSortedBy && styles.modifiers.selected, className),\n    'aria-sort': isSortedBy ? `${sortBy.direction}ending` : 'none',\n    children: (\n      <SortColumn\n        isSortedBy={isSortedBy}\n        sortDirection={isSortedBy ? sortBy.direction : ''}\n        onSort={sortClicked}\n        aria-label={ariaLabel}\n      >\n        {label as React.ReactNode}\n      </SortColumn>\n    )\n  };\n};\n"]},"metadata":{},"sourceType":"module"}