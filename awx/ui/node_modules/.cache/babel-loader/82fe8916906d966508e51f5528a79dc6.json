{"ast":null,"code":"import _toConsumableArray from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport badgeStyles from '@patternfly/react-styles/css/components/Badge/badge';\nimport formStyles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport buttonStyles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/esm/icons/times-circle-icon';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport { SelectMenu } from './SelectMenu';\nimport { SelectOption } from './SelectOption';\nimport { SelectGroup } from './SelectGroup';\nimport { SelectToggle } from './SelectToggle';\nimport { SelectContext, SelectVariant, SelectPosition, SelectDirection, SelectFooterTabbableItems } from './selectConstants';\nimport { ChipGroup } from '../ChipGroup';\nimport { Chip } from '../Chip';\nimport { Spinner } from '../Spinner';\nimport { keyHandler, getNextIndex, getOUIAProps, getDefaultOUIAId, GenerateId } from '../../helpers';\nimport { KeyTypes } from '../../helpers/constants';\nimport { Divider } from '../Divider';\nimport { Popper } from '../../helpers/Popper/Popper';\nimport { createRenderableFavorites, extendItemsWithFavorite } from '../../helpers/favorites';\nimport { ValidatedOptions } from '../../helpers/constants';\nimport { findTabbableElements } from '../../helpers/util'; // seed for the aria-labelledby ID\n\nvar currentId = 0;\nexport var Select = /*#__PURE__*/function (_React$Component) {\n  _inherits(Select, _React$Component);\n\n  var _super = _createSuper(Select);\n\n  function Select() {\n    var _this;\n\n    _classCallCheck(this, Select);\n\n    _this = _super.apply(this, arguments);\n    _this.parentRef = React.createRef();\n    _this.menuComponentRef = React.createRef();\n    _this.filterRef = React.createRef();\n    _this.clearRef = React.createRef();\n    _this.inputRef = React.createRef();\n    _this.refCollection = [[]];\n    _this.optionContainerRefCollection = [];\n    _this.footerRef = React.createRef();\n    _this.state = {\n      focusFirstOption: false,\n      typeaheadInputValue: null,\n      typeaheadFilteredChildren: React.Children.toArray(_this.props.children),\n      favoritesGroup: [],\n      typeaheadCurrIndex: -1,\n      typeaheadStoredIndex: -1,\n      creatableValue: '',\n      tabbedIntoFavoritesMenu: false,\n      ouiaStateId: getDefaultOUIAId(Select.displayName, _this.props.variant),\n      viewMoreNextIndex: -1\n    };\n\n    _this.getTypeaheadActiveChild = function (typeaheadCurrIndex) {\n      return _this.refCollection[typeaheadCurrIndex] ? _this.refCollection[typeaheadCurrIndex][0] : null;\n    };\n\n    _this.componentDidUpdate = function (prevProps, prevState) {\n      if (_this.props.hasInlineFilter) {\n        _this.refCollection[0][0] = _this.filterRef.current;\n      } // Move focus to top of the menu if state.focusFirstOption was updated to true and the menu does not have custom content\n\n\n      if (!prevState.focusFirstOption && _this.state.focusFirstOption && !_this.props.customContent) {\n        var firstRef = _this.refCollection.find(function (ref) {\n          return ref !== null;\n        });\n\n        if (firstRef && firstRef[0]) {\n          firstRef[0].focus();\n        }\n      } else if ( // if viewMoreNextIndex is not -1, view more was clicked, set focus on first newly loaded item\n      _this.state.viewMoreNextIndex !== -1 && _this.refCollection.length > _this.state.viewMoreNextIndex && _this.props.loadingVariant !== 'spinner' && _this.refCollection[_this.state.viewMoreNextIndex][0] && _this.props.variant !== 'typeahead' && // do not hard focus newly added items for typeahead variants\n      _this.props.variant !== 'typeaheadmulti') {\n        _this.refCollection[_this.state.viewMoreNextIndex][0].focus();\n\n        _this.setState({\n          viewMoreNextIndex: -1\n        });\n      }\n\n      if (_this.props.variant === 'typeahead' || _this.props.variant === 'typeaheadmulti') {\n        var checkUpdatedChildren = function checkUpdatedChildren(prevChildren, currChildren) {\n          return Array.from(prevChildren).some(function (prevChild, index) {\n            var prevChildProps = prevChild.props;\n            var currChild = currChildren[index];\n            var currChildProps = currChild.props;\n\n            if (prevChildProps && currChildProps) {\n              return prevChildProps.value !== currChildProps.value || prevChildProps.label !== currChildProps.label || prevChildProps.isDisabled !== currChildProps.isDisabled || prevChildProps.isPlaceholder !== currChildProps.isPlaceholder;\n            } else {\n              return prevChild !== currChild;\n            }\n          });\n        };\n\n        var hasUpdatedChildren = prevProps.children.length !== _this.props.children.length || checkUpdatedChildren(prevProps.children, _this.props.children) || _this.props.isGrouped && Array.from(prevProps.children).some(function (prevChild, index) {\n          return prevChild.type === SelectGroup && prevChild.props.children && _this.props.children[index].props.children && (prevChild.props.children.length !== _this.props.children[index].props.children.length || checkUpdatedChildren(prevChild.props.children, _this.props.children[index].props.children));\n        });\n\n        if (hasUpdatedChildren) {\n          _this.updateTypeAheadFilteredChildren(prevState.typeaheadInputValue || '', null);\n        }\n      } // for menus with favorites,\n      // if the number of favorites or typeahead filtered children has changed, the generated\n      // list of favorites needs to be updated\n\n\n      if (_this.props.onFavorite && (_this.props.favorites.length !== prevProps.favorites.length || _this.state.typeaheadFilteredChildren !== prevState.typeaheadFilteredChildren)) {\n        var tempRenderableChildren = _this.props.variant === 'typeahead' || _this.props.variant === 'typeaheadmulti' ? _this.state.typeaheadFilteredChildren : _this.props.children;\n        var renderableFavorites = createRenderableFavorites(tempRenderableChildren, _this.props.isGrouped, _this.props.favorites);\n        var favoritesGroup = renderableFavorites.length ? [React.createElement(SelectGroup, {\n          key: \"favorites\",\n          label: _this.props.favoritesLabel\n        }, renderableFavorites), React.createElement(Divider, {\n          key: \"favorites-group-divider\"\n        })] : [];\n\n        _this.setState({\n          favoritesGroup: favoritesGroup\n        });\n      }\n    };\n\n    _this.onEnter = function () {\n      _this.setState({\n        focusFirstOption: true\n      });\n    };\n\n    _this.onToggle = function (isExpanded, e) {\n      var _this$props = _this.props,\n          isInputValuePersisted = _this$props.isInputValuePersisted,\n          onSelect = _this$props.onSelect,\n          onToggle = _this$props.onToggle,\n          hasInlineFilter = _this$props.hasInlineFilter;\n\n      if (!isExpanded && isInputValuePersisted && onSelect) {\n        onSelect(undefined, _this.inputRef.current ? _this.inputRef.current.value : '');\n      }\n\n      if (isExpanded && hasInlineFilter) {\n        _this.setState({\n          focusFirstOption: true\n        });\n      }\n\n      onToggle(isExpanded, e);\n    };\n\n    _this.onClose = function () {\n      var isInputFilterPersisted = _this.props.isInputFilterPersisted;\n\n      _this.setState(Object.assign(Object.assign({\n        focusFirstOption: false,\n        typeaheadInputValue: null\n      }, !isInputFilterPersisted && {\n        typeaheadFilteredChildren: React.Children.toArray(_this.props.children)\n      }), {\n        typeaheadCurrIndex: -1,\n        tabbedIntoFavoritesMenu: false,\n        viewMoreNextIndex: -1\n      }));\n    };\n\n    _this.onChange = function (e) {\n      if (e.target.value.toString() !== '' && !_this.props.isOpen) {\n        _this.onToggle(true, e);\n      }\n\n      if (_this.props.onTypeaheadInputChanged) {\n        _this.props.onTypeaheadInputChanged(e.target.value.toString());\n      }\n\n      _this.setState({\n        typeaheadCurrIndex: -1,\n        typeaheadInputValue: e.target.value,\n        creatableValue: e.target.value\n      });\n\n      _this.updateTypeAheadFilteredChildren(e.target.value.toString(), e);\n\n      _this.refCollection = [[]];\n    };\n\n    _this.updateTypeAheadFilteredChildren = function (typeaheadInputValue, e) {\n      var typeaheadFilteredChildren;\n      var _this$props2 = _this.props,\n          onFilter = _this$props2.onFilter,\n          isCreatable = _this$props2.isCreatable,\n          onCreateOption = _this$props2.onCreateOption,\n          createText = _this$props2.createText,\n          noResultsFoundText = _this$props2.noResultsFoundText,\n          children = _this$props2.children,\n          isGrouped = _this$props2.isGrouped,\n          isCreateSelectOptionObject = _this$props2.isCreateSelectOptionObject,\n          loadingVariant = _this$props2.loadingVariant;\n\n      if (onFilter) {\n        /* The updateTypeAheadFilteredChildren callback is not only called on input changes but also when the children change.\n         * In this case the e is null but we can get the typeaheadInputValue from the state.\n         */\n        typeaheadFilteredChildren = onFilter(e, e ? e.target.value : typeaheadInputValue) || children;\n      } else {\n        var input;\n\n        try {\n          input = new RegExp(typeaheadInputValue.toString(), 'i');\n        } catch (err) {\n          input = new RegExp(typeaheadInputValue.toString().replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i');\n        }\n\n        var childrenArray = React.Children.toArray(children);\n\n        if (isGrouped) {\n          var childFilter = function childFilter(child) {\n            return child.props.value && child.props.value.toString && _this.getDisplay(child.props.value.toString(), 'text').search(input) === 0;\n          };\n\n          typeaheadFilteredChildren = typeaheadInputValue.toString() !== '' ? React.Children.map(children, function (group) {\n            if (React.isValidElement(group) && group.type === SelectGroup) {\n              var filteredGroupChildren = React.Children.toArray(group.props.children).filter(childFilter);\n\n              if (filteredGroupChildren.length > 0) {\n                return React.cloneElement(group, {\n                  titleId: group.props.label && group.props.label.replace(/\\W/g, '-'),\n                  children: filteredGroupChildren\n                });\n              }\n            } else {\n              return React.Children.toArray(group).filter(childFilter);\n            }\n          }) : childrenArray;\n        } else {\n          typeaheadFilteredChildren = typeaheadInputValue.toString() !== '' ? childrenArray.filter(function (child) {\n            var valueToCheck = child.props.value; // Dividers don't have value and should not be filtered\n\n            if (!valueToCheck) {\n              return true;\n            }\n\n            var isSelectOptionObject = typeof valueToCheck !== 'string' && valueToCheck.toString && valueToCheck.compareTo; // View more option should be returned as not a match\n\n            if (loadingVariant !== 'spinner' && (loadingVariant === null || loadingVariant === void 0 ? void 0 : loadingVariant.text) === valueToCheck) {\n              return true;\n            } // spinner should be returned as not a match\n\n\n            if (loadingVariant === 'spinner' && valueToCheck === 'loading') {\n              return true;\n            }\n\n            if (isSelectOptionObject) {\n              return valueToCheck.compareTo(typeaheadInputValue);\n            } else {\n              return _this.getDisplay(child.props.value.toString(), 'text').search(input) === 0;\n            }\n          }) : childrenArray;\n        }\n      }\n\n      if (!typeaheadFilteredChildren) {\n        typeaheadFilteredChildren = [];\n      }\n\n      if (typeaheadFilteredChildren.length === 0) {\n        !isCreatable && typeaheadFilteredChildren.push(React.createElement(SelectOption, {\n          isDisabled: true,\n          key: \"no-results\",\n          value: noResultsFoundText,\n          isNoResultsOption: true\n        }));\n      }\n\n      if (isCreatable && typeaheadInputValue !== '') {\n        var newValue = typeaheadInputValue;\n\n        if (!typeaheadFilteredChildren.find(function (i) {\n          return i.props.value && i.props.value.toString().toLowerCase() === newValue.toString().toLowerCase();\n        })) {\n          var newOptionValue = isCreateSelectOptionObject ? {\n            toString: function toString() {\n              return newValue;\n            },\n            compareTo: function compareTo(value) {\n              return _this.toString().toLowerCase().includes(value.toString().toLowerCase());\n            }\n          } : newValue;\n          typeaheadFilteredChildren.push(React.createElement(SelectOption, {\n            key: \"create \".concat(newValue),\n            value: newOptionValue,\n            onClick: function onClick() {\n              return onCreateOption && onCreateOption(newValue);\n            }\n          }, createText, \" \\\"\", newValue, \"\\\"\"));\n        }\n      }\n\n      _this.setState({\n        typeaheadFilteredChildren: typeaheadFilteredChildren\n      });\n    };\n\n    _this.onClick = function (e) {\n      if (!_this.props.isOpen) {\n        _this.onToggle(true, e);\n      }\n    };\n\n    _this.clearSelection = function (_e) {\n      _this.setState({\n        typeaheadInputValue: null,\n        typeaheadFilteredChildren: React.Children.toArray(_this.props.children),\n        typeaheadCurrIndex: -1\n      });\n    };\n\n    _this.sendRef = function (optionRef, favoriteRef, optionContainerRef, index) {\n      _this.refCollection[index] = [optionRef, favoriteRef];\n      _this.optionContainerRefCollection[index] = optionContainerRef;\n    };\n\n    _this.handleMenuKeys = function (index, innerIndex, position) {\n      keyHandler(index, innerIndex, position, _this.refCollection, _this.refCollection);\n\n      if (_this.props.variant === SelectVariant.typeahead || _this.props.variant === SelectVariant.typeaheadMulti) {\n        if (position !== 'tab') {\n          _this.handleTypeaheadKeys(position);\n        }\n      }\n    };\n\n    _this.moveFocus = function (nextIndex) {\n      var updateCurrentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var _this$props3 = _this.props,\n          isCreatable = _this$props3.isCreatable,\n          createText = _this$props3.createText;\n      var hasDescriptionElm = Boolean(_this.refCollection[nextIndex][0] && _this.refCollection[nextIndex][0].classList.contains('pf-m-description'));\n      var isLoad = Boolean(_this.refCollection[nextIndex][0] && _this.refCollection[nextIndex][0].classList.contains('pf-m-load'));\n      var optionTextElm = hasDescriptionElm ? _this.refCollection[nextIndex][0].firstElementChild : _this.refCollection[nextIndex][0];\n      var typeaheadInputValue = '';\n\n      if (isCreatable && optionTextElm.innerText.includes(createText)) {\n        typeaheadInputValue = _this.state.creatableValue;\n      } else if (optionTextElm && !isLoad) {\n        // !isLoad prevents the view more button text from appearing the typeahead input\n        typeaheadInputValue = optionTextElm.innerText;\n      }\n\n      _this.setState(function (prevState) {\n        return {\n          typeaheadCurrIndex: updateCurrentIndex ? nextIndex : prevState.typeaheadCurrIndex,\n          typeaheadStoredIndex: nextIndex,\n          typeaheadInputValue: typeaheadInputValue\n        };\n      });\n    };\n\n    _this.switchFocusToFavoriteMenu = function () {\n      var _this$state = _this.state,\n          typeaheadCurrIndex = _this$state.typeaheadCurrIndex,\n          typeaheadStoredIndex = _this$state.typeaheadStoredIndex;\n      var indexForFocus = 0;\n\n      if (typeaheadCurrIndex !== -1) {\n        indexForFocus = typeaheadCurrIndex;\n      } else if (typeaheadStoredIndex !== -1) {\n        indexForFocus = typeaheadStoredIndex;\n      }\n\n      if (_this.refCollection[indexForFocus] !== null && _this.refCollection[indexForFocus][0] !== null) {\n        _this.refCollection[indexForFocus][0].focus();\n      } else {\n        _this.clearRef.current.focus();\n      }\n\n      _this.setState({\n        tabbedIntoFavoritesMenu: true,\n        typeaheadCurrIndex: -1\n      });\n    };\n\n    _this.moveFocusToLastMenuItem = function () {\n      var refCollectionLen = _this.refCollection.length;\n\n      if (refCollectionLen > 0 && _this.refCollection[refCollectionLen - 1] !== null && _this.refCollection[refCollectionLen - 1][0] !== null) {\n        _this.refCollection[refCollectionLen - 1][0].focus();\n      }\n    };\n\n    _this.handleTypeaheadKeys = function (position) {\n      var shiftKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var _this$props4 = _this.props,\n          isOpen = _this$props4.isOpen,\n          onFavorite = _this$props4.onFavorite,\n          isCreatable = _this$props4.isCreatable;\n      var _this$state2 = _this.state,\n          typeaheadCurrIndex = _this$state2.typeaheadCurrIndex,\n          tabbedIntoFavoritesMenu = _this$state2.tabbedIntoFavoritesMenu;\n\n      var typeaheadActiveChild = _this.getTypeaheadActiveChild(typeaheadCurrIndex);\n\n      if (isOpen) {\n        if (position === 'enter') {\n          if ((typeaheadCurrIndex !== -1 || isCreatable && _this.refCollection.length === 1) && ( // do not allow selection without moving to an initial option unless it is a single create option\n          typeaheadActiveChild || _this.refCollection[0] && _this.refCollection[0][0])) {\n            if (typeaheadActiveChild) {\n              if (!typeaheadActiveChild.classList.contains('pf-m-load')) {\n                var hasDescriptionElm = typeaheadActiveChild.childElementCount > 1;\n                var typeaheadActiveChildText = hasDescriptionElm ? typeaheadActiveChild.firstChild.innerText : typeaheadActiveChild.innerText;\n\n                _this.setState({\n                  typeaheadInputValue: typeaheadActiveChildText\n                });\n              }\n            } else if (_this.refCollection[0] && _this.refCollection[0][0]) {\n              _this.setState({\n                typeaheadInputValue: _this.refCollection[0][0].innerText\n              });\n            }\n\n            if (typeaheadActiveChild) {\n              typeaheadActiveChild.click();\n            } else {\n              _this.refCollection[0][0].click();\n            }\n          }\n        } else if (position === 'tab') {\n          if (onFavorite) {\n            // if the input has focus, tab to the first item or the last item that was previously focused.\n            if (_this.inputRef.current === document.activeElement) {\n              // If shift is also clicked and there is a footer, tab to the last item in tabbable footer\n              if (_this.props.footer && shiftKey) {\n                var tabbableItems = findTabbableElements(_this.footerRef, SelectFooterTabbableItems);\n\n                if (tabbableItems.length > 0) {\n                  if (tabbableItems[tabbableItems.length - 1]) {\n                    tabbableItems[tabbableItems.length - 1].focus();\n                  }\n                }\n              } else {\n                _this.switchFocusToFavoriteMenu();\n              }\n            } else {\n              // focus is on menu or footer\n              if (_this.props.footer) {\n                var tabbedIntoMenu = false;\n\n                var _tabbableItems = findTabbableElements(_this.footerRef, SelectFooterTabbableItems);\n\n                if (_tabbableItems.length > 0) {\n                  // if current element is not in footer, tab to first tabbable element in footer,\n                  // if shift was clicked, tab to input since focus is on menu\n                  var currentElementIndex = _tabbableItems.findIndex(function (item) {\n                    return item === document.activeElement;\n                  });\n\n                  if (currentElementIndex === -1) {\n                    if (shiftKey) {\n                      // currently in menu, shift back to input\n                      _this.inputRef.current.focus();\n                    } else {\n                      // currently in menu, tab to first tabbable item in footer\n                      _tabbableItems[0].focus();\n                    }\n                  } else {\n                    // already in footer\n                    if (shiftKey) {\n                      // shift to previous item\n                      if (currentElementIndex === 0) {\n                        // on first footer item, shift back to menu\n                        _this.switchFocusToFavoriteMenu();\n\n                        tabbedIntoMenu = true;\n                      } else {\n                        // shift to previous footer item\n                        _tabbableItems[currentElementIndex - 1].focus();\n                      }\n                    } else {\n                      // tab to next tabbable item in footer or to input.\n                      if (_tabbableItems[currentElementIndex + 1]) {\n                        _tabbableItems[currentElementIndex + 1].focus();\n                      } else {\n                        _this.inputRef.current.focus();\n                      }\n                    }\n                  }\n                } else {\n                  // no tabbable items in footer, tab to input\n                  _this.inputRef.current.focus();\n\n                  tabbedIntoMenu = false;\n                }\n\n                _this.setState({\n                  tabbedIntoFavoritesMenu: tabbedIntoMenu\n                });\n              } else {\n                _this.inputRef.current.focus();\n\n                _this.setState({\n                  tabbedIntoFavoritesMenu: false\n                });\n              }\n            }\n          } else {\n            // Close if there is no footer\n            if (!_this.props.footer) {\n              _this.onToggle(false, null);\n\n              _this.onClose();\n            } else {\n              // has footer\n              var _tabbableItems2 = findTabbableElements(_this.footerRef, SelectFooterTabbableItems);\n\n              var _currentElementIndex = _tabbableItems2.findIndex(function (item) {\n                return item === document.activeElement;\n              });\n\n              if (_this.inputRef.current === document.activeElement) {\n                if (shiftKey) {\n                  // close toggle if shift key and tab on input\n                  _this.onToggle(false, null);\n\n                  _this.onClose();\n                } else {\n                  // tab to first tabbable item in footer\n                  if (_tabbableItems2[0]) {\n                    _tabbableItems2[0].focus();\n                  } else {\n                    _this.onToggle(false, null);\n\n                    _this.onClose();\n                  }\n                }\n              } else {\n                // focus is in footer\n                if (shiftKey) {\n                  if (_currentElementIndex === 0) {\n                    // shift tab back to input\n                    _this.inputRef.current.focus();\n                  } else {\n                    // shift to previous footer item\n                    _tabbableItems2[_currentElementIndex - 1].focus();\n                  }\n                } else {\n                  // tab to next footer item or close tab if last item\n                  if (_tabbableItems2[_currentElementIndex + 1]) {\n                    _tabbableItems2[_currentElementIndex + 1].focus();\n                  } else {\n                    // no next item, close toggle\n                    _this.onToggle(false, null);\n\n                    _this.inputRef.current.focus();\n\n                    _this.onClose();\n                  }\n                }\n              }\n            }\n          }\n        } else if (!tabbedIntoFavoritesMenu) {\n          if (_this.refCollection[0][0] === null) {\n            return;\n          }\n\n          var nextIndex;\n\n          if (typeaheadCurrIndex === -1 && position === 'down') {\n            nextIndex = 0;\n          } else if (typeaheadCurrIndex === -1 && position === 'up') {\n            nextIndex = _this.refCollection.length - 1;\n          } else if (position !== 'left' && position !== 'right') {\n            nextIndex = getNextIndex(typeaheadCurrIndex, position, _this.refCollection);\n          } else {\n            nextIndex = typeaheadCurrIndex;\n          }\n\n          if (_this.refCollection[nextIndex] === null) {\n            return;\n          }\n\n          _this.moveFocus(nextIndex);\n        } else {\n          var _nextIndex = _this.refCollection.findIndex(function (ref) {\n            return ref !== undefined && (ref[0] === document.activeElement || ref[1] === document.activeElement);\n          });\n\n          _this.moveFocus(_nextIndex);\n        }\n      }\n    };\n\n    _this.onClickTypeaheadToggleButton = function () {\n      if (_this.inputRef && _this.inputRef.current) {\n        _this.inputRef.current.focus();\n      }\n    };\n\n    _this.getDisplay = function (value) {\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'node';\n\n      if (!value) {\n        return;\n      }\n\n      var item = _this.props.isGrouped ? React.Children.toArray(_this.props.children).reduce(function (acc, curr) {\n        return [].concat(_toConsumableArray(acc), _toConsumableArray(React.Children.toArray(curr.props.children)));\n      }, []).find(function (child) {\n        return child.props.value.toString() === value.toString();\n      }) : React.Children.toArray(_this.props.children).find(function (child) {\n        return child.props.value && child.props.value.toString() === value.toString();\n      });\n\n      if (item) {\n        if (item && item.props.children) {\n          if (type === 'node') {\n            return item.props.children;\n          }\n\n          return _this.findText(item);\n        }\n\n        return item.props.value.toString();\n      }\n\n      return value.toString();\n    };\n\n    _this.findText = function (item) {\n      if (typeof item === 'string') {\n        return item;\n      } else if (!React.isValidElement(item)) {\n        return '';\n      } else {\n        var multi = [];\n        React.Children.toArray(item.props.children).forEach(function (child) {\n          return multi.push(_this.findText(child));\n        });\n        return multi.join('');\n      }\n    };\n\n    _this.generateSelectedBadge = function () {\n      var _this$props5 = _this.props,\n          customBadgeText = _this$props5.customBadgeText,\n          selections = _this$props5.selections;\n\n      if (customBadgeText !== null) {\n        return customBadgeText;\n      }\n\n      if (Array.isArray(selections) && selections.length > 0) {\n        return selections.length;\n      }\n\n      return null;\n    };\n\n    _this.setVieMoreNextIndex = function () {\n      _this.setState({\n        viewMoreNextIndex: _this.refCollection.length - 1\n      });\n    };\n\n    _this.isLastOptionBeforeFooter = function (index) {\n      return _this.props.footer && index === _this.refCollection.length - 1 ? true : false;\n    };\n\n    return _this;\n  }\n\n  _createClass(Select, [{\n    key: \"extendTypeaheadChildren\",\n    value: function extendTypeaheadChildren(typeaheadCurrIndex, favoritesGroup) {\n      var _this2 = this;\n\n      var _this$props6 = this.props,\n          isGrouped = _this$props6.isGrouped,\n          onFavorite = _this$props6.onFavorite;\n      var typeaheadChildren = favoritesGroup ? favoritesGroup.concat(this.state.typeaheadFilteredChildren) : this.state.typeaheadFilteredChildren;\n      var activeElement = this.optionContainerRefCollection[typeaheadCurrIndex];\n      var typeaheadActiveChild = this.getTypeaheadActiveChild(typeaheadCurrIndex);\n\n      if (typeaheadActiveChild && typeaheadActiveChild.classList.contains('pf-m-description')) {\n        typeaheadActiveChild = typeaheadActiveChild.firstElementChild;\n      }\n\n      this.refCollection = [[]];\n      this.optionContainerRefCollection = [];\n\n      if (isGrouped) {\n        return React.Children.map(typeaheadChildren, function (group) {\n          if (group.type === Divider) {\n            return group;\n          } else if (group.type === SelectGroup && onFavorite) {\n            return React.cloneElement(group, {\n              titleId: group.props.label && group.props.label.replace(/\\W/g, '-'),\n              children: React.Children.map(group.props.children, function (child) {\n                return child.type === Divider ? child : React.cloneElement(child, {\n                  isFocused: activeElement && (activeElement.id === child.props.id || _this2.props.isCreatable && typeaheadActiveChild.innerText === \"{createText} \\\"\".concat(group.props.value, \"\\\"\"))\n                });\n              })\n            });\n          } else if (group.type === SelectGroup) {\n            return React.cloneElement(group, {\n              titleId: group.props.label && group.props.label.replace(/\\W/g, '-'),\n              children: React.Children.map(group.props.children, function (child) {\n                return child.type === Divider ? child : React.cloneElement(child, {\n                  isFocused: typeaheadActiveChild && (typeaheadActiveChild.innerText === child.props.value.toString() || _this2.props.isCreatable && typeaheadActiveChild.innerText === \"{createText} \\\"\".concat(child.props.value, \"\\\"\"))\n                });\n              })\n            });\n          } else {\n            // group has been filtered down to SelectOption\n            return React.cloneElement(group, {\n              isFocused: typeaheadActiveChild && (typeaheadActiveChild.innerText === group.props.value.toString() || _this2.props.isCreatable && typeaheadActiveChild.innerText === \"{createText} \\\"\".concat(group.props.value, \"\\\"\"))\n            });\n          }\n        });\n      }\n\n      return typeaheadChildren.map(function (child, index) {\n        var childElement = child;\n        return childElement.type.displayName === 'Divider' ? child : React.cloneElement(child, {\n          isFocused: typeaheadActiveChild ? typeaheadActiveChild.innerText === child.props.value.toString() || _this2.props.isCreatable && typeaheadActiveChild.innerText === \"{createText} \\\"\".concat(child.props.value, \"\\\"\") : index === typeaheadCurrIndex // fallback for view more + typeahead use cases, when the new expanded list is loaded and refCollection hasn't be updated yet\n\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _a = this.props,\n          children = _a.children,\n          chipGroupProps = _a.chipGroupProps,\n          chipGroupComponent = _a.chipGroupComponent,\n          className = _a.className,\n          customContent = _a.customContent,\n          variant = _a.variant,\n          direction = _a.direction,\n          onSelect = _a.onSelect,\n          onClear = _a.onClear,\n          onBlur = _a.onBlur,\n          toggleId = _a.toggleId,\n          isOpen = _a.isOpen,\n          isGrouped = _a.isGrouped,\n          isPlain = _a.isPlain,\n          isDisabled = _a.isDisabled,\n          hasPlaceholderStyle = _a.hasPlaceholderStyle,\n          validated = _a.validated,\n          selectionsProp = _a.selections,\n          typeAheadAriaLabel = _a.typeAheadAriaLabel,\n          typeAheadAriaDescribedby = _a.typeAheadAriaDescribedby,\n          clearSelectionsAriaLabel = _a.clearSelectionsAriaLabel,\n          toggleAriaLabel = _a.toggleAriaLabel,\n          removeSelectionAriaLabel = _a.removeSelectionAriaLabel,\n          ariaLabel = _a['aria-label'],\n          ariaLabelledBy = _a['aria-labelledby'],\n          ariaDescribedby = _a['aria-describedby'],\n          ariaInvalid = _a['aria-invalid'],\n          placeholderText = _a.placeholderText,\n          width = _a.width,\n          maxHeight = _a.maxHeight,\n          toggleIcon = _a.toggleIcon,\n          ouiaId = _a.ouiaId,\n          ouiaSafe = _a.ouiaSafe,\n          hasInlineFilter = _a.hasInlineFilter,\n          isCheckboxSelectionBadgeHidden = _a.isCheckboxSelectionBadgeHidden,\n          inlineFilterPlaceholderText = _a.inlineFilterPlaceholderText,\n          onFilter = _a.onFilter,\n          onTypeaheadInputChanged = _a.onTypeaheadInputChanged,\n          onCreateOption = _a.onCreateOption,\n          isCreatable = _a.isCreatable,\n          onToggle = _a.onToggle,\n          createText = _a.createText,\n          noResultsFoundText = _a.noResultsFoundText,\n          customBadgeText = _a.customBadgeText,\n          inputIdPrefix = _a.inputIdPrefix,\n          inputAutoComplete = _a.inputAutoComplete,\n          isInputValuePersisted = _a.isInputValuePersisted,\n          isInputFilterPersisted = _a.isInputFilterPersisted,\n          menuAppendTo = _a.menuAppendTo,\n          favorites = _a.favorites,\n          onFavorite = _a.onFavorite,\n          favoritesLabel = _a.favoritesLabel,\n          footer = _a.footer,\n          loadingVariant = _a.loadingVariant,\n          isCreateSelectOptionObject = _a.isCreateSelectOptionObject,\n          shouldResetOnSelect = _a.shouldResetOnSelect,\n          isFlipEnabled = _a.isFlipEnabled,\n          props = __rest(_a, [\"children\", \"chipGroupProps\", \"chipGroupComponent\", \"className\", \"customContent\", \"variant\", \"direction\", \"onSelect\", \"onClear\", \"onBlur\", \"toggleId\", \"isOpen\", \"isGrouped\", \"isPlain\", \"isDisabled\", \"hasPlaceholderStyle\", \"validated\", \"selections\", \"typeAheadAriaLabel\", \"typeAheadAriaDescribedby\", \"clearSelectionsAriaLabel\", \"toggleAriaLabel\", \"removeSelectionAriaLabel\", 'aria-label', 'aria-labelledby', 'aria-describedby', 'aria-invalid', \"placeholderText\", \"width\", \"maxHeight\", \"toggleIcon\", \"ouiaId\", \"ouiaSafe\", \"hasInlineFilter\", \"isCheckboxSelectionBadgeHidden\", \"inlineFilterPlaceholderText\", \"onFilter\", \"onTypeaheadInputChanged\", \"onCreateOption\", \"isCreatable\", \"onToggle\", \"createText\", \"noResultsFoundText\", \"customBadgeText\", \"inputIdPrefix\", \"inputAutoComplete\", \"isInputValuePersisted\", \"isInputFilterPersisted\", \"menuAppendTo\", \"favorites\", \"onFavorite\", \"favoritesLabel\", \"footer\", \"loadingVariant\", \"isCreateSelectOptionObject\", \"shouldResetOnSelect\", \"isFlipEnabled\"]);\n\n      var _this$state3 = this.state,\n          openedOnEnter = _this$state3.focusFirstOption,\n          typeaheadCurrIndex = _this$state3.typeaheadCurrIndex,\n          typeaheadInputValue = _this$state3.typeaheadInputValue,\n          typeaheadFilteredChildren = _this$state3.typeaheadFilteredChildren,\n          favoritesGroup = _this$state3.favoritesGroup;\n      var selectToggleId = toggleId || \"pf-select-toggle-id-\".concat(currentId++);\n      var selections = Array.isArray(selectionsProp) ? selectionsProp : [selectionsProp]; // Find out if the selected option is a placeholder\n\n      var selectedOption = React.Children.toArray(children).find(function (option) {\n        return option.props.value === selections[0];\n      });\n      var isSelectedPlaceholder = selectedOption && selectedOption.props.isPlaceholder;\n      var hasAnySelections = Boolean(selections[0] && selections[0] !== '');\n      var typeaheadActiveChild = this.getTypeaheadActiveChild(typeaheadCurrIndex);\n      var childPlaceholderText = null; // If onFavorites is set,  add isFavorite prop to children and add a Favorites group to the SelectMenu\n\n      var renderableItems = [];\n\n      if (onFavorite) {\n        // if variant is type-ahead call the extendTypeaheadChildren before adding favorites\n        var tempExtendedChildren = children;\n\n        if (variant === 'typeahead' || variant === 'typeaheadmulti') {\n          tempExtendedChildren = this.extendTypeaheadChildren(typeaheadCurrIndex, favoritesGroup);\n        } else if (onFavorite) {\n          tempExtendedChildren = favoritesGroup.concat(children);\n        } // mark items that are favorited with isFavorite\n\n\n        renderableItems = extendItemsWithFavorite(tempExtendedChildren, isGrouped, favorites);\n      } else {\n        renderableItems = children;\n      }\n\n      if (!customContent) {\n        if (!hasAnySelections && !placeholderText) {\n          var childPlaceholder = React.Children.toArray(children).filter(function (child) {\n            return child.props.isPlaceholder === true;\n          });\n          childPlaceholderText = childPlaceholder[0] && this.getDisplay(childPlaceholder[0].props.value, 'node') || children[0] && this.getDisplay(children[0].props.value, 'node');\n        }\n      }\n\n      if (isOpen) {\n        if (renderableItems.find(function (item) {\n          var _a;\n\n          return ((_a = item) === null || _a === void 0 ? void 0 : _a.key) === 'loading';\n        }) === undefined) {\n          if (loadingVariant === 'spinner') {\n            renderableItems.push(React.createElement(SelectOption, {\n              isLoading: true,\n              key: \"loading\",\n              value: \"loading\"\n            }, React.createElement(Spinner, {\n              size: \"lg\"\n            })));\n          } else if (loadingVariant === null || loadingVariant === void 0 ? void 0 : loadingVariant.text) {\n            renderableItems.push(React.createElement(SelectOption, {\n              isLoad: true,\n              key: \"loading\",\n              value: loadingVariant.text,\n              setViewMoreNextIndex: this.setVieMoreNextIndex,\n              onClick: loadingVariant === null || loadingVariant === void 0 ? void 0 : loadingVariant.onClick\n            }));\n          }\n        }\n      }\n\n      var hasOnClear = onClear !== Select.defaultProps.onClear;\n      var clearBtn = React.createElement(\"button\", {\n        className: css(buttonStyles.button, buttonStyles.modifiers.plain, styles.selectToggleClear),\n        onClick: function onClick(e) {\n          _this3.clearSelection(e);\n\n          onClear(e);\n          e.stopPropagation();\n        },\n        \"aria-label\": clearSelectionsAriaLabel,\n        type: \"button\",\n        disabled: isDisabled,\n        ref: this.clearRef,\n        onKeyDown: function onKeyDown(event) {\n          if (event.key === KeyTypes.Enter) {\n            _this3.clearRef.current.click();\n          }\n        }\n      }, React.createElement(TimesCircleIcon, {\n        \"aria-hidden\": true\n      }));\n      var selectedChips = null;\n\n      if (variant === SelectVariant.typeaheadMulti) {\n        selectedChips = chipGroupComponent ? chipGroupComponent : React.createElement(ChipGroup, Object.assign({}, chipGroupProps), selections && selections.map(function (item) {\n          return React.createElement(Chip, {\n            key: item,\n            onClick: function onClick(e) {\n              return onSelect(e, item);\n            },\n            closeBtnAriaLabel: removeSelectionAriaLabel\n          }, _this3.getDisplay(item, 'node'));\n        }));\n      }\n\n      if (hasInlineFilter) {\n        var filterBox = React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          key: \"inline-filter\",\n          className: css(styles.selectMenuSearch)\n        }, React.createElement(\"input\", {\n          key: \"inline-filter-input\",\n          type: \"search\",\n          className: css(formStyles.formControl, formStyles.modifiers.search),\n          onChange: this.onChange,\n          placeholder: inlineFilterPlaceholderText,\n          onKeyDown: function onKeyDown(event) {\n            if (event.key === KeyTypes.ArrowUp) {\n              _this3.handleMenuKeys(0, 0, 'up');\n\n              event.preventDefault();\n            } else if (event.key === KeyTypes.ArrowDown) {\n              _this3.handleMenuKeys(0, 0, 'down');\n\n              event.preventDefault();\n            } else if (event.key === KeyTypes.ArrowLeft) {\n              _this3.handleMenuKeys(0, 0, 'left');\n\n              event.preventDefault();\n            } else if (event.key === KeyTypes.ArrowRight) {\n              _this3.handleMenuKeys(0, 0, 'right');\n\n              event.preventDefault();\n            } else if (event.key === KeyTypes.Tab && variant !== SelectVariant.checkbox && _this3.props.footer) {\n              // tab to footer or close menu if shift key\n              if (event.shiftKey) {\n                _this3.onToggle(false, event);\n              } else {\n                var tabbableItems = findTabbableElements(_this3.footerRef, SelectFooterTabbableItems);\n\n                if (tabbableItems.length > 0) {\n                  tabbableItems[0].focus();\n                  event.stopPropagation();\n                  event.preventDefault();\n                } else {\n                  _this3.onToggle(false, event);\n                }\n              }\n            } else if (event.key === KeyTypes.Tab && variant === SelectVariant.checkbox) {\n              // More modal-like experience for checkboxes\n              // Let SelectOption handle this\n              if (event.shiftKey) {\n                _this3.handleMenuKeys(0, 0, 'up');\n              } else {\n                _this3.handleMenuKeys(0, 0, 'down');\n              }\n\n              event.stopPropagation();\n              event.preventDefault();\n            }\n          },\n          ref: this.filterRef,\n          autoComplete: inputAutoComplete\n        })), React.createElement(Divider, {\n          key: \"inline-filter-divider\"\n        }));\n        renderableItems = [filterBox].concat(_toConsumableArray(typeaheadFilteredChildren)).map(function (option, index) {\n          return React.cloneElement(option, {\n            key: index\n          });\n        });\n      }\n\n      var variantProps;\n      var variantChildren;\n\n      if (customContent) {\n        variantProps = {\n          selected: selections,\n          openedOnEnter: openedOnEnter,\n          isCustomContent: true\n        };\n        variantChildren = customContent;\n      } else {\n        switch (variant) {\n          case 'single':\n            variantProps = {\n              selected: selections[0],\n              hasInlineFilter: hasInlineFilter,\n              openedOnEnter: openedOnEnter\n            };\n            variantChildren = renderableItems;\n            break;\n\n          case 'checkbox':\n            variantProps = {\n              checked: selections,\n              isGrouped: isGrouped,\n              hasInlineFilter: hasInlineFilter,\n              openedOnEnter: openedOnEnter\n            };\n            variantChildren = renderableItems;\n            break;\n\n          case 'typeahead':\n            variantProps = {\n              selected: selections[0],\n              openedOnEnter: openedOnEnter\n            };\n            variantChildren = onFavorite ? renderableItems : this.extendTypeaheadChildren(typeaheadCurrIndex);\n\n            if (variantChildren.length === 0) {\n              variantChildren.push(React.createElement(SelectOption, {\n                isDisabled: true,\n                key: 0,\n                value: noResultsFoundText,\n                isNoResultsOption: true\n              }));\n            }\n\n            break;\n\n          case 'typeaheadmulti':\n            variantProps = {\n              selected: selections,\n              openedOnEnter: openedOnEnter\n            };\n            variantChildren = onFavorite ? renderableItems : this.extendTypeaheadChildren(typeaheadCurrIndex);\n\n            if (variantChildren.length === 0) {\n              variantChildren.push(React.createElement(SelectOption, {\n                isDisabled: true,\n                key: 0,\n                value: noResultsFoundText,\n                isNoResultsOption: true\n              }));\n            }\n\n            break;\n        }\n      }\n\n      var innerMenu = React.createElement(SelectMenu // This removes the `position: absolute` styling from the `.pf-c-select__menu`\n      // allowing the menu to flip correctly\n      , Object.assign({}, isFlipEnabled && {\n        style: {\n          position: 'revert'\n        }\n      }, props, {\n        isGrouped: isGrouped,\n        selected: selections\n      }, variantProps, {\n        openedOnEnter: openedOnEnter,\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        sendRef: this.sendRef,\n        keyHandler: this.handleMenuKeys,\n        maxHeight: maxHeight,\n        ref: this.menuComponentRef,\n        footer: footer,\n        footerRef: this.footerRef,\n        isLastOptionBeforeFooter: this.isLastOptionBeforeFooter\n      }), variantChildren);\n      var menuContainer = footer ? React.createElement(\"div\", {\n        className: css(styles.selectMenu)\n      }, \" \", innerMenu, \" \") : innerMenu;\n      var popperContainer = React.createElement(\"div\", Object.assign({\n        className: css(styles.select, isOpen && styles.modifiers.expanded, validated === ValidatedOptions.success && styles.modifiers.success, validated === ValidatedOptions.warning && styles.modifiers.warning, validated === ValidatedOptions.error && styles.modifiers.invalid, direction === SelectDirection.up && styles.modifiers.top, className)\n      }, width && {\n        style: {\n          width: width\n        }\n      }, ariaDescribedby && {\n        'aria-describedby': ariaDescribedby\n      }, validated !== ValidatedOptions.default && {\n        'aria-invalid': ariaInvalid\n      }), isOpen && menuContainer);\n      var mainContainer = React.createElement(\"div\", Object.assign({\n        className: css(styles.select, isOpen && styles.modifiers.expanded, validated === ValidatedOptions.success && styles.modifiers.success, validated === ValidatedOptions.warning && styles.modifiers.warning, validated === ValidatedOptions.error && styles.modifiers.invalid, direction === SelectDirection.up && styles.modifiers.top, className),\n        ref: this.parentRef\n      }, getOUIAProps(Select.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), width && {\n        style: {\n          width: width\n        }\n      }, ariaDescribedby && {\n        'aria-describedby': ariaDescribedby\n      }, validated !== ValidatedOptions.default && {\n        'aria-invalid': ariaInvalid\n      }), React.createElement(SelectToggle, Object.assign({\n        id: selectToggleId,\n        parentRef: this.parentRef,\n        menuRef: this.menuComponentRef\n      }, footer && {\n        footerRef: this.footerRef\n      }, {\n        isOpen: isOpen,\n        isPlain: isPlain,\n        hasPlaceholderStyle: hasPlaceholderStyle && (!selections.length || selections[0] === null || isSelectedPlaceholder),\n        onToggle: this.onToggle,\n        onEnter: this.onEnter,\n        onClose: this.onClose,\n        onBlur: onBlur,\n        variant: variant,\n        \"aria-labelledby\": \"\".concat(ariaLabelledBy || '', \" \").concat(selectToggleId),\n        \"aria-label\": toggleAriaLabel,\n        handleTypeaheadKeys: this.handleTypeaheadKeys,\n        moveFocusToLastMenuItem: this.moveFocusToLastMenuItem,\n        isDisabled: isDisabled,\n        hasClearButton: hasOnClear,\n        hasFooter: footer !== undefined,\n        onClickTypeaheadToggleButton: this.onClickTypeaheadToggleButton\n      }), customContent && React.createElement(\"div\", {\n        className: css(styles.selectToggleWrapper)\n      }, toggleIcon && React.createElement(\"span\", {\n        className: css(styles.selectToggleIcon)\n      }, toggleIcon), React.createElement(\"span\", {\n        className: css(styles.selectToggleText)\n      }, placeholderText)), variant === SelectVariant.single && !customContent && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: css(styles.selectToggleWrapper)\n      }, toggleIcon && React.createElement(\"span\", {\n        className: css(styles.selectToggleIcon)\n      }, toggleIcon), React.createElement(\"span\", {\n        className: css(styles.selectToggleText)\n      }, this.getDisplay(selections[0], 'node') || placeholderText || childPlaceholderText)), hasOnClear && hasAnySelections && clearBtn), variant === SelectVariant.checkbox && !customContent && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: css(styles.selectToggleWrapper)\n      }, toggleIcon && React.createElement(\"span\", {\n        className: css(styles.selectToggleIcon)\n      }, toggleIcon), React.createElement(\"span\", {\n        className: css(styles.selectToggleText)\n      }, placeholderText), !isCheckboxSelectionBadgeHidden && hasAnySelections && React.createElement(\"div\", {\n        className: css(styles.selectToggleBadge)\n      }, React.createElement(\"span\", {\n        className: css(badgeStyles.badge, badgeStyles.modifiers.read)\n      }, this.generateSelectedBadge()))), hasOnClear && hasAnySelections && clearBtn), variant === SelectVariant.typeahead && !customContent && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: css(styles.selectToggleWrapper)\n      }, toggleIcon && React.createElement(\"span\", {\n        className: css(styles.selectToggleIcon)\n      }, toggleIcon), React.createElement(\"input\", Object.assign({\n        className: css(formStyles.formControl, styles.selectToggleTypeahead),\n        \"aria-activedescendant\": typeaheadActiveChild && typeaheadActiveChild.id,\n        id: \"\".concat(selectToggleId, \"-select-typeahead\"),\n        \"aria-label\": typeAheadAriaLabel\n      }, typeAheadAriaDescribedby && {\n        'aria-describedby': typeAheadAriaDescribedby\n      }, {\n        placeholder: placeholderText,\n        value: typeaheadInputValue !== null ? typeaheadInputValue : this.getDisplay(selections[0], 'text') || '',\n        type: \"text\",\n        onClick: this.onClick,\n        onChange: this.onChange,\n        autoComplete: inputAutoComplete,\n        disabled: isDisabled,\n        ref: this.inputRef\n      }))), hasOnClear && (selections[0] || typeaheadInputValue) && clearBtn), variant === SelectVariant.typeaheadMulti && !customContent && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: css(styles.selectToggleWrapper)\n      }, toggleIcon && React.createElement(\"span\", {\n        className: css(styles.selectToggleIcon)\n      }, toggleIcon), selections && Array.isArray(selections) && selections.length > 0 && selectedChips, React.createElement(\"input\", Object.assign({\n        className: css(formStyles.formControl, styles.selectToggleTypeahead),\n        \"aria-activedescendant\": typeaheadActiveChild && typeaheadActiveChild.id,\n        id: \"\".concat(selectToggleId, \"-select-multi-typeahead-typeahead\"),\n        \"aria-label\": typeAheadAriaLabel,\n        \"aria-invalid\": validated === ValidatedOptions.error\n      }, typeAheadAriaDescribedby && {\n        'aria-describedby': typeAheadAriaDescribedby\n      }, {\n        placeholder: placeholderText,\n        value: typeaheadInputValue !== null ? typeaheadInputValue : '',\n        type: \"text\",\n        onChange: this.onChange,\n        onClick: this.onClick,\n        autoComplete: inputAutoComplete,\n        disabled: isDisabled,\n        ref: this.inputRef\n      }))), hasOnClear && (selections && selections.length > 0 || typeaheadInputValue) && clearBtn), validated === ValidatedOptions.success && React.createElement(\"span\", {\n        className: css(styles.selectToggleStatusIcon)\n      }, React.createElement(CheckCircleIcon, {\n        \"aria-hidden\": \"true\"\n      })), validated === ValidatedOptions.error && React.createElement(\"span\", {\n        className: css(styles.selectToggleStatusIcon)\n      }, React.createElement(ExclamationCircleIcon, {\n        \"aria-hidden\": \"true\"\n      })), validated === ValidatedOptions.warning && React.createElement(\"span\", {\n        className: css(styles.selectToggleStatusIcon)\n      }, React.createElement(ExclamationTriangleIcon, {\n        \"aria-hidden\": \"true\"\n      }))), isOpen && menuAppendTo === 'inline' && menuContainer);\n\n      var getParentElement = function getParentElement() {\n        if (_this3.parentRef && _this3.parentRef.current) {\n          return _this3.parentRef.current.parentElement;\n        }\n\n        return null;\n      };\n\n      return React.createElement(GenerateId, null, function (randomId) {\n        return React.createElement(SelectContext.Provider, {\n          value: {\n            onSelect: onSelect,\n            onFavorite: onFavorite,\n            onClose: _this3.onClose,\n            variant: variant,\n            inputIdPrefix: inputIdPrefix || randomId,\n            shouldResetOnSelect: shouldResetOnSelect\n          }\n        }, menuAppendTo === 'inline' ? mainContainer : React.createElement(Popper, {\n          trigger: mainContainer,\n          popper: popperContainer,\n          direction: direction,\n          appendTo: menuAppendTo === 'parent' ? getParentElement() : menuAppendTo,\n          isVisible: isOpen\n        }));\n      });\n    }\n  }]);\n\n  return Select;\n}(React.Component);\nSelect.displayName = 'Select';\nSelect.defaultProps = {\n  children: [],\n  className: '',\n  position: SelectPosition.left,\n  direction: SelectDirection.down,\n  toggleId: null,\n  isOpen: false,\n  isGrouped: false,\n  isPlain: false,\n  isDisabled: false,\n  hasPlaceholderStyle: false,\n  isCreatable: false,\n  validated: 'default',\n  'aria-label': '',\n  'aria-labelledby': '',\n  'aria-describedby': '',\n  'aria-invalid': false,\n  typeAheadAriaLabel: '',\n  typeAheadAriaDescribedby: '',\n  clearSelectionsAriaLabel: 'Clear all',\n  toggleAriaLabel: 'Options menu',\n  removeSelectionAriaLabel: 'Remove',\n  selections: [],\n  createText: 'Create',\n  placeholderText: '',\n  noResultsFoundText: 'No results found',\n  variant: SelectVariant.single,\n  width: '',\n  onClear: function onClear() {\n    return undefined;\n  },\n  onCreateOption: function onCreateOption() {\n    return undefined;\n  },\n  toggleIcon: null,\n  onFilter: null,\n  onTypeaheadInputChanged: null,\n  customContent: null,\n  hasInlineFilter: false,\n  inlineFilterPlaceholderText: null,\n  customBadgeText: null,\n  inputIdPrefix: '',\n  inputAutoComplete: 'off',\n  menuAppendTo: 'inline',\n  favorites: [],\n  favoritesLabel: 'Favorites',\n  ouiaSafe: true,\n  chipGroupComponent: null,\n  isInputValuePersisted: false,\n  isInputFilterPersisted: false,\n  isCreateSelectOptionObject: false,\n  shouldResetOnSelect: true,\n  isFlipEnabled: false\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Select/Select.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport badgeStyles from '@patternfly/react-styles/css/components/Badge/badge';\nimport formStyles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport buttonStyles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/esm/icons/times-circle-icon';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport { SelectMenu } from './SelectMenu';\nimport { SelectOption, SelectOptionObject } from './SelectOption';\nimport { SelectGroup, SelectGroupProps } from './SelectGroup';\nimport { SelectToggle } from './SelectToggle';\nimport {\n  SelectContext,\n  SelectVariant,\n  SelectPosition,\n  SelectDirection,\n  SelectFooterTabbableItems\n} from './selectConstants';\nimport { ChipGroup, ChipGroupProps } from '../ChipGroup';\nimport { Chip } from '../Chip';\nimport { Spinner } from '../Spinner';\nimport {\n  keyHandler,\n  getNextIndex,\n  getOUIAProps,\n  OUIAProps,\n  getDefaultOUIAId,\n  PickOptional,\n  GenerateId\n} from '../../helpers';\nimport { KeyTypes } from '../../helpers/constants';\nimport { Divider } from '../Divider';\nimport { ToggleMenuBaseProps, Popper } from '../../helpers/Popper/Popper';\nimport { createRenderableFavorites, extendItemsWithFavorite } from '../../helpers/favorites';\nimport { ValidatedOptions } from '../../helpers/constants';\nimport { findTabbableElements } from '../../helpers/util';\n\n// seed for the aria-labelledby ID\nlet currentId = 0;\n\nexport interface SelectViewMoreObject {\n  /** View more text */\n  text: string;\n  /** Callback for when the view more button is clicked */\n  onClick: (event: React.MouseEvent | React.ChangeEvent) => void;\n}\nexport interface SelectProps\n  extends Omit<ToggleMenuBaseProps, 'menuAppendTo'>,\n    Omit<React.HTMLProps<HTMLDivElement>, 'onSelect' | 'ref' | 'checked' | 'selected'>,\n    OUIAProps {\n  /** Content rendered inside the Select. Must be React.ReactElement<SelectGroupProps>[] */\n  children?: React.ReactElement[];\n  /** Classes applied to the root of the Select */\n  className?: string;\n  /** Indicates where menu will be aligned horizontally */\n  position?: SelectPosition | 'right' | 'left';\n  /** Flag specifying which direction the Select menu expands */\n  direction?: 'up' | 'down';\n  /** Flag to indicate if select is open */\n  isOpen?: boolean;\n  /** Flag to indicate if select options are grouped */\n  isGrouped?: boolean;\n  /** Display the toggle with no border or background */\n  isPlain?: boolean;\n  /** Flag to indicate if select is disabled */\n  isDisabled?: boolean;\n  /** Flag to indicate if the typeahead select allows new items */\n  isCreatable?: boolean;\n  /** Flag indicating if placeholder styles should be applied */\n  hasPlaceholderStyle?: boolean;\n  /** @beta Flag indicating if the creatable option should set its value as a SelectOptionObject */\n  isCreateSelectOptionObject?: boolean;\n  /** Value to indicate if the select is modified to show that validation state.\n   * If set to success, select will be modified to indicate valid state.\n   * If set to error, select will be modified to indicate error state.\n   * If set to warning, select will be modified to indicate warning state.\n   */\n  validated?: 'success' | 'warning' | 'error' | 'default';\n  /** @beta Loading variant to display either the spinner or the view more text button */\n  loadingVariant?: 'spinner' | SelectViewMoreObject;\n  /** Text displayed in typeahead select to prompt the user to create an item */\n  createText?: string;\n  /** Title text of Select */\n  placeholderText?: string | React.ReactNode;\n  /** Text to display in typeahead select when no results are found */\n  noResultsFoundText?: string;\n  /** Array of selected items for multi select variants. */\n  selections?: string | SelectOptionObject | (string | SelectOptionObject)[];\n  /** Flag indicating if selection badge should be hidden for checkbox variant,default false */\n  isCheckboxSelectionBadgeHidden?: boolean;\n  /** Id for select toggle element */\n  toggleId?: string;\n  /** Adds accessible text to Select */\n  'aria-label'?: string;\n  /** Id of label for the Select aria-labelledby */\n  'aria-labelledby'?: string;\n  /** Id of div for the select aria-labelledby */\n  'aria-describedby'?: string;\n  /** Flag indicating if the select is an invalid state */\n  'aria-invalid'?: boolean;\n  /** Label for input field of type ahead select variants */\n  typeAheadAriaLabel?: string;\n  /** Id of div for input field of type ahead select variants */\n  typeAheadAriaDescribedby?: string;\n  /** Label for clear selection button of type ahead select variants */\n  clearSelectionsAriaLabel?: string;\n  /** Label for toggle of type ahead select variants */\n  toggleAriaLabel?: string;\n  /** Label for remove chip button of multiple type ahead select variant */\n  removeSelectionAriaLabel?: string;\n  /** ID list of favorited select items */\n  favorites?: string[];\n  /** Label for the favorites group */\n  favoritesLabel?: string;\n  /** Enables favorites. Callback called when a select options's favorite button is clicked */\n  onFavorite?: (itemId: string, isFavorite: boolean) => void;\n  /** Callback for selection behavior */\n  onSelect?: (\n    event: React.MouseEvent | React.ChangeEvent,\n    value: string | SelectOptionObject,\n    isPlaceholder?: boolean\n  ) => void;\n  /** Callback for toggle button behavior */\n  onToggle: (isExpanded: boolean, event: React.MouseEvent | React.ChangeEvent | React.KeyboardEvent | Event) => void;\n  /** Callback for toggle blur */\n  onBlur?: (event?: any) => void;\n  /** Callback for typeahead clear button */\n  onClear?: (event: React.MouseEvent) => void;\n  /** Optional callback for custom filtering */\n  onFilter?: (e: React.ChangeEvent<HTMLInputElement> | null, value: string) => React.ReactElement[] | undefined;\n  /** Optional callback for newly created options */\n  onCreateOption?: (newOptionValue: string) => void;\n  /** Optional event handler called each time the value in the typeahead input changes. */\n  onTypeaheadInputChanged?: (value: string) => void;\n  /** Variant of rendered Select */\n  variant?: 'single' | 'checkbox' | 'typeahead' | 'typeaheadmulti';\n  /** Width of the select container as a number of px or string percentage */\n  width?: string | number;\n  /** Max height of the select container as a number of px or string percentage */\n  maxHeight?: string | number;\n  /** Icon element to render inside the select toggle */\n  toggleIcon?: React.ReactElement;\n  /** Custom content to render in the select menu.  If this prop is defined, the variant prop will be ignored and the select will render with a single select toggle */\n  customContent?: React.ReactNode;\n  /** Flag indicating if select should have an inline text input for filtering */\n  hasInlineFilter?: boolean;\n  /** Placeholder text for inline filter */\n  inlineFilterPlaceholderText?: string;\n  /** Custom text for select badge */\n  customBadgeText?: string | number;\n  /** Prefix for the id of the input in the checkbox select variant*/\n  inputIdPrefix?: string;\n  /** Value for the typeahead and inline filtering input autocomplete attribute. When targeting Chrome this property should be a random string. */\n  inputAutoComplete?: string;\n  /** Optional props to pass to the chip group in the typeaheadmulti variant */\n  chipGroupProps?: Omit<ChipGroupProps, 'children' | 'ref'>;\n  /** Optional props to render custom chip group in the typeaheadmulti variant */\n  chipGroupComponent?: React.ReactNode;\n  /** Flag for retaining keyboard-entered value in typeahead text field when focus leaves input away */\n  isInputValuePersisted?: boolean;\n  /** @beta Flag for retaining filter results on blur from keyboard-entered typeahead text */\n  isInputFilterPersisted?: boolean;\n  /** Flag indicating the typeahead input value should reset upon selection */\n  shouldResetOnSelect?: boolean;\n  /** Content rendered in the footer of the select menu */\n  footer?: React.ReactNode;\n  /** The container to append the menu to. Defaults to 'inline'.\n   * If your menu is being cut off you can append it to an element higher up the DOM tree.\n   * Some examples:\n   * menuAppendTo=\"parent\"\n   * menuAppendTo={() => document.body}\n   * menuAppendTo={document.getElementById('target')}\n   */\n  menuAppendTo?: HTMLElement | (() => HTMLElement) | 'inline' | 'parent';\n  /** Flag for indicating that the select menu should automatically flip vertically when\n   * it reaches the boundary. This prop can only be used when the select component is not\n   * appended inline, e.g. `menuAppendTo=\"parent\"`\n   */\n  isFlipEnabled?: boolean;\n}\n\nexport interface SelectState {\n  focusFirstOption: boolean;\n  typeaheadInputValue: string | null;\n  typeaheadFilteredChildren: React.ReactNode[];\n  favoritesGroup: React.ReactNode[];\n  typeaheadCurrIndex: number;\n  creatableValue: string;\n  tabbedIntoFavoritesMenu: boolean;\n  typeaheadStoredIndex: number;\n  ouiaStateId: string;\n  viewMoreNextIndex: number;\n}\n\nexport class Select extends React.Component<SelectProps & OUIAProps, SelectState> {\n  static displayName = 'Select';\n  private parentRef = React.createRef<HTMLDivElement>();\n  private menuComponentRef = React.createRef<HTMLElement>();\n  private filterRef = React.createRef<HTMLInputElement>();\n  private clearRef = React.createRef<HTMLButtonElement>();\n  private inputRef = React.createRef<HTMLInputElement>();\n  private refCollection: HTMLElement[][] = [[]];\n  private optionContainerRefCollection: HTMLElement[] = [];\n  private footerRef = React.createRef<HTMLDivElement>();\n\n  static defaultProps: PickOptional<SelectProps> = {\n    children: [] as React.ReactElement[],\n    className: '',\n    position: SelectPosition.left,\n    direction: SelectDirection.down,\n    toggleId: null as string,\n    isOpen: false,\n    isGrouped: false,\n    isPlain: false,\n    isDisabled: false,\n    hasPlaceholderStyle: false,\n    isCreatable: false,\n    validated: 'default',\n    'aria-label': '',\n    'aria-labelledby': '',\n    'aria-describedby': '',\n    'aria-invalid': false,\n    typeAheadAriaLabel: '',\n    typeAheadAriaDescribedby: '',\n    clearSelectionsAriaLabel: 'Clear all',\n    toggleAriaLabel: 'Options menu',\n    removeSelectionAriaLabel: 'Remove',\n    selections: [],\n    createText: 'Create',\n    placeholderText: '',\n    noResultsFoundText: 'No results found',\n    variant: SelectVariant.single,\n    width: '',\n    onClear: () => undefined as void,\n    onCreateOption: () => undefined as void,\n    toggleIcon: null as React.ReactElement,\n    onFilter: null,\n    onTypeaheadInputChanged: null,\n    customContent: null,\n    hasInlineFilter: false,\n    inlineFilterPlaceholderText: null,\n    customBadgeText: null,\n    inputIdPrefix: '',\n    inputAutoComplete: 'off',\n    menuAppendTo: 'inline',\n    favorites: [] as string[],\n    favoritesLabel: 'Favorites',\n    ouiaSafe: true,\n    chipGroupComponent: null,\n    isInputValuePersisted: false,\n    isInputFilterPersisted: false,\n    isCreateSelectOptionObject: false,\n    shouldResetOnSelect: true,\n    isFlipEnabled: false\n  };\n\n  state: SelectState = {\n    focusFirstOption: false,\n    typeaheadInputValue: null,\n    typeaheadFilteredChildren: React.Children.toArray(this.props.children),\n    favoritesGroup: [] as React.ReactNode[],\n    typeaheadCurrIndex: -1,\n    typeaheadStoredIndex: -1,\n    creatableValue: '',\n    tabbedIntoFavoritesMenu: false,\n    ouiaStateId: getDefaultOUIAId(Select.displayName, this.props.variant),\n    viewMoreNextIndex: -1\n  };\n\n  getTypeaheadActiveChild = (typeaheadCurrIndex: number) =>\n    this.refCollection[typeaheadCurrIndex] ? this.refCollection[typeaheadCurrIndex][0] : null;\n\n  componentDidUpdate = (prevProps: SelectProps, prevState: SelectState) => {\n    if (this.props.hasInlineFilter) {\n      this.refCollection[0][0] = this.filterRef.current;\n    }\n\n    // Move focus to top of the menu if state.focusFirstOption was updated to true and the menu does not have custom content\n    if (!prevState.focusFirstOption && this.state.focusFirstOption && !this.props.customContent) {\n      const firstRef = this.refCollection.find(ref => ref !== null);\n      if (firstRef && firstRef[0]) {\n        firstRef[0].focus();\n      }\n    } else if (\n      // if viewMoreNextIndex is not -1, view more was clicked, set focus on first newly loaded item\n      this.state.viewMoreNextIndex !== -1 &&\n      this.refCollection.length > this.state.viewMoreNextIndex &&\n      this.props.loadingVariant !== 'spinner' &&\n      this.refCollection[this.state.viewMoreNextIndex][0] &&\n      this.props.variant !== 'typeahead' && // do not hard focus newly added items for typeahead variants\n      this.props.variant !== 'typeaheadmulti'\n    ) {\n      this.refCollection[this.state.viewMoreNextIndex][0].focus();\n      this.setState({ viewMoreNextIndex: -1 });\n    }\n\n    if (this.props.variant === 'typeahead' || this.props.variant === 'typeaheadmulti') {\n      const checkUpdatedChildren = (prevChildren: React.ReactElement[], currChildren: React.ReactElement[]) =>\n        Array.from(prevChildren).some((prevChild: React.ReactElement, index: number) => {\n          const prevChildProps = prevChild.props;\n          const currChild = currChildren[index];\n          const { props: currChildProps } = currChild;\n\n          if (prevChildProps && currChildProps) {\n            return (\n              prevChildProps.value !== currChildProps.value ||\n              prevChildProps.label !== currChildProps.label ||\n              prevChildProps.isDisabled !== currChildProps.isDisabled ||\n              prevChildProps.isPlaceholder !== currChildProps.isPlaceholder\n            );\n          } else {\n            return prevChild !== currChild;\n          }\n        });\n\n      const hasUpdatedChildren =\n        prevProps.children.length !== this.props.children.length ||\n        checkUpdatedChildren(prevProps.children, this.props.children) ||\n        (this.props.isGrouped &&\n          Array.from(prevProps.children).some(\n            (prevChild: React.ReactElement, index: number) =>\n              prevChild.type === SelectGroup &&\n              prevChild.props.children &&\n              this.props.children[index].props.children &&\n              (prevChild.props.children.length !== this.props.children[index].props.children.length ||\n                checkUpdatedChildren(prevChild.props.children, this.props.children[index].props.children))\n          ));\n\n      if (hasUpdatedChildren) {\n        this.updateTypeAheadFilteredChildren(prevState.typeaheadInputValue || '', null);\n      }\n    }\n\n    // for menus with favorites,\n    // if the number of favorites or typeahead filtered children has changed, the generated\n    // list of favorites needs to be updated\n    if (\n      this.props.onFavorite &&\n      (this.props.favorites.length !== prevProps.favorites.length ||\n        this.state.typeaheadFilteredChildren !== prevState.typeaheadFilteredChildren)\n    ) {\n      const tempRenderableChildren =\n        this.props.variant === 'typeahead' || this.props.variant === 'typeaheadmulti'\n          ? this.state.typeaheadFilteredChildren\n          : this.props.children;\n      const renderableFavorites = createRenderableFavorites(\n        tempRenderableChildren,\n        this.props.isGrouped,\n        this.props.favorites\n      );\n      const favoritesGroup = renderableFavorites.length\n        ? [\n            <SelectGroup key=\"favorites\" label={this.props.favoritesLabel}>\n              {renderableFavorites}\n            </SelectGroup>,\n            <Divider key=\"favorites-group-divider\" />\n          ]\n        : [];\n      this.setState({ favoritesGroup });\n    }\n  };\n\n  onEnter = () => {\n    this.setState({ focusFirstOption: true });\n  };\n\n  onToggle = (isExpanded: boolean, e: React.MouseEvent | React.ChangeEvent | React.KeyboardEvent | Event) => {\n    const { isInputValuePersisted, onSelect, onToggle, hasInlineFilter } = this.props;\n    if (!isExpanded && isInputValuePersisted && onSelect) {\n      onSelect(undefined, this.inputRef.current ? this.inputRef.current.value : '');\n    }\n    if (isExpanded && hasInlineFilter) {\n      this.setState({\n        focusFirstOption: true\n      });\n    }\n    onToggle(isExpanded, e);\n  };\n\n  onClose = () => {\n    const { isInputFilterPersisted } = this.props;\n\n    this.setState({\n      focusFirstOption: false,\n      typeaheadInputValue: null,\n      ...(!isInputFilterPersisted && {\n        typeaheadFilteredChildren: React.Children.toArray(this.props.children)\n      }),\n      typeaheadCurrIndex: -1,\n      tabbedIntoFavoritesMenu: false,\n      viewMoreNextIndex: -1\n    });\n  };\n\n  onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.value.toString() !== '' && !this.props.isOpen) {\n      this.onToggle(true, e);\n    }\n\n    if (this.props.onTypeaheadInputChanged) {\n      this.props.onTypeaheadInputChanged(e.target.value.toString());\n    }\n\n    this.setState({\n      typeaheadCurrIndex: -1,\n      typeaheadInputValue: e.target.value,\n      creatableValue: e.target.value\n    });\n    this.updateTypeAheadFilteredChildren(e.target.value.toString(), e);\n    this.refCollection = [[]];\n  };\n\n  updateTypeAheadFilteredChildren = (typeaheadInputValue: string, e: React.ChangeEvent<HTMLInputElement> | null) => {\n    let typeaheadFilteredChildren: any;\n\n    const {\n      onFilter,\n      isCreatable,\n      onCreateOption,\n      createText,\n      noResultsFoundText,\n      children,\n      isGrouped,\n      isCreateSelectOptionObject,\n      loadingVariant\n    } = this.props;\n\n    if (onFilter) {\n      /* The updateTypeAheadFilteredChildren callback is not only called on input changes but also when the children change.\n       * In this case the e is null but we can get the typeaheadInputValue from the state.\n       */\n      typeaheadFilteredChildren = onFilter(e, e ? e.target.value : typeaheadInputValue) || children;\n    } else {\n      let input: RegExp;\n      try {\n        input = new RegExp(typeaheadInputValue.toString(), 'i');\n      } catch (err) {\n        input = new RegExp(typeaheadInputValue.toString().replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i');\n      }\n      const childrenArray = React.Children.toArray(children) as React.ReactElement<SelectGroupProps>[];\n      if (isGrouped) {\n        const childFilter = (child: React.ReactElement<SelectGroupProps>) =>\n          child.props.value &&\n          child.props.value.toString &&\n          this.getDisplay(child.props.value.toString(), 'text').search(input) === 0;\n        typeaheadFilteredChildren =\n          typeaheadInputValue.toString() !== ''\n            ? React.Children.map(children, group => {\n                if (\n                  React.isValidElement<React.ComponentProps<typeof SelectGroup>>(group) &&\n                  group.type === SelectGroup\n                ) {\n                  const filteredGroupChildren = (React.Children.toArray(group.props.children) as React.ReactElement<\n                    SelectGroupProps\n                  >[]).filter(childFilter);\n                  if (filteredGroupChildren.length > 0) {\n                    return React.cloneElement(group, {\n                      titleId: group.props.label && group.props.label.replace(/\\W/g, '-'),\n                      children: filteredGroupChildren as any\n                    });\n                  }\n                } else {\n                  return (React.Children.toArray(group) as React.ReactElement<SelectGroupProps>[]).filter(childFilter);\n                }\n              })\n            : childrenArray;\n      } else {\n        typeaheadFilteredChildren =\n          typeaheadInputValue.toString() !== ''\n            ? childrenArray.filter(child => {\n                const valueToCheck = child.props.value;\n                // Dividers don't have value and should not be filtered\n                if (!valueToCheck) {\n                  return true;\n                }\n\n                const isSelectOptionObject =\n                  typeof valueToCheck !== 'string' &&\n                  (valueToCheck as SelectOptionObject).toString &&\n                  (valueToCheck as SelectOptionObject).compareTo;\n\n                // View more option should be returned as not a match\n                if (loadingVariant !== 'spinner' && loadingVariant?.text === valueToCheck) {\n                  return true;\n                }\n\n                // spinner should be returned as not a match\n                if (loadingVariant === 'spinner' && valueToCheck === 'loading') {\n                  return true;\n                }\n\n                if (isSelectOptionObject) {\n                  return (valueToCheck as SelectOptionObject).compareTo(typeaheadInputValue);\n                } else {\n                  return this.getDisplay(child.props.value.toString(), 'text').search(input) === 0;\n                }\n              })\n            : childrenArray;\n      }\n    }\n    if (!typeaheadFilteredChildren) {\n      typeaheadFilteredChildren = [];\n    }\n    if (typeaheadFilteredChildren.length === 0) {\n      !isCreatable &&\n        typeaheadFilteredChildren.push(\n          <SelectOption isDisabled key=\"no-results\" value={noResultsFoundText} isNoResultsOption />\n        );\n    }\n    if (isCreatable && typeaheadInputValue !== '') {\n      const newValue = typeaheadInputValue;\n      if (\n        !typeaheadFilteredChildren.find(\n          (i: React.ReactElement) =>\n            i.props.value && i.props.value.toString().toLowerCase() === newValue.toString().toLowerCase()\n        )\n      ) {\n        const newOptionValue = isCreateSelectOptionObject\n          ? ({\n              toString: () => newValue,\n              compareTo: value =>\n                this.toString()\n                  .toLowerCase()\n                  .includes(value.toString().toLowerCase())\n            } as SelectOptionObject)\n          : newValue;\n\n        typeaheadFilteredChildren.push(\n          <SelectOption\n            key={`create ${newValue}`}\n            value={newOptionValue}\n            onClick={() => onCreateOption && onCreateOption(newValue)}\n          >\n            {createText} \"{newValue}\"\n          </SelectOption>\n        );\n      }\n    }\n\n    this.setState({\n      typeaheadFilteredChildren\n    });\n  };\n\n  onClick = (e: React.MouseEvent) => {\n    if (!this.props.isOpen) {\n      this.onToggle(true, e);\n    }\n  };\n\n  clearSelection = (_e: React.MouseEvent) => {\n    this.setState({\n      typeaheadInputValue: null,\n      typeaheadFilteredChildren: React.Children.toArray(this.props.children),\n      typeaheadCurrIndex: -1\n    });\n  };\n\n  extendTypeaheadChildren(typeaheadCurrIndex: number, favoritesGroup?: React.ReactNode[]) {\n    const { isGrouped, onFavorite } = this.props;\n    const typeaheadChildren = favoritesGroup\n      ? favoritesGroup.concat(this.state.typeaheadFilteredChildren)\n      : this.state.typeaheadFilteredChildren;\n    const activeElement = this.optionContainerRefCollection[typeaheadCurrIndex];\n\n    let typeaheadActiveChild = this.getTypeaheadActiveChild(typeaheadCurrIndex);\n    if (typeaheadActiveChild && typeaheadActiveChild.classList.contains('pf-m-description')) {\n      typeaheadActiveChild = typeaheadActiveChild.firstElementChild as HTMLElement;\n    }\n\n    this.refCollection = [[]];\n    this.optionContainerRefCollection = [];\n    if (isGrouped) {\n      return React.Children.map(typeaheadChildren as React.ReactElement[], (group: React.ReactElement) => {\n        if (group.type === Divider) {\n          return group;\n        } else if (group.type === SelectGroup && onFavorite) {\n          return React.cloneElement(group, {\n            titleId: group.props.label && group.props.label.replace(/\\W/g, '-'),\n            children: React.Children.map(group.props.children, (child: React.ReactElement) =>\n              child.type === Divider\n                ? child\n                : React.cloneElement(child as React.ReactElement, {\n                    isFocused:\n                      activeElement &&\n                      (activeElement.id === (child as React.ReactElement).props.id ||\n                        (this.props.isCreatable &&\n                          typeaheadActiveChild.innerText ===\n                            `{createText} \"${(group as React.ReactElement).props.value}\"`))\n                  })\n            )\n          });\n        } else if (group.type === SelectGroup) {\n          return React.cloneElement(group, {\n            titleId: group.props.label && group.props.label.replace(/\\W/g, '-'),\n            children: React.Children.map(group.props.children, (child: React.ReactElement) =>\n              child.type === Divider\n                ? child\n                : React.cloneElement(child as React.ReactElement, {\n                    isFocused:\n                      typeaheadActiveChild &&\n                      (typeaheadActiveChild.innerText === (child as React.ReactElement).props.value.toString() ||\n                        (this.props.isCreatable &&\n                          typeaheadActiveChild.innerText ===\n                            `{createText} \"${(child as React.ReactElement).props.value}\"`))\n                  })\n            )\n          });\n        } else {\n          // group has been filtered down to SelectOption\n          return React.cloneElement(group as React.ReactElement, {\n            isFocused:\n              typeaheadActiveChild &&\n              (typeaheadActiveChild.innerText === group.props.value.toString() ||\n                (this.props.isCreatable && typeaheadActiveChild.innerText === `{createText} \"${group.props.value}\"`))\n          });\n        }\n      });\n    }\n    return typeaheadChildren.map((child: React.ReactNode, index) => {\n      const childElement = child as any;\n      return childElement.type.displayName === 'Divider'\n        ? child\n        : React.cloneElement(child as React.ReactElement, {\n            isFocused: typeaheadActiveChild\n              ? typeaheadActiveChild.innerText === (child as React.ReactElement).props.value.toString() ||\n                (this.props.isCreatable &&\n                  typeaheadActiveChild.innerText === `{createText} \"${(child as React.ReactElement).props.value}\"`)\n              : index === typeaheadCurrIndex // fallback for view more + typeahead use cases, when the new expanded list is loaded and refCollection hasn't be updated yet\n          });\n    });\n  }\n\n  sendRef = (\n    optionRef: React.ReactNode,\n    favoriteRef: React.ReactNode,\n    optionContainerRef: React.ReactNode,\n    index: number\n  ) => {\n    this.refCollection[index] = [(optionRef as unknown) as HTMLElement, (favoriteRef as unknown) as HTMLElement];\n    this.optionContainerRefCollection[index] = (optionContainerRef as unknown) as HTMLElement;\n  };\n\n  handleMenuKeys = (index: number, innerIndex: number, position: string) => {\n    keyHandler(index, innerIndex, position, this.refCollection, this.refCollection);\n    if (this.props.variant === SelectVariant.typeahead || this.props.variant === SelectVariant.typeaheadMulti) {\n      if (position !== 'tab') {\n        this.handleTypeaheadKeys(position);\n      }\n    }\n  };\n\n  moveFocus = (nextIndex: number, updateCurrentIndex: boolean = true) => {\n    const { isCreatable, createText } = this.props;\n\n    const hasDescriptionElm = Boolean(\n      this.refCollection[nextIndex][0] && this.refCollection[nextIndex][0].classList.contains('pf-m-description')\n    );\n    const isLoad = Boolean(\n      this.refCollection[nextIndex][0] && this.refCollection[nextIndex][0].classList.contains('pf-m-load')\n    );\n    const optionTextElm = hasDescriptionElm\n      ? (this.refCollection[nextIndex][0].firstElementChild as HTMLElement)\n      : this.refCollection[nextIndex][0];\n\n    let typeaheadInputValue = '';\n    if (isCreatable && optionTextElm.innerText.includes(createText)) {\n      typeaheadInputValue = this.state.creatableValue;\n    } else if (optionTextElm && !isLoad) {\n      // !isLoad prevents the view more button text from appearing the typeahead input\n      typeaheadInputValue = optionTextElm.innerText;\n    }\n    this.setState(prevState => ({\n      typeaheadCurrIndex: updateCurrentIndex ? nextIndex : prevState.typeaheadCurrIndex,\n      typeaheadStoredIndex: nextIndex,\n      typeaheadInputValue\n    }));\n  };\n\n  switchFocusToFavoriteMenu = () => {\n    const { typeaheadCurrIndex, typeaheadStoredIndex } = this.state;\n    let indexForFocus = 0;\n\n    if (typeaheadCurrIndex !== -1) {\n      indexForFocus = typeaheadCurrIndex;\n    } else if (typeaheadStoredIndex !== -1) {\n      indexForFocus = typeaheadStoredIndex;\n    }\n\n    if (this.refCollection[indexForFocus] !== null && this.refCollection[indexForFocus][0] !== null) {\n      this.refCollection[indexForFocus][0].focus();\n    } else {\n      this.clearRef.current.focus();\n    }\n\n    this.setState({\n      tabbedIntoFavoritesMenu: true,\n      typeaheadCurrIndex: -1\n    });\n  };\n\n  moveFocusToLastMenuItem = () => {\n    const refCollectionLen = this.refCollection.length;\n    if (\n      refCollectionLen > 0 &&\n      this.refCollection[refCollectionLen - 1] !== null &&\n      this.refCollection[refCollectionLen - 1][0] !== null\n    ) {\n      this.refCollection[refCollectionLen - 1][0].focus();\n    }\n  };\n\n  handleTypeaheadKeys = (position: string, shiftKey: boolean = false) => {\n    const { isOpen, onFavorite, isCreatable } = this.props;\n    const { typeaheadCurrIndex, tabbedIntoFavoritesMenu } = this.state;\n    const typeaheadActiveChild = this.getTypeaheadActiveChild(typeaheadCurrIndex);\n    if (isOpen) {\n      if (position === 'enter') {\n        if (\n          (typeaheadCurrIndex !== -1 || (isCreatable && this.refCollection.length === 1)) && // do not allow selection without moving to an initial option unless it is a single create option\n          (typeaheadActiveChild || (this.refCollection[0] && this.refCollection[0][0]))\n        ) {\n          if (typeaheadActiveChild) {\n            if (!typeaheadActiveChild.classList.contains('pf-m-load')) {\n              const hasDescriptionElm = typeaheadActiveChild.childElementCount > 1;\n              const typeaheadActiveChildText = hasDescriptionElm\n                ? (typeaheadActiveChild.firstChild as HTMLElement).innerText\n                : typeaheadActiveChild.innerText;\n              this.setState({\n                typeaheadInputValue: typeaheadActiveChildText\n              });\n            }\n          } else if (this.refCollection[0] && this.refCollection[0][0]) {\n            this.setState({\n              typeaheadInputValue: this.refCollection[0][0].innerText\n            });\n          }\n          if (typeaheadActiveChild) {\n            typeaheadActiveChild.click();\n          } else {\n            this.refCollection[0][0].click();\n          }\n        }\n      } else if (position === 'tab') {\n        if (onFavorite) {\n          // if the input has focus, tab to the first item or the last item that was previously focused.\n          if (this.inputRef.current === document.activeElement) {\n            // If shift is also clicked and there is a footer, tab to the last item in tabbable footer\n            if (this.props.footer && shiftKey) {\n              const tabbableItems = findTabbableElements(this.footerRef, SelectFooterTabbableItems);\n              if (tabbableItems.length > 0) {\n                if (tabbableItems[tabbableItems.length - 1]) {\n                  tabbableItems[tabbableItems.length - 1].focus();\n                }\n              }\n            } else {\n              this.switchFocusToFavoriteMenu();\n            }\n          } else {\n            // focus is on menu or footer\n            if (this.props.footer) {\n              let tabbedIntoMenu = false;\n              const tabbableItems = findTabbableElements(this.footerRef, SelectFooterTabbableItems);\n              if (tabbableItems.length > 0) {\n                // if current element is not in footer, tab to first tabbable element in footer,\n                // if shift was clicked, tab to input since focus is on menu\n                const currentElementIndex = tabbableItems.findIndex((item: any) => item === document.activeElement);\n                if (currentElementIndex === -1) {\n                  if (shiftKey) {\n                    // currently in menu, shift back to input\n                    this.inputRef.current.focus();\n                  } else {\n                    // currently in menu, tab to first tabbable item in footer\n                    tabbableItems[0].focus();\n                  }\n                } else {\n                  // already in footer\n                  if (shiftKey) {\n                    // shift to previous item\n                    if (currentElementIndex === 0) {\n                      // on first footer item, shift back to menu\n                      this.switchFocusToFavoriteMenu();\n                      tabbedIntoMenu = true;\n                    } else {\n                      // shift to previous footer item\n                      tabbableItems[currentElementIndex - 1].focus();\n                    }\n                  } else {\n                    // tab to next tabbable item in footer or to input.\n                    if (tabbableItems[currentElementIndex + 1]) {\n                      tabbableItems[currentElementIndex + 1].focus();\n                    } else {\n                      this.inputRef.current.focus();\n                    }\n                  }\n                }\n              } else {\n                // no tabbable items in footer, tab to input\n                this.inputRef.current.focus();\n                tabbedIntoMenu = false;\n              }\n              this.setState({ tabbedIntoFavoritesMenu: tabbedIntoMenu });\n            } else {\n              this.inputRef.current.focus();\n              this.setState({ tabbedIntoFavoritesMenu: false });\n            }\n          }\n        } else {\n          // Close if there is no footer\n          if (!this.props.footer) {\n            this.onToggle(false, null);\n            this.onClose();\n          } else {\n            // has footer\n            const tabbableItems = findTabbableElements(this.footerRef, SelectFooterTabbableItems);\n            const currentElementIndex = tabbableItems.findIndex((item: any) => item === document.activeElement);\n            if (this.inputRef.current === document.activeElement) {\n              if (shiftKey) {\n                // close toggle if shift key and tab on input\n                this.onToggle(false, null);\n                this.onClose();\n              } else {\n                // tab to first tabbable item in footer\n                if (tabbableItems[0]) {\n                  tabbableItems[0].focus();\n                } else {\n                  this.onToggle(false, null);\n                  this.onClose();\n                }\n              }\n            } else {\n              // focus is in footer\n              if (shiftKey) {\n                if (currentElementIndex === 0) {\n                  // shift tab back to input\n                  this.inputRef.current.focus();\n                } else {\n                  // shift to previous footer item\n                  tabbableItems[currentElementIndex - 1].focus();\n                }\n              } else {\n                // tab to next footer item or close tab if last item\n                if (tabbableItems[currentElementIndex + 1]) {\n                  tabbableItems[currentElementIndex + 1].focus();\n                } else {\n                  // no next item, close toggle\n                  this.onToggle(false, null);\n                  this.inputRef.current.focus();\n                  this.onClose();\n                }\n              }\n            }\n          }\n        }\n      } else if (!tabbedIntoFavoritesMenu) {\n        if (this.refCollection[0][0] === null) {\n          return;\n        }\n        let nextIndex;\n        if (typeaheadCurrIndex === -1 && position === 'down') {\n          nextIndex = 0;\n        } else if (typeaheadCurrIndex === -1 && position === 'up') {\n          nextIndex = this.refCollection.length - 1;\n        } else if (position !== 'left' && position !== 'right') {\n          nextIndex = getNextIndex(typeaheadCurrIndex, position, this.refCollection);\n        } else {\n          nextIndex = typeaheadCurrIndex;\n        }\n        if (this.refCollection[nextIndex] === null) {\n          return;\n        }\n        this.moveFocus(nextIndex);\n      } else {\n        const nextIndex = this.refCollection.findIndex(\n          ref => ref !== undefined && (ref[0] === document.activeElement || ref[1] === document.activeElement)\n        );\n        this.moveFocus(nextIndex);\n      }\n    }\n  };\n\n  onClickTypeaheadToggleButton = () => {\n    if (this.inputRef && this.inputRef.current) {\n      this.inputRef.current.focus();\n    }\n  };\n\n  getDisplay = (value: string | SelectOptionObject, type: 'node' | 'text' = 'node') => {\n    if (!value) {\n      return;\n    }\n    const item = this.props.isGrouped\n      ? (React.Children.toArray(this.props.children) as React.ReactElement[])\n          .reduce((acc, curr) => [...acc, ...React.Children.toArray(curr.props.children)], [])\n          .find(child => child.props.value.toString() === value.toString())\n      : React.Children.toArray(this.props.children).find(\n          child =>\n            (child as React.ReactElement).props.value &&\n            (child as React.ReactElement).props.value.toString() === value.toString()\n        );\n    if (item) {\n      if (item && item.props.children) {\n        if (type === 'node') {\n          return item.props.children;\n        }\n        return this.findText(item);\n      }\n      return item.props.value.toString();\n    }\n    return value.toString();\n  };\n\n  findText = (item: React.ReactNode) => {\n    if (typeof item === 'string') {\n      return item;\n    } else if (!React.isValidElement(item)) {\n      return '';\n    } else {\n      const multi: string[] = [];\n      React.Children.toArray(item.props.children).forEach(child => multi.push(this.findText(child)));\n      return multi.join('');\n    }\n  };\n\n  generateSelectedBadge = () => {\n    const { customBadgeText, selections } = this.props;\n    if (customBadgeText !== null) {\n      return customBadgeText;\n    }\n    if (Array.isArray(selections) && selections.length > 0) {\n      return selections.length;\n    }\n    return null;\n  };\n\n  setVieMoreNextIndex = () => {\n    this.setState({ viewMoreNextIndex: this.refCollection.length - 1 });\n  };\n\n  isLastOptionBeforeFooter = (index: any) =>\n    this.props.footer && index === this.refCollection.length - 1 ? true : false;\n\n  render() {\n    const {\n      children,\n      chipGroupProps,\n      chipGroupComponent,\n      className,\n      customContent,\n      variant,\n      direction,\n      onSelect,\n      onClear,\n      onBlur,\n      toggleId,\n      isOpen,\n      isGrouped,\n      isPlain,\n      isDisabled,\n      hasPlaceholderStyle,\n      validated,\n      selections: selectionsProp,\n      typeAheadAriaLabel,\n      typeAheadAriaDescribedby,\n      clearSelectionsAriaLabel,\n      toggleAriaLabel,\n      removeSelectionAriaLabel,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-describedby': ariaDescribedby,\n      'aria-invalid': ariaInvalid,\n      placeholderText,\n      width,\n      maxHeight,\n      toggleIcon,\n      ouiaId,\n      ouiaSafe,\n      hasInlineFilter,\n      isCheckboxSelectionBadgeHidden,\n      inlineFilterPlaceholderText,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      onFilter,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      onTypeaheadInputChanged,\n      onCreateOption,\n      isCreatable,\n      onToggle,\n      createText,\n      noResultsFoundText,\n      customBadgeText,\n      inputIdPrefix,\n      inputAutoComplete,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      isInputValuePersisted,\n      isInputFilterPersisted,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      menuAppendTo,\n      favorites,\n      onFavorite,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      favoritesLabel,\n      footer,\n      loadingVariant,\n      isCreateSelectOptionObject,\n      shouldResetOnSelect,\n      isFlipEnabled,\n      ...props\n    } = this.props;\n    const {\n      focusFirstOption: openedOnEnter,\n      typeaheadCurrIndex,\n      typeaheadInputValue,\n      typeaheadFilteredChildren,\n      favoritesGroup\n    } = this.state;\n    const selectToggleId = toggleId || `pf-select-toggle-id-${currentId++}`;\n    const selections = Array.isArray(selectionsProp) ? selectionsProp : [selectionsProp];\n    // Find out if the selected option is a placeholder\n    const selectedOption = React.Children.toArray(children).find(\n      (option: any) => option.props.value === selections[0]\n    ) as any;\n    const isSelectedPlaceholder = selectedOption && selectedOption.props.isPlaceholder;\n    const hasAnySelections = Boolean(selections[0] && selections[0] !== '');\n    const typeaheadActiveChild = this.getTypeaheadActiveChild(typeaheadCurrIndex);\n    let childPlaceholderText = null as string;\n\n    // If onFavorites is set,  add isFavorite prop to children and add a Favorites group to the SelectMenu\n    let renderableItems: React.ReactNode[] = [];\n    if (onFavorite) {\n      // if variant is type-ahead call the extendTypeaheadChildren before adding favorites\n      let tempExtendedChildren: (React.ReactElement | React.ReactNode | {})[] = children;\n      if (variant === 'typeahead' || variant === 'typeaheadmulti') {\n        tempExtendedChildren = this.extendTypeaheadChildren(typeaheadCurrIndex, favoritesGroup);\n      } else if (onFavorite) {\n        tempExtendedChildren = favoritesGroup.concat(children);\n      }\n      // mark items that are favorited with isFavorite\n      renderableItems = extendItemsWithFavorite(tempExtendedChildren, isGrouped, favorites);\n    } else {\n      renderableItems = children;\n    }\n\n    if (!customContent) {\n      if (!hasAnySelections && !placeholderText) {\n        const childPlaceholder = React.Children.toArray(children).filter(\n          (child: React.ReactNode) => (child as React.ReactElement).props.isPlaceholder === true\n        );\n        childPlaceholderText =\n          (childPlaceholder[0] && this.getDisplay((childPlaceholder[0] as React.ReactElement).props.value, 'node')) ||\n          (children[0] && this.getDisplay(children[0].props.value, 'node'));\n      }\n    }\n\n    if (isOpen) {\n      if (renderableItems.find(item => (item as any)?.key === 'loading') === undefined) {\n        if (loadingVariant === 'spinner') {\n          renderableItems.push(\n            <SelectOption isLoading key=\"loading\" value=\"loading\">\n              <Spinner size=\"lg\" />\n            </SelectOption>\n          );\n        } else if (loadingVariant?.text) {\n          renderableItems.push(\n            <SelectOption\n              isLoad\n              key=\"loading\"\n              value={loadingVariant.text}\n              setViewMoreNextIndex={this.setVieMoreNextIndex}\n              onClick={loadingVariant?.onClick}\n            />\n          );\n        }\n      }\n    }\n\n    const hasOnClear = onClear !== Select.defaultProps.onClear;\n    const clearBtn = (\n      <button\n        className={css(buttonStyles.button, buttonStyles.modifiers.plain, styles.selectToggleClear)}\n        onClick={e => {\n          this.clearSelection(e);\n          onClear(e);\n          e.stopPropagation();\n        }}\n        aria-label={clearSelectionsAriaLabel}\n        type=\"button\"\n        disabled={isDisabled}\n        ref={this.clearRef}\n        onKeyDown={event => {\n          if (event.key === KeyTypes.Enter) {\n            this.clearRef.current.click();\n          }\n        }}\n      >\n        <TimesCircleIcon aria-hidden />\n      </button>\n    );\n\n    let selectedChips = null as any;\n    if (variant === SelectVariant.typeaheadMulti) {\n      selectedChips = chipGroupComponent ? (\n        chipGroupComponent\n      ) : (\n        <ChipGroup {...chipGroupProps}>\n          {selections &&\n            (selections as string[]).map(item => (\n              <Chip\n                key={item}\n                onClick={(e: React.MouseEvent) => onSelect(e, item)}\n                closeBtnAriaLabel={removeSelectionAriaLabel}\n              >\n                {this.getDisplay(item, 'node')}\n              </Chip>\n            ))}\n        </ChipGroup>\n      );\n    }\n\n    if (hasInlineFilter) {\n      const filterBox = (\n        <React.Fragment>\n          <div key=\"inline-filter\" className={css(styles.selectMenuSearch)}>\n            <input\n              key=\"inline-filter-input\"\n              type=\"search\"\n              className={css(formStyles.formControl, formStyles.modifiers.search)}\n              onChange={this.onChange}\n              placeholder={inlineFilterPlaceholderText}\n              onKeyDown={event => {\n                if (event.key === KeyTypes.ArrowUp) {\n                  this.handleMenuKeys(0, 0, 'up');\n                  event.preventDefault();\n                } else if (event.key === KeyTypes.ArrowDown) {\n                  this.handleMenuKeys(0, 0, 'down');\n                  event.preventDefault();\n                } else if (event.key === KeyTypes.ArrowLeft) {\n                  this.handleMenuKeys(0, 0, 'left');\n                  event.preventDefault();\n                } else if (event.key === KeyTypes.ArrowRight) {\n                  this.handleMenuKeys(0, 0, 'right');\n                  event.preventDefault();\n                } else if (event.key === KeyTypes.Tab && variant !== SelectVariant.checkbox && this.props.footer) {\n                  // tab to footer or close menu if shift key\n                  if (event.shiftKey) {\n                    this.onToggle(false, event);\n                  } else {\n                    const tabbableItems = findTabbableElements(this.footerRef, SelectFooterTabbableItems);\n                    if (tabbableItems.length > 0) {\n                      tabbableItems[0].focus();\n                      event.stopPropagation();\n                      event.preventDefault();\n                    } else {\n                      this.onToggle(false, event);\n                    }\n                  }\n                } else if (event.key === KeyTypes.Tab && variant === SelectVariant.checkbox) {\n                  // More modal-like experience for checkboxes\n                  // Let SelectOption handle this\n                  if (event.shiftKey) {\n                    this.handleMenuKeys(0, 0, 'up');\n                  } else {\n                    this.handleMenuKeys(0, 0, 'down');\n                  }\n                  event.stopPropagation();\n                  event.preventDefault();\n                }\n              }}\n              ref={this.filterRef}\n              autoComplete={inputAutoComplete}\n            />\n          </div>\n          <Divider key=\"inline-filter-divider\" />\n        </React.Fragment>\n      );\n      renderableItems = [filterBox, ...(typeaheadFilteredChildren as React.ReactElement[])].map((option, index) =>\n        React.cloneElement(option, { key: index })\n      );\n    }\n\n    let variantProps: any;\n    let variantChildren: any;\n    if (customContent) {\n      variantProps = {\n        selected: selections,\n        openedOnEnter,\n        isCustomContent: true\n      };\n      variantChildren = customContent;\n    } else {\n      switch (variant) {\n        case 'single':\n          variantProps = {\n            selected: selections[0],\n            hasInlineFilter,\n            openedOnEnter\n          };\n          variantChildren = renderableItems;\n          break;\n        case 'checkbox':\n          variantProps = {\n            checked: selections,\n            isGrouped,\n            hasInlineFilter,\n            openedOnEnter\n          };\n          variantChildren = renderableItems;\n          break;\n        case 'typeahead':\n          variantProps = {\n            selected: selections[0],\n            openedOnEnter\n          };\n          variantChildren = onFavorite ? renderableItems : this.extendTypeaheadChildren(typeaheadCurrIndex);\n          if (variantChildren.length === 0) {\n            variantChildren.push(<SelectOption isDisabled key={0} value={noResultsFoundText} isNoResultsOption />);\n          }\n          break;\n        case 'typeaheadmulti':\n          variantProps = {\n            selected: selections,\n            openedOnEnter\n          };\n          variantChildren = onFavorite ? renderableItems : this.extendTypeaheadChildren(typeaheadCurrIndex);\n          if (variantChildren.length === 0) {\n            variantChildren.push(<SelectOption isDisabled key={0} value={noResultsFoundText} isNoResultsOption />);\n          }\n          break;\n      }\n    }\n\n    const innerMenu = (\n      <SelectMenu\n        // This removes the `position: absolute` styling from the `.pf-c-select__menu`\n        // allowing the menu to flip correctly\n        {...(isFlipEnabled && { style: { position: 'revert' } })}\n        {...props}\n        isGrouped={isGrouped}\n        selected={selections}\n        {...variantProps}\n        openedOnEnter={openedOnEnter}\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabelledBy}\n        sendRef={this.sendRef}\n        keyHandler={this.handleMenuKeys}\n        maxHeight={maxHeight}\n        ref={this.menuComponentRef}\n        footer={footer}\n        footerRef={this.footerRef}\n        isLastOptionBeforeFooter={this.isLastOptionBeforeFooter}\n      >\n        {variantChildren}\n      </SelectMenu>\n    );\n\n    const menuContainer = footer ? <div className={css(styles.selectMenu)}> {innerMenu} </div> : innerMenu;\n\n    const popperContainer = (\n      <div\n        className={css(\n          styles.select,\n          isOpen && styles.modifiers.expanded,\n          validated === ValidatedOptions.success && styles.modifiers.success,\n          validated === ValidatedOptions.warning && styles.modifiers.warning,\n          validated === ValidatedOptions.error && styles.modifiers.invalid,\n          direction === SelectDirection.up && styles.modifiers.top,\n          className\n        )}\n        {...(width && { style: { width } })}\n        {...(ariaDescribedby && { 'aria-describedby': ariaDescribedby })}\n        {...(validated !== ValidatedOptions.default && { 'aria-invalid': ariaInvalid })}\n      >\n        {isOpen && menuContainer}\n      </div>\n    );\n\n    const mainContainer = (\n      <div\n        className={css(\n          styles.select,\n          isOpen && styles.modifiers.expanded,\n          validated === ValidatedOptions.success && styles.modifiers.success,\n          validated === ValidatedOptions.warning && styles.modifiers.warning,\n          validated === ValidatedOptions.error && styles.modifiers.invalid,\n          direction === SelectDirection.up && styles.modifiers.top,\n          className\n        )}\n        ref={this.parentRef}\n        {...getOUIAProps(Select.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n        {...(width && { style: { width } })}\n        {...(ariaDescribedby && { 'aria-describedby': ariaDescribedby })}\n        {...(validated !== ValidatedOptions.default && { 'aria-invalid': ariaInvalid })}\n      >\n        <SelectToggle\n          id={selectToggleId}\n          parentRef={this.parentRef}\n          menuRef={this.menuComponentRef}\n          {...(footer && { footerRef: this.footerRef })}\n          isOpen={isOpen}\n          isPlain={isPlain}\n          hasPlaceholderStyle={\n            hasPlaceholderStyle && (!selections.length || selections[0] === null || isSelectedPlaceholder)\n          }\n          onToggle={this.onToggle}\n          onEnter={this.onEnter}\n          onClose={this.onClose}\n          onBlur={onBlur}\n          variant={variant}\n          aria-labelledby={`${ariaLabelledBy || ''} ${selectToggleId}`}\n          aria-label={toggleAriaLabel}\n          handleTypeaheadKeys={this.handleTypeaheadKeys}\n          moveFocusToLastMenuItem={this.moveFocusToLastMenuItem}\n          isDisabled={isDisabled}\n          hasClearButton={hasOnClear}\n          hasFooter={footer !== undefined}\n          onClickTypeaheadToggleButton={this.onClickTypeaheadToggleButton}\n        >\n          {customContent && (\n            <div className={css(styles.selectToggleWrapper)}>\n              {toggleIcon && <span className={css(styles.selectToggleIcon)}>{toggleIcon}</span>}\n              <span className={css(styles.selectToggleText)}>{placeholderText}</span>\n            </div>\n          )}\n          {variant === SelectVariant.single && !customContent && (\n            <React.Fragment>\n              <div className={css(styles.selectToggleWrapper)}>\n                {toggleIcon && <span className={css(styles.selectToggleIcon)}>{toggleIcon}</span>}\n                <span className={css(styles.selectToggleText)}>\n                  {this.getDisplay(selections[0] as string, 'node') || placeholderText || childPlaceholderText}\n                </span>\n              </div>\n              {hasOnClear && hasAnySelections && clearBtn}\n            </React.Fragment>\n          )}\n          {variant === SelectVariant.checkbox && !customContent && (\n            <React.Fragment>\n              <div className={css(styles.selectToggleWrapper)}>\n                {toggleIcon && <span className={css(styles.selectToggleIcon)}>{toggleIcon}</span>}\n                <span className={css(styles.selectToggleText)}>{placeholderText}</span>\n                {!isCheckboxSelectionBadgeHidden && hasAnySelections && (\n                  <div className={css(styles.selectToggleBadge)}>\n                    <span className={css(badgeStyles.badge, badgeStyles.modifiers.read)}>\n                      {this.generateSelectedBadge()}\n                    </span>\n                  </div>\n                )}\n              </div>\n              {hasOnClear && hasAnySelections && clearBtn}\n            </React.Fragment>\n          )}\n          {variant === SelectVariant.typeahead && !customContent && (\n            <React.Fragment>\n              <div className={css(styles.selectToggleWrapper)}>\n                {toggleIcon && <span className={css(styles.selectToggleIcon)}>{toggleIcon}</span>}\n                <input\n                  className={css(formStyles.formControl, styles.selectToggleTypeahead)}\n                  aria-activedescendant={typeaheadActiveChild && typeaheadActiveChild.id}\n                  id={`${selectToggleId}-select-typeahead`}\n                  aria-label={typeAheadAriaLabel}\n                  {...(typeAheadAriaDescribedby && { 'aria-describedby': typeAheadAriaDescribedby })}\n                  placeholder={placeholderText as string}\n                  value={\n                    typeaheadInputValue !== null\n                      ? typeaheadInputValue\n                      : this.getDisplay(selections[0] as string, 'text') || ''\n                  }\n                  type=\"text\"\n                  onClick={this.onClick}\n                  onChange={this.onChange}\n                  autoComplete={inputAutoComplete}\n                  disabled={isDisabled}\n                  ref={this.inputRef}\n                />\n              </div>\n              {hasOnClear && (selections[0] || typeaheadInputValue) && clearBtn}\n            </React.Fragment>\n          )}\n          {variant === SelectVariant.typeaheadMulti && !customContent && (\n            <React.Fragment>\n              <div className={css(styles.selectToggleWrapper)}>\n                {toggleIcon && <span className={css(styles.selectToggleIcon)}>{toggleIcon}</span>}\n                {selections && Array.isArray(selections) && selections.length > 0 && selectedChips}\n                <input\n                  className={css(formStyles.formControl, styles.selectToggleTypeahead)}\n                  aria-activedescendant={typeaheadActiveChild && typeaheadActiveChild.id}\n                  id={`${selectToggleId}-select-multi-typeahead-typeahead`}\n                  aria-label={typeAheadAriaLabel}\n                  aria-invalid={validated === ValidatedOptions.error}\n                  {...(typeAheadAriaDescribedby && { 'aria-describedby': typeAheadAriaDescribedby })}\n                  placeholder={placeholderText as string}\n                  value={typeaheadInputValue !== null ? typeaheadInputValue : ''}\n                  type=\"text\"\n                  onChange={this.onChange}\n                  onClick={this.onClick}\n                  autoComplete={inputAutoComplete}\n                  disabled={isDisabled}\n                  ref={this.inputRef}\n                />\n              </div>\n              {hasOnClear && ((selections && selections.length > 0) || typeaheadInputValue) && clearBtn}\n            </React.Fragment>\n          )}\n          {validated === ValidatedOptions.success && (\n            <span className={css(styles.selectToggleStatusIcon)}>\n              <CheckCircleIcon aria-hidden=\"true\" />\n            </span>\n          )}\n          {validated === ValidatedOptions.error && (\n            <span className={css(styles.selectToggleStatusIcon)}>\n              <ExclamationCircleIcon aria-hidden=\"true\" />\n            </span>\n          )}\n          {validated === ValidatedOptions.warning && (\n            <span className={css(styles.selectToggleStatusIcon)}>\n              <ExclamationTriangleIcon aria-hidden=\"true\" />\n            </span>\n          )}\n        </SelectToggle>\n        {isOpen && menuAppendTo === 'inline' && menuContainer}\n      </div>\n    );\n\n    const getParentElement = () => {\n      if (this.parentRef && this.parentRef.current) {\n        return this.parentRef.current.parentElement;\n      }\n      return null;\n    };\n\n    return (\n      <GenerateId>\n        {randomId => (\n          <SelectContext.Provider\n            value={{\n              onSelect,\n              onFavorite,\n              onClose: this.onClose,\n              variant,\n              inputIdPrefix: inputIdPrefix || randomId,\n              shouldResetOnSelect\n            }}\n          >\n            {menuAppendTo === 'inline' ? (\n              mainContainer\n            ) : (\n              <Popper\n                trigger={mainContainer}\n                popper={popperContainer}\n                direction={direction}\n                appendTo={menuAppendTo === 'parent' ? getParentElement() : menuAppendTo}\n                isVisible={isOpen}\n              />\n            )}\n          </SelectContext.Provider>\n        )}\n      </GenerateId>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}