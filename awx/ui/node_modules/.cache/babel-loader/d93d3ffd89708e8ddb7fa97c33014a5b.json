{"ast":null,"code":"import * as React from 'react';\nexport var DragDropContext = React.createContext({\n  onDrag: function onDrag(_source) {\n    return true;\n  },\n  onDragMove: function onDragMove(_source, _dest) {},\n  onDrop: function onDrop(_source, _dest) {\n    return false;\n  }\n});\nexport var DragDrop = function DragDrop(_ref) {\n  var children = _ref.children,\n      _ref$onDrag = _ref.onDrag,\n      onDrag = _ref$onDrag === void 0 ? function () {\n    return true;\n  } : _ref$onDrag,\n      _ref$onDragMove = _ref.onDragMove,\n      onDragMove = _ref$onDragMove === void 0 ? function () {} : _ref$onDragMove,\n      _ref$onDrop = _ref.onDrop,\n      onDrop = _ref$onDrop === void 0 ? function () {\n    return false;\n  } : _ref$onDrop;\n  return React.createElement(DragDropContext.Provider, {\n    value: {\n      onDrag: onDrag,\n      onDragMove: onDragMove,\n      onDrop: onDrop\n    }\n  }, children);\n};\nDragDrop.displayName = 'DragDrop';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/DragDrop/DragDrop.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AASA,OAAO,IAAM,eAAe,GAAG,KAAK,CAAC,aAAN,CAAoB;AACjD,EAAA,MAAM,EAAE,gBAAC,OAAD;AAAA,WAAoC,IAApC;AAAA,GADyC;AAEjD,EAAA,UAAU,EAAE,oBAAC,OAAD,EAAiC,KAAjC,EAAkE,CAAG,CAFhC;AAGjD,EAAA,MAAM,EAAE,gBAAC,OAAD,EAAiC,KAAjC;AAAA,WAAmE,KAAnE;AAAA;AAHyC,CAApB,CAAxB;AAiBP,OAAO,IAAM,QAAQ,GAA2C,SAAnD,QAAmD;AAAA,MAC9D,QAD8D,QAC9D,QAD8D;AAAA,yBAE9D,MAF8D;AAAA,MAE9D,MAF8D,4BAErD;AAAA,WAAM,IAAN;AAAA,GAFqD;AAAA,6BAG9D,UAH8D;AAAA,MAG9D,UAH8D,gCAGjD,YAAK,CAAG,CAHyC;AAAA,yBAI9D,MAJ8D;AAAA,MAI9D,MAJ8D,4BAIrD;AAAA,WAAM,KAAN;AAAA,GAJqD;AAAA,SAM9D,KAAA,CAAA,aAAA,CAAC,eAAe,CAAC,QAAjB,EAAyB;AAAC,IAAA,KAAK,EAAE;AAAE,MAAA,MAAM,EAAN,MAAF;AAAU,MAAA,UAAU,EAAV,UAAV;AAAsB,MAAA,MAAM,EAAN;AAAtB;AAAR,GAAzB,EAAkE,QAAlE,CAN8D;AAAA,CAAzD;AAQP,QAAQ,CAAC,WAAT,GAAuB,UAAvB","sourcesContent":["import * as React from 'react';\n\ninterface DraggableItemPosition {\n  /** Parent droppableId */\n  droppableId: string;\n  /** Index of item in parent Droppable */\n  index: number;\n}\n\nexport const DragDropContext = React.createContext({\n  onDrag: (_source: DraggableItemPosition) => true as boolean,\n  onDragMove: (_source: DraggableItemPosition, _dest?: DraggableItemPosition) => {},\n  onDrop: (_source: DraggableItemPosition, _dest?: DraggableItemPosition) => false as boolean\n});\n\ninterface DragDropProps {\n  /** Potentially Droppable and Draggable children */\n  children?: React.ReactNode;\n  /** Callback for drag event. Return true to allow drag, false to disallow. */\n  onDrag?: (source: DraggableItemPosition) => boolean;\n  /** Callback on mouse move while dragging. */\n  onDragMove?: (source: DraggableItemPosition, dest?: DraggableItemPosition) => void;\n  /** Callback for drop event. Return true to allow drop, false to disallow. */\n  onDrop?: (source: DraggableItemPosition, dest?: DraggableItemPosition) => boolean;\n}\n\nexport const DragDrop: React.FunctionComponent<DragDropProps> = ({\n  children,\n  onDrag = () => true,\n  onDragMove = () => {},\n  onDrop = () => false\n}: DragDropProps) => (\n  <DragDropContext.Provider value={{ onDrag, onDragMove, onDrop }}>{children}</DragDropContext.Provider>\n);\nDragDrop.displayName = 'DragDrop';\n"]},"metadata":{},"sourceType":"module"}