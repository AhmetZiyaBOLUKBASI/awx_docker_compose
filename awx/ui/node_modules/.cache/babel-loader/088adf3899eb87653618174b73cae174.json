{"ast":null,"code":"import _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { getDefaultOUIAId } from '@patternfly/react-core';\nimport { DropdownDirection, DropdownPosition } from '@patternfly/react-core/dist/esm/components/Dropdown/dropdownConstants';\nimport inlineStyles from '@patternfly/react-styles/css/components/InlineEdit/inline-edit';\nimport { css } from '@patternfly/react-styles';\nimport { Provider } from './base';\nimport { BodyCell } from './BodyCell';\nimport { HeaderCell } from './HeaderCell';\nimport { RowWrapper } from './RowWrapper';\nimport { BodyWrapper } from './BodyWrapper';\nimport { calculateColumns } from './utils/headerUtils';\nimport { RowSelectVariant } from './SelectColumn';\nimport { TableContext } from './TableContext';\nimport { TableGridBreakpoint } from './TableTypes';\nimport { TreeRowWrapper } from './TreeRowWrapper';\nexport var Table = /*#__PURE__*/function (_React$Component) {\n  _inherits(Table, _React$Component);\n\n  var _super = _createSuper(Table);\n\n  function Table() {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      ouiaStateId: getDefaultOUIAId(Table.displayName)\n    };\n\n    _this.isSelected = function (row) {\n      return row.selected === true;\n    };\n\n    _this.areAllRowsSelected = function (rows) {\n      if (rows === undefined || rows.length === 0) {\n        return false;\n      }\n\n      return rows.every(function (row) {\n        return _this.isSelected(row) || row.disableSelection || row.hasOwnProperty('parent') && !row.showSelect;\n      });\n    };\n\n    _this.areAllExpanded = function (rows) {\n      if (rows === undefined || rows.length === 0) {\n        return false;\n      }\n\n      return rows.every(function (row) {\n        return row.isOpen === undefined || row.isOpen;\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          ariaLabel = _a['aria-label'],\n          caption = _a.caption,\n          header = _a.header,\n          onSort = _a.onSort,\n          onSelect = _a.onSelect,\n          canSelectAll = _a.canSelectAll,\n          canCollapseAll = _a.canCollapseAll,\n          isHeaderSelectDisabled = _a.isHeaderSelectDisabled,\n          selectVariant = _a.selectVariant,\n          collapseAllAriaLabel = _a.collapseAllAriaLabel,\n          sortBy = _a.sortBy,\n          children = _a.children,\n          actions = _a.actions,\n          actionResolver = _a.actionResolver,\n          areActionsDisabled = _a.areActionsDisabled,\n          onCollapse = _a.onCollapse,\n          onExpand = _a.onExpand,\n          onRowEdit = _a.onRowEdit,\n          rowLabeledBy = _a.rowLabeledBy,\n          dropdownPosition = _a.dropdownPosition,\n          dropdownDirection = _a.dropdownDirection,\n          actionsToggle = _a.actionsToggle,\n          contentId = _a.contentId,\n          expandId = _a.expandId,\n          variant = _a.variant,\n          rows = _a.rows,\n          cells = _a.cells,\n          bodyWrapper = _a.bodyWrapper,\n          rowWrapper = _a.rowWrapper,\n          role = _a.role,\n          borders = _a.borders,\n          onFavorite = _a.onFavorite,\n          canSortFavorites = _a.canSortFavorites,\n          props = __rest(_a, ['aria-label', \"caption\", \"header\", \"onSort\", \"onSelect\", \"canSelectAll\", \"canCollapseAll\", \"isHeaderSelectDisabled\", \"selectVariant\", \"collapseAllAriaLabel\", \"sortBy\", \"children\", \"actions\", \"actionResolver\", \"areActionsDisabled\", \"onCollapse\", \"onExpand\", \"onRowEdit\", \"rowLabeledBy\", \"dropdownPosition\", \"dropdownDirection\", \"actionsToggle\", \"contentId\", \"expandId\", \"variant\", \"rows\", \"cells\", \"bodyWrapper\", \"rowWrapper\", \"role\", \"borders\", \"onFavorite\", \"canSortFavorites\"]);\n\n      if (!ariaLabel && !caption && !header && role !== 'presentation') {\n        // eslint-disable-next-line no-console\n        console.error('Table: Specify at least one of: header, caption, aria-label');\n      }\n\n      var headerData = calculateColumns(cells, {\n        sortBy: sortBy,\n        onSort: onSort,\n        onSelect: onSelect,\n        canSelectAll: selectVariant === RowSelectVariant.radio ? false : canSelectAll,\n        canCollapseAll: canCollapseAll,\n        isHeaderSelectDisabled: isHeaderSelectDisabled,\n        selectVariant: selectVariant,\n        collapseAllAriaLabel: collapseAllAriaLabel,\n        allRowsSelected: onSelect ? this.areAllRowsSelected(rows) : false,\n        allRowsExpanded: onCollapse ? this.areAllExpanded(rows) : false,\n        actions: actions,\n        actionResolver: actionResolver,\n        areActionsDisabled: areActionsDisabled,\n        onCollapse: onCollapse,\n        onRowEdit: onRowEdit,\n        onExpand: onExpand,\n        rowLabeledBy: rowLabeledBy,\n        expandId: expandId,\n        contentId: contentId,\n        dropdownPosition: dropdownPosition,\n        dropdownDirection: dropdownDirection,\n        actionsToggle: actionsToggle,\n        onFavorite: onFavorite,\n        canSortFavorites: canSortFavorites,\n        // order of columns: Collapsible | Selectable | Favoritable\n        firstUserColumnIndex: [onCollapse, onSelect, onFavorite].filter(function (callback) {\n          return callback;\n        }).length\n      });\n      var table = React.createElement(TableContext.Provider, {\n        value: {\n          headerData: headerData,\n          headerRows: null,\n          rows: rows\n        }\n      }, header, React.createElement(Provider, Object.assign({}, props, {\n        \"aria-label\": ariaLabel,\n        renderers: {\n          body: {\n            wrapper: bodyWrapper || BodyWrapper,\n            row: rowWrapper || (this.props.isTreeTable ? TreeRowWrapper : RowWrapper),\n            cell: BodyCell\n          },\n          header: {\n            cell: HeaderCell\n          }\n        },\n        columns: headerData,\n        role: role,\n        variant: variant,\n        borders: borders\n      }), caption && React.createElement(\"caption\", null, caption), children));\n\n      if (onRowEdit) {\n        return React.createElement(\"form\", {\n          className: css(inlineStyles.inlineEdit)\n        }, table);\n      }\n\n      return table;\n    }\n  }]);\n\n  return Table;\n}(React.Component);\nTable.displayName = 'Table';\nTable.hasWarnBeta = false;\nTable.defaultProps = {\n  children: null,\n  className: '',\n  variant: null,\n  borders: true,\n  rowLabeledBy: 'simple-node',\n  expandId: 'expandable-toggle',\n  contentId: 'expanded-content',\n  dropdownPosition: DropdownPosition.right,\n  dropdownDirection: DropdownDirection.down,\n  header: undefined,\n  caption: undefined,\n  'aria-label': undefined,\n  gridBreakPoint: TableGridBreakpoint.gridMd,\n  role: 'grid',\n  canSelectAll: true,\n  canCollapseAll: false,\n  isHeaderSelectDisabled: false,\n  selectVariant: 'checkbox',\n  collapseAllAriaLabel: '',\n  ouiaSafe: true,\n  isStickyHeader: false,\n  canSortFavorites: true,\n  isTreeTable: false,\n  isNested: false\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/Table/Table.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { OUIAProps, getDefaultOUIAId } from '@patternfly/react-core';\nimport {\n  DropdownDirection,\n  DropdownPosition\n} from '@patternfly/react-core/dist/esm/components/Dropdown/dropdownConstants';\nimport inlineStyles from '@patternfly/react-styles/css/components/InlineEdit/inline-edit';\nimport { css } from '@patternfly/react-styles';\nimport { Provider } from './base';\nimport { BodyCell } from './BodyCell';\nimport { HeaderCell } from './HeaderCell';\nimport { RowWrapper, RowWrapperProps } from './RowWrapper';\nimport { BodyWrapper } from './BodyWrapper';\nimport { calculateColumns } from './utils/headerUtils';\nimport { RowSelectVariant } from './SelectColumn';\nimport { TableContext } from './TableContext';\nimport {\n  ISortBy,\n  OnCollapse,\n  OnExpand,\n  OnSelect,\n  OnRowEdit,\n  OnSort,\n  IActions,\n  IActionsResolver,\n  IAreActionsDisabled,\n  IRow,\n  ICell,\n  TableVariant,\n  TableGridBreakpoint,\n  IHeaderRow,\n  OnFavorite\n} from './TableTypes';\nimport { TreeRowWrapper } from './TreeRowWrapper';\nimport { CustomActionsToggleProps } from './ActionsColumn';\n\nexport interface TableProps extends OUIAProps {\n  /** Adds an accessible name for the Table */\n  'aria-label'?: string;\n  /** Content rendered inside the Table */\n  children?: React.ReactNode;\n  /** Additional classes added to the Table  */\n  className?: string;\n  /** Style variant for the Table  */\n  variant?: 'compact';\n  /**\n   * Render borders\n   * Borders can only currently be disabled if the variant is set to 'compact'\n   * https://github.com/patternfly/patternfly/issues/3650\n   */\n  borders?: boolean;\n  /** Specifies the grid breakpoints  */\n  gridBreakPoint?: '' | 'grid' | 'grid-md' | 'grid-lg' | 'grid-xl' | 'grid-2xl';\n  /** Specifies the initial sorting pattern for the table - asc/desc and the index of the column to sort by */\n  sortBy?: ISortBy;\n  /** Function triggered when an expandable content is collapsed. When this is used, one expandable toggle button will be positioned in the first cell of a non-expandable row, preceding an expandable row */\n  onCollapse?: OnCollapse;\n  /** Function triggered when a compound expandable item is clicked */\n  onExpand?: OnExpand;\n  /** Function triggered when a row's checkbox is selected. When this is used, one checkbox/radio button will be positioned in the first or second cell of a non-expandable row */\n  onSelect?: OnSelect;\n  /** Enables or disables the ability to select all - this is mutually exclusive with radio button select variant */\n  canSelectAll?: boolean;\n  /** Enables or disables the ability to expand all */\n  canCollapseAll?: boolean;\n  /** Flag indicating the select all checkbox is disabled */\n  isHeaderSelectDisabled?: boolean;\n  /** Specifies the type of the select element variant - can be one of checkbox or radio button */\n  selectVariant?: 'checkbox' | 'radio';\n  /** An optional alternative aria label for the expand collapse all table header */\n  collapseAllAriaLabel?: string;\n  /** Function triggered when a row's inline edit is activated. Adds a column for inline edit when present. */\n  onRowEdit?: OnRowEdit;\n  /** Function triggered when sort icon is clicked */\n  onSort?: OnSort;\n  /** Actions to add to the Table */\n  actions?: IActions;\n  /** Resolver for the given action  */\n  actionResolver?: IActionsResolver;\n  /** Specifies if the Kebab for actions is disabled */\n  areActionsDisabled?: IAreActionsDisabled;\n  /** Component to place in the header */\n  header?: React.ReactNode;\n  /** Component used for caption*/\n  caption?: React.ReactNode;\n  /** label for row */\n  rowLabeledBy?: string;\n  /** ID for expand */\n  expandId?: string;\n  /** ID for content */\n  contentId?: string;\n  /** The desired position to show the dropdown when clicking on the actions Kebab. Can only be used together with `actions` property */\n  dropdownPosition?: 'right' | 'left';\n  /** The desired direction to show the dropdown when clicking on the actions Kebab. Can only be used together with `actions` property */\n  dropdownDirection?: 'up' | 'down';\n  /** The toggle of the actions menu dropdown. A KebabToggle or DropdownToggle component */\n  actionsToggle?: (props: CustomActionsToggleProps) => React.ReactNode;\n  /** Row data */\n  rows: (IRow | string[])[];\n  /** Cell/column data */\n  cells: (ICell | string)[];\n  /** Wrapper for the body  */\n  bodyWrapper?: Function;\n  /** Wrapper for the row */\n  rowWrapper?: (props: RowWrapperProps) => JSX.Element;\n  /** A valid WAI-ARIA role to be applied to the table element */\n  role?: string;\n  /** If set to true, the table header sticks to the top of its container */\n  isStickyHeader?: boolean;\n  /**\n   * Enables favorites column\n   * Callback triggered when a row is favorited/unfavorited\n   */\n  onFavorite?: OnFavorite;\n  /** Along with the onSort prop, enables favorites sorting, defaults to true */\n  canSortFavorites?: boolean;\n  /** Flag indicating table is a tree table */\n  isTreeTable?: boolean;\n  /** Flag indicating this table is nested within another table */\n  isNested?: boolean;\n  /** Flag indicating this table is striped */\n  isStriped?: boolean;\n  /** Flag indicating this table contains expandable rows to maintain proper striping */\n  isExpandable?: boolean;\n}\n\nexport class Table extends React.Component<TableProps, {}> {\n  static displayName = 'Table';\n  static hasWarnBeta = false;\n  static defaultProps: Partial<TableProps> = {\n    children: null as React.ReactNode,\n    className: '',\n    variant: null as TableVariant,\n    borders: true,\n    rowLabeledBy: 'simple-node',\n    expandId: 'expandable-toggle',\n    contentId: 'expanded-content',\n    dropdownPosition: DropdownPosition.right,\n    dropdownDirection: DropdownDirection.down,\n    header: undefined as React.ReactNode,\n    caption: undefined as React.ReactNode,\n    'aria-label': undefined as string,\n    gridBreakPoint: TableGridBreakpoint.gridMd,\n    role: 'grid',\n    canSelectAll: true,\n    canCollapseAll: false,\n    isHeaderSelectDisabled: false,\n    selectVariant: 'checkbox',\n    collapseAllAriaLabel: '',\n    ouiaSafe: true,\n    isStickyHeader: false,\n    canSortFavorites: true,\n    isTreeTable: false,\n    isNested: false\n  };\n  state = {\n    ouiaStateId: getDefaultOUIAId(Table.displayName)\n  };\n\n  isSelected = (row: IRow) => row.selected === true;\n\n  areAllRowsSelected = (rows: IRow[]) => {\n    if (rows === undefined || rows.length === 0) {\n      return false;\n    }\n    return rows.every(\n      row => this.isSelected(row) || row.disableSelection || (row.hasOwnProperty('parent') && !row.showSelect)\n    );\n  };\n\n  areAllExpanded = (rows: IRow[]) => {\n    if (rows === undefined || rows.length === 0) {\n      return false;\n    }\n    return rows.every(row => row.isOpen === undefined || row.isOpen);\n  };\n\n  render() {\n    const {\n      'aria-label': ariaLabel,\n      caption,\n      header,\n      onSort,\n      onSelect,\n      canSelectAll,\n      canCollapseAll,\n      isHeaderSelectDisabled,\n      selectVariant,\n      collapseAllAriaLabel,\n      sortBy,\n      children,\n      actions,\n      actionResolver,\n      areActionsDisabled,\n      onCollapse,\n      onExpand,\n      onRowEdit,\n      rowLabeledBy,\n      dropdownPosition,\n      dropdownDirection,\n      actionsToggle,\n      contentId,\n      expandId,\n      variant,\n      rows,\n      cells,\n      bodyWrapper,\n      rowWrapper,\n      role,\n      borders,\n      onFavorite,\n      canSortFavorites,\n      ...props\n    } = this.props;\n\n    if (!ariaLabel && !caption && !header && role !== 'presentation') {\n      // eslint-disable-next-line no-console\n      console.error('Table: Specify at least one of: header, caption, aria-label');\n    }\n\n    const headerData = calculateColumns(cells, {\n      sortBy,\n      onSort,\n      onSelect,\n      canSelectAll: selectVariant === RowSelectVariant.radio ? false : canSelectAll,\n      canCollapseAll,\n      isHeaderSelectDisabled,\n      selectVariant,\n      collapseAllAriaLabel,\n      allRowsSelected: onSelect ? this.areAllRowsSelected(rows as IRow[]) : false,\n      allRowsExpanded: onCollapse ? this.areAllExpanded(rows as IRow[]) : false,\n      actions,\n      actionResolver,\n      areActionsDisabled,\n      onCollapse,\n      onRowEdit,\n      onExpand,\n      rowLabeledBy,\n      expandId,\n      contentId,\n      dropdownPosition,\n      dropdownDirection,\n      actionsToggle,\n      onFavorite,\n      canSortFavorites,\n      // order of columns: Collapsible | Selectable | Favoritable\n      firstUserColumnIndex: [onCollapse, onSelect, onFavorite].filter(callback => callback).length\n    });\n\n    const table = (\n      <TableContext.Provider\n        value={{\n          headerData,\n          headerRows: null as IHeaderRow[],\n          rows\n        }}\n      >\n        {header}\n        <Provider\n          {...props}\n          aria-label={ariaLabel}\n          renderers={{\n            body: {\n              wrapper: bodyWrapper || BodyWrapper,\n              row: rowWrapper || (this.props.isTreeTable ? TreeRowWrapper : RowWrapper),\n              cell: BodyCell\n            },\n            header: {\n              cell: HeaderCell\n            }\n          }}\n          columns={headerData}\n          role={role}\n          variant={variant}\n          borders={borders}\n        >\n          {caption && <caption>{caption}</caption>}\n          {children}\n        </Provider>\n      </TableContext.Provider>\n    );\n\n    if (onRowEdit) {\n      return <form className={css(inlineStyles.inlineEdit)}>{table}</form>;\n    }\n\n    return table;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}