{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useContext,useEffect,useRef,useState}from'react';import{WorkflowStateContext}from'contexts/Workflow';import{generateLine,getLinePoints,getLinkOverlayPoints}from'components/Workflow/WorkflowUtils';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function WorkflowOutputLink(_ref){var link=_ref.link,mouseEnter=_ref.mouseEnter,mouseLeave=_ref.mouseLeave;var ref=useRef(null);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),hovering=_useState2[0],setHovering=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),pathD=_useState4[0],setPathD=_useState4[1];var _useState5=useState('#CCCCCC'),_useState6=_slicedToArray(_useState5,2),pathStroke=_useState6[0],setPathStroke=_useState6[1];var _useContext=useContext(WorkflowStateContext),nodePositions=_useContext.nodePositions;var handleLinkMouseEnter=function handleLinkMouseEnter(){ref.current.parentNode.appendChild(ref.current);setHovering(true);mouseEnter();};var handleLinkMouseLeave=function handleLinkMouseLeave(){ref.current.parentNode.prepend(ref.current);setHovering(null);mouseLeave();};useEffect(function(){if(link.linkType==='failure'){setPathStroke('#d9534f');}if(link.linkType==='success'){setPathStroke('#5cb85c');}if(link.linkType==='always'){setPathStroke('#337ab7');}},[link.linkType]);useEffect(function(){var linePoints=getLinePoints(link,nodePositions);setPathD(generateLine(linePoints));},[link,nodePositions]);return/*#__PURE__*/_jsxs(\"g\",{ref:ref,id:\"link-\".concat(link.source.id,\"-\").concat(link.target.id),onMouseEnter:handleLinkMouseEnter,onMouseLeave:handleLinkMouseLeave,children:[/*#__PURE__*/_jsx(\"polygon\",{fill:\"#E1E1E1\",id:\"link-\".concat(link.source.id,\"-\").concat(link.target.id,\"-overlay\"),opacity:hovering?'1':'0',points:getLinkOverlayPoints(link,nodePositions)}),/*#__PURE__*/_jsx(\"path\",{d:pathD,stroke:pathStroke,strokeWidth:\"2px\"}),/*#__PURE__*/_jsx(\"polygon\",{onMouseEnter:function onMouseEnter(){return mouseEnter();},onMouseLeave:function onMouseLeave(){return mouseLeave();},opacity:\"0\",points:getLinkOverlayPoints(link,nodePositions)})]});}export default WorkflowOutputLink;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Job/WorkflowOutput/WorkflowOutputLink.js"],"names":["React","useContext","useEffect","useRef","useState","WorkflowStateContext","generateLine","getLinePoints","getLinkOverlayPoints","WorkflowOutputLink","link","mouseEnter","mouseLeave","ref","hovering","setHovering","pathD","setPathD","pathStroke","setPathStroke","nodePositions","handleLinkMouseEnter","current","parentNode","appendChild","handleLinkMouseLeave","prepend","linkType","linePoints","source","id","target"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { func, shape } from 'prop-types';\nimport { WorkflowStateContext } from 'contexts/Workflow';\nimport {\n  generateLine,\n  getLinePoints,\n  getLinkOverlayPoints,\n} from 'components/Workflow/WorkflowUtils';\n\nfunction WorkflowOutputLink({ link, mouseEnter, mouseLeave }) {\n  const ref = useRef(null);\n  const [hovering, setHovering] = useState(false);\n  const [pathD, setPathD] = useState();\n  const [pathStroke, setPathStroke] = useState('#CCCCCC');\n  const { nodePositions } = useContext(WorkflowStateContext);\n\n  const handleLinkMouseEnter = () => {\n    ref.current.parentNode.appendChild(ref.current);\n    setHovering(true);\n    mouseEnter();\n  };\n\n  const handleLinkMouseLeave = () => {\n    ref.current.parentNode.prepend(ref.current);\n    setHovering(null);\n    mouseLeave();\n  };\n\n  useEffect(() => {\n    if (link.linkType === 'failure') {\n      setPathStroke('#d9534f');\n    }\n    if (link.linkType === 'success') {\n      setPathStroke('#5cb85c');\n    }\n    if (link.linkType === 'always') {\n      setPathStroke('#337ab7');\n    }\n  }, [link.linkType]);\n\n  useEffect(() => {\n    const linePoints = getLinePoints(link, nodePositions);\n    setPathD(generateLine(linePoints));\n  }, [link, nodePositions]);\n\n  return (\n    <g\n      ref={ref}\n      id={`link-${link.source.id}-${link.target.id}`}\n      onMouseEnter={handleLinkMouseEnter}\n      onMouseLeave={handleLinkMouseLeave}\n    >\n      <polygon\n        fill=\"#E1E1E1\"\n        id={`link-${link.source.id}-${link.target.id}-overlay`}\n        opacity={hovering ? '1' : '0'}\n        points={getLinkOverlayPoints(link, nodePositions)}\n      />\n      <path d={pathD} stroke={pathStroke} strokeWidth=\"2px\" />\n      <polygon\n        onMouseEnter={() => mouseEnter()}\n        onMouseLeave={() => mouseLeave()}\n        opacity=\"0\"\n        points={getLinkOverlayPoints(link, nodePositions)}\n      />\n    </g>\n  );\n}\n\nWorkflowOutputLink.propTypes = {\n  link: shape().isRequired,\n  mouseEnter: func.isRequired,\n  mouseLeave: func.isRequired,\n};\n\nexport default WorkflowOutputLink;\n"]},"metadata":{},"sourceType":"module"}