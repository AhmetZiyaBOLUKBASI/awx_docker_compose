{"ast":null,"code":"import _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ContextSelector/context-selector';\nimport { css } from '@patternfly/react-styles';\nimport SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport { ContextSelectorToggle } from './ContextSelectorToggle';\nimport { ContextSelectorMenuList } from './ContextSelectorMenuList';\nimport { ContextSelectorContext } from './contextSelectorConstants';\nimport { Button, ButtonVariant } from '../Button';\nimport { TextInput } from '../TextInput';\nimport { InputGroup } from '../InputGroup';\nimport { KEY_CODES } from '../../helpers/constants';\nimport { FocusTrap } from '../../helpers';\nimport { Popper } from '../../helpers/Popper/Popper';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers'; // seed for the aria-labelledby ID\n\nvar currentId = 0;\nvar newId = currentId++;\nexport var ContextSelector = /*#__PURE__*/function (_React$Component) {\n  _inherits(ContextSelector, _React$Component);\n\n  var _super = _createSuper(ContextSelector);\n\n  function ContextSelector(props) {\n    var _this;\n\n    _classCallCheck(this, ContextSelector);\n\n    _this = _super.call(this, props);\n    _this.parentRef = React.createRef();\n    _this.popperRef = React.createRef();\n\n    _this.onEnterPressed = function (event) {\n      if (event.charCode === KEY_CODES.ENTER) {\n        _this.props.onSearchButtonClick();\n      }\n    };\n\n    _this.state = {\n      ouiaStateId: getDefaultOUIAId(ContextSelector.displayName)\n    };\n    return _this;\n  }\n\n  _createClass(ContextSelector, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var toggleId = \"pf-context-selector-toggle-id-\".concat(newId);\n      var screenReaderLabelId = \"pf-context-selector-label-id-\".concat(newId);\n      var searchButtonId = \"pf-context-selector-search-button-id-\".concat(newId);\n\n      var _a = this.props,\n          children = _a.children,\n          className = _a.className,\n          isOpen = _a.isOpen,\n          isFullHeight = _a.isFullHeight,\n          onToggle = _a.onToggle,\n          onSelect = _a.onSelect,\n          screenReaderLabel = _a.screenReaderLabel,\n          toggleText = _a.toggleText,\n          searchButtonAriaLabel = _a.searchButtonAriaLabel,\n          searchInputValue = _a.searchInputValue,\n          onSearchInputChange = _a.onSearchInputChange,\n          searchInputPlaceholder = _a.searchInputPlaceholder,\n          onSearchButtonClick = _a.onSearchButtonClick,\n          menuAppendTo = _a.menuAppendTo,\n          ouiaId = _a.ouiaId,\n          ouiaSafe = _a.ouiaSafe,\n          isPlain = _a.isPlain,\n          isText = _a.isText,\n          footer = _a.footer,\n          disableFocusTrap = _a.disableFocusTrap,\n          isFlipEnabled = _a.isFlipEnabled,\n          props = __rest(_a, [\"children\", \"className\", \"isOpen\", \"isFullHeight\", \"onToggle\", \"onSelect\", \"screenReaderLabel\", \"toggleText\", \"searchButtonAriaLabel\", \"searchInputValue\", \"onSearchInputChange\", \"searchInputPlaceholder\", \"onSearchButtonClick\", \"menuAppendTo\", \"ouiaId\", \"ouiaSafe\", \"isPlain\", \"isText\", \"footer\", \"disableFocusTrap\", \"isFlipEnabled\"]);\n\n      var menuContainer = React.createElement(\"div\", Object.assign({\n        className: css(styles.contextSelectorMenu)\n      }, isFlipEnabled && {\n        style: {\n          position: 'revert'\n        }\n      }), isOpen && React.createElement(FocusTrap, {\n        active: !disableFocusTrap,\n        focusTrapOptions: {\n          clickOutsideDeactivates: true,\n          tabbableOptions: {\n            displayCheck: 'none'\n          }\n        }\n      }, React.createElement(\"div\", {\n        className: css(styles.contextSelectorMenuSearch)\n      }, React.createElement(InputGroup, null, React.createElement(TextInput, {\n        value: searchInputValue,\n        type: \"search\",\n        placeholder: searchInputPlaceholder,\n        onChange: onSearchInputChange,\n        onKeyPress: this.onEnterPressed,\n        \"aria-labelledby\": searchButtonId\n      }), React.createElement(Button, {\n        variant: ButtonVariant.control,\n        \"aria-label\": searchButtonAriaLabel,\n        id: searchButtonId,\n        onClick: onSearchButtonClick\n      }, React.createElement(SearchIcon, {\n        \"aria-hidden\": \"true\"\n      })))), React.createElement(ContextSelectorContext.Provider, {\n        value: {\n          onSelect: onSelect\n        }\n      }, React.createElement(ContextSelectorMenuList, {\n        isOpen: isOpen\n      }, children)), footer));\n      var popperContainer = React.createElement(\"div\", Object.assign({\n        className: css(styles.contextSelector, isOpen && styles.modifiers.expanded, className),\n        ref: this.popperRef\n      }, props), isOpen && menuContainer);\n      var mainContainer = React.createElement(\"div\", Object.assign({\n        className: css(styles.contextSelector, isOpen && styles.modifiers.expanded, isFullHeight && styles.modifiers.fullHeight, className),\n        ref: this.parentRef\n      }, getOUIAProps(ContextSelector.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), props), screenReaderLabel && React.createElement(\"span\", {\n        id: screenReaderLabelId,\n        hidden: true\n      }, screenReaderLabel), React.createElement(ContextSelectorToggle, {\n        onToggle: onToggle,\n        isOpen: isOpen,\n        toggleText: toggleText,\n        id: toggleId,\n        parentRef: menuAppendTo === 'inline' ? this.parentRef : this.popperRef,\n        \"aria-labelledby\": \"\".concat(screenReaderLabelId, \" \").concat(toggleId),\n        isPlain: isPlain,\n        isText: isText\n      }), isOpen && menuAppendTo === 'inline' && menuContainer);\n\n      var getParentElement = function getParentElement() {\n        if (_this2.parentRef && _this2.parentRef.current) {\n          return _this2.parentRef.current.parentElement;\n        }\n\n        return null;\n      };\n\n      return menuAppendTo === 'inline' ? mainContainer : React.createElement(Popper, {\n        trigger: mainContainer,\n        popper: popperContainer,\n        appendTo: menuAppendTo === 'parent' ? getParentElement() : menuAppendTo,\n        isVisible: isOpen\n      });\n    }\n  }]);\n\n  return ContextSelector;\n}(React.Component);\nContextSelector.displayName = 'ContextSelector';\nContextSelector.defaultProps = {\n  children: null,\n  className: '',\n  isOpen: false,\n  onToggle: function onToggle() {\n    return undefined;\n  },\n  onSelect: function onSelect() {\n    return undefined;\n  },\n  screenReaderLabel: '',\n  toggleText: '',\n  searchButtonAriaLabel: 'Search menu items',\n  searchInputValue: '',\n  onSearchInputChange: function onSearchInputChange() {\n    return undefined;\n  },\n  searchInputPlaceholder: 'Search',\n  onSearchButtonClick: function onSearchButtonClick() {\n    return undefined;\n  },\n  menuAppendTo: 'inline',\n  ouiaSafe: true,\n  disableFocusTrap: false,\n  footer: null,\n  isPlain: false,\n  isText: false,\n  isFlipEnabled: false\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/ContextSelector/ContextSelector.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ContextSelector/context-selector';\nimport { css } from '@patternfly/react-styles';\nimport SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport { ContextSelectorToggle } from './ContextSelectorToggle';\nimport { ContextSelectorMenuList } from './ContextSelectorMenuList';\nimport { ContextSelectorContext } from './contextSelectorConstants';\nimport { Button, ButtonVariant } from '../Button';\nimport { TextInput } from '../TextInput';\nimport { InputGroup } from '../InputGroup';\nimport { KEY_CODES } from '../../helpers/constants';\nimport { FocusTrap } from '../../helpers';\nimport { ToggleMenuBaseProps } from '../../helpers/Popper/Popper';\nimport { Popper } from '../../helpers/Popper/Popper';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId } from '../../helpers';\n\n// seed for the aria-labelledby ID\nlet currentId = 0;\nconst newId = currentId++;\n\nexport interface ContextSelectorProps extends Omit<ToggleMenuBaseProps, 'menuAppendTo'>, OUIAProps {\n  /** content rendered inside the Context Selector */\n  children?: React.ReactNode;\n  /** Classes applied to root element of Context Selector */\n  className?: string;\n  /** Flag to indicate if Context Selector is opened */\n  isOpen?: boolean;\n  /** Function callback called when user clicks toggle button */\n  onToggle?: (event: any, value: boolean) => void;\n  /** Function callback called when user selects item */\n  onSelect?: (event: any, value: React.ReactNode) => void;\n  /** The container to append the menu to. Defaults to 'inline'.\n   * If your menu is being cut off you can append it to an element higher up the DOM tree.\n   * Some examples:\n   * menuAppendTo=\"parent\"\n   * menuAppendTo={() => document.body}\n   * menuAppendTo={document.getElementById('target')}\n   */\n  menuAppendTo?: HTMLElement | (() => HTMLElement) | 'inline' | 'parent';\n  /** Flag indicating that the context selector should expand to full height */\n  isFullHeight?: boolean;\n  /** Labels the Context Selector for Screen Readers */\n  screenReaderLabel?: string;\n  /** Text that appears in the Context Selector Toggle */\n  toggleText?: string;\n  /** Aria-label for the Context Selector Search Button */\n  searchButtonAriaLabel?: string;\n  /** Value in the Search field */\n  searchInputValue?: string;\n  /** Function callback called when user changes the Search Input */\n  onSearchInputChange?: (value: string) => void;\n  /** Search Input placeholder */\n  searchInputPlaceholder?: string;\n  /** Function callback for when Search Button is clicked */\n  onSearchButtonClick?: (event?: React.SyntheticEvent<HTMLButtonElement>) => void;\n  /** Footer of the context selector */\n  footer?: React.ReactNode;\n  /** Flag to indicate the toggle has no border or background */\n  isPlain?: boolean;\n  /** Flag to indicate if toggle is textual toggle */\n  isText?: boolean;\n  /** Flag to disable focus trap */\n  disableFocusTrap?: boolean;\n  /** Flag for indicating that the context selector menu should automatically flip vertically when\n   * it reaches the boundary. This prop can only be used when the context selector component is not\n   * appended inline, e.g. `menuAppendTo=\"parent\"`\n   */\n  isFlipEnabled?: boolean;\n}\n\nexport class ContextSelector extends React.Component<ContextSelectorProps, { ouiaStateId: string }> {\n  static displayName = 'ContextSelector';\n  static defaultProps: ContextSelectorProps = {\n    children: null as React.ReactNode,\n    className: '',\n    isOpen: false,\n    onToggle: () => undefined as any,\n    onSelect: () => undefined as any,\n    screenReaderLabel: '',\n    toggleText: '',\n    searchButtonAriaLabel: 'Search menu items',\n    searchInputValue: '',\n    onSearchInputChange: () => undefined as any,\n    searchInputPlaceholder: 'Search',\n    onSearchButtonClick: () => undefined as any,\n    menuAppendTo: 'inline',\n    ouiaSafe: true,\n    disableFocusTrap: false,\n    footer: null as React.ReactNode,\n    isPlain: false,\n    isText: false,\n    isFlipEnabled: false\n  };\n  constructor(props: ContextSelectorProps) {\n    super(props);\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(ContextSelector.displayName)\n    };\n  }\n\n  parentRef: React.RefObject<HTMLDivElement> = React.createRef();\n  popperRef: React.RefObject<HTMLDivElement> = React.createRef();\n\n  onEnterPressed = (event: any) => {\n    if (event.charCode === KEY_CODES.ENTER) {\n      this.props.onSearchButtonClick();\n    }\n  };\n\n  render() {\n    const toggleId = `pf-context-selector-toggle-id-${newId}`;\n    const screenReaderLabelId = `pf-context-selector-label-id-${newId}`;\n    const searchButtonId = `pf-context-selector-search-button-id-${newId}`;\n    const {\n      children,\n      className,\n      isOpen,\n      isFullHeight,\n      onToggle,\n      onSelect,\n      screenReaderLabel,\n      toggleText,\n      searchButtonAriaLabel,\n      searchInputValue,\n      onSearchInputChange,\n      searchInputPlaceholder,\n      onSearchButtonClick,\n      menuAppendTo,\n      ouiaId,\n      ouiaSafe,\n      isPlain,\n      isText,\n      footer,\n      disableFocusTrap,\n      isFlipEnabled,\n      ...props\n    } = this.props;\n    const menuContainer = (\n      <div\n        className={css(styles.contextSelectorMenu)}\n        // This removes the `position: absolute`styling from the `.pf-c-context-selector__menu`\n        // allowing the menu to flip correctly\n        {...(isFlipEnabled && { style: { position: 'revert' } })}\n      >\n        {isOpen && (\n          <FocusTrap\n            active={!disableFocusTrap}\n            focusTrapOptions={{ clickOutsideDeactivates: true, tabbableOptions: { displayCheck: 'none' } }}\n          >\n            <div className={css(styles.contextSelectorMenuSearch)}>\n              <InputGroup>\n                <TextInput\n                  value={searchInputValue}\n                  type=\"search\"\n                  placeholder={searchInputPlaceholder}\n                  onChange={onSearchInputChange}\n                  onKeyPress={this.onEnterPressed}\n                  aria-labelledby={searchButtonId}\n                />\n                <Button\n                  variant={ButtonVariant.control}\n                  aria-label={searchButtonAriaLabel}\n                  id={searchButtonId}\n                  onClick={onSearchButtonClick}\n                >\n                  <SearchIcon aria-hidden=\"true\" />\n                </Button>\n              </InputGroup>\n            </div>\n            <ContextSelectorContext.Provider value={{ onSelect }}>\n              <ContextSelectorMenuList isOpen={isOpen}>{children}</ContextSelectorMenuList>\n            </ContextSelectorContext.Provider>\n            {footer}\n          </FocusTrap>\n        )}\n      </div>\n    );\n    const popperContainer = (\n      <div\n        className={css(styles.contextSelector, isOpen && styles.modifiers.expanded, className)}\n        ref={this.popperRef}\n        {...props}\n      >\n        {isOpen && menuContainer}\n      </div>\n    );\n    const mainContainer = (\n      <div\n        className={css(\n          styles.contextSelector,\n          isOpen && styles.modifiers.expanded,\n          isFullHeight && styles.modifiers.fullHeight,\n          className\n        )}\n        ref={this.parentRef}\n        {...getOUIAProps(ContextSelector.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n        {...props}\n      >\n        {screenReaderLabel && (\n          <span id={screenReaderLabelId} hidden>\n            {screenReaderLabel}\n          </span>\n        )}\n        <ContextSelectorToggle\n          onToggle={onToggle}\n          isOpen={isOpen}\n          toggleText={toggleText}\n          id={toggleId}\n          parentRef={menuAppendTo === 'inline' ? this.parentRef : this.popperRef}\n          aria-labelledby={`${screenReaderLabelId} ${toggleId}`}\n          isPlain={isPlain}\n          isText={isText}\n        />\n        {isOpen && menuAppendTo === 'inline' && menuContainer}\n      </div>\n    );\n    const getParentElement = () => {\n      if (this.parentRef && this.parentRef.current) {\n        return this.parentRef.current.parentElement;\n      }\n      return null;\n    };\n    return menuAppendTo === 'inline' ? (\n      mainContainer\n    ) : (\n      <Popper\n        trigger={mainContainer}\n        popper={popperContainer}\n        appendTo={menuAppendTo === 'parent' ? getParentElement() : menuAppendTo}\n        isVisible={isOpen}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}