{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{Trans}from\"@lingui/react\";import{i18n}from\"@lingui/core\";import React,{useCallback,useEffect}from'react';import{useParams,useLocation}from'react-router-dom';import useRequest,{useDeleteItems,useDismissableError}from'hooks/useRequest';import{getQSConfig,parseQueryString}from'util/qs';import{InventoriesAPI,InventorySourcesAPI}from'api';import PaginatedTable,{HeaderRow,HeaderCell,ToolbarAddButton,ToolbarDeleteButton,ToolbarSyncSourceButton,getSearchableKeys}from'components/PaginatedTable';import useSelected from'hooks/useSelected';import DatalistToolbar from'components/DataListToolbar';import AlertModal from'components/AlertModal/AlertModal';import ErrorDetail from'components/ErrorDetail/ErrorDetail';import{relatedResourceDeleteRequests}from'util/getRelatedResourceDeleteDetails';import InventorySourceListItem from'./InventorySourceListItem';import useWsInventorySources from'./useWsInventorySources';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var QS_CONFIG=getQSConfig('inventory-sources',{page:1,page_size:20,order_by:'name'});function InventorySourceList(){var _selected$;var _useParams=useParams(),inventoryType=_useParams.inventoryType,id=_useParams.id;var _useLocation=useLocation(),search=_useLocation.search;var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _results$1$data$actio,_results$,_results$$data;var params,results;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:params=parseQueryString(QS_CONFIG,search);_context.next=3;return Promise.all([InventoriesAPI.readSources(id,params),InventorySourcesAPI.readOptions()]);case 3:results=_context.sent;return _context.abrupt(\"return\",{result:results[0].data.results,sourceCount:results[0].data.count,sourceChoices:results[1].data.actions.GET.source.choices,sourceChoicesOptions:results[1].data.actions,searchableKeys:getSearchableKeys((_results$1$data$actio=results[1].data.actions)===null||_results$1$data$actio===void 0?void 0:_results$1$data$actio.GET),relatedSearchableKeys:(((_results$=results[1])===null||_results$===void 0?void 0:(_results$$data=_results$.data)===null||_results$$data===void 0?void 0:_results$$data.related_search_fields)||[]).map(function(val){return val.slice(0,-8);})});case 5:case\"end\":return _context.stop();}}},_callee);})),[id,search]),{result:[],sourceCount:0,sourceChoices:[],searchableKeys:[],relatedSearchableKeys:[]}),isLoading=_useRequest.isLoading,fetchError=_useRequest.error,_useRequest$result=_useRequest.result,result=_useRequest$result.result,sourceCount=_useRequest$result.sourceCount,sourceChoices=_useRequest$result.sourceChoices,sourceChoicesOptions=_useRequest$result.sourceChoicesOptions,searchableKeys=_useRequest$result.searchableKeys,relatedSearchableKeys=_useRequest$result.relatedSearchableKeys,fetchSources=_useRequest.request;var sources=useWsInventorySources(result);var canSyncSources=sources.length>0&&sources.every(function(source){return source.summary_fields.user_capabilities.start;});var _useRequest2=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!canSyncSources){_context2.next=3;break;}_context2.next=3;return InventoriesAPI.syncAllSources(id);case 3:case\"end\":return _context2.stop();}}},_callee2);})),[id,canSyncSources])),isSyncAllLoading=_useRequest2.isLoading,syncAllError=_useRequest2.error,syncAll=_useRequest2.request;useEffect(function(){fetchSources();},[fetchSources]);var _useSelected=useSelected(sources),selected=_useSelected.selected,isAllSelected=_useSelected.isAllSelected,handleSelect=_useSelected.handleSelect,clearSelected=_useSelected.clearSelected,selectAll=_useSelected.selectAll;var _useDeleteItems=useDeleteItems(useCallback(function(){return Promise.all(selected.map(function(_ref3){var sourceId=_ref3.id;return InventorySourcesAPI.destroy(sourceId);}),[]);},[selected]),{fetchItems:fetchSources,allItemsSelected:isAllSelected,qsConfig:QS_CONFIG}),isDeleteLoading=_useDeleteItems.isLoading,handleDeleteSources=_useDeleteItems.deleteItems,deletionError=_useDeleteItems.deletionError,clearDeletionError=_useDeleteItems.clearDeletionError;var _useDismissableError=useDismissableError(syncAllError),syncError=_useDismissableError.error,dismissError=_useDismissableError.dismissError;var deleteRelatedInventoryResources=function deleteRelatedInventoryResources(resourceId){return[InventorySourcesAPI.destroyHosts(resourceId),InventorySourcesAPI.destroyGroups(resourceId)];};var _useDeleteItems2=useDeleteItems(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:return _context3.abrupt(\"return\",Promise.all(selected.map(function(_ref5){var resourceId=_ref5.id;return deleteRelatedInventoryResources(resourceId);}).flat()));case 1:case\"end\":return _context3.stop();}}},_callee3);})),[selected])),deleteRelatedResourcesLoading=_useDeleteItems2.isLoading,deleteRelatedResourcesError=_useDeleteItems2.deletionError,handleDeleteRelatedResources=_useDeleteItems2.deleteItems;var handleDelete=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return handleDeleteRelatedResources();case 2:if(deleteRelatedResourcesError){_context4.next=5;break;}_context4.next=5;return handleDeleteSources();case 5:clearSelected();case 6:case\"end\":return _context4.stop();}}},_callee4);}));return function handleDelete(){return _ref6.apply(this,arguments);};}();var canAdd=sourceChoicesOptions&&Object.prototype.hasOwnProperty.call(sourceChoicesOptions,'POST');var listUrl=\"/inventories/\".concat(inventoryType,\"/\").concat(id,\"/sources/\");var deleteDetailsRequests=relatedResourceDeleteRequests.inventorySource((_selected$=selected[0])===null||_selected$===void 0?void 0:_selected$.id);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(PaginatedTable,{contentError:fetchError,toolbarSearchableKeys:searchableKeys,toolbarRelatedSearchableKeys:relatedSearchableKeys,hasContentLoading:isLoading||isDeleteLoading||isSyncAllLoading||deleteRelatedResourcesLoading,items:sources,itemCount:sourceCount,pluralizedItemName:/*i18n*/i18n._(\"Inventory Sources\"),qsConfig:QS_CONFIG,clearSelected:clearSelected,renderToolbar:function renderToolbar(props){return/*#__PURE__*/_jsx(DatalistToolbar,_objectSpread(_objectSpread({},props),{},{isAllSelected:isAllSelected,onSelectAll:selectAll,qsConfig:QS_CONFIG,additionalControls:[].concat(_toConsumableArray(canAdd?[/*#__PURE__*/_jsx(ToolbarAddButton,{linkTo:\"\".concat(listUrl,\"add\")},\"add\")]:[]),[/*#__PURE__*/_jsx(ToolbarDeleteButton,{onDelete:handleDelete,itemsToDelete:selected,pluralizedItemName:/*i18n*/i18n._(\"Inventory Sources\"),deleteDetailsRequests:deleteDetailsRequests,deleteMessage:/*#__PURE__*/_jsx(Trans,{id:\"{0, plural, one {This inventory source is currently being used by other resources that rely on it. Are you sure you want to delete it?} other {Deleting these inventory sources could impact other resources that rely on them. Are you sure you want to delete anyway}}\",values:{0:selected.length}})},\"delete\")],_toConsumableArray(canSyncSources?[/*#__PURE__*/_jsx(ToolbarSyncSourceButton,{onClick:syncAll})]:[]))}));},headerRow:/*#__PURE__*/_jsxs(HeaderRow,{qsConfig:QS_CONFIG,children:[/*#__PURE__*/_jsx(HeaderCell,{sortKey:\"name\",children:/*i18n*/i18n._(\"Name\")}),/*#__PURE__*/_jsx(HeaderCell,{children:/*i18n*/i18n._(\"Status\")}),/*#__PURE__*/_jsx(HeaderCell,{children:/*i18n*/i18n._(\"Type\")}),/*#__PURE__*/_jsx(HeaderCell,{children:/*i18n*/i18n._(\"Actions\")})]}),renderRow:function renderRow(inventorySource,index){var label=sourceChoices.find(function(_ref7){var _ref8=_slicedToArray(_ref7,1),scMatch=_ref8[0];return inventorySource.source===scMatch;});return/*#__PURE__*/_jsx(InventorySourceListItem,{source:inventorySource,onSelect:function onSelect(){return handleSelect(inventorySource);},label:label[1],detailUrl:\"\".concat(listUrl).concat(inventorySource.id),isSelected:selected.some(function(row){return row.id===inventorySource.id;}),rowIndex:index},inventorySource.id);}}),syncError&&/*#__PURE__*/_jsxs(AlertModal,{\"aria-label\":/*i18n*/i18n._(\"Sync error\"),isOpen:syncError,variant:\"error\",title:/*i18n*/i18n._(\"Error!\"),onClose:dismissError,children:[/*i18n*/i18n._(\"Failed to sync some or all inventory sources.\"),/*#__PURE__*/_jsx(ErrorDetail,{error:syncError})]}),(deletionError||deleteRelatedResourcesError)&&/*#__PURE__*/_jsxs(AlertModal,{\"aria-label\":/*i18n*/i18n._(\"Delete error\"),isOpen:deletionError||deleteRelatedResourcesError,variant:\"error\",title:/*i18n*/i18n._(\"Error!\"),onClose:clearDeletionError,children:[/*i18n*/i18n._(\"Failed to delete one or more inventory sources.\"),/*#__PURE__*/_jsx(ErrorDetail,{error:deletionError||deleteRelatedResourcesError})]})]});}export default InventorySourceList;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Inventory/InventorySources/InventorySourceList.js"],"names":["React","useCallback","useEffect","useParams","useLocation","useRequest","useDeleteItems","useDismissableError","getQSConfig","parseQueryString","InventoriesAPI","InventorySourcesAPI","PaginatedTable","HeaderRow","HeaderCell","ToolbarAddButton","ToolbarDeleteButton","ToolbarSyncSourceButton","getSearchableKeys","useSelected","DatalistToolbar","AlertModal","ErrorDetail","relatedResourceDeleteRequests","InventorySourceListItem","useWsInventorySources","QS_CONFIG","page","page_size","order_by","InventorySourceList","inventoryType","id","search","params","Promise","all","readSources","readOptions","results","result","data","sourceCount","count","sourceChoices","actions","GET","source","choices","sourceChoicesOptions","searchableKeys","relatedSearchableKeys","related_search_fields","map","val","slice","isLoading","fetchError","error","fetchSources","request","sources","canSyncSources","length","every","summary_fields","user_capabilities","start","syncAllSources","isSyncAllLoading","syncAllError","syncAll","selected","isAllSelected","handleSelect","clearSelected","selectAll","sourceId","destroy","fetchItems","allItemsSelected","qsConfig","isDeleteLoading","handleDeleteSources","deleteItems","deletionError","clearDeletionError","syncError","dismissError","deleteRelatedInventoryResources","resourceId","destroyHosts","destroyGroups","flat","deleteRelatedResourcesLoading","deleteRelatedResourcesError","handleDeleteRelatedResources","handleDelete","canAdd","Object","prototype","hasOwnProperty","call","listUrl","deleteDetailsRequests","inventorySource","props","index","label","find","scMatch","some","row"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,SAA7B,KAA8C,OAA9C,CACA,OAASC,SAAT,CAAoBC,WAApB,KAAuC,kBAAvC,CAGA,MAAOC,CAAAA,UAAP,EACEC,cADF,CAEEC,mBAFF,KAGO,kBAHP,CAIA,OAASC,WAAT,CAAsBC,gBAAtB,KAA8C,SAA9C,CACA,OAASC,cAAT,CAAyBC,mBAAzB,KAAoD,KAApD,CACA,MAAOC,CAAAA,cAAP,EACEC,SADF,CAEEC,UAFF,CAGEC,gBAHF,CAIEC,mBAJF,CAKEC,uBALF,CAMEC,iBANF,KAOO,2BAPP,CAQA,MAAOC,CAAAA,WAAP,KAAwB,mBAAxB,CACA,MAAOC,CAAAA,eAAP,KAA4B,4BAA5B,CACA,MAAOC,CAAAA,UAAP,KAAuB,kCAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,oCAAxB,CACA,OAASC,6BAAT,KAA8C,sCAA9C,CACA,MAAOC,CAAAA,uBAAP,KAAoC,2BAApC,CACA,MAAOC,CAAAA,qBAAP,KAAkC,yBAAlC,C,6IAEA,GAAMC,CAAAA,SAAS,CAAGlB,WAAW,CAAC,mBAAD,CAAsB,CACjDmB,IAAI,CAAE,CAD2C,CAEjDC,SAAS,CAAE,EAFsC,CAGjDC,QAAQ,CAAE,MAHuC,CAAtB,CAA7B,CAMA,QAASC,CAAAA,mBAAT,EAA+B,gBAC7B,eAA8B3B,SAAS,EAAvC,CAAQ4B,aAAR,YAAQA,aAAR,CAAuBC,EAAvB,YAAuBA,EAAvB,CACA,iBAAmB5B,WAAW,EAA9B,CAAQ6B,MAAR,cAAQA,MAAR,CAEA,gBAYI5B,UAAU,CACZJ,WAAW,sEAAC,yMACJiC,MADI,CACKzB,gBAAgB,CAACiB,SAAD,CAAYO,MAAZ,CADrB,uBAEYE,CAAAA,OAAO,CAACC,GAAR,CAAY,CAChC1B,cAAc,CAAC2B,WAAf,CAA2BL,EAA3B,CAA+BE,MAA/B,CADgC,CAEhCvB,mBAAmB,CAAC2B,WAApB,EAFgC,CAAZ,CAFZ,QAEJC,OAFI,+CAMH,CACLC,MAAM,CAAED,OAAO,CAAC,CAAD,CAAP,CAAWE,IAAX,CAAgBF,OADnB,CAELG,WAAW,CAAEH,OAAO,CAAC,CAAD,CAAP,CAAWE,IAAX,CAAgBE,KAFxB,CAGLC,aAAa,CAAEL,OAAO,CAAC,CAAD,CAAP,CAAWE,IAAX,CAAgBI,OAAhB,CAAwBC,GAAxB,CAA4BC,MAA5B,CAAmCC,OAH7C,CAILC,oBAAoB,CAAEV,OAAO,CAAC,CAAD,CAAP,CAAWE,IAAX,CAAgBI,OAJjC,CAKLK,cAAc,CAAEhC,iBAAiB,wBAACqB,OAAO,CAAC,CAAD,CAAP,CAAWE,IAAX,CAAgBI,OAAjB,gDAAC,sBAAyBC,GAA1B,CAL5B,CAMLK,qBAAqB,CAAE,CACrB,YAAAZ,OAAO,CAAC,CAAD,CAAP,8DAAYE,IAAZ,wDAAkBW,qBAAlB,GAA2C,EADtB,EAErBC,GAFqB,CAEjB,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,KAAJ,CAAU,CAAV,CAAa,CAAC,CAAd,CAAT,EAFiB,CANlB,CANG,wDAAD,GAgBR,CAACvB,EAAD,CAAKC,MAAL,CAhBQ,CADC,CAkBZ,CACEO,MAAM,CAAE,EADV,CAEEE,WAAW,CAAE,CAFf,CAGEE,aAAa,CAAE,EAHjB,CAIEM,cAAc,CAAE,EAJlB,CAKEC,qBAAqB,CAAE,EALzB,CAlBY,CAZd,CACEK,SADF,aACEA,SADF,CAESC,UAFT,aAEEC,KAFF,gCAGElB,MAHF,CAIIA,MAJJ,oBAIIA,MAJJ,CAKIE,WALJ,oBAKIA,WALJ,CAMIE,aANJ,oBAMIA,aANJ,CAOIK,oBAPJ,oBAOIA,oBAPJ,CAQIC,cARJ,oBAQIA,cARJ,CASIC,qBATJ,oBASIA,qBATJ,CAWWQ,YAXX,aAWEC,OAXF,CAuCA,GAAMC,CAAAA,OAAO,CAAGpC,qBAAqB,CAACe,MAAD,CAArC,CAEA,GAAMsB,CAAAA,cAAc,CAClBD,OAAO,CAACE,MAAR,CAAiB,CAAjB,EACAF,OAAO,CAACG,KAAR,CAAc,SAACjB,MAAD,QAAYA,CAAAA,MAAM,CAACkB,cAAP,CAAsBC,iBAAtB,CAAwCC,KAApD,EAAd,CAFF,CAGA,iBAII9D,UAAU,CACZJ,WAAW,sEAAC,4IACN6D,cADM,iDAEFpD,CAAAA,cAAc,CAAC0D,cAAf,CAA8BpC,EAA9B,CAFE,yDAAD,GAIR,CAACA,EAAD,CAAK8B,cAAL,CAJQ,CADC,CAJd,CACaO,gBADb,cACEb,SADF,CAESc,YAFT,cAEEZ,KAFF,CAGWa,OAHX,cAGEX,OAHF,CAYA1D,SAAS,CAAC,UAAM,CACdyD,YAAY,GACb,CAFQ,CAEN,CAACA,YAAD,CAFM,CAAT,CAIA,iBACExC,WAAW,CAAC0C,OAAD,CADb,CAAQW,QAAR,cAAQA,QAAR,CAAkBC,aAAlB,cAAkBA,aAAlB,CAAiCC,YAAjC,cAAiCA,YAAjC,CAA+CC,aAA/C,cAA+CA,aAA/C,CAA8DC,SAA9D,cAA8DA,SAA9D,CAGA,oBAKItE,cAAc,CAChBL,WAAW,CACT,iBACEkC,CAAAA,OAAO,CAACC,GAAR,CACEoC,QAAQ,CAACnB,GAAT,CAAa,mBAAOwB,CAAAA,QAAP,OAAG7C,EAAH,OACXrB,CAAAA,mBAAmB,CAACmE,OAApB,CAA4BD,QAA5B,CADW,EAAb,CADF,CAIE,EAJF,CADF,EADS,CAQT,CAACL,QAAD,CARS,CADK,CAWhB,CACEO,UAAU,CAAEpB,YADd,CAEEqB,gBAAgB,CAAEP,aAFpB,CAGEQ,QAAQ,CAAEvD,SAHZ,CAXgB,CALlB,CACawD,eADb,iBACE1B,SADF,CAEe2B,mBAFf,iBAEEC,WAFF,CAGEC,aAHF,iBAGEA,aAHF,CAIEC,kBAJF,iBAIEA,kBAJF,CAsBA,yBAA2C/E,mBAAmB,CAAC+D,YAAD,CAA9D,CAAeiB,SAAf,sBAAQ7B,KAAR,CAA0B8B,YAA1B,sBAA0BA,YAA1B,CAEA,GAAMC,CAAAA,+BAA+B,CAAG,QAAlCA,CAAAA,+BAAkC,CAACC,UAAD,QAAgB,CACtD/E,mBAAmB,CAACgF,YAApB,CAAiCD,UAAjC,CADsD,CAEtD/E,mBAAmB,CAACiF,aAApB,CAAkCF,UAAlC,CAFsD,CAAhB,EAAxC,CAKA,qBAIIpF,cAAc,CAChBL,WAAW,sEACT,yKACEkC,OAAO,CAACC,GAAR,CACEoC,QAAQ,CACLnB,GADH,CACO,mBAAOqC,CAAAA,UAAP,OAAG1D,EAAH,OACHyD,CAAAA,+BAA+B,CAACC,UAAD,CAD5B,EADP,EAIGG,IAJH,EADF,CADF,0DADS,GAST,CAACrB,QAAD,CATS,CADK,CAJlB,CACasB,6BADb,kBACEtC,SADF,CAEiBuC,2BAFjB,kBAEEV,aAFF,CAGeW,4BAHf,kBAGEZ,WAHF,CAkBA,GAAMa,CAAAA,YAAY,2FAAG,+JACbD,CAAAA,4BAA4B,EADf,WAEdD,2BAFc,iDAGXZ,CAAAA,mBAAmB,EAHR,QAKnBR,aAAa,GALM,wDAAH,kBAAZsB,CAAAA,YAAY,2CAAlB,CAOA,GAAMC,CAAAA,MAAM,CACVjD,oBAAoB,EACpBkD,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCrD,oBAArC,CAA2D,MAA3D,CAFF,CAGA,GAAMsD,CAAAA,OAAO,wBAAmBxE,aAAnB,aAAoCC,EAApC,aAAb,CAEA,GAAMwE,CAAAA,qBAAqB,CAAGjF,6BAA6B,CAACkF,eAA9B,aAC5BjC,QAAQ,CAAC,CAAD,CADoB,qCAC5B,WAAaxC,EADe,CAA9B,CAGA,mBACE,wCACE,KAAC,cAAD,EACE,YAAY,CAAEyB,UADhB,CAEE,qBAAqB,CAAEP,cAFzB,CAGE,4BAA4B,CAAEC,qBAHhC,CAIE,iBAAiB,CACfK,SAAS,EACT0B,eADA,EAEAb,gBAFA,EAGAyB,6BARJ,CAUE,KAAK,CAAEjC,OAVT,CAWE,SAAS,CAAEnB,WAXb,CAYE,kBAAkB,SAAE,2BAZtB,CAaE,QAAQ,CAAEhB,SAbZ,CAcE,aAAa,CAAEiD,aAdjB,CAeE,aAAa,CAAE,uBAAC+B,KAAD,qBACb,KAAC,eAAD,gCACMA,KADN,MAEE,aAAa,CAAEjC,aAFjB,CAGE,WAAW,CAAEG,SAHf,CAIE,QAAQ,CAAElD,SAJZ,CAKE,kBAAkB,8BACZwE,MAAM,CACN,cAAC,KAAC,gBAAD,EAA4B,MAAM,WAAKK,OAAL,OAAlC,EAAsB,KAAtB,CAAD,CADM,CAEN,EAHY,gBAIhB,KAAC,mBAAD,EAEE,QAAQ,CAAEN,YAFZ,CAGE,aAAa,CAAEzB,QAHjB,CAIE,kBAAkB,SAAE,2BAJtB,CAKE,qBAAqB,CAAEgC,qBALzB,CAME,aAAa,cACX,oSACShC,QAAQ,CAACT,MADlB,GAPJ,EACM,QADN,CAJgB,qBAkBZD,cAAc,CACd,cAAC,KAAC,uBAAD,EAAyB,OAAO,CAAES,OAAlC,EAAD,CADc,CAEd,EApBY,EALpB,GADa,EAfjB,CA6CE,SAAS,cACP,MAAC,SAAD,EAAW,QAAQ,CAAE7C,SAArB,wBACE,KAAC,UAAD,EAAY,OAAO,CAAC,MAApB,kBAA4B,cAA5B,EADF,cAEE,KAAC,UAAD,mBAAa,gBAAb,EAFF,cAGE,KAAC,UAAD,mBAAa,cAAb,EAHF,cAIE,KAAC,UAAD,mBAAa,iBAAb,EAJF,GA9CJ,CAqDE,SAAS,CAAE,mBAAC+E,eAAD,CAAkBE,KAAlB,CAA4B,CACrC,GAAMC,CAAAA,KAAK,CAAGhE,aAAa,CAACiE,IAAd,CACZ,kDAAEC,OAAF,gBAAeL,CAAAA,eAAe,CAAC1D,MAAhB,GAA2B+D,OAA1C,EADY,CAAd,CAGA,mBACE,KAAC,uBAAD,EAEE,MAAM,CAAEL,eAFV,CAGE,QAAQ,CAAE,0BAAM/B,CAAAA,YAAY,CAAC+B,eAAD,CAAlB,EAHZ,CAIE,KAAK,CAAEG,KAAK,CAAC,CAAD,CAJd,CAKE,SAAS,WAAKL,OAAL,SAAeE,eAAe,CAACzE,EAA/B,CALX,CAME,UAAU,CAAEwC,QAAQ,CAACuC,IAAT,CAAc,SAACC,GAAD,QAASA,CAAAA,GAAG,CAAChF,EAAJ,GAAWyE,eAAe,CAACzE,EAApC,EAAd,CANd,CAOE,QAAQ,CAAE2E,KAPZ,EACOF,eAAe,CAACzE,EADvB,CADF,CAWD,CApEH,EADF,CAuEGuD,SAAS,eACR,MAAC,UAAD,EACE,qBAAY,oBADd,CAEE,MAAM,CAAEA,SAFV,CAGE,OAAO,CAAC,OAHV,CAIE,KAAK,SAAE,gBAJT,CAKE,OAAO,CAAEC,YALX,mBAOG,uDAPH,cAQE,KAAC,WAAD,EAAa,KAAK,CAAED,SAApB,EARF,GAxEJ,CAoFG,CAACF,aAAa,EAAIU,2BAAlB,gBACC,MAAC,UAAD,EACE,qBAAY,sBADd,CAEE,MAAM,CAAEV,aAAa,EAAIU,2BAF3B,CAGE,OAAO,CAAC,OAHV,CAIE,KAAK,SAAE,gBAJT,CAKE,OAAO,CAAET,kBALX,mBAOG,yDAPH,cAQE,KAAC,WAAD,EAAa,KAAK,CAAED,aAAa,EAAIU,2BAArC,EARF,GArFJ,GADF,CAmGD,CACD,cAAejE,CAAAA,mBAAf","sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { t, Plural } from '@lingui/macro';\n\nimport useRequest, {\n  useDeleteItems,\n  useDismissableError,\n} from 'hooks/useRequest';\nimport { getQSConfig, parseQueryString } from 'util/qs';\nimport { InventoriesAPI, InventorySourcesAPI } from 'api';\nimport PaginatedTable, {\n  HeaderRow,\n  HeaderCell,\n  ToolbarAddButton,\n  ToolbarDeleteButton,\n  ToolbarSyncSourceButton,\n  getSearchableKeys,\n} from 'components/PaginatedTable';\nimport useSelected from 'hooks/useSelected';\nimport DatalistToolbar from 'components/DataListToolbar';\nimport AlertModal from 'components/AlertModal/AlertModal';\nimport ErrorDetail from 'components/ErrorDetail/ErrorDetail';\nimport { relatedResourceDeleteRequests } from 'util/getRelatedResourceDeleteDetails';\nimport InventorySourceListItem from './InventorySourceListItem';\nimport useWsInventorySources from './useWsInventorySources';\n\nconst QS_CONFIG = getQSConfig('inventory-sources', {\n  page: 1,\n  page_size: 20,\n  order_by: 'name',\n});\n\nfunction InventorySourceList() {\n  const { inventoryType, id } = useParams();\n  const { search } = useLocation();\n\n  const {\n    isLoading,\n    error: fetchError,\n    result: {\n      result,\n      sourceCount,\n      sourceChoices,\n      sourceChoicesOptions,\n      searchableKeys,\n      relatedSearchableKeys,\n    },\n    request: fetchSources,\n  } = useRequest(\n    useCallback(async () => {\n      const params = parseQueryString(QS_CONFIG, search);\n      const results = await Promise.all([\n        InventoriesAPI.readSources(id, params),\n        InventorySourcesAPI.readOptions(),\n      ]);\n      return {\n        result: results[0].data.results,\n        sourceCount: results[0].data.count,\n        sourceChoices: results[1].data.actions.GET.source.choices,\n        sourceChoicesOptions: results[1].data.actions,\n        searchableKeys: getSearchableKeys(results[1].data.actions?.GET),\n        relatedSearchableKeys: (\n          results[1]?.data?.related_search_fields || []\n        ).map((val) => val.slice(0, -8)),\n      };\n    }, [id, search]),\n    {\n      result: [],\n      sourceCount: 0,\n      sourceChoices: [],\n      searchableKeys: [],\n      relatedSearchableKeys: [],\n    }\n  );\n\n  const sources = useWsInventorySources(result);\n\n  const canSyncSources =\n    sources.length > 0 &&\n    sources.every((source) => source.summary_fields.user_capabilities.start);\n  const {\n    isLoading: isSyncAllLoading,\n    error: syncAllError,\n    request: syncAll,\n  } = useRequest(\n    useCallback(async () => {\n      if (canSyncSources) {\n        await InventoriesAPI.syncAllSources(id);\n      }\n    }, [id, canSyncSources])\n  );\n\n  useEffect(() => {\n    fetchSources();\n  }, [fetchSources]);\n\n  const { selected, isAllSelected, handleSelect, clearSelected, selectAll } =\n    useSelected(sources);\n\n  const {\n    isLoading: isDeleteLoading,\n    deleteItems: handleDeleteSources,\n    deletionError,\n    clearDeletionError,\n  } = useDeleteItems(\n    useCallback(\n      () =>\n        Promise.all(\n          selected.map(({ id: sourceId }) =>\n            InventorySourcesAPI.destroy(sourceId)\n          ),\n          []\n        ),\n      [selected]\n    ),\n    {\n      fetchItems: fetchSources,\n      allItemsSelected: isAllSelected,\n      qsConfig: QS_CONFIG,\n    }\n  );\n  const { error: syncError, dismissError } = useDismissableError(syncAllError);\n\n  const deleteRelatedInventoryResources = (resourceId) => [\n    InventorySourcesAPI.destroyHosts(resourceId),\n    InventorySourcesAPI.destroyGroups(resourceId),\n  ];\n\n  const {\n    isLoading: deleteRelatedResourcesLoading,\n    deletionError: deleteRelatedResourcesError,\n    deleteItems: handleDeleteRelatedResources,\n  } = useDeleteItems(\n    useCallback(\n      async () =>\n        Promise.all(\n          selected\n            .map(({ id: resourceId }) =>\n              deleteRelatedInventoryResources(resourceId)\n            )\n            .flat()\n        ),\n      [selected]\n    )\n  );\n\n  const handleDelete = async () => {\n    await handleDeleteRelatedResources();\n    if (!deleteRelatedResourcesError) {\n      await handleDeleteSources();\n    }\n    clearSelected();\n  };\n  const canAdd =\n    sourceChoicesOptions &&\n    Object.prototype.hasOwnProperty.call(sourceChoicesOptions, 'POST');\n  const listUrl = `/inventories/${inventoryType}/${id}/sources/`;\n\n  const deleteDetailsRequests = relatedResourceDeleteRequests.inventorySource(\n    selected[0]?.id\n  );\n  return (\n    <>\n      <PaginatedTable\n        contentError={fetchError}\n        toolbarSearchableKeys={searchableKeys}\n        toolbarRelatedSearchableKeys={relatedSearchableKeys}\n        hasContentLoading={\n          isLoading ||\n          isDeleteLoading ||\n          isSyncAllLoading ||\n          deleteRelatedResourcesLoading\n        }\n        items={sources}\n        itemCount={sourceCount}\n        pluralizedItemName={t`Inventory Sources`}\n        qsConfig={QS_CONFIG}\n        clearSelected={clearSelected}\n        renderToolbar={(props) => (\n          <DatalistToolbar\n            {...props}\n            isAllSelected={isAllSelected}\n            onSelectAll={selectAll}\n            qsConfig={QS_CONFIG}\n            additionalControls={[\n              ...(canAdd\n                ? [<ToolbarAddButton key=\"add\" linkTo={`${listUrl}add`} />]\n                : []),\n              <ToolbarDeleteButton\n                key=\"delete\"\n                onDelete={handleDelete}\n                itemsToDelete={selected}\n                pluralizedItemName={t`Inventory Sources`}\n                deleteDetailsRequests={deleteDetailsRequests}\n                deleteMessage={\n                  <Plural\n                    value={selected.length}\n                    one=\"This inventory source is currently being used by other resources that rely on it. Are you sure you want to delete it?\"\n                    other=\"Deleting these inventory sources could impact other resources that rely on them. Are you sure you want to delete anyway\"\n                  />\n                }\n              />,\n              ...(canSyncSources\n                ? [<ToolbarSyncSourceButton onClick={syncAll} />]\n                : []),\n            ]}\n          />\n        )}\n        headerRow={\n          <HeaderRow qsConfig={QS_CONFIG}>\n            <HeaderCell sortKey=\"name\">{t`Name`}</HeaderCell>\n            <HeaderCell>{t`Status`}</HeaderCell>\n            <HeaderCell>{t`Type`}</HeaderCell>\n            <HeaderCell>{t`Actions`}</HeaderCell>\n          </HeaderRow>\n        }\n        renderRow={(inventorySource, index) => {\n          const label = sourceChoices.find(\n            ([scMatch]) => inventorySource.source === scMatch\n          );\n          return (\n            <InventorySourceListItem\n              key={inventorySource.id}\n              source={inventorySource}\n              onSelect={() => handleSelect(inventorySource)}\n              label={label[1]}\n              detailUrl={`${listUrl}${inventorySource.id}`}\n              isSelected={selected.some((row) => row.id === inventorySource.id)}\n              rowIndex={index}\n            />\n          );\n        }}\n      />\n      {syncError && (\n        <AlertModal\n          aria-label={t`Sync error`}\n          isOpen={syncError}\n          variant=\"error\"\n          title={t`Error!`}\n          onClose={dismissError}\n        >\n          {t`Failed to sync some or all inventory sources.`}\n          <ErrorDetail error={syncError} />\n        </AlertModal>\n      )}\n\n      {(deletionError || deleteRelatedResourcesError) && (\n        <AlertModal\n          aria-label={t`Delete error`}\n          isOpen={deletionError || deleteRelatedResourcesError}\n          variant=\"error\"\n          title={t`Error!`}\n          onClose={clearDeletionError}\n        >\n          {t`Failed to delete one or more inventory sources.`}\n          <ErrorDetail error={deletionError || deleteRelatedResourcesError} />\n        </AlertModal>\n      )}\n    </>\n  );\n}\nexport default InventorySourceList;\n"]},"metadata":{},"sourceType":"module"}