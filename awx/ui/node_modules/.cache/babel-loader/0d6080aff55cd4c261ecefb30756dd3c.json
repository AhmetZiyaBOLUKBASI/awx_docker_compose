{"ast":null,"code":"import _slicedToArray from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { FindRefWrapper } from './FindRefWrapper';\nimport { usePopper } from './thirdparty/react-popper/usePopper';\nimport { css } from '@patternfly/react-styles';\nimport '@patternfly/react-styles/css/components/Popper/Popper.css';\nvar hash = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\n\nvar getOppositePlacement = function getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n};\n\nexport var getOpacityTransition = function getOpacityTransition(animationDuration) {\n  return \"opacity \".concat(animationDuration, \"ms cubic-bezier(.54, 1.5, .38, 1.11)\");\n};\nexport var Popper = function Popper(_ref) {\n  var trigger = _ref.trigger,\n      popper = _ref.popper,\n      _ref$popperMatchesTri = _ref.popperMatchesTriggerWidth,\n      popperMatchesTriggerWidth = _ref$popperMatchesTri === void 0 ? true : _ref$popperMatchesTri,\n      _ref$direction = _ref.direction,\n      direction = _ref$direction === void 0 ? 'down' : _ref$direction,\n      _ref$position = _ref.position,\n      position = _ref$position === void 0 ? 'left' : _ref$position,\n      placement = _ref.placement,\n      _ref$appendTo = _ref.appendTo,\n      appendTo = _ref$appendTo === void 0 ? function () {\n    return document.body;\n  } : _ref$appendTo,\n      _ref$zIndex = _ref.zIndex,\n      zIndex = _ref$zIndex === void 0 ? 9999 : _ref$zIndex,\n      _ref$isVisible = _ref.isVisible,\n      isVisible = _ref$isVisible === void 0 ? true : _ref$isVisible,\n      positionModifiers = _ref.positionModifiers,\n      _ref$distance = _ref.distance,\n      distance = _ref$distance === void 0 ? 0 : _ref$distance,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseLeave = _ref.onMouseLeave,\n      onFocus = _ref.onFocus,\n      onBlur = _ref.onBlur,\n      onDocumentClick = _ref.onDocumentClick,\n      onTriggerClick = _ref.onTriggerClick,\n      onTriggerEnter = _ref.onTriggerEnter,\n      onPopperClick = _ref.onPopperClick,\n      onPopperMouseEnter = _ref.onPopperMouseEnter,\n      onPopperMouseLeave = _ref.onPopperMouseLeave,\n      onDocumentKeyDown = _ref.onDocumentKeyDown,\n      _ref$enableFlip = _ref.enableFlip,\n      enableFlip = _ref$enableFlip === void 0 ? true : _ref$enableFlip,\n      _ref$flipBehavior = _ref.flipBehavior,\n      flipBehavior = _ref$flipBehavior === void 0 ? 'flip' : _ref$flipBehavior,\n      reference = _ref.reference;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      triggerElement = _React$useState2[0],\n      setTriggerElement = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      refElement = _React$useState4[0],\n      setRefElement = _React$useState4[1];\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      popperElement = _React$useState6[0],\n      setPopperElement = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      ready = _React$useState8[0],\n      setReady = _React$useState8[1];\n\n  var refOrTrigger = refElement || triggerElement;\n  var onDocumentClickCallback = React.useCallback(function (event) {\n    return onDocumentClick(event, refOrTrigger, popperElement);\n  }, [isVisible, triggerElement, refElement, popperElement, onDocumentClick]);\n  React.useEffect(function () {\n    setReady(true);\n  }, []);\n  React.useEffect(function () {\n    if (reference) {\n      if (reference.current) {\n        setRefElement(reference.current);\n      } else if (typeof reference === 'function') {\n        setRefElement(reference());\n      }\n    }\n  }, [reference]);\n\n  var addEventListener = function addEventListener(listener, element, event) {\n    if (listener && element) {\n      element.addEventListener(event, listener);\n    }\n  };\n\n  var removeEventListener = function removeEventListener(listener, element, event) {\n    if (listener && element) {\n      element.removeEventListener(event, listener);\n    }\n  };\n\n  React.useEffect(function () {\n    addEventListener(onMouseEnter, refOrTrigger, 'mouseenter');\n    addEventListener(onMouseLeave, refOrTrigger, 'mouseleave');\n    addEventListener(onFocus, refOrTrigger, 'focus');\n    addEventListener(onBlur, refOrTrigger, 'blur');\n    addEventListener(onTriggerClick, refOrTrigger, 'click');\n    addEventListener(onTriggerEnter, refOrTrigger, 'keydown');\n    addEventListener(onPopperClick, popperElement, 'click');\n    addEventListener(onPopperMouseEnter, popperElement, 'mouseenter');\n    addEventListener(onPopperMouseLeave, popperElement, 'mouseleave');\n    onDocumentClick && addEventListener(onDocumentClickCallback, document, 'click');\n    addEventListener(onDocumentKeyDown, document, 'keydown'); // Trigger a Popper update when content changes.\n\n    var observer = new MutationObserver(function () {\n      update && update();\n    });\n    popperElement && observer.observe(popperElement, {\n      attributes: true,\n      childList: true,\n      subtree: true\n    });\n    return function () {\n      removeEventListener(onMouseEnter, refOrTrigger, 'mouseenter');\n      removeEventListener(onMouseLeave, refOrTrigger, 'mouseleave');\n      removeEventListener(onFocus, refOrTrigger, 'focus');\n      removeEventListener(onBlur, refOrTrigger, 'blur');\n      removeEventListener(onTriggerClick, refOrTrigger, 'click');\n      removeEventListener(onTriggerEnter, refOrTrigger, 'keydown');\n      removeEventListener(onPopperClick, popperElement, 'click');\n      removeEventListener(onPopperMouseEnter, popperElement, 'mouseenter');\n      removeEventListener(onPopperMouseLeave, popperElement, 'mouseleave');\n      onDocumentClick && removeEventListener(onDocumentClickCallback, document, 'click');\n      removeEventListener(onDocumentKeyDown, document, 'keydown');\n      observer.disconnect();\n    };\n  }, [triggerElement, popperElement, onMouseEnter, onMouseLeave, onFocus, onBlur, onTriggerClick, onTriggerEnter, onPopperClick, onPopperMouseEnter, onPopperMouseLeave, onDocumentClick, onDocumentKeyDown, refElement]);\n\n  var getPlacement = function getPlacement() {\n    if (placement) {\n      return placement;\n    }\n\n    var convertedPlacement = direction === 'up' ? 'top' : 'bottom';\n\n    if (position !== 'center') {\n      convertedPlacement = \"\".concat(convertedPlacement, \"-\").concat(position === 'right' ? 'end' : 'start');\n    }\n\n    return convertedPlacement;\n  };\n\n  var getPlacementMemo = React.useMemo(getPlacement, [direction, position, placement]);\n  var getOppositePlacementMemo = React.useMemo(function () {\n    return getOppositePlacement(getPlacement());\n  }, [direction, position, placement]);\n  var sameWidthMod = React.useMemo(function () {\n    return {\n      name: 'sameWidth',\n      enabled: popperMatchesTriggerWidth,\n      phase: 'beforeWrite',\n      requires: ['computeStyles'],\n      fn: function fn(_ref2) {\n        var state = _ref2.state;\n        state.styles.popper.width = \"\".concat(state.rects.reference.width, \"px\");\n      },\n      effect: function effect(_ref3) {\n        var state = _ref3.state;\n        state.elements.popper.style.width = \"\".concat(state.elements.reference.offsetWidth, \"px\");\n        return function () {};\n      }\n    };\n  }, [popperMatchesTriggerWidth]);\n\n  var _usePopper = usePopper(refOrTrigger, popperElement, {\n    placement: getPlacementMemo,\n    modifiers: [{\n      name: 'offset',\n      options: {\n        offset: [0, distance]\n      }\n    }, {\n      name: 'preventOverflow',\n      enabled: false\n    }, {\n      // adds attribute [data-popper-reference-hidden] to the popper element which can be used to hide it using CSS\n      name: 'hide',\n      enabled: true\n    }, {\n      name: 'flip',\n      enabled: getPlacementMemo.startsWith('auto') || enableFlip,\n      options: {\n        fallbackPlacements: flipBehavior === 'flip' ? [getOppositePlacementMemo] : flipBehavior\n      }\n    }, sameWidthMod]\n  }),\n      popperStyles = _usePopper.styles,\n      attributes = _usePopper.attributes,\n      update = _usePopper.update; // Returns the CSS modifier class in order to place the Popper's arrow properly\n  // Depends on the position of the Popper relative to the reference element\n\n\n  var modifierFromPopperPosition = function modifierFromPopperPosition() {\n    if (attributes && attributes.popper && attributes.popper['data-popper-placement']) {\n      var popperPlacement = attributes.popper['data-popper-placement'];\n      return positionModifiers[popperPlacement];\n    }\n\n    return positionModifiers.top;\n  };\n\n  var menuWithPopper = React.cloneElement(popper, Object.assign({\n    className: css(popper.props && popper.props.className, positionModifiers && modifierFromPopperPosition()),\n    style: Object.assign(Object.assign(Object.assign({}, popper.props && popper.props.style || {}), popperStyles.popper), {\n      zIndex: zIndex\n    })\n  }, attributes.popper));\n\n  var getTarget = function getTarget() {\n    if (typeof appendTo === 'function') {\n      return appendTo();\n    }\n\n    return appendTo;\n  };\n\n  return React.createElement(React.Fragment, null, !reference && trigger && React.createElement(FindRefWrapper, {\n    onFoundRef: function onFoundRef(foundRef) {\n      return setTriggerElement(foundRef);\n    }\n  }, trigger), ready && isVisible && ReactDOM.createPortal(React.createElement(FindRefWrapper, {\n    onFoundRef: function onFoundRef(foundRef) {\n      return setPopperElement(foundRef);\n    }\n  }, menuWithPopper), getTarget()));\n};\nPopper.displayName = 'Popper';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/helpers/Popper/Popper.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { FindRefWrapper } from './FindRefWrapper';\nimport { usePopper } from './thirdparty/react-popper/usePopper';\nimport { Placement, BasePlacement, Modifier } from './thirdparty/popper-core';\nimport { css } from '@patternfly/react-styles';\nimport '@patternfly/react-styles/css/components/Popper/Popper.css';\n\nconst hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n\nconst getOppositePlacement = (placement: Placement): any =>\n  placement.replace(\n    /left|right|bottom|top/g,\n    (matched: string) => hash[matched as 'left' | 'right' | 'bottom' | 'top'] as BasePlacement\n  );\n\n/** @deprecated Please use the menuAppendTo prop directly from within the PF component which uses it. */\nexport interface ToggleMenuBaseProps {\n  /** The container to append the menu to. Defaults to 'inline'\n   * If your menu is being cut off you can append it to an element higher up the DOM tree.\n   * Some examples:\n   * menuAppendTo=\"parent\"\n   * menuAppendTo={() => document.body}\n   * menuAppendTo={document.getElementById('target')}\n   */\n  menuAppendTo?: HTMLElement | (() => HTMLElement) | 'parent' | 'inline';\n}\n\nexport const getOpacityTransition = (animationDuration: number) =>\n  `opacity ${animationDuration}ms cubic-bezier(.54, 1.5, .38, 1.11)`;\n\nexport interface PopperProps {\n  /**\n   * The reference element to which the Popover is relatively placed to.\n   * Use either trigger or reference, not both.\n   */\n  trigger?: React.ReactNode;\n  /**\n   * The reference element to which the Popover is relatively placed to.\n   * Use either trigger or reference, not both.\n   */\n  reference?: HTMLElement | (() => HTMLElement) | React.RefObject<any>;\n  /** The popper (menu/tooltip/popover) element */\n  popper: React.ReactElement;\n  /** True to set the width of the popper element to the trigger element's width */\n  popperMatchesTriggerWidth?: boolean;\n  /** popper direction */\n  direction?: 'up' | 'down';\n  /** popper position */\n  position?: 'right' | 'left' | 'center';\n  /** Instead of direction and position can set the placement of the popper */\n  placement?: Placement;\n  /** The container to append the popper to. Defaults to 'document.body' */\n  appendTo?: HTMLElement | (() => HTMLElement);\n  /** z-index of the popper element */\n  zIndex?: number;\n  /** True to make the popper visible */\n  isVisible?: boolean;\n  /**\n   * Map class names to positions, for example:\n   * {\n   *   top: styles.modifiers.top,\n   *   bottom: styles.modifiers.bottom,\n   *   left: styles.modifiers.left,\n   *   right: styles.modifiers.right\n   * }\n   */\n  positionModifiers?: {\n    top?: string;\n    right?: string;\n    bottom?: string;\n    left?: string;\n    topStart?: string;\n    topEnd?: string;\n    bottomStart?: string;\n    bottomEnd?: string;\n    leftStart?: string;\n    leftEnd?: string;\n    rightStart?: string;\n    rightEnd?: string;\n  };\n  /** Distance of the popper to the trigger */\n  distance?: number;\n  /** Callback function when mouse enters trigger */\n  onMouseEnter?: (event?: MouseEvent) => void;\n  /** Callback function when mouse leaves trigger */\n  onMouseLeave?: (event?: MouseEvent) => void;\n  /** Callback function when trigger is focused */\n  onFocus?: (event?: FocusEvent) => void;\n  /** Callback function when trigger is blurred (focus leaves) */\n  onBlur?: (event?: FocusEvent) => void;\n  /** Callback function when trigger is clicked */\n  onTriggerClick?: (event?: MouseEvent) => void;\n  /** Callback function when Enter key is used on trigger */\n  onTriggerEnter?: (event?: KeyboardEvent) => void;\n  /** Callback function when popper is clicked */\n  onPopperClick?: (event?: MouseEvent) => void;\n  /** Callback function when mouse enters popper content */\n  onPopperMouseEnter?: (event?: MouseEvent) => void;\n  /** Callback function when mouse leaves popper content */\n  onPopperMouseLeave?: (event?: MouseEvent) => void;\n  /** Callback function when document is clicked */\n  onDocumentClick?: (event?: MouseEvent, triggerElement?: HTMLElement, popperElement?: HTMLElement) => void;\n  /** Callback function when keydown event occurs on document */\n  onDocumentKeyDown?: (event?: KeyboardEvent) => void;\n  /** Enable to flip the popper when it reaches the boundary */\n  enableFlip?: boolean;\n  /** The behavior of how the popper flips when it reaches the boundary */\n  flipBehavior?:\n    | 'flip'\n    | (\n        | 'top'\n        | 'bottom'\n        | 'left'\n        | 'right'\n        | 'top-start'\n        | 'top-end'\n        | 'bottom-start'\n        | 'bottom-end'\n        | 'left-start'\n        | 'left-end'\n        | 'right-start'\n        | 'right-end'\n      )[];\n}\n\nexport const Popper: React.FunctionComponent<PopperProps> = ({\n  trigger,\n  popper,\n  popperMatchesTriggerWidth = true,\n  direction = 'down',\n  position = 'left',\n  placement,\n  appendTo = () => document.body,\n  zIndex = 9999,\n  isVisible = true,\n  positionModifiers,\n  distance = 0,\n  onMouseEnter,\n  onMouseLeave,\n  onFocus,\n  onBlur,\n  onDocumentClick,\n  onTriggerClick,\n  onTriggerEnter,\n  onPopperClick,\n  onPopperMouseEnter,\n  onPopperMouseLeave,\n  onDocumentKeyDown,\n  enableFlip = true,\n  flipBehavior = 'flip',\n  reference\n}) => {\n  const [triggerElement, setTriggerElement] = React.useState(null);\n  const [refElement, setRefElement] = React.useState<HTMLElement>(null);\n  const [popperElement, setPopperElement] = React.useState(null);\n  const [ready, setReady] = React.useState(false);\n  const refOrTrigger = refElement || triggerElement;\n  const onDocumentClickCallback = React.useCallback(\n    (event: MouseEvent) => onDocumentClick(event, refOrTrigger, popperElement),\n    [isVisible, triggerElement, refElement, popperElement, onDocumentClick]\n  );\n\n  React.useEffect(() => {\n    setReady(true);\n  }, []);\n  React.useEffect(() => {\n    if (reference) {\n      if ((reference as React.RefObject<any>).current) {\n        setRefElement((reference as React.RefObject<any>).current);\n      } else if (typeof reference === 'function') {\n        setRefElement(reference());\n      }\n    }\n  }, [reference]);\n  const addEventListener = (listener: any, element: Document | HTMLElement, event: string) => {\n    if (listener && element) {\n      element.addEventListener(event, listener);\n    }\n  };\n  const removeEventListener = (listener: any, element: Document | HTMLElement, event: string) => {\n    if (listener && element) {\n      element.removeEventListener(event, listener);\n    }\n  };\n\n  React.useEffect(() => {\n    addEventListener(onMouseEnter, refOrTrigger, 'mouseenter');\n    addEventListener(onMouseLeave, refOrTrigger, 'mouseleave');\n    addEventListener(onFocus, refOrTrigger, 'focus');\n    addEventListener(onBlur, refOrTrigger, 'blur');\n    addEventListener(onTriggerClick, refOrTrigger, 'click');\n    addEventListener(onTriggerEnter, refOrTrigger, 'keydown');\n    addEventListener(onPopperClick, popperElement, 'click');\n    addEventListener(onPopperMouseEnter, popperElement, 'mouseenter');\n    addEventListener(onPopperMouseLeave, popperElement, 'mouseleave');\n    onDocumentClick && addEventListener(onDocumentClickCallback, document, 'click');\n    addEventListener(onDocumentKeyDown, document, 'keydown');\n\n    // Trigger a Popper update when content changes.\n    const observer = new MutationObserver(() => {\n      update && update();\n    });\n    popperElement && observer.observe(popperElement, { attributes: true, childList: true, subtree: true });\n\n    return () => {\n      removeEventListener(onMouseEnter, refOrTrigger, 'mouseenter');\n      removeEventListener(onMouseLeave, refOrTrigger, 'mouseleave');\n      removeEventListener(onFocus, refOrTrigger, 'focus');\n      removeEventListener(onBlur, refOrTrigger, 'blur');\n      removeEventListener(onTriggerClick, refOrTrigger, 'click');\n      removeEventListener(onTriggerEnter, refOrTrigger, 'keydown');\n      removeEventListener(onPopperClick, popperElement, 'click');\n      removeEventListener(onPopperMouseEnter, popperElement, 'mouseenter');\n      removeEventListener(onPopperMouseLeave, popperElement, 'mouseleave');\n      onDocumentClick && removeEventListener(onDocumentClickCallback, document, 'click');\n      removeEventListener(onDocumentKeyDown, document, 'keydown');\n      observer.disconnect();\n    };\n  }, [\n    triggerElement,\n    popperElement,\n    onMouseEnter,\n    onMouseLeave,\n    onFocus,\n    onBlur,\n    onTriggerClick,\n    onTriggerEnter,\n    onPopperClick,\n    onPopperMouseEnter,\n    onPopperMouseLeave,\n    onDocumentClick,\n    onDocumentKeyDown,\n    refElement\n  ]);\n  const getPlacement = () => {\n    if (placement) {\n      return placement;\n    }\n    let convertedPlacement = direction === 'up' ? 'top' : 'bottom';\n    if (position !== 'center') {\n      convertedPlacement = `${convertedPlacement}-${position === 'right' ? 'end' : 'start'}`;\n    }\n    return convertedPlacement as Placement;\n  };\n  const getPlacementMemo = React.useMemo(getPlacement, [direction, position, placement]);\n  const getOppositePlacementMemo = React.useMemo(() => getOppositePlacement(getPlacement()), [\n    direction,\n    position,\n    placement\n  ]);\n  const sameWidthMod: Modifier<'sameWidth', {}> = React.useMemo(\n    () => ({\n      name: 'sameWidth',\n      enabled: popperMatchesTriggerWidth,\n      phase: 'beforeWrite',\n      requires: ['computeStyles'],\n      fn: ({ state }) => {\n        state.styles.popper.width = `${state.rects.reference.width}px`;\n      },\n      effect: ({ state }) => {\n        state.elements.popper.style.width = `${(state.elements.reference as HTMLElement).offsetWidth}px`;\n        return () => {};\n      }\n    }),\n    [popperMatchesTriggerWidth]\n  );\n\n  const { styles: popperStyles, attributes, update } = usePopper(refOrTrigger, popperElement, {\n    placement: getPlacementMemo,\n    modifiers: [\n      {\n        name: 'offset',\n        options: {\n          offset: [0, distance]\n        }\n      },\n      {\n        name: 'preventOverflow',\n        enabled: false\n      },\n      {\n        // adds attribute [data-popper-reference-hidden] to the popper element which can be used to hide it using CSS\n        name: 'hide',\n        enabled: true\n      },\n      {\n        name: 'flip',\n        enabled: getPlacementMemo.startsWith('auto') || enableFlip,\n        options: {\n          fallbackPlacements: flipBehavior === 'flip' ? [getOppositePlacementMemo] : flipBehavior\n        }\n      },\n      sameWidthMod\n    ]\n  });\n\n  // Returns the CSS modifier class in order to place the Popper's arrow properly\n  // Depends on the position of the Popper relative to the reference element\n  const modifierFromPopperPosition = () => {\n    if (attributes && attributes.popper && attributes.popper['data-popper-placement']) {\n      const popperPlacement = attributes.popper['data-popper-placement'] as keyof typeof positionModifiers;\n      return positionModifiers[popperPlacement];\n    }\n    return positionModifiers.top;\n  };\n\n  const menuWithPopper = React.cloneElement(popper, {\n    className: css(popper.props && popper.props.className, positionModifiers && modifierFromPopperPosition()),\n    style: {\n      ...((popper.props && popper.props.style) || {}),\n      ...popperStyles.popper,\n      zIndex\n    },\n    ...attributes.popper\n  });\n\n  const getTarget: () => HTMLElement = () => {\n    if (typeof appendTo === 'function') {\n      return appendTo();\n    }\n    return appendTo;\n  };\n\n  return (\n    <>\n      {!reference && trigger && (\n        <FindRefWrapper onFoundRef={(foundRef: any) => setTriggerElement(foundRef)}>{trigger}</FindRefWrapper>\n      )}\n      {ready &&\n        isVisible &&\n        ReactDOM.createPortal(\n          <FindRefWrapper onFoundRef={(foundRef: any) => setPopperElement(foundRef)}>{menuWithPopper}</FindRefWrapper>,\n          getTarget()\n        )}\n    </>\n  );\n};\nPopper.displayName = 'Popper';\n"]},"metadata":{},"sourceType":"module"}