{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useCallback,useEffect}from'react';import{useLocation,useRouteMatch}from'react-router-dom';import{Card,PageSection}from'@patternfly/react-core';import{NotificationTemplatesAPI}from'api';import PaginatedTable,{HeaderRow,HeaderCell,ToolbarAddButton,ToolbarDeleteButton,getSearchableKeys}from'components/PaginatedTable';import AlertModal from'components/AlertModal';import ErrorDetail from'components/ErrorDetail';import DataListToolbar from'components/DataListToolbar';import useRequest,{useDeleteItems}from'hooks/useRequest';import useSelected from'hooks/useSelected';import useToast,{AlertVariant}from'hooks/useToast';import{getQSConfig,parseQueryString}from'util/qs';import NotificationTemplateListItem from'./NotificationTemplateListItem';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var QS_CONFIG=getQSConfig('notification-templates',{page:1,page_size:20,order_by:'name'});function NotificationTemplatesList(){var location=useLocation();var match=useRouteMatch();// const [testToasts, setTestToasts] = useState([]);\nvar _useToast=useToast(),addToast=_useToast.addToast,Toast=_useToast.Toast,toastProps=_useToast.toastProps;var addUrl=\"\".concat(match.url,\"/add\");var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _actionsResponse$data,_actionsResponse$data2;var params,_yield$Promise$all,_yield$Promise$all2,response,actionsResponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:params=parseQueryString(QS_CONFIG,location.search);_context.next=3;return Promise.all([NotificationTemplatesAPI.read(params),NotificationTemplatesAPI.readOptions()]);case 3:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);response=_yield$Promise$all2[0];actionsResponse=_yield$Promise$all2[1];return _context.abrupt(\"return\",{templates:response.data.results,count:response.data.count,actions:actionsResponse.data.actions,relatedSearchableKeys:(((_actionsResponse$data=actionsResponse.data)===null||_actionsResponse$data===void 0?void 0:_actionsResponse$data.related_search_fields)||[]).map(function(val){return val.slice(0,-8);}),searchableKeys:getSearchableKeys((_actionsResponse$data2=actionsResponse.data.actions)===null||_actionsResponse$data2===void 0?void 0:_actionsResponse$data2.GET)});case 8:case\"end\":return _context.stop();}}},_callee);})),[location]),{templates:[],count:0,actions:{},relatedSearchableKeys:[],searchableKeys:[]}),_useRequest$result=_useRequest.result,templates=_useRequest$result.templates,count=_useRequest$result.count,actions=_useRequest$result.actions,relatedSearchableKeys=_useRequest$result.relatedSearchableKeys,searchableKeys=_useRequest$result.searchableKeys,contentError=_useRequest.error,isTemplatesLoading=_useRequest.isLoading,fetchTemplates=_useRequest.request;useEffect(function(){fetchTemplates();},[fetchTemplates]);var _useSelected=useSelected(templates),selected=_useSelected.selected,isAllSelected=_useSelected.isAllSelected,handleSelect=_useSelected.handleSelect,clearSelected=_useSelected.clearSelected,selectAll=_useSelected.selectAll;var _useDeleteItems=useDeleteItems(useCallback(function(){return Promise.all(selected.map(function(_ref2){var id=_ref2.id;return NotificationTemplatesAPI.destroy(id);}));},[selected]),{qsConfig:QS_CONFIG,allItemsSelected:isAllSelected,fetchItems:fetchTemplates}),isDeleteLoading=_useDeleteItems.isLoading,deleteTemplates=_useDeleteItems.deleteItems,deletionError=_useDeleteItems.deletionError,clearDeletionError=_useDeleteItems.clearDeletionError;var handleDelete=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return deleteTemplates();case 2:clearSelected();case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function handleDelete(){return _ref3.apply(this,arguments);};}();var canAdd=actions&&actions.POST;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(PageSection,{children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(PaginatedTable,{contentError:contentError,hasContentLoading:isTemplatesLoading||isDeleteLoading,items:templates,itemCount:count,pluralizedItemName:/*i18n*/i18n._(\"Notification Templates\"),qsConfig:QS_CONFIG,clearSelected:clearSelected,toolbarSearchColumns:[{name:/*i18n*/i18n._(\"Name\"),key:'name',isDefault:true},{name:/*i18n*/i18n._(\"Description\"),key:'description__icontains'},{name:/*i18n*/i18n._(\"Notification type\"),key:'or__notification_type',options:[['email',/*i18n*/i18n._(\"Email\")],['grafana',/*i18n*/i18n._(\"Grafana\")],['hipchat',/*i18n*/i18n._(\"Hipchat\")],['irc',/*i18n*/i18n._(\"IRC\")],['mattermost',/*i18n*/i18n._(\"Mattermost\")],['pagerduty',/*i18n*/i18n._(\"Pagerduty\")],['rocketchat',/*i18n*/i18n._(\"Rocket.Chat\")],['slack',/*i18n*/i18n._(\"Slack\")],['twilio',/*i18n*/i18n._(\"Twilio\")],['webhook',/*i18n*/i18n._(\"Webhook\")]]},{name:/*i18n*/i18n._(\"Created by (username)\"),key:'created_by__username__icontains'},{name:/*i18n*/i18n._(\"Modified by (username)\"),key:'modified_by__username__icontains'}],toolbarSearchableKeys:searchableKeys,toolbarRelatedSearchableKeys:relatedSearchableKeys,renderToolbar:function renderToolbar(props){return/*#__PURE__*/_jsx(DataListToolbar,_objectSpread(_objectSpread({},props),{},{isAllSelected:isAllSelected,onSelectAll:selectAll,qsConfig:QS_CONFIG,additionalControls:[].concat(_toConsumableArray(canAdd?[/*#__PURE__*/_jsx(ToolbarAddButton,{linkTo:addUrl},\"add\")]:[]),[/*#__PURE__*/_jsx(ToolbarDeleteButton,{onDelete:handleDelete,itemsToDelete:selected,pluralizedItemName:/*i18n*/i18n._(\"Notification Templates\")},\"delete\")])}));},headerRow:/*#__PURE__*/_jsxs(HeaderRow,{qsConfig:QS_CONFIG,children:[/*#__PURE__*/_jsx(HeaderCell,{sortKey:\"name\",children:/*i18n*/i18n._(\"Name\")}),/*#__PURE__*/_jsx(HeaderCell,{children:/*i18n*/i18n._(\"Status\")}),/*#__PURE__*/_jsx(HeaderCell,{sortKey:\"notification_type\",children:/*i18n*/i18n._(\"Type\")}),/*#__PURE__*/_jsx(HeaderCell,{children:/*i18n*/i18n._(\"Actions\")})]}),renderRow:function renderRow(template,index){return/*#__PURE__*/_jsx(NotificationTemplateListItem,{onAddToast:function onAddToast(notification){if(notification.status==='pending'){return;}var message;if(notification.status==='successful'){message=/*i18n*/i18n._(\"Notification sent successfully\");}if(notification.status==='failed'){if((notification===null||notification===void 0?void 0:notification.error)==='timed out'){message=/*i18n*/i18n._(\"Notification timed out\");}else{message=notification.error;}}addToast({id:notification.id,title:notification.summary_fields.notification_template.name,variant:notification.status==='failed'?AlertVariant.danger:AlertVariant.success,hasTimeout:notification.status!=='failed',message:message});},fetchTemplates:fetchTemplates,template:template,detailUrl:\"\".concat(match.url,\"/\").concat(template.id),isSelected:selected.some(function(row){return row.id===template.id;}),onSelect:function onSelect(){return handleSelect(template);},rowIndex:index},template.id);},emptyStateControls:canAdd?/*#__PURE__*/_jsx(ToolbarAddButton,{linkTo:addUrl},\"add\"):null})})}),/*#__PURE__*/_jsxs(AlertModal,{isOpen:deletionError,variant:\"error\",title:/*i18n*/i18n._(\"Error!\"),onClose:clearDeletionError,children:[/*i18n*/i18n._(\"Failed to delete one or more notification template.\"),/*#__PURE__*/_jsx(ErrorDetail,{error:deletionError})]}),/*#__PURE__*/_jsx(Toast,_objectSpread({},toastProps))]});}export default NotificationTemplatesList;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/NotificationTemplate/NotificationTemplateList/NotificationTemplateList.js"],"names":["React","useCallback","useEffect","useLocation","useRouteMatch","Card","PageSection","NotificationTemplatesAPI","PaginatedTable","HeaderRow","HeaderCell","ToolbarAddButton","ToolbarDeleteButton","getSearchableKeys","AlertModal","ErrorDetail","DataListToolbar","useRequest","useDeleteItems","useSelected","useToast","AlertVariant","getQSConfig","parseQueryString","NotificationTemplateListItem","QS_CONFIG","page","page_size","order_by","NotificationTemplatesList","location","match","addToast","Toast","toastProps","addUrl","url","params","search","Promise","all","read","readOptions","response","actionsResponse","templates","data","results","count","actions","relatedSearchableKeys","related_search_fields","map","val","slice","searchableKeys","GET","result","contentError","error","isTemplatesLoading","isLoading","fetchTemplates","request","selected","isAllSelected","handleSelect","clearSelected","selectAll","id","destroy","qsConfig","allItemsSelected","fetchItems","isDeleteLoading","deleteTemplates","deleteItems","deletionError","clearDeletionError","handleDelete","canAdd","POST","name","key","isDefault","options","props","template","index","notification","status","message","title","summary_fields","notification_template","variant","danger","success","hasTimeout","some","row"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport { useLocation, useRouteMatch } from 'react-router-dom';\n\nimport { t } from '@lingui/macro';\nimport { Card, PageSection } from '@patternfly/react-core';\nimport { NotificationTemplatesAPI } from 'api';\nimport PaginatedTable, {\n  HeaderRow,\n  HeaderCell,\n  ToolbarAddButton,\n  ToolbarDeleteButton,\n  getSearchableKeys,\n} from 'components/PaginatedTable';\nimport AlertModal from 'components/AlertModal';\nimport ErrorDetail from 'components/ErrorDetail';\nimport DataListToolbar from 'components/DataListToolbar';\nimport useRequest, { useDeleteItems } from 'hooks/useRequest';\nimport useSelected from 'hooks/useSelected';\nimport useToast, { AlertVariant } from 'hooks/useToast';\nimport { getQSConfig, parseQueryString } from 'util/qs';\nimport NotificationTemplateListItem from './NotificationTemplateListItem';\n\nconst QS_CONFIG = getQSConfig('notification-templates', {\n  page: 1,\n  page_size: 20,\n  order_by: 'name',\n});\n\nfunction NotificationTemplatesList() {\n  const location = useLocation();\n  const match = useRouteMatch();\n  // const [testToasts, setTestToasts] = useState([]);\n  const { addToast, Toast, toastProps } = useToast();\n\n  const addUrl = `${match.url}/add`;\n\n  const {\n    result: {\n      templates,\n      count,\n      actions,\n      relatedSearchableKeys,\n      searchableKeys,\n    },\n    error: contentError,\n    isLoading: isTemplatesLoading,\n    request: fetchTemplates,\n  } = useRequest(\n    useCallback(async () => {\n      const params = parseQueryString(QS_CONFIG, location.search);\n      const [response, actionsResponse] = await Promise.all([\n        NotificationTemplatesAPI.read(params),\n        NotificationTemplatesAPI.readOptions(),\n      ]);\n      return {\n        templates: response.data.results,\n        count: response.data.count,\n        actions: actionsResponse.data.actions,\n        relatedSearchableKeys: (\n          actionsResponse.data?.related_search_fields || []\n        ).map((val) => val.slice(0, -8)),\n        searchableKeys: getSearchableKeys(actionsResponse.data.actions?.GET),\n      };\n    }, [location]),\n    {\n      templates: [],\n      count: 0,\n      actions: {},\n      relatedSearchableKeys: [],\n      searchableKeys: [],\n    }\n  );\n\n  useEffect(() => {\n    fetchTemplates();\n  }, [fetchTemplates]);\n\n  const { selected, isAllSelected, handleSelect, clearSelected, selectAll } =\n    useSelected(templates);\n\n  const {\n    isLoading: isDeleteLoading,\n    deleteItems: deleteTemplates,\n    deletionError,\n    clearDeletionError,\n  } = useDeleteItems(\n    useCallback(\n      () =>\n        Promise.all(\n          selected.map(({ id }) => NotificationTemplatesAPI.destroy(id))\n        ),\n      [selected]\n    ),\n    {\n      qsConfig: QS_CONFIG,\n      allItemsSelected: isAllSelected,\n      fetchItems: fetchTemplates,\n    }\n  );\n\n  const handleDelete = async () => {\n    await deleteTemplates();\n    clearSelected();\n  };\n\n  const canAdd = actions && actions.POST;\n\n  return (\n    <>\n      <PageSection>\n        <Card>\n          <PaginatedTable\n            contentError={contentError}\n            hasContentLoading={isTemplatesLoading || isDeleteLoading}\n            items={templates}\n            itemCount={count}\n            pluralizedItemName={t`Notification Templates`}\n            qsConfig={QS_CONFIG}\n            clearSelected={clearSelected}\n            toolbarSearchColumns={[\n              {\n                name: t`Name`,\n                key: 'name',\n                isDefault: true,\n              },\n              {\n                name: t`Description`,\n                key: 'description__icontains',\n              },\n              {\n                name: t`Notification type`,\n                key: 'or__notification_type',\n                options: [\n                  ['email', t`Email`],\n                  ['grafana', t`Grafana`],\n                  ['hipchat', t`Hipchat`],\n                  ['irc', t`IRC`],\n                  ['mattermost', t`Mattermost`],\n                  ['pagerduty', t`Pagerduty`],\n                  ['rocketchat', t`Rocket.Chat`],\n                  ['slack', t`Slack`],\n                  ['twilio', t`Twilio`],\n                  ['webhook', t`Webhook`],\n                ],\n              },\n              {\n                name: t`Created by (username)`,\n                key: 'created_by__username__icontains',\n              },\n              {\n                name: t`Modified by (username)`,\n                key: 'modified_by__username__icontains',\n              },\n            ]}\n            toolbarSearchableKeys={searchableKeys}\n            toolbarRelatedSearchableKeys={relatedSearchableKeys}\n            renderToolbar={(props) => (\n              <DataListToolbar\n                {...props}\n                isAllSelected={isAllSelected}\n                onSelectAll={selectAll}\n                qsConfig={QS_CONFIG}\n                additionalControls={[\n                  ...(canAdd\n                    ? [<ToolbarAddButton key=\"add\" linkTo={addUrl} />]\n                    : []),\n                  <ToolbarDeleteButton\n                    key=\"delete\"\n                    onDelete={handleDelete}\n                    itemsToDelete={selected}\n                    pluralizedItemName={t`Notification Templates`}\n                  />,\n                ]}\n              />\n            )}\n            headerRow={\n              <HeaderRow qsConfig={QS_CONFIG}>\n                <HeaderCell sortKey=\"name\">{t`Name`}</HeaderCell>\n                <HeaderCell>{t`Status`}</HeaderCell>\n                <HeaderCell sortKey=\"notification_type\">{t`Type`}</HeaderCell>\n                <HeaderCell>{t`Actions`}</HeaderCell>\n              </HeaderRow>\n            }\n            renderRow={(template, index) => (\n              <NotificationTemplateListItem\n                onAddToast={(notification) => {\n                  if (notification.status === 'pending') {\n                    return;\n                  }\n\n                  let message;\n                  if (notification.status === 'successful') {\n                    message = t`Notification sent successfully`;\n                  }\n                  if (notification.status === 'failed') {\n                    if (notification?.error === 'timed out') {\n                      message = t`Notification timed out`;\n                    } else {\n                      message = notification.error;\n                    }\n                  }\n\n                  addToast({\n                    id: notification.id,\n                    title:\n                      notification.summary_fields.notification_template.name,\n                    variant:\n                      notification.status === 'failed'\n                        ? AlertVariant.danger\n                        : AlertVariant.success,\n                    hasTimeout: notification.status !== 'failed',\n                    message,\n                  });\n                }}\n                key={template.id}\n                fetchTemplates={fetchTemplates}\n                template={template}\n                detailUrl={`${match.url}/${template.id}`}\n                isSelected={selected.some((row) => row.id === template.id)}\n                onSelect={() => handleSelect(template)}\n                rowIndex={index}\n              />\n            )}\n            emptyStateControls={\n              canAdd ? <ToolbarAddButton key=\"add\" linkTo={addUrl} /> : null\n            }\n          />\n        </Card>\n      </PageSection>\n      <AlertModal\n        isOpen={deletionError}\n        variant=\"error\"\n        title={t`Error!`}\n        onClose={clearDeletionError}\n      >\n        {t`Failed to delete one or more notification template.`}\n        <ErrorDetail error={deletionError} />\n      </AlertModal>\n      <Toast {...toastProps} />\n    </>\n  );\n}\n\nexport default NotificationTemplatesList;\n"]},"metadata":{},"sourceType":"module"}