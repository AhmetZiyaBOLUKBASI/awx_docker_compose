{"ast":null,"code":"import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState}from'react';import{useParams,useHistory}from'react-router-dom';import{GroupsAPI}from'api';import InventoryGroupForm from'../shared/InventoryGroupForm';import{jsx as _jsx}from\"react/jsx-runtime\";function InventoryGroupEdit(_ref){var inventoryGroup=_ref.inventoryGroup;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var _useParams=useParams(),id=_useParams.id,groupId=_useParams.groupId;var history=useHistory();var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return GroupsAPI.update(groupId,values);case 3:history.push(\"/inventories/inventory/\".concat(id,\"/groups/\").concat(groupId,\"/details\"));_context.next=9;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](0);setError(_context.t0);case 9:case\"end\":return _context.stop();}}},_callee,null,[[0,6]]);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleCancel=function handleCancel(){history.push(\"/inventories/inventory/\".concat(id,\"/groups/\").concat(groupId));};return/*#__PURE__*/_jsx(InventoryGroupForm,{error:error,group:inventoryGroup,handleCancel:handleCancel,handleSubmit:handleSubmit});}export default InventoryGroupEdit;export{InventoryGroupEdit as _InventoryGroupEdit};","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Inventory/InventoryGroupEdit/InventoryGroupEdit.js"],"names":["React","useState","useParams","useHistory","GroupsAPI","InventoryGroupForm","InventoryGroupEdit","inventoryGroup","error","setError","id","groupId","history","handleSubmit","values","update","push","handleCancel","_InventoryGroupEdit"],"mappings":"wTAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAASC,SAAT,CAAoBC,UAApB,KAAsC,kBAAtC,CACA,OAASC,SAAT,KAA0B,KAA1B,CAEA,MAAOC,CAAAA,kBAAP,KAA+B,8BAA/B,C,2CAEA,QAASC,CAAAA,kBAAT,MAAgD,IAAlBC,CAAAA,cAAkB,MAAlBA,cAAkB,CAC9C,cAA0BN,QAAQ,CAAC,IAAD,CAAlC,wCAAOO,KAAP,eAAcC,QAAd,eACA,eAAwBP,SAAS,EAAjC,CAAQQ,EAAR,YAAQA,EAAR,CAAYC,OAAZ,YAAYA,OAAZ,CACA,GAAMC,CAAAA,OAAO,CAAGT,UAAU,EAA1B,CAEA,GAAMU,CAAAA,YAAY,2FAAG,iBAAOC,MAAP,wJAEXV,CAAAA,SAAS,CAACW,MAAV,CAAiBJ,OAAjB,CAA0BG,MAA1B,CAFW,QAGjBF,OAAO,CAACI,IAAR,kCAAuCN,EAAvC,oBAAoDC,OAApD,cAHiB,8EAKjBF,QAAQ,aAAR,CALiB,mEAAH,kBAAZI,CAAAA,YAAY,6CAAlB,CASA,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBL,OAAO,CAACI,IAAR,kCAAuCN,EAAvC,oBAAoDC,OAApD,GACD,CAFD,CAIA,mBACE,KAAC,kBAAD,EACE,KAAK,CAAEH,KADT,CAEE,KAAK,CAAED,cAFT,CAGE,YAAY,CAAEU,YAHhB,CAIE,YAAY,CAAEJ,YAJhB,EADF,CAQD,CACD,cAAeP,CAAAA,kBAAf,CACA,OAASA,kBAAkB,GAAIY,CAAAA,mBAA/B","sourcesContent":["import React, { useState } from 'react';\n\nimport { useParams, useHistory } from 'react-router-dom';\nimport { GroupsAPI } from 'api';\n\nimport InventoryGroupForm from '../shared/InventoryGroupForm';\n\nfunction InventoryGroupEdit({ inventoryGroup }) {\n  const [error, setError] = useState(null);\n  const { id, groupId } = useParams();\n  const history = useHistory();\n\n  const handleSubmit = async (values) => {\n    try {\n      await GroupsAPI.update(groupId, values);\n      history.push(`/inventories/inventory/${id}/groups/${groupId}/details`);\n    } catch (err) {\n      setError(err);\n    }\n  };\n\n  const handleCancel = () => {\n    history.push(`/inventories/inventory/${id}/groups/${groupId}`);\n  };\n\n  return (\n    <InventoryGroupForm\n      error={error}\n      group={inventoryGroup}\n      handleCancel={handleCancel}\n      handleSubmit={handleSubmit}\n    />\n  );\n}\nexport default InventoryGroupEdit;\nexport { InventoryGroupEdit as _InventoryGroupEdit };\n"]},"metadata":{},"sourceType":"module"}