{"ast":null,"code":"import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _styled from\"styled-components\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useState,useEffect,useCallback}from'react';import{Switch,Tooltip}from'@patternfly/react-core';import useRequest from'hooks/useRequest';import{SchedulesAPI}from'api';import AlertModal from'../../AlertModal';import ErrorDetail from'../../ErrorDetail';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var _StyledSwitch=_styled(Switch).withConfig({displayName:\"ScheduleToggle___StyledSwitch\",componentId:\"sc-1htabee-0\"})([\"display:inline-flex;\"]);function ScheduleToggle(_ref){var schedule=_ref.schedule,onToggle=_ref.onToggle,className=_ref.className,isDisabled=_ref.isDisabled;var _useState=useState(schedule.enabled),_useState2=_slicedToArray(_useState,2),isEnabled=_useState2[0],setIsEnabled=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showError=_useState4[0],setShowError=_useState4[1];var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return SchedulesAPI.update(schedule.id,{enabled:!isEnabled});case 2:return _context.abrupt(\"return\",!isEnabled);case 3:case\"end\":return _context.stop();}}},_callee);})),[schedule,isEnabled]),schedule.enabled),result=_useRequest.result,isLoading=_useRequest.isLoading,error=_useRequest.error,toggleSchedule=_useRequest.request;useEffect(function(){if(result!==isEnabled){setIsEnabled(result);if(onToggle){onToggle(result);}}},[result,isEnabled,onToggle]);useEffect(function(){if(error){setShowError(true);}},[error]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Tooltip,{content:schedule.enabled?/*i18n*/i18n._(\"Schedule is active\"):/*i18n*/i18n._(\"Schedule is inactive\"),position:\"top\",children:/*#__PURE__*/_jsx(_StyledSwitch,{className:className,id:\"schedule-\".concat(schedule.id,\"-toggle\"),label:/*i18n*/i18n._(\"On\"),labelOff:/*i18n*/i18n._(\"Off\"),isChecked:isEnabled,isDisabled:isLoading||!schedule.summary_fields.user_capabilities.edit||isDisabled,onChange:toggleSchedule,\"aria-label\":/*i18n*/i18n._(\"Toggle schedule\"),ouiaId:\"schedule-\".concat(schedule.id,\"-toggle\")})}),showError&&error&&!isLoading&&/*#__PURE__*/_jsxs(AlertModal,{variant:\"error\",title:/*i18n*/i18n._(\"Error!\"),isOpen:error&&!isLoading,onClose:function onClose(){return setShowError(false);},children:[/*i18n*/i18n._(\"Failed to toggle schedule.\"),/*#__PURE__*/_jsx(ErrorDetail,{error:error})]})]});}export default ScheduleToggle;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/Schedule/ScheduleToggle/ScheduleToggle.js"],"names":["React","useState","useEffect","useCallback","Switch","Tooltip","useRequest","SchedulesAPI","AlertModal","ErrorDetail","ScheduleToggle","schedule","onToggle","className","isDisabled","enabled","isEnabled","setIsEnabled","showError","setShowError","update","id","result","isLoading","error","toggleSchedule","request","summary_fields","user_capabilities","edit"],"mappings":"8XACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,WAArC,KAAwD,OAAxD,CAGA,OAASC,MAAT,CAAiBC,OAAjB,KAAgC,wBAAhC,CACA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CACA,OAASC,YAAT,KAA6B,KAA7B,CACA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,mBAAxB,C,8RAEA,QAASC,CAAAA,cAAT,MAAuE,IAA7CC,CAAAA,QAA6C,MAA7CA,QAA6C,CAAnCC,QAAmC,MAAnCA,QAAmC,CAAzBC,SAAyB,MAAzBA,SAAyB,CAAdC,UAAc,MAAdA,UAAc,CACrE,cAAkCb,QAAQ,CAACU,QAAQ,CAACI,OAAV,CAA1C,wCAAOC,SAAP,eAAkBC,YAAlB,eACA,eAAkChB,QAAQ,CAAC,KAAD,CAA1C,yCAAOiB,SAAP,eAAkBC,YAAlB,eAEA,gBAKIb,UAAU,CACZH,WAAW,sEAAC,yJACJI,CAAAA,YAAY,CAACa,MAAb,CAAoBT,QAAQ,CAACU,EAA7B,CAAiC,CACrCN,OAAO,CAAE,CAACC,SAD2B,CAAjC,CADI,wCAIH,CAACA,SAJE,wDAAD,GAKR,CAACL,QAAD,CAAWK,SAAX,CALQ,CADC,CAOZL,QAAQ,CAACI,OAPG,CALd,CACEO,MADF,aACEA,MADF,CAEEC,SAFF,aAEEA,SAFF,CAGEC,KAHF,aAGEA,KAHF,CAIWC,cAJX,aAIEC,OAJF,CAeAxB,SAAS,CAAC,UAAM,CACd,GAAIoB,MAAM,GAAKN,SAAf,CAA0B,CACxBC,YAAY,CAACK,MAAD,CAAZ,CACA,GAAIV,QAAJ,CAAc,CACZA,QAAQ,CAACU,MAAD,CAAR,CACD,CACF,CACF,CAPQ,CAON,CAACA,MAAD,CAASN,SAAT,CAAoBJ,QAApB,CAPM,CAAT,CASAV,SAAS,CAAC,UAAM,CACd,GAAIsB,KAAJ,CAAW,CACTL,YAAY,CAAC,IAAD,CAAZ,CACD,CACF,CAJQ,CAIN,CAACK,KAAD,CAJM,CAAT,CAMA,mBACE,wCACE,KAAC,OAAD,EACE,OAAO,CACLb,QAAQ,CAACI,OAAT,SAAmB,4BAAnB,SAA2C,8BAF/C,CAIE,QAAQ,CAAC,KAJX,uBAME,oBACE,SAAS,CAAEF,SADb,CAGE,EAAE,oBAAcF,QAAQ,CAACU,EAAvB,WAHJ,CAIE,KAAK,SAAE,YAJT,CAKE,QAAQ,SAAE,aALZ,CAME,SAAS,CAAEL,SANb,CAOE,UAAU,CACRO,SAAS,EACT,CAACZ,QAAQ,CAACgB,cAAT,CAAwBC,iBAAxB,CAA0CC,IAD3C,EAEAf,UAVJ,CAYE,QAAQ,CAAEW,cAZZ,CAaE,qBAAY,yBAbd,CAcE,MAAM,oBAAcd,QAAQ,CAACU,EAAvB,WAdR,EANF,EADF,CAwBGH,SAAS,EAAIM,KAAb,EAAsB,CAACD,SAAvB,eACC,MAAC,UAAD,EACE,OAAO,CAAC,OADV,CAEE,KAAK,SAAE,gBAFT,CAGE,MAAM,CAAEC,KAAK,EAAI,CAACD,SAHpB,CAIE,OAAO,CAAE,yBAAMJ,CAAAA,YAAY,CAAC,KAAD,CAAlB,EAJX,mBAMG,oCANH,cAOE,KAAC,WAAD,EAAa,KAAK,CAAEK,KAApB,EAPF,GAzBJ,GADF,CAsCD,CAED,cAAed,CAAAA,cAAf","sourcesContent":["import 'styled-components/macro';\nimport React, { useState, useEffect, useCallback } from 'react';\n\nimport { t } from '@lingui/macro';\nimport { Switch, Tooltip } from '@patternfly/react-core';\nimport useRequest from 'hooks/useRequest';\nimport { SchedulesAPI } from 'api';\nimport AlertModal from '../../AlertModal';\nimport ErrorDetail from '../../ErrorDetail';\n\nfunction ScheduleToggle({ schedule, onToggle, className, isDisabled }) {\n  const [isEnabled, setIsEnabled] = useState(schedule.enabled);\n  const [showError, setShowError] = useState(false);\n\n  const {\n    result,\n    isLoading,\n    error,\n    request: toggleSchedule,\n  } = useRequest(\n    useCallback(async () => {\n      await SchedulesAPI.update(schedule.id, {\n        enabled: !isEnabled,\n      });\n      return !isEnabled;\n    }, [schedule, isEnabled]),\n    schedule.enabled\n  );\n\n  useEffect(() => {\n    if (result !== isEnabled) {\n      setIsEnabled(result);\n      if (onToggle) {\n        onToggle(result);\n      }\n    }\n  }, [result, isEnabled, onToggle]);\n\n  useEffect(() => {\n    if (error) {\n      setShowError(true);\n    }\n  }, [error]);\n\n  return (\n    <>\n      <Tooltip\n        content={\n          schedule.enabled ? t`Schedule is active` : t`Schedule is inactive`\n        }\n        position=\"top\"\n      >\n        <Switch\n          className={className}\n          css=\"display: inline-flex;\"\n          id={`schedule-${schedule.id}-toggle`}\n          label={t`On`}\n          labelOff={t`Off`}\n          isChecked={isEnabled}\n          isDisabled={\n            isLoading ||\n            !schedule.summary_fields.user_capabilities.edit ||\n            isDisabled\n          }\n          onChange={toggleSchedule}\n          aria-label={t`Toggle schedule`}\n          ouiaId={`schedule-${schedule.id}-toggle`}\n        />\n      </Tooltip>\n      {showError && error && !isLoading && (\n        <AlertModal\n          variant=\"error\"\n          title={t`Error!`}\n          isOpen={error && !isLoading}\n          onClose={() => setShowError(false)}\n        >\n          {t`Failed to toggle schedule.`}\n          <ErrorDetail error={error} />\n        </AlertModal>\n      )}\n    </>\n  );\n}\n\nexport default ScheduleToggle;\n"]},"metadata":{},"sourceType":"module"}