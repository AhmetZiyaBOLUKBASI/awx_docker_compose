{"ast":null,"code":"import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useState,useCallback}from'react';import{Link}from'react-router-dom';import{Button}from'@patternfly/react-core';import{Tr,Td}from'@patternfly/react-table';import{PencilAltIcon}from'@patternfly/react-icons';import{ActionsTd,ActionItem,TdBreakWord}from'components/PaginatedTable';import{timeOfDay}from'util/dates';import{Credential}from'types';import{CredentialsAPI}from'api';import CopyButton from'components/CopyButton';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CredentialListItem(_ref){var credential=_ref.credential,detailUrl=_ref.detailUrl,isSelected=_ref.isSelected,onSelect=_ref.onSelect,onCopy=_ref.onCopy,fetchCredentials=_ref.fetchCredentials,rowIndex=_ref.rowIndex;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isDisabled=_useState2[0],setIsDisabled=_useState2[1];var labelId=\"check-action-\".concat(credential.id);var canEdit=credential.summary_fields.user_capabilities.edit;var copyCredential=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return CredentialsAPI.copy(credential.id,{name:\"\".concat(credential.name,\" @ \").concat(timeOfDay())});case 2:response=_context.sent;if(response.status===201){onCopy(response.data.id);}_context.next=6;return fetchCredentials();case 6:case\"end\":return _context.stop();}}},_callee);})),[credential.id,credential.name,fetchCredentials,onCopy]);var handleCopyStart=useCallback(function(){setIsDisabled(true);},[]);var handleCopyFinish=useCallback(function(){setIsDisabled(false);},[]);return/*#__PURE__*/_jsxs(Tr,{id:\"\".concat(credential.id),ouiaId:\"\".concat(credential.id),children:[/*#__PURE__*/_jsx(Td,{select:{rowIndex:rowIndex,isSelected:isSelected,onSelect:onSelect},dataLabel:/*i18n*/i18n._(\"Selected\")}),/*#__PURE__*/_jsx(TdBreakWord,{id:labelId,dataLabel:/*i18n*/i18n._(\"Name\"),children:/*#__PURE__*/_jsx(Link,{to:\"\".concat(detailUrl),children:/*#__PURE__*/_jsx(\"b\",{children:credential.name})})}),/*#__PURE__*/_jsx(Td,{dataLabel:/*i18n*/i18n._(\"Type\"),children:credential.summary_fields.credential_type.name}),/*#__PURE__*/_jsxs(ActionsTd,{dataLabel:/*i18n*/i18n._(\"Actions\"),children:[/*#__PURE__*/_jsx(ActionItem,{visible:canEdit,tooltip:/*i18n*/i18n._(\"Edit Credential\"),children:/*#__PURE__*/_jsx(Button,{ouiaId:\"\".concat(credential.id,\"-edit-button\"),isDisabled:isDisabled,\"aria-label\":/*i18n*/i18n._(\"Edit Credential\"),variant:\"plain\",component:Link,to:\"/credentials/\".concat(credential.id,\"/edit\"),children:/*#__PURE__*/_jsx(PencilAltIcon,{})})}),/*#__PURE__*/_jsx(ActionItem,{tooltip:/*i18n*/i18n._(\"Copy Credential\"),visible:credential.summary_fields.user_capabilities.copy,children:/*#__PURE__*/_jsx(CopyButton,{isDisabled:isDisabled,onCopyStart:handleCopyStart,onCopyFinish:handleCopyFinish,copyItem:copyCredential,errorMessage:/*i18n*/i18n._(\"Failed to copy credential.\")})})]})]});}export default CredentialListItem;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Credential/CredentialList/CredentialListItem.js"],"names":["React","useState","useCallback","Link","Button","Tr","Td","PencilAltIcon","ActionsTd","ActionItem","TdBreakWord","timeOfDay","Credential","CredentialsAPI","CopyButton","CredentialListItem","credential","detailUrl","isSelected","onSelect","onCopy","fetchCredentials","rowIndex","isDisabled","setIsDisabled","labelId","id","canEdit","summary_fields","user_capabilities","edit","copyCredential","copy","name","response","status","data","handleCopyStart","handleCopyFinish","credential_type"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { string, bool, func } from 'prop-types';\n\nimport { t } from '@lingui/macro';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\nimport { Tr, Td } from '@patternfly/react-table';\nimport { PencilAltIcon } from '@patternfly/react-icons';\nimport { ActionsTd, ActionItem, TdBreakWord } from 'components/PaginatedTable';\nimport { timeOfDay } from 'util/dates';\n\nimport { Credential } from 'types';\nimport { CredentialsAPI } from 'api';\nimport CopyButton from 'components/CopyButton';\n\nfunction CredentialListItem({\n  credential,\n  detailUrl,\n  isSelected,\n  onSelect,\n  onCopy,\n  fetchCredentials,\n  rowIndex,\n}) {\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  const labelId = `check-action-${credential.id}`;\n  const canEdit = credential.summary_fields.user_capabilities.edit;\n\n  const copyCredential = useCallback(async () => {\n    const response = await CredentialsAPI.copy(credential.id, {\n      name: `${credential.name} @ ${timeOfDay()}`,\n    });\n    if (response.status === 201) {\n      onCopy(response.data.id);\n    }\n    await fetchCredentials();\n  }, [credential.id, credential.name, fetchCredentials, onCopy]);\n\n  const handleCopyStart = useCallback(() => {\n    setIsDisabled(true);\n  }, []);\n\n  const handleCopyFinish = useCallback(() => {\n    setIsDisabled(false);\n  }, []);\n\n  return (\n    <Tr id={`${credential.id}`} ouiaId={`${credential.id}`}>\n      <Td\n        select={{\n          rowIndex,\n          isSelected,\n          onSelect,\n        }}\n        dataLabel={t`Selected`}\n      />\n      <TdBreakWord id={labelId} dataLabel={t`Name`}>\n        <Link to={`${detailUrl}`}>\n          <b>{credential.name}</b>\n        </Link>\n      </TdBreakWord>\n      <Td dataLabel={t`Type`}>\n        {credential.summary_fields.credential_type.name}\n      </Td>\n      <ActionsTd dataLabel={t`Actions`}>\n        <ActionItem visible={canEdit} tooltip={t`Edit Credential`}>\n          <Button\n            ouiaId={`${credential.id}-edit-button`}\n            isDisabled={isDisabled}\n            aria-label={t`Edit Credential`}\n            variant=\"plain\"\n            component={Link}\n            to={`/credentials/${credential.id}/edit`}\n          >\n            <PencilAltIcon />\n          </Button>\n        </ActionItem>\n        <ActionItem\n          tooltip={t`Copy Credential`}\n          visible={credential.summary_fields.user_capabilities.copy}\n        >\n          <CopyButton\n            isDisabled={isDisabled}\n            onCopyStart={handleCopyStart}\n            onCopyFinish={handleCopyFinish}\n            copyItem={copyCredential}\n            errorMessage={t`Failed to copy credential.`}\n          />\n        </ActionItem>\n      </ActionsTd>\n    </Tr>\n  );\n}\n\nCredentialListItem.propTypes = {\n  detailUrl: string.isRequired,\n  credential: Credential.isRequired,\n  isSelected: bool.isRequired,\n  onSelect: func.isRequired,\n};\n\nexport default CredentialListItem;\n"]},"metadata":{},"sourceType":"module"}