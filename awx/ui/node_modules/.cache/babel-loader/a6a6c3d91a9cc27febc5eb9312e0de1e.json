{"ast":null,"code":"import _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport formStyles from '@patternfly/react-styles/css/components/Form/form';\nimport { css } from '@patternfly/react-styles';\nimport { SelectOption } from './SelectOption';\nimport { SelectConsumer, SelectPosition, SelectVariant } from './selectConstants';\nimport { SelectGroup } from './SelectGroup';\nimport { Divider } from '../Divider/Divider';\n\nvar SelectMenuWithRef = /*#__PURE__*/function (_React$Component) {\n  _inherits(SelectMenuWithRef, _React$Component);\n\n  var _super = _createSuper(SelectMenuWithRef);\n\n  function SelectMenuWithRef() {\n    _classCallCheck(this, SelectMenuWithRef);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SelectMenuWithRef, [{\n    key: \"extendChildren\",\n    value: function extendChildren(randomId) {\n      var _this = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          hasInlineFilter = _this$props.hasInlineFilter,\n          isGrouped = _this$props.isGrouped;\n      var childrenArray = children;\n      var index = hasInlineFilter ? 1 : 0;\n\n      if (isGrouped) {\n        return React.Children.map(childrenArray, function (group) {\n          if (group.type === SelectGroup) {\n            return React.cloneElement(group, {\n              titleId: group.props.label && group.props.label.replace(/\\W/g, '-'),\n              children: React.Children.map(group.props.children, function (option) {\n                return _this.cloneOption(option, index++, randomId);\n              })\n            });\n          } else {\n            return _this.cloneOption(group, index++, randomId);\n          }\n        });\n      }\n\n      return React.Children.map(childrenArray, function (child) {\n        return _this.cloneOption(child, index++, randomId);\n      });\n    }\n  }, {\n    key: \"cloneOption\",\n    value: function cloneOption(child, index, randomId) {\n      var _this$props2 = this.props,\n          selected = _this$props2.selected,\n          sendRef = _this$props2.sendRef,\n          keyHandler = _this$props2.keyHandler;\n      var isSelected = this.checkForValue(child.props.value, selected);\n\n      if (child.type === Divider) {\n        return child;\n      }\n\n      return React.cloneElement(child, {\n        inputId: \"\".concat(randomId, \"-\").concat(index),\n        isSelected: isSelected,\n        sendRef: sendRef,\n        keyHandler: keyHandler,\n        index: index\n      });\n    }\n  }, {\n    key: \"checkForValue\",\n    value: function checkForValue(valueToCheck, options) {\n      if (!options || !valueToCheck) {\n        return false;\n      }\n\n      var isSelectOptionObject = typeof valueToCheck !== 'string' && valueToCheck.toString && valueToCheck.compareTo;\n\n      if (Array.isArray(options)) {\n        if (isSelectOptionObject) {\n          return options.some(function (option) {\n            return option.compareTo(valueToCheck);\n          });\n        } else {\n          return options.includes(valueToCheck);\n        }\n      } else {\n        if (isSelectOptionObject) {\n          return options.compareTo(valueToCheck);\n        } else {\n          return options === valueToCheck;\n        }\n      }\n    }\n  }, {\n    key: \"extendCheckboxChildren\",\n    value: function extendCheckboxChildren(children) {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          isGrouped = _this$props3.isGrouped,\n          checked = _this$props3.checked,\n          sendRef = _this$props3.sendRef,\n          keyHandler = _this$props3.keyHandler,\n          hasInlineFilter = _this$props3.hasInlineFilter,\n          isLastOptionBeforeFooter = _this$props3.isLastOptionBeforeFooter;\n      var index = hasInlineFilter ? 1 : 0;\n\n      if (isGrouped) {\n        return React.Children.map(children, function (group) {\n          if (group.type === Divider) {\n            return group;\n          } else if (group.type === SelectOption) {\n            return React.cloneElement(group, {\n              isChecked: _this2.checkForValue(group.props.value, checked),\n              sendRef: sendRef,\n              keyHandler: keyHandler,\n              index: index++,\n              isLastOptionBeforeFooter: isLastOptionBeforeFooter\n            });\n          }\n\n          return React.cloneElement(group, {\n            titleId: group.props.label && group.props.label.replace(/\\W/g, '-'),\n            children: group.props.children ? React.createElement(\"fieldset\", {\n              \"aria-labelledby\": group.props.label && group.props.label.replace(/\\W/g, '-'),\n              className: css(styles.selectMenuFieldset)\n            }, React.Children.map(group.props.children, function (option) {\n              return option.type === Divider ? option : React.cloneElement(option, {\n                isChecked: _this2.checkForValue(option.props.value, checked),\n                sendRef: sendRef,\n                keyHandler: keyHandler,\n                index: index++,\n                isLastOptionBeforeFooter: isLastOptionBeforeFooter\n              });\n            })) : null\n          });\n        });\n      }\n\n      return React.Children.map(children, function (child) {\n        return child.type === Divider ? child : React.cloneElement(child, {\n          isChecked: _this2.checkForValue(child.props.value, checked),\n          sendRef: sendRef,\n          keyHandler: keyHandler,\n          index: index++,\n          isLastOptionBeforeFooter: isLastOptionBeforeFooter\n        });\n      });\n    }\n  }, {\n    key: \"renderSelectMenu\",\n    value: function renderSelectMenu(_ref) {\n      var _this3 = this;\n\n      var variant = _ref.variant,\n          inputIdPrefix = _ref.inputIdPrefix;\n\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      var _a = this.props,\n          children = _a.children,\n          isCustomContent = _a.isCustomContent,\n          className = _a.className,\n          isExpanded = _a.isExpanded,\n          openedOnEnter = _a.openedOnEnter,\n          selected = _a.selected,\n          checked = _a.checked,\n          isGrouped = _a.isGrouped,\n          position = _a.position,\n          sendRef = _a.sendRef,\n          keyHandler = _a.keyHandler,\n          maxHeight = _a.maxHeight,\n          noResultsFoundText = _a.noResultsFoundText,\n          createText = _a.createText,\n          ariaLabel = _a['aria-label'],\n          ariaLabelledBy = _a['aria-labelledby'],\n          hasInlineFilter = _a.hasInlineFilter,\n          innerRef = _a.innerRef,\n          footer = _a.footer,\n          footerRef = _a.footerRef,\n          isLastOptionBeforeFooter = _a.isLastOptionBeforeFooter,\n          props = __rest(_a, [\"children\", \"isCustomContent\", \"className\", \"isExpanded\", \"openedOnEnter\", \"selected\", \"checked\", \"isGrouped\", \"position\", \"sendRef\", \"keyHandler\", \"maxHeight\", \"noResultsFoundText\", \"createText\", 'aria-label', 'aria-labelledby', \"hasInlineFilter\", \"innerRef\", \"footer\", \"footerRef\", \"isLastOptionBeforeFooter\"]);\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n      var Component = 'div';\n      var variantProps = Object.assign({\n        ref: innerRef,\n        className: css(!footer ? styles.selectMenu : 'pf-c-select__menu-list', position === SelectPosition.right && styles.modifiers.alignRight, className)\n      }, maxHeight && {\n        style: {\n          maxHeight: maxHeight,\n          overflow: 'auto'\n        }\n      });\n\n      var extendedChildren = function extendedChildren() {\n        return variant === SelectVariant.checkbox ? _this3.extendCheckboxChildren(children) : _this3.extendChildren(inputIdPrefix);\n      };\n\n      if (isCustomContent) {\n        variantProps.children = children;\n      } else if (hasInlineFilter) {\n        if (React.Children.count(children) === 0) {\n          variantProps.children = React.createElement(\"fieldset\", {\n            className: css(styles.selectMenuFieldset)\n          });\n        } else {\n          variantProps.children = React.createElement(\"fieldset\", {\n            \"aria-label\": ariaLabel,\n            \"aria-labelledby\": !ariaLabel && ariaLabelledBy || null,\n            className: css(formStyles.formFieldset)\n          }, children.shift(), extendedChildren());\n        }\n      } else {\n        variantProps.children = extendedChildren();\n\n        if (!isGrouped) {\n          Component = 'ul';\n          variantProps.role = 'listbox';\n          variantProps['aria-label'] = ariaLabel;\n          variantProps['aria-labelledby'] = !ariaLabel && ariaLabelledBy || null;\n        }\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(Component, Object.assign({}, variantProps, props)), footer && React.createElement(\"div\", {\n        className: css(styles.selectMenuFooter),\n        ref: footerRef\n      }, footer));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(SelectConsumer, null, function (context) {\n        return _this4.renderSelectMenu(context);\n      });\n    }\n  }]);\n\n  return SelectMenuWithRef;\n}(React.Component);\n\nSelectMenuWithRef.displayName = 'SelectMenu';\nSelectMenuWithRef.defaultProps = {\n  className: '',\n  isExpanded: false,\n  isGrouped: false,\n  openedOnEnter: false,\n  selected: '',\n  maxHeight: '',\n  position: SelectPosition.left,\n  sendRef: function sendRef() {},\n  keyHandler: function keyHandler() {},\n  isCustomContent: false,\n  hasInlineFilter: false,\n  isLastOptionBeforeFooter: function isLastOptionBeforeFooter() {}\n};\nexport var SelectMenu = React.forwardRef(function (props, ref) {\n  return React.createElement(SelectMenuWithRef, Object.assign({\n    innerRef: ref\n  }, props), props.children);\n});","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Select/SelectMenu.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport formStyles from '@patternfly/react-styles/css/components/Form/form';\nimport { css } from '@patternfly/react-styles';\nimport { SelectOptionObject, SelectOption } from './SelectOption';\nimport { SelectConsumer, SelectPosition, SelectVariant, SelectContextInterface } from './selectConstants';\nimport { PickOptional } from '../../helpers/typeUtils';\n\nimport { SelectGroup } from './SelectGroup';\nimport { Divider } from '../Divider/Divider';\n\nexport interface SelectMenuProps extends Omit<React.HTMLProps<HTMLElement>, 'checked' | 'selected' | 'ref'> {\n  /** Content rendered inside the SelectMenu */\n  children: React.ReactElement[] | React.ReactNode;\n  /** Flag indicating that the children is custom content to render inside the SelectMenu.  If true, variant prop is ignored. */\n  isCustomContent?: boolean;\n  /** Additional classes added to the SelectMenu control */\n  className?: string;\n  /** Flag indicating the Select is expanded */\n  isExpanded?: boolean;\n  /** Flag indicating the Select options are grouped */\n  isGrouped?: boolean;\n  /** Currently selected option (for single, typeahead variants) */\n  selected?: string | SelectOptionObject | (string | SelectOptionObject)[];\n  /** Currently checked options (for checkbox variant) */\n  checked?: (string | SelectOptionObject)[];\n  /** @hide Internal flag for specifiying how the menu was opened */\n  openedOnEnter?: boolean;\n  /** Flag to specify the  maximum height of the menu, as a string percentage or number of pixels */\n  maxHeight?: string | number;\n  /** Indicates where menu will be alligned horizontally */\n  position?: SelectPosition | 'right' | 'left';\n  /** Inner prop passed from parent */\n  noResultsFoundText?: string;\n  /** Inner prop passed from parent */\n  createText?: string;\n  /** @hide Internal callback for ref tracking */\n  sendRef?: (ref: React.ReactNode, favoriteRef: React.ReactNode, index: number) => void;\n  /** @hide Internal callback for keyboard navigation */\n  keyHandler?: (index: number, innerIndex: number, position: string) => void;\n  /** Flag indicating select has an inline text input for filtering */\n  hasInlineFilter?: boolean;\n  innerRef?: any;\n  /** Content rendered in the footer of the select menu */\n  footer?: React.ReactNode;\n  /** The menu footer element */\n  footerRef?: React.RefObject<HTMLDivElement>;\n  /** @hide callback to check if option is the last one in the menu when there is a footer  */\n  isLastOptionBeforeFooter?: (index: number) => void;\n}\n\nclass SelectMenuWithRef extends React.Component<SelectMenuProps> {\n  static displayName = 'SelectMenu';\n  static defaultProps: PickOptional<SelectMenuProps> = {\n    className: '',\n    isExpanded: false,\n    isGrouped: false,\n    openedOnEnter: false,\n    selected: '',\n    maxHeight: '',\n    position: SelectPosition.left,\n    sendRef: () => {},\n    keyHandler: () => {},\n    isCustomContent: false,\n    hasInlineFilter: false,\n    isLastOptionBeforeFooter: () => {}\n  };\n\n  extendChildren(randomId: string) {\n    const { children, hasInlineFilter, isGrouped } = this.props;\n    const childrenArray: React.ReactElement[] = children as React.ReactElement[];\n    let index = hasInlineFilter ? 1 : 0;\n    if (isGrouped) {\n      return React.Children.map(childrenArray, (group: React.ReactElement) => {\n        if (group.type === SelectGroup) {\n          return React.cloneElement(group, {\n            titleId: group.props.label && group.props.label.replace(/\\W/g, '-'),\n            children: React.Children.map(group.props.children, (option: React.ReactElement) =>\n              this.cloneOption(option, index++, randomId)\n            )\n          });\n        } else {\n          return this.cloneOption(group, index++, randomId);\n        }\n      });\n    }\n    return React.Children.map(childrenArray, (child: React.ReactElement) => this.cloneOption(child, index++, randomId));\n  }\n\n  cloneOption(child: React.ReactElement, index: number, randomId: string) {\n    const { selected, sendRef, keyHandler } = this.props;\n    const isSelected = this.checkForValue(child.props.value, selected);\n    if (child.type === Divider) {\n      return child;\n    }\n    return React.cloneElement(child, {\n      inputId: `${randomId}-${index}`,\n      isSelected,\n      sendRef,\n      keyHandler,\n      index\n    });\n  }\n\n  checkForValue(\n    valueToCheck: string | SelectOptionObject,\n    options: string | SelectOptionObject | (string | SelectOptionObject)[]\n  ) {\n    if (!options || !valueToCheck) {\n      return false;\n    }\n\n    const isSelectOptionObject =\n      typeof valueToCheck !== 'string' &&\n      (valueToCheck as SelectOptionObject).toString &&\n      (valueToCheck as SelectOptionObject).compareTo;\n\n    if (Array.isArray(options)) {\n      if (isSelectOptionObject) {\n        return options.some(option => (option as SelectOptionObject).compareTo(valueToCheck));\n      } else {\n        return options.includes(valueToCheck);\n      }\n    } else {\n      if (isSelectOptionObject) {\n        return (options as SelectOptionObject).compareTo(valueToCheck);\n      } else {\n        return options === valueToCheck;\n      }\n    }\n  }\n\n  extendCheckboxChildren(children: React.ReactElement[]) {\n    const { isGrouped, checked, sendRef, keyHandler, hasInlineFilter, isLastOptionBeforeFooter } = this.props;\n    let index = hasInlineFilter ? 1 : 0;\n    if (isGrouped) {\n      return React.Children.map(children, (group: React.ReactElement) => {\n        if (group.type === Divider) {\n          return group;\n        } else if (group.type === SelectOption) {\n          return React.cloneElement(group, {\n            isChecked: this.checkForValue(group.props.value, checked),\n            sendRef,\n            keyHandler,\n            index: index++,\n            isLastOptionBeforeFooter\n          });\n        }\n        return React.cloneElement(group, {\n          titleId: group.props.label && group.props.label.replace(/\\W/g, '-'),\n          children: group.props.children ? (\n            <fieldset\n              aria-labelledby={group.props.label && group.props.label.replace(/\\W/g, '-')}\n              className={css(styles.selectMenuFieldset)}\n            >\n              {React.Children.map(group.props.children, (option: React.ReactElement) =>\n                option.type === Divider\n                  ? option\n                  : React.cloneElement(option, {\n                      isChecked: this.checkForValue(option.props.value, checked),\n                      sendRef,\n                      keyHandler,\n                      index: index++,\n                      isLastOptionBeforeFooter\n                    })\n              )}\n            </fieldset>\n          ) : null\n        });\n      });\n    }\n    return React.Children.map(children, (child: React.ReactElement) =>\n      child.type === Divider\n        ? child\n        : React.cloneElement(child, {\n            isChecked: this.checkForValue(child.props.value, checked),\n            sendRef,\n            keyHandler,\n            index: index++,\n            isLastOptionBeforeFooter\n          })\n    );\n  }\n\n  renderSelectMenu({ variant, inputIdPrefix }: SelectContextInterface) {\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    const {\n      children,\n      isCustomContent,\n      className,\n      isExpanded,\n      openedOnEnter,\n      selected,\n      checked,\n      isGrouped,\n      position,\n      sendRef,\n      keyHandler,\n      maxHeight,\n      noResultsFoundText,\n      createText,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      hasInlineFilter,\n      innerRef,\n      footer,\n      footerRef,\n      isLastOptionBeforeFooter,\n      ...props\n    } = this.props;\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    let Component = 'div';\n    const variantProps = {\n      ref: innerRef,\n      className: css(\n        !footer ? styles.selectMenu : 'pf-c-select__menu-list',\n        position === SelectPosition.right && styles.modifiers.alignRight,\n        className\n      ),\n      ...(maxHeight && { style: { maxHeight, overflow: 'auto' } })\n    } as React.HTMLAttributes<HTMLElement>;\n    const extendedChildren = () =>\n      variant === SelectVariant.checkbox\n        ? this.extendCheckboxChildren(children as React.ReactElement[])\n        : this.extendChildren(inputIdPrefix);\n\n    if (isCustomContent) {\n      variantProps.children = children;\n    } else if (hasInlineFilter) {\n      if (React.Children.count(children) === 0) {\n        variantProps.children = <fieldset className={css(styles.selectMenuFieldset)} />;\n      } else {\n        variantProps.children = (\n          <fieldset\n            aria-label={ariaLabel}\n            aria-labelledby={(!ariaLabel && ariaLabelledBy) || null}\n            className={css(formStyles.formFieldset)}\n          >\n            {(children as React.ReactElement[]).shift()}\n            {extendedChildren()}\n          </fieldset>\n        );\n      }\n    } else {\n      variantProps.children = extendedChildren();\n      if (!isGrouped) {\n        Component = 'ul';\n        variantProps.role = 'listbox';\n        variantProps['aria-label'] = ariaLabel;\n        variantProps['aria-labelledby'] = (!ariaLabel && ariaLabelledBy) || null;\n      }\n    }\n\n    return (\n      <React.Fragment>\n        <Component {...variantProps} {...props} />\n        {footer && (\n          <div className={css(styles.selectMenuFooter)} ref={footerRef}>\n            {footer}\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return <SelectConsumer>{context => this.renderSelectMenu(context)}</SelectConsumer>;\n  }\n}\n\nexport const SelectMenu = React.forwardRef<unknown, React.PropsWithChildren<unknown>>((props, ref) => (\n  <SelectMenuWithRef innerRef={ref} {...props}>\n    {props.children}\n  </SelectMenuWithRef>\n));\n"]},"metadata":{},"sourceType":"module"}