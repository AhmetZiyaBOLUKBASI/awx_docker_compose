{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useCallback,useEffect}from'react';import{Host}from'types';import{CardBody}from'components/Card';import{DetailList}from'components/DetailList';import{VariablesDetail}from'components/CodeEditor';import ContentError from'components/ContentError';import ContentLoading from'components/ContentLoading';import useRequest from'hooks/useRequest';import{HostsAPI}from'api';import{jsx as _jsx}from\"react/jsx-runtime\";function HostFacts(_ref){var host=_ref.host;var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$Promise$all,_yield$Promise$all2,factsObj;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Promise.all([HostsAPI.readFacts(host.id)]);case 2:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,1);factsObj=_yield$Promise$all2[0].data;return _context.abrupt(\"return\",JSON.stringify(factsObj,null,4));case 6:case\"end\":return _context.stop();}}},_callee);})),[host]),'{}'),facts=_useRequest.result,isLoading=_useRequest.isLoading,error=_useRequest.error,fetchFacts=_useRequest.request;useEffect(function(){fetchFacts();},[fetchFacts]);if(isLoading){return/*#__PURE__*/_jsx(ContentLoading,{});}if(error){return/*#__PURE__*/_jsx(ContentError,{error:error});}return/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(DetailList,{gutter:\"sm\",children:/*#__PURE__*/_jsx(VariablesDetail,{label:/*i18n*/i18n._(\"Facts\"),rows:\"auto\",value:facts,name:\"facts\",dataCy:\"host-facts-detail\"})})});}export default HostFacts;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Host/HostFacts/HostFacts.js"],"names":["React","useCallback","useEffect","Host","CardBody","DetailList","VariablesDetail","ContentError","ContentLoading","useRequest","HostsAPI","HostFacts","host","Promise","all","readFacts","id","factsObj","data","JSON","stringify","facts","result","isLoading","error","fetchFacts","request"],"mappings":"uVAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,SAA7B,KAA8C,OAA9C,CAGA,OAASC,IAAT,KAAqB,OAArB,CACA,OAASC,QAAT,KAAyB,iBAAzB,CACA,OAASC,UAAT,KAA2B,uBAA3B,CACA,OAASC,eAAT,KAAgC,uBAAhC,CACA,MAAOC,CAAAA,YAAP,KAAyB,yBAAzB,CACA,MAAOC,CAAAA,cAAP,KAA2B,2BAA3B,CACA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CACA,OAASC,QAAT,KAAyB,KAAzB,C,2CAEA,QAASC,CAAAA,SAAT,MAA6B,IAARC,CAAAA,IAAQ,MAARA,IAAQ,CAC3B,gBAKIH,UAAU,CACZR,WAAW,sEAAC,6MACyBY,CAAAA,OAAO,CAACC,GAAR,CAAY,CAC7CJ,QAAQ,CAACK,SAAT,CAAmBH,IAAI,CAACI,EAAxB,CAD6C,CAAZ,CADzB,kGACKC,QADL,wBACDC,IADC,iCAIHC,IAAI,CAACC,SAAL,CAAeH,QAAf,CAAyB,IAAzB,CAA+B,CAA/B,CAJG,wDAAD,GAKR,CAACL,IAAD,CALQ,CADC,CAOZ,IAPY,CALd,CACUS,KADV,aACEC,MADF,CAEEC,SAFF,aAEEA,SAFF,CAGEC,KAHF,aAGEA,KAHF,CAIWC,UAJX,aAIEC,OAJF,CAeAxB,SAAS,CAAC,UAAM,CACduB,UAAU,GACX,CAFQ,CAEN,CAACA,UAAD,CAFM,CAAT,CAIA,GAAIF,SAAJ,CAAe,CACb,mBAAO,KAAC,cAAD,IAAP,CACD,CAED,GAAIC,KAAJ,CAAW,CACT,mBAAO,KAAC,YAAD,EAAc,KAAK,CAAEA,KAArB,EAAP,CACD,CAED,mBACE,KAAC,QAAD,wBACE,KAAC,UAAD,EAAY,MAAM,CAAC,IAAnB,uBACE,KAAC,eAAD,EACE,KAAK,SAAE,eADT,CAEE,IAAI,CAAC,MAFP,CAGE,KAAK,CAAEH,KAHT,CAIE,IAAI,CAAC,OAJP,CAKE,MAAM,CAAC,mBALT,EADF,EADF,EADF,CAaD,CAMD,cAAeV,CAAAA,SAAf","sourcesContent":["import React, { useCallback, useEffect } from 'react';\n\nimport { t } from '@lingui/macro';\nimport { Host } from 'types';\nimport { CardBody } from 'components/Card';\nimport { DetailList } from 'components/DetailList';\nimport { VariablesDetail } from 'components/CodeEditor';\nimport ContentError from 'components/ContentError';\nimport ContentLoading from 'components/ContentLoading';\nimport useRequest from 'hooks/useRequest';\nimport { HostsAPI } from 'api';\n\nfunction HostFacts({ host }) {\n  const {\n    result: facts,\n    isLoading,\n    error,\n    request: fetchFacts,\n  } = useRequest(\n    useCallback(async () => {\n      const [{ data: factsObj }] = await Promise.all([\n        HostsAPI.readFacts(host.id),\n      ]);\n      return JSON.stringify(factsObj, null, 4);\n    }, [host]),\n    '{}'\n  );\n\n  useEffect(() => {\n    fetchFacts();\n  }, [fetchFacts]);\n\n  if (isLoading) {\n    return <ContentLoading />;\n  }\n\n  if (error) {\n    return <ContentError error={error} />;\n  }\n\n  return (\n    <CardBody>\n      <DetailList gutter=\"sm\">\n        <VariablesDetail\n          label={t`Facts`}\n          rows=\"auto\"\n          value={facts}\n          name=\"facts\"\n          dataCy=\"host-facts-detail\"\n        />\n      </DetailList>\n    </CardBody>\n  );\n}\n\nHostFacts.propTypes = {\n  host: Host.isRequired,\n};\n\nexport default HostFacts;\n"]},"metadata":{},"sourceType":"module"}