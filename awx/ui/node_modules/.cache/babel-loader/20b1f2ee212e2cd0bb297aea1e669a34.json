{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/TextInputGroup/text-input-group';\nimport { css } from '@patternfly/react-styles';\nimport { TextInputGroupContext } from './TextInputGroup';\nexport var TextInputGroupMain = function TextInputGroupMain(_a) {\n  var children = _a.children,\n      className = _a.className,\n      icon = _a.icon,\n      _a$type = _a.type,\n      type = _a$type === void 0 ? 'text' : _a$type,\n      hint = _a.hint,\n      _a$onChange = _a.onChange,\n      onChange = _a$onChange === void 0 ? function () {\n    return undefined;\n  } : _a$onChange,\n      onFocus = _a.onFocus,\n      onBlur = _a.onBlur,\n      _a$ariaLabel = _a['aria-label'],\n      ariaLabel = _a$ariaLabel === void 0 ? 'Type to filter' : _a$ariaLabel,\n      inputValue = _a.value,\n      inputPlaceHolder = _a.placeholder,\n      innerRef = _a.innerRef,\n      props = __rest(_a, [\"children\", \"className\", \"icon\", \"type\", \"hint\", \"onChange\", \"onFocus\", \"onBlur\", 'aria-label', \"value\", \"placeholder\", \"innerRef\"]);\n\n  var _React$useContext = React.useContext(TextInputGroupContext),\n      isDisabled = _React$useContext.isDisabled;\n\n  var textInputGroupInputInputRef = innerRef || React.useRef(null);\n\n  var handleChange = function handleChange(event) {\n    onChange(event.currentTarget.value, event);\n  };\n\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.textInputGroupMain, icon && styles.modifiers.icon, className)\n  }, props), children, React.createElement(\"span\", {\n    className: css(styles.textInputGroupText)\n  }, hint && React.createElement(\"input\", {\n    className: css(styles.textInputGroupTextInput, styles.modifiers.hint),\n    type: \"text\",\n    disabled: true,\n    \"aria-hidden\": \"true\",\n    value: hint\n  }), icon && React.createElement(\"span\", {\n    className: css(styles.textInputGroupIcon)\n  }, icon), React.createElement(\"input\", {\n    ref: textInputGroupInputInputRef,\n    type: type,\n    className: css(styles.textInputGroupTextInput),\n    \"aria-label\": ariaLabel,\n    disabled: isDisabled,\n    onChange: handleChange,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    value: inputValue || '',\n    placeholder: inputPlaceHolder\n  })));\n};\nTextInputGroupMain.displayName = 'TextInputGroupMain';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/TextInputGroup/TextInputGroupMain.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/TextInputGroup/text-input-group';\nimport { css } from '@patternfly/react-styles';\nimport { TextInputGroupContext } from './TextInputGroup';\n\nexport interface TextInputGroupMainProps extends Omit<React.HTMLProps<HTMLDivElement>, 'onChange'> {\n  /** Content rendered inside the text input group main div */\n  children?: React.ReactNode;\n  /** Additional classes applied to the text input group main container */\n  className?: string;\n  /** Icon to be shown on the left side of the text input group main container */\n  icon?: React.ReactNode;\n  /** Type that the input accepts. */\n  type?:\n    | 'text'\n    | 'date'\n    | 'datetime-local'\n    | 'email'\n    | 'month'\n    | 'number'\n    | 'password'\n    | 'search'\n    | 'tel'\n    | 'time'\n    | 'url';\n  /** Suggestion that will show up like a placeholder even with text in the input */\n  hint?: string;\n  /** Callback for when there is a change in the input field*/\n  onChange?: (value: string, event: React.FormEvent<HTMLInputElement>) => void;\n  /** Callback for when the input field is focused*/\n  onFocus?: (event?: any) => void;\n  /** Callback for when focus is lost on the input field*/\n  onBlur?: (event?: any) => void;\n  /** Accessibility label for the input */\n  'aria-label'?: string;\n  /** Value for the input */\n  value?: string | number;\n  /** Placeholder value for the input */\n  placeholder?: string;\n  /** @hide A reference object to attach to the input box */\n  innerRef?: React.RefObject<any>;\n}\n\nexport const TextInputGroupMain: React.FunctionComponent<TextInputGroupMainProps> = ({\n  children,\n  className,\n  icon,\n  type = 'text',\n  hint,\n  onChange = (): any => undefined,\n  onFocus,\n  onBlur,\n  'aria-label': ariaLabel = 'Type to filter',\n  value: inputValue,\n  placeholder: inputPlaceHolder,\n  innerRef,\n  ...props\n}: TextInputGroupMainProps) => {\n  const { isDisabled } = React.useContext(TextInputGroupContext);\n  const textInputGroupInputInputRef = innerRef || React.useRef(null);\n\n  const handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n    onChange(event.currentTarget.value, event);\n  };\n\n  return (\n    <div className={css(styles.textInputGroupMain, icon && styles.modifiers.icon, className)} {...props}>\n      {children}\n      <span className={css(styles.textInputGroupText)}>\n        {hint && (\n          <input\n            className={css(styles.textInputGroupTextInput, styles.modifiers.hint)}\n            type=\"text\"\n            disabled\n            aria-hidden=\"true\"\n            value={hint}\n          />\n        )}\n        {icon && <span className={css(styles.textInputGroupIcon)}>{icon}</span>}\n        <input\n          ref={textInputGroupInputInputRef}\n          type={type}\n          className={css(styles.textInputGroupTextInput)}\n          aria-label={ariaLabel}\n          disabled={isDisabled}\n          onChange={handleChange}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          value={inputValue || ''}\n          placeholder={inputPlaceHolder}\n        />\n      </span>\n    </div>\n  );\n};\n\nTextInputGroupMain.displayName = 'TextInputGroupMain';\n"]},"metadata":{},"sourceType":"module"}