{"ast":null,"code":"import _defineProperty from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import React,{useCallback,useState}from'react';import{Route,withRouter,Switch,useRouteMatch}from'react-router-dom';import{Config}from'contexts/Config';import ScreenHeader from'components/ScreenHeader/ScreenHeader';import PersistentFilters from'components/PersistentFilters';import OrganizationsList from'./OrganizationList/OrganizationList';import OrganizationAdd from'./OrganizationAdd/OrganizationAdd';import Organization from'./Organization';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Organizations(){var match=useRouteMatch();var _useState=useState({'/organizations':/*i18n*/i18n._(\"Organizations\"),'/organizations/add':/*i18n*/i18n._(\"Create New Organization\")}),_useState2=_slicedToArray(_useState,2),breadcrumbConfig=_useState2[0],setBreadcrumbConfig=_useState2[1];var setBreadcrumb=useCallback(function(organization){var _breadcrumb;if(!organization){return;}var breadcrumb=(_breadcrumb={'/organizations':/*i18n*/i18n._(\"Organizations\"),'/organizations/add':/*i18n*/i18n._(\"Create New Organization\")},_defineProperty(_breadcrumb,\"/organizations/\".concat(organization.id),\"\".concat(organization.name)),_defineProperty(_breadcrumb,\"/organizations/\".concat(organization.id,\"/edit\"),/*i18n*/i18n._(\"Edit Details\")),_defineProperty(_breadcrumb,\"/organizations/\".concat(organization.id,\"/details\"),/*i18n*/i18n._(\"Details\")),_defineProperty(_breadcrumb,\"/organizations/\".concat(organization.id,\"/access\"),/*i18n*/i18n._(\"Access\")),_defineProperty(_breadcrumb,\"/organizations/\".concat(organization.id,\"/teams\"),/*i18n*/i18n._(\"Teams\")),_defineProperty(_breadcrumb,\"/organizations/\".concat(organization.id,\"/notifications\"),/*i18n*/i18n._(\"Notifications\")),_defineProperty(_breadcrumb,\"/organizations/\".concat(organization.id,\"/execution_environments\"),/*i18n*/i18n._(\"Execution Environments\")),_breadcrumb);setBreadcrumbConfig(breadcrumb);},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ScreenHeader,{streamType:\"organization\",breadcrumbConfig:breadcrumbConfig}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"\".concat(match.path,\"/add\"),children:/*#__PURE__*/_jsx(OrganizationAdd,{})}),/*#__PURE__*/_jsx(Route,{path:\"\".concat(match.path,\"/:id\"),children:/*#__PURE__*/_jsx(Config,{children:function children(_ref){var me=_ref.me;return/*#__PURE__*/_jsx(Organization,{setBreadcrumb:setBreadcrumb,me:me||{}});}})}),/*#__PURE__*/_jsx(Route,{path:\"\".concat(match.path),children:/*#__PURE__*/_jsx(PersistentFilters,{pageKey:\"organizations\",children:/*#__PURE__*/_jsx(OrganizationsList,{})})})]})]});}export{Organizations as _Organizations};export default withRouter(Organizations);","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Organization/Organizations.js"],"names":["React","useCallback","useState","Route","withRouter","Switch","useRouteMatch","Config","ScreenHeader","PersistentFilters","OrganizationsList","OrganizationAdd","Organization","Organizations","match","breadcrumbConfig","setBreadcrumbConfig","setBreadcrumb","organization","breadcrumb","id","name","path","me","_Organizations"],"mappings":"+OAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,QAA7B,KAA6C,OAA7C,CACA,OAASC,KAAT,CAAgBC,UAAhB,CAA4BC,MAA5B,CAAoCC,aAApC,KAAyD,kBAAzD,CAIA,OAASC,MAAT,KAAuB,iBAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,sCAAzB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,8BAA9B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qCAA9B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mCAA5B,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,C,6IAEA,QAASC,CAAAA,aAAT,EAAyB,CACvB,GAAMC,CAAAA,KAAK,CAAGR,aAAa,EAA3B,CACA,cAAgDJ,QAAQ,CAAC,CACvD,yBAAkB,uBADqC,CAEvD,6BAAsB,iCAFiC,CAAD,CAAxD,wCAAOa,gBAAP,eAAyBC,mBAAzB,eAKA,GAAMC,CAAAA,aAAa,CAAGhB,WAAW,CAAC,SAACiB,YAAD,CAAkB,iBAClD,GAAI,CAACA,YAAL,CAAmB,CACjB,OACD,CAED,GAAMC,CAAAA,UAAU,eACd,yBAAkB,uBADJ,CAEd,6BAAsB,iCAFR,uDAGKD,YAAY,CAACE,EAHlB,YAG4BF,YAAY,CAACG,IAHzC,wDAIKH,YAAY,CAACE,EAJlB,kBAI8B,sBAJ9B,uDAKKF,YAAY,CAACE,EALlB,qBAKiC,iBALjC,uDAMKF,YAAY,CAACE,EANlB,oBAMgC,gBANhC,uDAOKF,YAAY,CAACE,EAPlB,mBAO+B,eAP/B,uDAQKF,YAAY,CAACE,EARlB,2BAQuC,uBARvC,uDASKF,YAAY,CAACE,EATlB,oCASgD,gCAThD,cAAhB,CAWAJ,mBAAmB,CAACG,UAAD,CAAnB,CACD,CAjBgC,CAiB9B,EAjB8B,CAAjC,CAmBA,mBACE,wCACE,KAAC,YAAD,EACE,UAAU,CAAC,cADb,CAEE,gBAAgB,CAAEJ,gBAFpB,EADF,cAKE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,WAAKD,KAAK,CAACQ,IAAX,QAAX,uBACE,KAAC,eAAD,IADF,EADF,cAIE,KAAC,KAAD,EAAO,IAAI,WAAKR,KAAK,CAACQ,IAAX,QAAX,uBACE,KAAC,MAAD,WACG,2BAAGC,CAAAA,EAAH,MAAGA,EAAH,oBACC,KAAC,YAAD,EAAc,aAAa,CAAEN,aAA7B,CAA4C,EAAE,CAAEM,EAAE,EAAI,EAAtD,EADD,EADH,EADF,EAJF,cAWE,KAAC,KAAD,EAAO,IAAI,WAAKT,KAAK,CAACQ,IAAX,CAAX,uBACE,KAAC,iBAAD,EAAmB,OAAO,CAAC,eAA3B,uBACE,KAAC,iBAAD,IADF,EADF,EAXF,GALF,GADF,CAyBD,CAED,OAAST,aAAa,GAAIW,CAAAA,cAA1B,EACA,cAAepB,CAAAA,UAAU,CAACS,aAAD,CAAzB","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { Route, withRouter, Switch, useRouteMatch } from 'react-router-dom';\n\nimport { t } from '@lingui/macro';\n\nimport { Config } from 'contexts/Config';\nimport ScreenHeader from 'components/ScreenHeader/ScreenHeader';\nimport PersistentFilters from 'components/PersistentFilters';\nimport OrganizationsList from './OrganizationList/OrganizationList';\nimport OrganizationAdd from './OrganizationAdd/OrganizationAdd';\nimport Organization from './Organization';\n\nfunction Organizations() {\n  const match = useRouteMatch();\n  const [breadcrumbConfig, setBreadcrumbConfig] = useState({\n    '/organizations': t`Organizations`,\n    '/organizations/add': t`Create New Organization`,\n  });\n\n  const setBreadcrumb = useCallback((organization) => {\n    if (!organization) {\n      return;\n    }\n\n    const breadcrumb = {\n      '/organizations': t`Organizations`,\n      '/organizations/add': t`Create New Organization`,\n      [`/organizations/${organization.id}`]: `${organization.name}`,\n      [`/organizations/${organization.id}/edit`]: t`Edit Details`,\n      [`/organizations/${organization.id}/details`]: t`Details`,\n      [`/organizations/${organization.id}/access`]: t`Access`,\n      [`/organizations/${organization.id}/teams`]: t`Teams`,\n      [`/organizations/${organization.id}/notifications`]: t`Notifications`,\n      [`/organizations/${organization.id}/execution_environments`]: t`Execution Environments`,\n    };\n    setBreadcrumbConfig(breadcrumb);\n  }, []);\n\n  return (\n    <>\n      <ScreenHeader\n        streamType=\"organization\"\n        breadcrumbConfig={breadcrumbConfig}\n      />\n      <Switch>\n        <Route path={`${match.path}/add`}>\n          <OrganizationAdd />\n        </Route>\n        <Route path={`${match.path}/:id`}>\n          <Config>\n            {({ me }) => (\n              <Organization setBreadcrumb={setBreadcrumb} me={me || {}} />\n            )}\n          </Config>\n        </Route>\n        <Route path={`${match.path}`}>\n          <PersistentFilters pageKey=\"organizations\">\n            <OrganizationsList />\n          </PersistentFilters>\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport { Organizations as _Organizations };\nexport default withRouter(Organizations);\n"]},"metadata":{},"sourceType":"module"}