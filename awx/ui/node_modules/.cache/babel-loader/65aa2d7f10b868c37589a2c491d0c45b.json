{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import{i18n}from\"@lingui/core\";import React from'react';import{useField}from'formik';import styled from'styled-components';import{Alert}from'@patternfly/react-core';import InventoryStep from'./InventoryStep';import StepName from'./StepName';import{jsx as _jsx}from\"react/jsx-runtime\";var InventoryAlert=styled(Alert)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin-bottom: 16px;\\n\"])));var STEP_ID='inventory';export default function useInventoryStep(launchConfig,resource,visitedSteps){var _useField=useField('inventory'),_useField2=_slicedToArray(_useField,3),meta=_useField2[1],helpers=_useField2[2];var formError=!resource||(resource===null||resource===void 0?void 0:resource.type)==='workflow_job_template'?false:Object.keys(visitedSteps).includes(STEP_ID)&&meta.touched&&!meta.value;return{step:getStep(launchConfig,formError,resource),initialValues:getInitialValues(launchConfig,resource),isReady:true,contentError:null,hasError:launchConfig.ask_inventory_on_launch&&formError,setTouched:function setTouched(setFieldTouched){setFieldTouched('inventory',true,false);},validate:function validate(){if(meta.touched&&!meta.value&&resource.type==='job_template'){helpers.setError(/*i18n*/i18n._(\"An inventory must be selected\"));}}};}function getStep(launchConfig,formError,resource){if(!launchConfig.ask_inventory_on_launch){return null;}return{id:STEP_ID,name:/*#__PURE__*/_jsx(StepName,{hasErrors:formError,id:\"inventory-step\",children:/*i18n*/i18n._(\"Inventory\")}),component:/*#__PURE__*/_jsx(InventoryStep,{warningMessage:resource.type==='workflow_job_template'?/*#__PURE__*/_jsx(InventoryAlert,{ouiaId:\"InventoryStep-alert\",variant:\"warning\",isInline:true,title:/*i18n*/i18n._(\"This inventory is applied to all workflow nodes within this workflow ({0}) that prompt for an inventory.\",{0:resource.name})}):null}),enableNext:true};}function getInitialValues(launchConfig,resource){var _resource$summary_fie;if(!launchConfig.ask_inventory_on_launch){return{};}return{inventory:(resource===null||resource===void 0?void 0:(_resource$summary_fie=resource.summary_fields)===null||_resource$summary_fie===void 0?void 0:_resource$summary_fie.inventory)||null};}","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/LaunchPrompt/steps/useInventoryStep.js"],"names":["React","useField","styled","Alert","InventoryStep","StepName","InventoryAlert","STEP_ID","useInventoryStep","launchConfig","resource","visitedSteps","meta","helpers","formError","type","Object","keys","includes","touched","value","step","getStep","initialValues","getInitialValues","isReady","contentError","hasError","ask_inventory_on_launch","setTouched","setFieldTouched","validate","setError","id","name","component","enableNext","inventory","summary_fields"],"mappings":"iRAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,QAAT,KAAyB,QAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,KAAT,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,2CAEA,GAAMC,CAAAA,cAAc,CAAGJ,MAAM,CAACC,KAAD,CAAT,2FAApB,CAIA,GAAMI,CAAAA,OAAO,CAAG,WAAhB,CAEA,cAAe,SAASC,CAAAA,gBAAT,CAA0BC,YAA1B,CAAwCC,QAAxC,CAAkDC,YAAlD,CAAgE,CAC7E,cAA0BV,QAAQ,CAAC,WAAD,CAAlC,wCAASW,IAAT,eAAeC,OAAf,eACA,GAAMC,CAAAA,SAAS,CACb,CAACJ,QAAD,EAAa,CAAAA,QAAQ,OAAR,EAAAA,QAAQ,SAAR,QAAAA,QAAQ,CAAEK,IAAV,IAAmB,uBAAhC,CACI,KADJ,CAEIC,MAAM,CAACC,IAAP,CAAYN,YAAZ,EAA0BO,QAA1B,CAAmCX,OAAnC,GACAK,IAAI,CAACO,OADL,EAEA,CAACP,IAAI,CAACQ,KALZ,CAOA,MAAO,CACLC,IAAI,CAAEC,OAAO,CAACb,YAAD,CAAeK,SAAf,CAA0BJ,QAA1B,CADR,CAELa,aAAa,CAAEC,gBAAgB,CAACf,YAAD,CAAeC,QAAf,CAF1B,CAGLe,OAAO,CAAE,IAHJ,CAILC,YAAY,CAAE,IAJT,CAKLC,QAAQ,CAAElB,YAAY,CAACmB,uBAAb,EAAwCd,SAL7C,CAMLe,UAAU,CAAE,oBAACC,eAAD,CAAqB,CAC/BA,eAAe,CAAC,WAAD,CAAc,IAAd,CAAoB,KAApB,CAAf,CACD,CARI,CASLC,QAAQ,CAAE,mBAAM,CACd,GAAInB,IAAI,CAACO,OAAL,EAAgB,CAACP,IAAI,CAACQ,KAAtB,EAA+BV,QAAQ,CAACK,IAAT,GAAkB,cAArD,CAAqE,CACnEF,OAAO,CAACmB,QAAR,SAAiB,uCAAjB,EACD,CACF,CAbI,CAAP,CAeD,CACD,QAASV,CAAAA,OAAT,CAAiBb,YAAjB,CAA+BK,SAA/B,CAA0CJ,QAA1C,CAAoD,CAClD,GAAI,CAACD,YAAY,CAACmB,uBAAlB,CAA2C,CACzC,MAAO,KAAP,CACD,CACD,MAAO,CACLK,EAAE,CAAE1B,OADC,CAEL2B,IAAI,cACF,KAAC,QAAD,EAAU,SAAS,CAAEpB,SAArB,CAAgC,EAAE,CAAC,gBAAnC,kBACG,mBADH,EAHG,CAOLqB,SAAS,cACP,KAAC,aAAD,EACE,cAAc,CACZzB,QAAQ,CAACK,IAAT,GAAkB,uBAAlB,cACE,KAAC,cAAD,EACE,MAAM,CAAC,qBADT,CAEE,OAAO,CAAC,SAFV,CAGE,QAAQ,KAHV,CAIE,KAAK,SAAE,qHAA0EL,QAAQ,CAACwB,IAAnF,EAJT,EADF,CAOI,IATR,EARG,CAqBLE,UAAU,CAAE,IArBP,CAAP,CAuBD,CAED,QAASZ,CAAAA,gBAAT,CAA0Bf,YAA1B,CAAwCC,QAAxC,CAAkD,2BAChD,GAAI,CAACD,YAAY,CAACmB,uBAAlB,CAA2C,CACzC,MAAO,EAAP,CACD,CAED,MAAO,CACLS,SAAS,CAAE,CAAA3B,QAAQ,OAAR,EAAAA,QAAQ,SAAR,+BAAAA,QAAQ,CAAE4B,cAAV,sEAA0BD,SAA1B,GAAuC,IAD7C,CAAP,CAGD","sourcesContent":["import React from 'react';\nimport { t } from '@lingui/macro';\nimport { useField } from 'formik';\nimport styled from 'styled-components';\nimport { Alert } from '@patternfly/react-core';\nimport InventoryStep from './InventoryStep';\nimport StepName from './StepName';\n\nconst InventoryAlert = styled(Alert)`\n  margin-bottom: 16px;\n`;\n\nconst STEP_ID = 'inventory';\n\nexport default function useInventoryStep(launchConfig, resource, visitedSteps) {\n  const [, meta, helpers] = useField('inventory');\n  const formError =\n    !resource || resource?.type === 'workflow_job_template'\n      ? false\n      : Object.keys(visitedSteps).includes(STEP_ID) &&\n        meta.touched &&\n        !meta.value;\n\n  return {\n    step: getStep(launchConfig, formError, resource),\n    initialValues: getInitialValues(launchConfig, resource),\n    isReady: true,\n    contentError: null,\n    hasError: launchConfig.ask_inventory_on_launch && formError,\n    setTouched: (setFieldTouched) => {\n      setFieldTouched('inventory', true, false);\n    },\n    validate: () => {\n      if (meta.touched && !meta.value && resource.type === 'job_template') {\n        helpers.setError(t`An inventory must be selected`);\n      }\n    },\n  };\n}\nfunction getStep(launchConfig, formError, resource) {\n  if (!launchConfig.ask_inventory_on_launch) {\n    return null;\n  }\n  return {\n    id: STEP_ID,\n    name: (\n      <StepName hasErrors={formError} id=\"inventory-step\">\n        {t`Inventory`}\n      </StepName>\n    ),\n    component: (\n      <InventoryStep\n        warningMessage={\n          resource.type === 'workflow_job_template' ? (\n            <InventoryAlert\n              ouiaId=\"InventoryStep-alert\"\n              variant=\"warning\"\n              isInline\n              title={t`This inventory is applied to all workflow nodes within this workflow (${resource.name}) that prompt for an inventory.`}\n            />\n          ) : null\n        }\n      />\n    ),\n    enableNext: true,\n  };\n}\n\nfunction getInitialValues(launchConfig, resource) {\n  if (!launchConfig.ask_inventory_on_launch) {\n    return {};\n  }\n\n  return {\n    inventory: resource?.summary_fields?.inventory || null,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}