{"ast":null,"code":"import _taggedTemplateLiteral from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import{i18n}from\"@lingui/core\";import React from'react';import{Button as PFButton,ToolbarItem as PFToolbarItem}from'@patternfly/react-core';import{BarsIcon,EqualsIcon}from'@patternfly/react-icons';import styled from'styled-components';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Button=styled(PFButton)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding: 0;\\n  margin: 0;\\n  height: 30px;\\n  width: 30px;\\n  \",\";\\n\"])),function(props){return props.isActive?\"\\n      background-color: #007bba;\\n      --pf-c-button--m-plain--active--Color: white;\\n      --pf-c-button--m-plain--focus--Color: white;\":null;});var ToolbarItem=styled(PFToolbarItem)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  & :not(:last-child) {\\n    margin-right: 20px;\\n  }\\n\"])));// TODO: Recommend renaming this component to avoid confusion\n// with ExpandingContainer\nfunction ExpandCollapse(_ref){var isCompact=_ref.isCompact,onCompact=_ref.onCompact,onExpand=_ref.onExpand;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ToolbarItem,{children:/*#__PURE__*/_jsx(Button,{ouiaId:\"toolbar-collapse-button\",variant:\"plain\",\"aria-label\":/*i18n*/i18n._(\"Collapse\"),onClick:onCompact,isActive:isCompact,children:/*#__PURE__*/_jsx(BarsIcon,{})})}),/*#__PURE__*/_jsx(ToolbarItem,{children:/*#__PURE__*/_jsx(Button,{ouiaId:\"toolbar-expand-button\",variant:\"plain\",\"aria-label\":/*i18n*/i18n._(\"Expand\"),onClick:onExpand,isActive:!isCompact,children:/*#__PURE__*/_jsx(EqualsIcon,{})})})]});}ExpandCollapse.defaultProps={isCompact:true};export default ExpandCollapse;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/ExpandCollapse/ExpandCollapse.js"],"names":["React","Button","PFButton","ToolbarItem","PFToolbarItem","BarsIcon","EqualsIcon","styled","props","isActive","ExpandCollapse","isCompact","onCompact","onExpand","defaultProps"],"mappings":"2LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAIA,OACEC,MAAM,GAAIC,CAAAA,QADZ,CAEEC,WAAW,GAAIC,CAAAA,aAFjB,KAGO,wBAHP,CAIA,OAASC,QAAT,CAAmBC,UAAnB,KAAqC,yBAArC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,C,6IAEA,GAAMN,CAAAA,MAAM,CAAGM,MAAM,CAACL,QAAD,CAAT,yIAKR,SAACM,KAAD,QACAA,CAAAA,KAAK,CAACC,QAAN,+IAKI,IANJ,EALQ,CAAZ,CAcA,GAAMN,CAAAA,WAAW,CAAGI,MAAM,CAACH,aAAD,CAAT,4HAAjB,CAMA;AACA;AACA,QAASM,CAAAA,cAAT,MAA4D,IAAlCC,CAAAA,SAAkC,MAAlCA,SAAkC,CAAvBC,SAAuB,MAAvBA,SAAuB,CAAZC,QAAY,MAAZA,QAAY,CAC1D,mBACE,wCACE,KAAC,WAAD,wBACE,KAAC,MAAD,EACE,MAAM,CAAC,yBADT,CAEE,OAAO,CAAC,OAFV,CAGE,qBAAY,kBAHd,CAIE,OAAO,CAAED,SAJX,CAKE,QAAQ,CAAED,SALZ,uBAOE,KAAC,QAAD,IAPF,EADF,EADF,cAYE,KAAC,WAAD,wBACE,KAAC,MAAD,EACE,MAAM,CAAC,uBADT,CAEE,OAAO,CAAC,OAFV,CAGE,qBAAY,gBAHd,CAIE,OAAO,CAAEE,QAJX,CAKE,QAAQ,CAAE,CAACF,SALb,uBAOE,KAAC,UAAD,IAPF,EADF,EAZF,GADF,CA0BD,CAQDD,cAAc,CAACI,YAAf,CAA8B,CAC5BH,SAAS,CAAE,IADiB,CAA9B,CAIA,cAAeD,CAAAA,cAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { t } from '@lingui/macro';\nimport {\n  Button as PFButton,\n  ToolbarItem as PFToolbarItem,\n} from '@patternfly/react-core';\nimport { BarsIcon, EqualsIcon } from '@patternfly/react-icons';\nimport styled from 'styled-components';\n\nconst Button = styled(PFButton)`\n  padding: 0;\n  margin: 0;\n  height: 30px;\n  width: 30px;\n  ${(props) =>\n    props.isActive\n      ? `\n      background-color: #007bba;\n      --pf-c-button--m-plain--active--Color: white;\n      --pf-c-button--m-plain--focus--Color: white;`\n      : null};\n`;\n\nconst ToolbarItem = styled(PFToolbarItem)`\n  & :not(:last-child) {\n    margin-right: 20px;\n  }\n`;\n\n// TODO: Recommend renaming this component to avoid confusion\n// with ExpandingContainer\nfunction ExpandCollapse({ isCompact, onCompact, onExpand }) {\n  return (\n    <>\n      <ToolbarItem>\n        <Button\n          ouiaId=\"toolbar-collapse-button\"\n          variant=\"plain\"\n          aria-label={t`Collapse`}\n          onClick={onCompact}\n          isActive={isCompact}\n        >\n          <BarsIcon />\n        </Button>\n      </ToolbarItem>\n      <ToolbarItem>\n        <Button\n          ouiaId=\"toolbar-expand-button\"\n          variant=\"plain\"\n          aria-label={t`Expand`}\n          onClick={onExpand}\n          isActive={!isCompact}\n        >\n          <EqualsIcon />\n        </Button>\n      </ToolbarItem>\n    </>\n  );\n}\n\nExpandCollapse.propTypes = {\n  onCompact: PropTypes.func.isRequired,\n  onExpand: PropTypes.func.isRequired,\n  isCompact: PropTypes.bool,\n};\n\nExpandCollapse.defaultProps = {\n  isCompact: true,\n};\n\nexport default ExpandCollapse;\n"]},"metadata":{},"sourceType":"module"}