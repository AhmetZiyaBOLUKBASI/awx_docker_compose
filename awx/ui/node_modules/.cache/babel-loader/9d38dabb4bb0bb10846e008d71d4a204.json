{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectWithoutProperties from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _excluded=[\"inventory\",\"credentials\",\"frequency\",\"frequencyOptions\",\"exceptionFrequency\",\"exceptionOptions\",\"timezone\"];import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState}from'react';import{useHistory,useLocation}from'react-router-dom';import{Card}from'@patternfly/react-core';import yaml from'js-yaml';import{SchedulesAPI}from'api';import{getAddedAndRemoved}from'util/lists';import{parseVariableField}from'util/yaml';import mergeExtraVars from'util/prompt/mergeExtraVars';import getSurveyValues from'util/prompt/getSurveyValues';import ScheduleForm from'../shared/ScheduleForm';import buildRuleSet from'../shared/buildRuleSet';import{CardBody}from'../../Card';import{jsx as _jsx}from\"react/jsx-runtime\";function ScheduleEdit(_ref){var hasDaysToKeepField=_ref.hasDaysToKeepField,schedule=_ref.schedule,resource=_ref.resource,launchConfig=_ref.launchConfig,surveyConfig=_ref.surveyConfig,resourceDefaultCredentials=_ref.resourceDefaultCredentials;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),formSubmitError=_useState2[0],setFormSubmitError=_useState2[1];var history=useHistory();var location=useLocation();var pathname=location.pathname;var pathRoot=pathname.substring(0,pathname.indexOf('schedules'));var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values,launchConfiguration,surveyConfiguration){var _surveyConfiguration$;var scheduleCredentials,inventory,_values$credentials,credentials,frequency,frequencyOptions,exceptionFrequency,exceptionOptions,timezone,submitValues,_getAddedAndRemoved,added,removed,extraVars,surveyValues,initialExtraVars,_values$credentials2,ruleSet,requestData,_yield$SchedulesAPI$u,scheduleId,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:scheduleCredentials=_args.length>3&&_args[3]!==undefined?_args[3]:[];inventory=values.inventory,_values$credentials=values.credentials,credentials=_values$credentials===void 0?[]:_values$credentials,frequency=values.frequency,frequencyOptions=values.frequencyOptions,exceptionFrequency=values.exceptionFrequency,exceptionOptions=values.exceptionOptions,timezone=values.timezone,submitValues=_objectWithoutProperties(values,_excluded);_getAddedAndRemoved=getAddedAndRemoved([].concat(_toConsumableArray((resource===null||resource===void 0?void 0:resource.summary_fields.credentials)||[]),_toConsumableArray(scheduleCredentials)),credentials),added=_getAddedAndRemoved.added,removed=_getAddedAndRemoved.removed;surveyValues=getSurveyValues(values);if(!Object.values(surveyValues).length&&surveyConfiguration!==null&&surveyConfiguration!==void 0&&(_surveyConfiguration$=surveyConfiguration.spec)!==null&&_surveyConfiguration$!==void 0&&_surveyConfiguration$.length){surveyConfiguration.spec.forEach(function(q){surveyValues[q.variable]=q.default;});}initialExtraVars=(launchConfiguration===null||launchConfiguration===void 0?void 0:launchConfiguration.ask_variables_on_launch)&&(values.extra_vars||'---');if(surveyConfiguration!==null&&surveyConfiguration!==void 0&&surveyConfiguration.spec){extraVars=yaml.dump(mergeExtraVars(initialExtraVars,surveyValues));}else{extraVars=yaml.dump(mergeExtraVars(initialExtraVars,{}));}submitValues.extra_data=extraVars&&parseVariableField(extraVars);if(Object.keys(submitValues.extra_data).length===0&&Object.keys(schedule.extra_data).length>0){submitValues.extra_data=schedule.extra_data;}delete values.extra_vars;if(inventory){submitValues.inventory=inventory.id;}_context.prev=11;ruleSet=buildRuleSet(values);requestData=_objectSpread(_objectSpread({},submitValues),{},{rrule:ruleSet.toString().replace(/\\n/g,' ')});delete requestData.startDate;delete requestData.startTime;if(Object.keys(values).includes('daysToKeep')){if(!requestData.extra_data){requestData.extra_data=JSON.stringify({days:values.daysToKeep});}else{requestData.extra_data.days=values.daysToKeep;}}_context.next=19;return SchedulesAPI.update(schedule.id,requestData);case 19:_yield$SchedulesAPI$u=_context.sent;scheduleId=_yield$SchedulesAPI$u.data.id;if(!(((_values$credentials2=values.credentials)===null||_values$credentials2===void 0?void 0:_values$credentials2.length)>0)){_context.next=24;break;}_context.next=24;return Promise.all([].concat(_toConsumableArray(removed.map(function(_ref3){var id=_ref3.id;return SchedulesAPI.disassociateCredential(scheduleId,id);})),_toConsumableArray(added.map(function(_ref4){var id=_ref4.id;return SchedulesAPI.associateCredential(scheduleId,id);}))));case 24:history.push(\"\".concat(pathRoot,\"schedules/\").concat(scheduleId,\"/details\"));_context.next=30;break;case 27:_context.prev=27;_context.t0=_context[\"catch\"](11);setFormSubmitError(_context.t0);case 30:case\"end\":return _context.stop();}}},_callee,null,[[11,27]]);}));return function handleSubmit(_x,_x2,_x3){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(ScheduleForm,{schedule:schedule,hasDaysToKeepField:hasDaysToKeepField,handleCancel:function handleCancel(){return history.push(\"\".concat(pathRoot,\"schedules/\").concat(schedule.id,\"/details\"));},handleSubmit:handleSubmit,submitError:formSubmitError,resource:resource,launchConfig:launchConfig,surveyConfig:surveyConfig,resourceDefaultCredentials:resourceDefaultCredentials})})});}ScheduleEdit.defaultProps={};export default ScheduleEdit;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/Schedule/ScheduleEdit/ScheduleEdit.js"],"names":["React","useState","useHistory","useLocation","Card","yaml","SchedulesAPI","getAddedAndRemoved","parseVariableField","mergeExtraVars","getSurveyValues","ScheduleForm","buildRuleSet","CardBody","ScheduleEdit","hasDaysToKeepField","schedule","resource","launchConfig","surveyConfig","resourceDefaultCredentials","formSubmitError","setFormSubmitError","history","location","pathname","pathRoot","substring","indexOf","handleSubmit","values","launchConfiguration","surveyConfiguration","scheduleCredentials","inventory","credentials","frequency","frequencyOptions","exceptionFrequency","exceptionOptions","timezone","submitValues","summary_fields","added","removed","surveyValues","Object","length","spec","forEach","q","variable","default","initialExtraVars","ask_variables_on_launch","extra_vars","extraVars","dump","extra_data","keys","id","ruleSet","requestData","rrule","toString","replace","startDate","startTime","includes","JSON","stringify","days","daysToKeep","update","scheduleId","data","Promise","all","map","disassociateCredential","associateCredential","push","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { shape } from 'prop-types';\nimport { Card } from '@patternfly/react-core';\nimport yaml from 'js-yaml';\nimport { SchedulesAPI } from 'api';\nimport { getAddedAndRemoved } from 'util/lists';\n\nimport { parseVariableField } from 'util/yaml';\nimport mergeExtraVars from 'util/prompt/mergeExtraVars';\nimport getSurveyValues from 'util/prompt/getSurveyValues';\nimport ScheduleForm from '../shared/ScheduleForm';\nimport buildRuleSet from '../shared/buildRuleSet';\nimport { CardBody } from '../../Card';\n\nfunction ScheduleEdit({\n  hasDaysToKeepField,\n  schedule,\n  resource,\n  launchConfig,\n  surveyConfig,\n  resourceDefaultCredentials,\n}) {\n  const [formSubmitError, setFormSubmitError] = useState(null);\n  const history = useHistory();\n  const location = useLocation();\n  const { pathname } = location;\n  const pathRoot = pathname.substring(0, pathname.indexOf('schedules'));\n\n  const handleSubmit = async (\n    values,\n    launchConfiguration,\n    surveyConfiguration,\n    scheduleCredentials = []\n  ) => {\n    const {\n      inventory,\n      credentials = [],\n      frequency,\n      frequencyOptions,\n      exceptionFrequency,\n      exceptionOptions,\n      timezone,\n      ...submitValues\n    } = values;\n    const { added, removed } = getAddedAndRemoved(\n      [...(resource?.summary_fields.credentials || []), ...scheduleCredentials],\n      credentials\n    );\n\n    let extraVars;\n    const surveyValues = getSurveyValues(values);\n\n    if (\n      !Object.values(surveyValues).length &&\n      surveyConfiguration?.spec?.length\n    ) {\n      surveyConfiguration.spec.forEach((q) => {\n        surveyValues[q.variable] = q.default;\n      });\n    }\n\n    const initialExtraVars =\n      launchConfiguration?.ask_variables_on_launch &&\n      (values.extra_vars || '---');\n    if (surveyConfiguration?.spec) {\n      extraVars = yaml.dump(mergeExtraVars(initialExtraVars, surveyValues));\n    } else {\n      extraVars = yaml.dump(mergeExtraVars(initialExtraVars, {}));\n    }\n    submitValues.extra_data = extraVars && parseVariableField(extraVars);\n\n    if (\n      Object.keys(submitValues.extra_data).length === 0 &&\n      Object.keys(schedule.extra_data).length > 0\n    ) {\n      submitValues.extra_data = schedule.extra_data;\n    }\n    delete values.extra_vars;\n    if (inventory) {\n      submitValues.inventory = inventory.id;\n    }\n\n    try {\n      const ruleSet = buildRuleSet(values);\n      const requestData = {\n        ...submitValues,\n        rrule: ruleSet.toString().replace(/\\n/g, ' '),\n      };\n      delete requestData.startDate;\n      delete requestData.startTime;\n\n      if (Object.keys(values).includes('daysToKeep')) {\n        if (!requestData.extra_data) {\n          requestData.extra_data = JSON.stringify({\n            days: values.daysToKeep,\n          });\n        } else {\n          requestData.extra_data.days = values.daysToKeep;\n        }\n      }\n\n      const {\n        data: { id: scheduleId },\n      } = await SchedulesAPI.update(schedule.id, requestData);\n      if (values.credentials?.length > 0) {\n        await Promise.all([\n          ...removed.map(({ id }) =>\n            SchedulesAPI.disassociateCredential(scheduleId, id)\n          ),\n          ...added.map(({ id }) =>\n            SchedulesAPI.associateCredential(scheduleId, id)\n          ),\n        ]);\n      }\n\n      history.push(`${pathRoot}schedules/${scheduleId}/details`);\n    } catch (err) {\n      setFormSubmitError(err);\n    }\n  };\n\n  return (\n    <Card>\n      <CardBody>\n        <ScheduleForm\n          schedule={schedule}\n          hasDaysToKeepField={hasDaysToKeepField}\n          handleCancel={() =>\n            history.push(`${pathRoot}schedules/${schedule.id}/details`)\n          }\n          handleSubmit={handleSubmit}\n          submitError={formSubmitError}\n          resource={resource}\n          launchConfig={launchConfig}\n          surveyConfig={surveyConfig}\n          resourceDefaultCredentials={resourceDefaultCredentials}\n        />\n      </CardBody>\n    </Card>\n  );\n}\n\nScheduleEdit.propTypes = {\n  schedule: shape({}).isRequired,\n};\n\nScheduleEdit.defaultProps = {};\n\nexport default ScheduleEdit;\n"]},"metadata":{},"sourceType":"module"}