{"ast":null,"code":"import _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tabs/tabs';\nimport buttonStyles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport PlusIcon from '@patternfly/react-icons/dist/esm/icons/plus-icon';\nimport { getUniqueId, isElementInView, formatBreakpointMods } from '../../helpers/util';\nimport { TabContent } from './TabContent';\nimport { TabsContextProvider } from './TabsContext';\nimport { Button } from '../Button';\nimport { getOUIAProps, getDefaultOUIAId, canUseDOM } from '../../helpers';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nexport var TabsComponent;\n\n(function (TabsComponent) {\n  TabsComponent[\"div\"] = \"div\";\n  TabsComponent[\"nav\"] = \"nav\";\n})(TabsComponent || (TabsComponent = {}));\n\nvar variantStyle = {\n  default: '',\n  light300: styles.modifiers.colorSchemeLight_300\n};\nexport var Tabs = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tabs, _React$Component);\n\n  var _super = _createSuper(Tabs);\n\n  function Tabs(props) {\n    var _this;\n\n    _classCallCheck(this, Tabs);\n\n    _this = _super.call(this, props);\n    _this.tabList = React.createRef();\n    _this.scrollTimeout = null;\n\n    _this.handleScrollButtons = function () {\n      // add debounce to the scroll event\n      clearTimeout(_this.scrollTimeout);\n      _this.scrollTimeout = setTimeout(function () {\n        var container = _this.tabList.current;\n        var disableLeftScrollButton = true;\n        var disableRightScrollButton = true;\n        var showScrollButtons = false;\n\n        if (container && !_this.props.isVertical) {\n          // get first element and check if it is in view\n          var overflowOnLeft = !isElementInView(container, container.firstChild, false); // get last element and check if it is in view\n\n          var overflowOnRight = !isElementInView(container, container.lastChild, false);\n          showScrollButtons = overflowOnLeft || overflowOnRight;\n          disableLeftScrollButton = !overflowOnLeft;\n          disableRightScrollButton = !overflowOnRight;\n        }\n\n        _this.setState({\n          showScrollButtons: showScrollButtons,\n          disableLeftScrollButton: disableLeftScrollButton,\n          disableRightScrollButton: disableRightScrollButton\n        });\n      }, 100);\n    };\n\n    _this.scrollLeft = function () {\n      // find first Element that is fully in view on the left, then scroll to the element before it\n      if (_this.tabList.current) {\n        var container = _this.tabList.current;\n        var childrenArr = Array.from(container.children);\n        var firstElementInView;\n        var lastElementOutOfView;\n        var i;\n\n        for (i = 0; i < childrenArr.length && !firstElementInView; i++) {\n          if (isElementInView(container, childrenArr[i], false)) {\n            firstElementInView = childrenArr[i];\n            lastElementOutOfView = childrenArr[i - 1];\n          }\n        }\n\n        if (lastElementOutOfView) {\n          container.scrollLeft -= lastElementOutOfView.scrollWidth;\n        }\n      }\n    };\n\n    _this.scrollRight = function () {\n      // find last Element that is fully in view on the right, then scroll to the element after it\n      if (_this.tabList.current) {\n        var container = _this.tabList.current;\n        var childrenArr = Array.from(container.children);\n        var lastElementInView;\n        var firstElementOutOfView;\n\n        for (var i = childrenArr.length - 1; i >= 0 && !lastElementInView; i--) {\n          if (isElementInView(container, childrenArr[i], false)) {\n            lastElementInView = childrenArr[i];\n            firstElementOutOfView = childrenArr[i + 1];\n          }\n        }\n\n        if (firstElementOutOfView) {\n          container.scrollLeft += firstElementOutOfView.scrollWidth;\n        }\n      }\n    };\n\n    _this.state = {\n      showScrollButtons: false,\n      disableLeftScrollButton: true,\n      disableRightScrollButton: true,\n      shownKeys: _this.props.defaultActiveKey !== undefined ? [_this.props.defaultActiveKey] : [_this.props.activeKey],\n      uncontrolledActiveKey: _this.props.defaultActiveKey,\n      uncontrolledIsExpandedLocal: _this.props.defaultIsExpanded,\n      ouiaStateId: getDefaultOUIAId(Tabs.displayName)\n    };\n\n    if (_this.props.isVertical && _this.props.expandable !== undefined) {\n      if (!_this.props.toggleAriaLabel && !_this.props.toggleText) {\n        // eslint-disable-next-line no-console\n        console.error('Tabs:', 'toggleAriaLabel or the toggleText prop is required to make the toggle button accessible');\n      }\n    }\n\n    return _this;\n  }\n\n  _createClass(Tabs, [{\n    key: \"handleTabClick\",\n    value: function handleTabClick(event, eventKey, tabContentRef) {\n      var shownKeys = this.state.shownKeys;\n      var _this$props = this.props,\n          onSelect = _this$props.onSelect,\n          defaultActiveKey = _this$props.defaultActiveKey; // if defaultActiveKey Tabs are uncontrolled, set new active key internally\n\n      if (defaultActiveKey !== undefined) {\n        this.setState({\n          uncontrolledActiveKey: eventKey\n        });\n      } else {\n        onSelect(event, eventKey);\n      } // process any tab content sections outside of the component\n\n\n      if (tabContentRef) {\n        React.Children.toArray(this.props.children).map(function (child) {\n          return child;\n        }).filter(function (child) {\n          return child.props && child.props.tabContentRef && child.props.tabContentRef.current;\n        }).forEach(function (child) {\n          return child.props.tabContentRef.current.hidden = true;\n        }); // most recently selected tabContent\n\n        if (tabContentRef.current) {\n          tabContentRef.current.hidden = false;\n        }\n      }\n\n      if (this.props.mountOnEnter) {\n        this.setState({\n          shownKeys: shownKeys.concat(eventKey)\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.isVertical) {\n        if (canUseDOM) {\n          window.addEventListener('resize', this.handleScrollButtons, false);\n        } // call the handle resize function to check if scroll buttons should be shown\n\n\n        this.handleScrollButtons();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (!this.props.isVertical) {\n        if (canUseDOM) {\n          window.removeEventListener('resize', this.handleScrollButtons, false);\n        }\n      }\n\n      clearTimeout(this.scrollTimeout);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props2 = this.props,\n          activeKey = _this$props2.activeKey,\n          mountOnEnter = _this$props2.mountOnEnter,\n          children = _this$props2.children;\n      var shownKeys = this.state.shownKeys;\n\n      if (prevProps.activeKey !== activeKey && mountOnEnter && shownKeys.indexOf(activeKey) < 0) {\n        this.setState({\n          shownKeys: shownKeys.concat(activeKey)\n        });\n      }\n\n      if (prevProps.children && children && React.Children.toArray(prevProps.children).length !== React.Children.toArray(children).length) {\n        this.handleScrollButtons();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _a = this.props,\n          className = _a.className,\n          children = _a.children,\n          activeKey = _a.activeKey,\n          defaultActiveKey = _a.defaultActiveKey,\n          id = _a.id,\n          isFilled = _a.isFilled,\n          isSecondary = _a.isSecondary,\n          isVertical = _a.isVertical,\n          isBox = _a.isBox,\n          hasBorderBottom = _a.hasBorderBottom,\n          hasSecondaryBorderBottom = _a.hasSecondaryBorderBottom,\n          leftScrollAriaLabel = _a.leftScrollAriaLabel,\n          rightScrollAriaLabel = _a.rightScrollAriaLabel,\n          ariaLabel = _a['aria-label'],\n          component = _a.component,\n          ouiaId = _a.ouiaId,\n          ouiaSafe = _a.ouiaSafe,\n          mountOnEnter = _a.mountOnEnter,\n          unmountOnExit = _a.unmountOnExit,\n          usePageInsets = _a.usePageInsets,\n          inset = _a.inset,\n          variant = _a.variant,\n          expandable = _a.expandable,\n          isExpanded = _a.isExpanded,\n          defaultIsExpanded = _a.defaultIsExpanded,\n          toggleText = _a.toggleText,\n          toggleAriaLabel = _a.toggleAriaLabel,\n          addButtonAriaLabel = _a.addButtonAriaLabel,\n          onToggle = _a.onToggle,\n          onClose = _a.onClose,\n          onAdd = _a.onAdd,\n          props = __rest(_a, [\"className\", \"children\", \"activeKey\", \"defaultActiveKey\", \"id\", \"isFilled\", \"isSecondary\", \"isVertical\", \"isBox\", \"hasBorderBottom\", \"hasSecondaryBorderBottom\", \"leftScrollAriaLabel\", \"rightScrollAriaLabel\", 'aria-label', \"component\", \"ouiaId\", \"ouiaSafe\", \"mountOnEnter\", \"unmountOnExit\", \"usePageInsets\", \"inset\", \"variant\", \"expandable\", \"isExpanded\", \"defaultIsExpanded\", \"toggleText\", \"toggleAriaLabel\", \"addButtonAriaLabel\", \"onToggle\", \"onClose\", \"onAdd\"]);\n\n      var _this$state = this.state,\n          showScrollButtons = _this$state.showScrollButtons,\n          disableLeftScrollButton = _this$state.disableLeftScrollButton,\n          disableRightScrollButton = _this$state.disableRightScrollButton,\n          shownKeys = _this$state.shownKeys,\n          uncontrolledActiveKey = _this$state.uncontrolledActiveKey,\n          uncontrolledIsExpandedLocal = _this$state.uncontrolledIsExpandedLocal;\n      var filteredChildren = React.Children.toArray(children).filter(Boolean).filter(function (child) {\n        return !child.props.isHidden;\n      });\n      var uniqueId = id || getUniqueId();\n      var Component = component === TabsComponent.nav ? 'nav' : 'div';\n      var localActiveKey = defaultActiveKey !== undefined ? uncontrolledActiveKey : activeKey;\n      var isExpandedLocal = defaultIsExpanded !== undefined ? uncontrolledIsExpandedLocal : isExpanded;\n      /*  Uncontrolled expandable tabs */\n\n      var toggleTabs = function toggleTabs(newValue) {\n        if (isExpanded === undefined) {\n          _this2.setState({\n            uncontrolledIsExpandedLocal: newValue\n          });\n        } else {\n          onToggle(newValue);\n        }\n      };\n\n      return React.createElement(TabsContextProvider, {\n        value: {\n          variant: variant,\n          mountOnEnter: mountOnEnter,\n          unmountOnExit: unmountOnExit,\n          localActiveKey: localActiveKey,\n          uniqueId: uniqueId,\n          handleTabClick: function handleTabClick() {\n            return _this2.handleTabClick.apply(_this2, arguments);\n          },\n          handleTabClose: onClose\n        }\n      }, React.createElement(Component, Object.assign({\n        \"aria-label\": ariaLabel,\n        className: css(styles.tabs, isFilled && styles.modifiers.fill, isSecondary && styles.modifiers.secondary, isVertical && styles.modifiers.vertical, isVertical && expandable && formatBreakpointMods(expandable, styles), isVertical && expandable && isExpandedLocal && styles.modifiers.expanded, isBox && styles.modifiers.box, showScrollButtons && !isVertical && styles.modifiers.scrollable, usePageInsets && styles.modifiers.pageInsets, !hasBorderBottom && styles.modifiers.noBorderBottom, hasSecondaryBorderBottom && styles.modifiers.borderBottom, formatBreakpointMods(inset, styles), variantStyle[variant], className)\n      }, getOUIAProps(Tabs.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), {\n        id: id && id\n      }, props), expandable && isVertical && React.createElement(GenerateId, null, function (randomId) {\n        return React.createElement(\"div\", {\n          className: css(styles.tabsToggle)\n        }, React.createElement(\"div\", {\n          className: css(styles.tabsToggleButton)\n        }, React.createElement(Button, {\n          onClick: function onClick() {\n            return toggleTabs(!isExpandedLocal);\n          },\n          variant: \"plain\",\n          \"aria-label\": toggleAriaLabel,\n          \"aria-expanded\": isExpandedLocal,\n          id: \"\".concat(randomId, \"-button\"),\n          \"aria-labelledby\": \"\".concat(randomId, \"-text \").concat(randomId, \"-button\")\n        }, React.createElement(\"span\", {\n          className: css(styles.tabsToggleIcon)\n        }, React.createElement(AngleRightIcon, {\n          \"arian-hidden\": \"true\"\n        })), toggleText && React.createElement(\"span\", {\n          className: css('pf-c-tabs__toggle-text'),\n          id: \"\".concat(randomId, \"-text\")\n        }, toggleText))));\n      }), React.createElement(\"button\", {\n        className: css(styles.tabsScrollButton, isSecondary && buttonStyles.modifiers.secondary),\n        \"aria-label\": leftScrollAriaLabel,\n        onClick: this.scrollLeft,\n        disabled: disableLeftScrollButton,\n        \"aria-hidden\": disableLeftScrollButton\n      }, React.createElement(AngleLeftIcon, null)), React.createElement(\"ul\", {\n        className: css(styles.tabsList),\n        ref: this.tabList,\n        onScroll: this.handleScrollButtons,\n        role: \"tablist\"\n      }, filteredChildren), React.createElement(\"button\", {\n        className: css(styles.tabsScrollButton, isSecondary && buttonStyles.modifiers.secondary),\n        \"aria-label\": rightScrollAriaLabel,\n        onClick: this.scrollRight,\n        disabled: disableRightScrollButton,\n        \"aria-hidden\": disableRightScrollButton\n      }, React.createElement(AngleRightIcon, null)), onAdd !== undefined && React.createElement(\"span\", {\n        className: css(styles.tabsAdd)\n      }, React.createElement(Button, {\n        variant: \"plain\",\n        \"aria-label\": addButtonAriaLabel || 'Add tab',\n        onClick: onAdd\n      }, React.createElement(PlusIcon, null)))), filteredChildren.filter(function (child) {\n        return child.props.children && !(unmountOnExit && child.props.eventKey !== localActiveKey) && !(mountOnEnter && shownKeys.indexOf(child.props.eventKey) === -1);\n      }).map(function (child) {\n        return React.createElement(TabContent, {\n          key: child.props.eventKey,\n          activeKey: localActiveKey,\n          child: child,\n          id: child.props.id || uniqueId,\n          ouiaId: child.props.ouiaId\n        });\n      }));\n    }\n  }]);\n\n  return Tabs;\n}(React.Component);\nTabs.displayName = 'Tabs';\nTabs.defaultProps = {\n  activeKey: 0,\n  onSelect: function onSelect() {\n    return undefined;\n  },\n  isFilled: false,\n  isSecondary: false,\n  isVertical: false,\n  isBox: false,\n  hasBorderBottom: true,\n  leftScrollAriaLabel: 'Scroll left',\n  rightScrollAriaLabel: 'Scroll right',\n  component: TabsComponent.div,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  ouiaSafe: true,\n  variant: 'default',\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onToggle: function onToggle(isExpanded) {\n    return undefined;\n  }\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Tabs/Tabs.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tabs/tabs';\nimport buttonStyles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport PlusIcon from '@patternfly/react-icons/dist/esm/icons/plus-icon';\nimport { getUniqueId, isElementInView, formatBreakpointMods } from '../../helpers/util';\nimport { TabContent } from './TabContent';\nimport { TabProps } from './Tab';\nimport { TabsContextProvider } from './TabsContext';\nimport { Button } from '../Button';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId, canUseDOM } from '../../helpers';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\n\nexport enum TabsComponent {\n  div = 'div',\n  nav = 'nav'\n}\n\nexport interface TabsProps extends Omit<React.HTMLProps<HTMLElement | HTMLDivElement>, 'onSelect'>, OUIAProps {\n  /** Content rendered inside the tabs component. Must be React.ReactElement<TabProps>[] */\n  children: React.ReactNode;\n  /** Additional classes added to the tabs */\n  className?: string;\n  /** Tabs background color variant */\n  variant?: 'default' | 'light300';\n  /** The index of the active tab */\n  activeKey?: number | string;\n  /** The index of the default active tab. Set this for uncontrolled Tabs */\n  defaultActiveKey?: number | string;\n  /** Callback to handle tab selection */\n  onSelect?: (event: React.MouseEvent<HTMLElement, MouseEvent>, eventKey: number | string) => void;\n  /** @beta Callback to handle tab closing */\n  onClose?: (event: React.MouseEvent<HTMLElement, MouseEvent>, eventKey: number | string) => void;\n  /** @beta Callback for the add button. Passing this property inserts the add button */\n  onAdd?: () => void;\n  /** @beta Aria-label for the add button */\n  addButtonAriaLabel?: string;\n  /** Uniquely identifies the tabs */\n  id?: string;\n  /** Enables the filled tab list layout */\n  isFilled?: boolean;\n  /** Enables secondary tab styling */\n  isSecondary?: boolean;\n  /** Enables box styling to the tab component */\n  isBox?: boolean;\n  /** Enables vertical tab styling */\n  isVertical?: boolean;\n  /** Enables border bottom tab styling on tabs. Defaults to true. To remove the bottom border, set this prop to false. */\n  hasBorderBottom?: boolean;\n  /** Enables border bottom styling for secondary tabs */\n  hasSecondaryBorderBottom?: boolean;\n  /** Aria-label for the left scroll button */\n  leftScrollAriaLabel?: string;\n  /** Aria-label for the right scroll button */\n  rightScrollAriaLabel?: string;\n  /** Determines what tag is used around the tabs. Use \"nav\" to define the tabs inside a navigation region */\n  component?: 'div' | 'nav';\n  /** Provides an accessible label for the tabs. Labels should be unique for each set of tabs that are present on a page. When component is set to nav, this prop should be defined to differentiate the tabs from other navigation regions on the page. */\n  'aria-label'?: string;\n  /** Waits until the first \"enter\" transition to mount tab children (add them to the DOM) */\n  mountOnEnter?: boolean;\n  /** Unmounts tab children (removes them from the DOM) when they are no longer visible */\n  unmountOnExit?: boolean;\n  /** Flag indicates that the tabs should use page insets. */\n  usePageInsets?: boolean;\n  /** Insets at various breakpoints. */\n  inset?: {\n    default?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n    sm?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n    md?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n    lg?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n    xl?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n    '2xl'?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n  };\n  /** Enable expandable vertical tabs at various breakpoints. (isVertical should be set to true for this to work) */\n  expandable?: {\n    default?: 'expandable' | 'nonExpandable';\n    sm?: 'expandable' | 'nonExpandable';\n    md?: 'expandable' | 'nonExpandable';\n    lg?: 'expandable' | 'nonExpandable';\n    xl?: 'expandable' | 'nonExpandable';\n    '2xl'?: 'expandable' | 'nonExpandable';\n  };\n  /** Flag to indicate if the vertical tabs are expanded */\n  isExpanded?: boolean;\n  /** Flag indicating the default expanded state for uncontrolled expand/collapse of */\n  defaultIsExpanded?: boolean;\n  /** Text that appears in the expandable toggle */\n  toggleText?: string;\n  /** Aria-label for the expandable toggle */\n  toggleAriaLabel?: string;\n  /** Callback function to toggle the expandable tabs. */\n  onToggle?: (isExpanded: boolean) => void;\n}\n\nconst variantStyle = {\n  default: '',\n  light300: styles.modifiers.colorSchemeLight_300\n};\n\ninterface TabsState {\n  showScrollButtons: boolean;\n  disableLeftScrollButton: boolean;\n  disableRightScrollButton: boolean;\n  shownKeys: (string | number)[];\n  uncontrolledActiveKey: number | string;\n  uncontrolledIsExpandedLocal: boolean;\n  ouiaStateId: string;\n}\n\nexport class Tabs extends React.Component<TabsProps, TabsState> {\n  static displayName = 'Tabs';\n  tabList = React.createRef<HTMLUListElement>();\n  constructor(props: TabsProps) {\n    super(props);\n    this.state = {\n      showScrollButtons: false,\n      disableLeftScrollButton: true,\n      disableRightScrollButton: true,\n      shownKeys: this.props.defaultActiveKey !== undefined ? [this.props.defaultActiveKey] : [this.props.activeKey], // only for mountOnEnter case\n      uncontrolledActiveKey: this.props.defaultActiveKey,\n      uncontrolledIsExpandedLocal: this.props.defaultIsExpanded,\n      ouiaStateId: getDefaultOUIAId(Tabs.displayName)\n    };\n\n    if (this.props.isVertical && this.props.expandable !== undefined) {\n      if (!this.props.toggleAriaLabel && !this.props.toggleText) {\n        // eslint-disable-next-line no-console\n        console.error(\n          'Tabs:',\n          'toggleAriaLabel or the toggleText prop is required to make the toggle button accessible'\n        );\n      }\n    }\n  }\n\n  scrollTimeout: NodeJS.Timeout = null;\n\n  static defaultProps: PickOptional<TabsProps> = {\n    activeKey: 0,\n    onSelect: () => undefined as any,\n    isFilled: false,\n    isSecondary: false,\n    isVertical: false,\n    isBox: false,\n    hasBorderBottom: true,\n    leftScrollAriaLabel: 'Scroll left',\n    rightScrollAriaLabel: 'Scroll right',\n    component: TabsComponent.div,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    ouiaSafe: true,\n    variant: 'default',\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onToggle: (isExpanded): void => undefined\n  };\n\n  handleTabClick(\n    event: React.MouseEvent<HTMLElement, MouseEvent>,\n    eventKey: number | string,\n    tabContentRef: React.RefObject<any>\n  ) {\n    const { shownKeys } = this.state;\n    const { onSelect, defaultActiveKey } = this.props;\n    // if defaultActiveKey Tabs are uncontrolled, set new active key internally\n    if (defaultActiveKey !== undefined) {\n      this.setState({\n        uncontrolledActiveKey: eventKey\n      });\n    } else {\n      onSelect(event, eventKey);\n    }\n\n    // process any tab content sections outside of the component\n    if (tabContentRef) {\n      React.Children.toArray(this.props.children)\n        .map(child => child as React.ReactElement<TabProps>)\n        .filter(child => child.props && child.props.tabContentRef && child.props.tabContentRef.current)\n        .forEach(child => (child.props.tabContentRef.current.hidden = true));\n      // most recently selected tabContent\n      if (tabContentRef.current) {\n        tabContentRef.current.hidden = false;\n      }\n    }\n    if (this.props.mountOnEnter) {\n      this.setState({\n        shownKeys: shownKeys.concat(eventKey)\n      });\n    }\n  }\n\n  handleScrollButtons = () => {\n    // add debounce to the scroll event\n    clearTimeout(this.scrollTimeout);\n    this.scrollTimeout = setTimeout(() => {\n      const container = this.tabList.current;\n      let disableLeftScrollButton = true;\n      let disableRightScrollButton = true;\n      let showScrollButtons = false;\n\n      if (container && !this.props.isVertical) {\n        // get first element and check if it is in view\n        const overflowOnLeft = !isElementInView(container, container.firstChild as HTMLElement, false);\n\n        // get last element and check if it is in view\n        const overflowOnRight = !isElementInView(container, container.lastChild as HTMLElement, false);\n\n        showScrollButtons = overflowOnLeft || overflowOnRight;\n\n        disableLeftScrollButton = !overflowOnLeft;\n        disableRightScrollButton = !overflowOnRight;\n      }\n      this.setState({\n        showScrollButtons,\n        disableLeftScrollButton,\n        disableRightScrollButton\n      });\n    }, 100);\n  };\n\n  scrollLeft = () => {\n    // find first Element that is fully in view on the left, then scroll to the element before it\n    if (this.tabList.current) {\n      const container = this.tabList.current;\n      const childrenArr = Array.from(container.children);\n      let firstElementInView: any;\n      let lastElementOutOfView: any;\n      let i;\n      for (i = 0; i < childrenArr.length && !firstElementInView; i++) {\n        if (isElementInView(container, childrenArr[i] as HTMLElement, false)) {\n          firstElementInView = childrenArr[i];\n          lastElementOutOfView = childrenArr[i - 1];\n        }\n      }\n      if (lastElementOutOfView) {\n        container.scrollLeft -= lastElementOutOfView.scrollWidth;\n      }\n    }\n  };\n\n  scrollRight = () => {\n    // find last Element that is fully in view on the right, then scroll to the element after it\n    if (this.tabList.current) {\n      const container = this.tabList.current as any;\n      const childrenArr = Array.from(container.children);\n      let lastElementInView: any;\n      let firstElementOutOfView: any;\n      for (let i = childrenArr.length - 1; i >= 0 && !lastElementInView; i--) {\n        if (isElementInView(container, childrenArr[i] as HTMLElement, false)) {\n          lastElementInView = childrenArr[i];\n          firstElementOutOfView = childrenArr[i + 1];\n        }\n      }\n      if (firstElementOutOfView) {\n        container.scrollLeft += firstElementOutOfView.scrollWidth;\n      }\n    }\n  };\n\n  componentDidMount() {\n    if (!this.props.isVertical) {\n      if (canUseDOM) {\n        window.addEventListener('resize', this.handleScrollButtons, false);\n      }\n      // call the handle resize function to check if scroll buttons should be shown\n      this.handleScrollButtons();\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this.props.isVertical) {\n      if (canUseDOM) {\n        window.removeEventListener('resize', this.handleScrollButtons, false);\n      }\n    }\n    clearTimeout(this.scrollTimeout);\n  }\n\n  componentDidUpdate(prevProps: TabsProps) {\n    const { activeKey, mountOnEnter, children } = this.props;\n    const { shownKeys } = this.state;\n    if (prevProps.activeKey !== activeKey && mountOnEnter && shownKeys.indexOf(activeKey) < 0) {\n      this.setState({\n        shownKeys: shownKeys.concat(activeKey)\n      });\n    }\n\n    if (\n      prevProps.children &&\n      children &&\n      React.Children.toArray(prevProps.children).length !== React.Children.toArray(children).length\n    ) {\n      this.handleScrollButtons();\n    }\n  }\n\n  render() {\n    const {\n      className,\n      children,\n      activeKey,\n      defaultActiveKey,\n      id,\n      isFilled,\n      isSecondary,\n      isVertical,\n      isBox,\n      hasBorderBottom,\n      hasSecondaryBorderBottom,\n      leftScrollAriaLabel,\n      rightScrollAriaLabel,\n      'aria-label': ariaLabel,\n      component,\n      ouiaId,\n      ouiaSafe,\n      mountOnEnter,\n      unmountOnExit,\n      usePageInsets,\n      inset,\n      variant,\n      expandable,\n      isExpanded,\n      defaultIsExpanded,\n      toggleText,\n      toggleAriaLabel,\n      addButtonAriaLabel,\n      onToggle,\n      onClose,\n      onAdd,\n      ...props\n    } = this.props;\n    const {\n      showScrollButtons,\n      disableLeftScrollButton,\n      disableRightScrollButton,\n      shownKeys,\n      uncontrolledActiveKey,\n      uncontrolledIsExpandedLocal\n    } = this.state;\n    const filteredChildren = (React.Children.toArray(children) as React.ReactElement<TabProps>[])\n      .filter(Boolean)\n      .filter(child => !child.props.isHidden);\n\n    const uniqueId = id || getUniqueId();\n    const Component: any = component === TabsComponent.nav ? 'nav' : 'div';\n    const localActiveKey = defaultActiveKey !== undefined ? uncontrolledActiveKey : activeKey;\n\n    const isExpandedLocal = defaultIsExpanded !== undefined ? uncontrolledIsExpandedLocal : isExpanded;\n    /*  Uncontrolled expandable tabs */\n    const toggleTabs = (newValue: boolean) => {\n      if (isExpanded === undefined) {\n        this.setState({ uncontrolledIsExpandedLocal: newValue });\n      } else {\n        onToggle(newValue);\n      }\n    };\n\n    return (\n      <TabsContextProvider\n        value={{\n          variant,\n          mountOnEnter,\n          unmountOnExit,\n          localActiveKey,\n          uniqueId,\n          handleTabClick: (...args) => this.handleTabClick(...args),\n          handleTabClose: onClose\n        }}\n      >\n        <Component\n          aria-label={ariaLabel}\n          className={css(\n            styles.tabs,\n            isFilled && styles.modifiers.fill,\n            isSecondary && styles.modifiers.secondary,\n            isVertical && styles.modifiers.vertical,\n            isVertical && expandable && formatBreakpointMods(expandable, styles),\n            isVertical && expandable && isExpandedLocal && styles.modifiers.expanded,\n            isBox && styles.modifiers.box,\n            showScrollButtons && !isVertical && styles.modifiers.scrollable,\n            usePageInsets && styles.modifiers.pageInsets,\n            !hasBorderBottom && styles.modifiers.noBorderBottom,\n            hasSecondaryBorderBottom && styles.modifiers.borderBottom,\n            formatBreakpointMods(inset, styles),\n            variantStyle[variant],\n            className\n          )}\n          {...getOUIAProps(Tabs.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n          id={id && id}\n          {...props}\n        >\n          {expandable && isVertical && (\n            <GenerateId>\n              {randomId => (\n                <div className={css(styles.tabsToggle)}>\n                  <div className={css(styles.tabsToggleButton)}>\n                    <Button\n                      onClick={() => toggleTabs(!isExpandedLocal)}\n                      variant=\"plain\"\n                      aria-label={toggleAriaLabel}\n                      aria-expanded={isExpandedLocal}\n                      id={`${randomId}-button`}\n                      aria-labelledby={`${randomId}-text ${randomId}-button`}\n                    >\n                      <span className={css(styles.tabsToggleIcon)}>\n                        <AngleRightIcon arian-hidden=\"true\" />\n                      </span>\n                      {toggleText && (\n                        <span className={css('pf-c-tabs__toggle-text')} id={`${randomId}-text`}>\n                          {toggleText}\n                        </span>\n                      )}\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </GenerateId>\n          )}\n          <button\n            className={css(styles.tabsScrollButton, isSecondary && buttonStyles.modifiers.secondary)}\n            aria-label={leftScrollAriaLabel}\n            onClick={this.scrollLeft}\n            disabled={disableLeftScrollButton}\n            aria-hidden={disableLeftScrollButton}\n          >\n            <AngleLeftIcon />\n          </button>\n          <ul className={css(styles.tabsList)} ref={this.tabList} onScroll={this.handleScrollButtons} role=\"tablist\">\n            {filteredChildren}\n          </ul>\n          <button\n            className={css(styles.tabsScrollButton, isSecondary && buttonStyles.modifiers.secondary)}\n            aria-label={rightScrollAriaLabel}\n            onClick={this.scrollRight}\n            disabled={disableRightScrollButton}\n            aria-hidden={disableRightScrollButton}\n          >\n            <AngleRightIcon />\n          </button>\n          {onAdd !== undefined && (\n            <span className={css(styles.tabsAdd)}>\n              <Button variant=\"plain\" aria-label={addButtonAriaLabel || 'Add tab'} onClick={onAdd}>\n                <PlusIcon />\n              </Button>\n            </span>\n          )}\n        </Component>\n        {filteredChildren\n          .filter(\n            child =>\n              child.props.children &&\n              !(unmountOnExit && child.props.eventKey !== localActiveKey) &&\n              !(mountOnEnter && shownKeys.indexOf(child.props.eventKey) === -1)\n          )\n          .map(child => (\n            <TabContent\n              key={child.props.eventKey}\n              activeKey={localActiveKey}\n              child={child}\n              id={child.props.id || uniqueId}\n              ouiaId={child.props.ouiaId}\n            />\n          ))}\n      </TabsContextProvider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}