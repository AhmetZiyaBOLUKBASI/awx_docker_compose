{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectWithoutProperties from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"id\",\"name\",\"label\",\"tooltip\",\"validate\",\"isDisabled\"];import React from'react';import{useField}from'formik';import{Checkbox}from'@patternfly/react-core';import Popover from'../Popover';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CheckboxField(_ref){var id=_ref.id,name=_ref.name,label=_ref.label,tooltip=_ref.tooltip,validate=_ref.validate,isDisabled=_ref.isDisabled,rest=_objectWithoutProperties(_ref,_excluded);var _useField=useField({name:name,validate:validate}),_useField2=_slicedToArray(_useField,1),field=_useField2[0];return/*#__PURE__*/_jsx(Checkbox,_objectSpread(_objectSpread(_objectSpread({isDisabled:isDisabled,\"aria-label\":label,ouiaId:id,label:/*#__PURE__*/_jsxs(\"span\",{children:[label,\"\\xA0\",tooltip&&/*#__PURE__*/_jsx(Popover,{ouiaId:\"checkbox-tooltip\",content:tooltip})]}),id:id},rest),{},{isChecked:field.value},field),{},{onChange:function onChange(value,event){field.onChange(event);}}));}CheckboxField.defaultProps={validate:function validate(){},tooltip:''};export default CheckboxField;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/FormField/CheckboxField.js"],"names":["React","useField","Checkbox","Popover","CheckboxField","id","name","label","tooltip","validate","isDisabled","rest","field","value","event","onChange","defaultProps"],"mappings":"8YAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,QAAT,KAAyB,QAAzB,CACA,OAASC,QAAT,KAAyB,wBAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,C,wFAEA,QAASC,CAAAA,aAAT,MAQG,IAPDC,CAAAA,EAOC,MAPDA,EAOC,CANDC,IAMC,MANDA,IAMC,CALDC,KAKC,MALDA,KAKC,CAJDC,OAIC,MAJDA,OAIC,CAHDC,QAGC,MAHDA,QAGC,CAFDC,UAEC,MAFDA,UAEC,CADEC,IACF,0CACD,cAAgBV,QAAQ,CAAC,CAAEK,IAAI,CAAJA,IAAF,CAAQG,QAAQ,CAARA,QAAR,CAAD,CAAxB,wCAAOG,KAAP,eACA,mBACE,KAAC,QAAD,4CACE,UAAU,CAAEF,UADd,CAEE,aAAYH,KAFd,CAGE,MAAM,CAAEF,EAHV,CAIE,KAAK,cACH,wBACGE,KADH,QAGGC,OAAO,eAAI,KAAC,OAAD,EAAS,MAAM,CAAC,kBAAhB,CAAmC,OAAO,CAAEA,OAA5C,EAHd,GALJ,CAWE,EAAE,CAAEH,EAXN,EAYMM,IAZN,MAaE,SAAS,CAAEC,KAAK,CAACC,KAbnB,EAcMD,KAdN,MAeE,QAAQ,CAAE,kBAACC,KAAD,CAAQC,KAAR,CAAkB,CAC1BF,KAAK,CAACG,QAAN,CAAeD,KAAf,EACD,CAjBH,GADF,CAqBD,CAQDV,aAAa,CAACY,YAAd,CAA6B,CAC3BP,QAAQ,CAAE,mBAAM,CAAE,CADS,CAE3BD,OAAO,CAAE,EAFkB,CAA7B,CAKA,cAAeJ,CAAAA,aAAf","sourcesContent":["import React from 'react';\nimport { string, func, node } from 'prop-types';\nimport { useField } from 'formik';\nimport { Checkbox } from '@patternfly/react-core';\nimport Popover from '../Popover';\n\nfunction CheckboxField({\n  id,\n  name,\n  label,\n  tooltip,\n  validate,\n  isDisabled,\n  ...rest\n}) {\n  const [field] = useField({ name, validate });\n  return (\n    <Checkbox\n      isDisabled={isDisabled}\n      aria-label={label}\n      ouiaId={id}\n      label={\n        <span>\n          {label}\n          &nbsp;\n          {tooltip && <Popover ouiaId=\"checkbox-tooltip\" content={tooltip} />}\n        </span>\n      }\n      id={id}\n      {...rest}\n      isChecked={field.value}\n      {...field}\n      onChange={(value, event) => {\n        field.onChange(event);\n      }}\n    />\n  );\n}\nCheckboxField.propTypes = {\n  id: string.isRequired,\n  name: string.isRequired,\n  label: string.isRequired,\n  validate: func,\n  tooltip: node,\n};\nCheckboxField.defaultProps = {\n  validate: () => {},\n  tooltip: '',\n};\n\nexport default CheckboxField;\n"]},"metadata":{},"sourceType":"module"}