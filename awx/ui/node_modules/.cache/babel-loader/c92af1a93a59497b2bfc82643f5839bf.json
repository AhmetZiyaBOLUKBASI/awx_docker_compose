{"ast":null,"code":"import{i18n}from\"@lingui/core\";import React from'react';import CheckboxCard from'./CheckboxCard';import{SelectedList}from'../SelectedList';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function RolesStep(_ref){var onRolesClick=_ref.onRolesClick,roles=_ref.roles,selectedListKey=_ref.selectedListKey,selectedListLabel=_ref.selectedListLabel,selectedResourceRows=_ref.selectedResourceRows,selectedRoleRows=_ref.selectedRoleRows;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{children:/*i18n*/i18n._(\"Choose roles to apply to the selected resources.  Note that all selected roles will be applied to all selected resources.\")}),/*#__PURE__*/_jsx(\"div\",{children:selectedResourceRows.length>0&&/*#__PURE__*/_jsx(SelectedList,{displayKey:selectedListKey,isReadOnly:true,label:selectedListLabel||/*i18n*/i18n._(\"Selected\"),selected:selectedResourceRows})}),/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gridTemplateColumns:'1fr 1fr',gap:'20px 20px',marginTop:'20px'},children:Object.keys(roles).map(function(role){return/*#__PURE__*/_jsx(CheckboxCard,{description:roles[role].description,itemId:roles[role].id,isSelected:selectedRoleRows.some(function(item){return item.id===roles[role].id;}),name:roles[role].name,onSelect:function onSelect(){return onRolesClick(roles[role]);}},roles[role].id);})})]});}RolesStep.defaultProps={onRolesClick:function onRolesClick(){},selectedListKey:'name',selectedListLabel:null,selectedResourceRows:[],selectedRoleRows:[]};export default RolesStep;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/AddRole/SelectRoleStep.js"],"names":["React","CheckboxCard","SelectedList","RolesStep","onRolesClick","roles","selectedListKey","selectedListLabel","selectedResourceRows","selectedRoleRows","length","display","gridTemplateColumns","gap","marginTop","Object","keys","map","role","description","id","some","item","name","defaultProps"],"mappings":"+BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAKA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,OAASC,YAAT,KAA6B,iBAA7B,C,6IAEA,QAASC,CAAAA,SAAT,MAOG,IANDC,CAAAA,YAMC,MANDA,YAMC,CALDC,KAKC,MALDA,KAKC,CAJDC,eAIC,MAJDA,eAIC,CAHDC,iBAGC,MAHDA,iBAGC,CAFDC,oBAEC,MAFDA,oBAEC,CADDC,gBACC,MADDA,gBACC,CACD,mBACE,wCACE,6BACG,mIADH,EADF,cAIE,qBACGD,oBAAoB,CAACE,MAArB,CAA8B,CAA9B,eACC,KAAC,YAAD,EACE,UAAU,CAAEJ,eADd,CAEE,UAAU,KAFZ,CAGE,KAAK,CAAEC,iBAAiB,UAAI,kBAH9B,CAIE,QAAQ,CAAEC,oBAJZ,EAFJ,EAJF,cAcE,YACE,KAAK,CAAE,CACLG,OAAO,CAAE,MADJ,CAELC,mBAAmB,CAAE,SAFhB,CAGLC,GAAG,CAAE,WAHA,CAILC,SAAS,CAAE,MAJN,CADT,UAQGC,MAAM,CAACC,IAAP,CAAYX,KAAZ,EAAmBY,GAAnB,CAAuB,SAACC,IAAD,qBACtB,KAAC,YAAD,EACE,WAAW,CAAEb,KAAK,CAACa,IAAD,CAAL,CAAYC,WAD3B,CAEE,MAAM,CAAEd,KAAK,CAACa,IAAD,CAAL,CAAYE,EAFtB,CAGE,UAAU,CAAEX,gBAAgB,CAACY,IAAjB,CACV,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACF,EAAL,GAAYf,KAAK,CAACa,IAAD,CAAL,CAAYE,EAAlC,EADU,CAHd,CAOE,IAAI,CAAEf,KAAK,CAACa,IAAD,CAAL,CAAYK,IAPpB,CAQE,QAAQ,CAAE,0BAAMnB,CAAAA,YAAY,CAACC,KAAK,CAACa,IAAD,CAAN,CAAlB,EARZ,EAMOb,KAAK,CAACa,IAAD,CAAL,CAAYE,EANnB,CADsB,EAAvB,CARH,EAdF,GADF,CAsCD,CAWDjB,SAAS,CAACqB,YAAV,CAAyB,CACvBpB,YAAY,CAAE,uBAAM,CAAE,CADC,CAEvBE,eAAe,CAAE,MAFM,CAGvBC,iBAAiB,CAAE,IAHI,CAIvBC,oBAAoB,CAAE,EAJC,CAKvBC,gBAAgB,CAAE,EALK,CAAzB,CAQA,cAAeN,CAAAA,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { t } from '@lingui/macro';\n\nimport CheckboxCard from './CheckboxCard';\nimport { SelectedList } from '../SelectedList';\n\nfunction RolesStep({\n  onRolesClick,\n  roles,\n  selectedListKey,\n  selectedListLabel,\n  selectedResourceRows,\n  selectedRoleRows,\n}) {\n  return (\n    <>\n      <div>\n        {t`Choose roles to apply to the selected resources.  Note that all selected roles will be applied to all selected resources.`}\n      </div>\n      <div>\n        {selectedResourceRows.length > 0 && (\n          <SelectedList\n            displayKey={selectedListKey}\n            isReadOnly\n            label={selectedListLabel || t`Selected`}\n            selected={selectedResourceRows}\n          />\n        )}\n      </div>\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: '1fr 1fr',\n          gap: '20px 20px',\n          marginTop: '20px',\n        }}\n      >\n        {Object.keys(roles).map((role) => (\n          <CheckboxCard\n            description={roles[role].description}\n            itemId={roles[role].id}\n            isSelected={selectedRoleRows.some(\n              (item) => item.id === roles[role].id\n            )}\n            key={roles[role].id}\n            name={roles[role].name}\n            onSelect={() => onRolesClick(roles[role])}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n\nRolesStep.propTypes = {\n  onRolesClick: PropTypes.func,\n  roles: PropTypes.objectOf(PropTypes.object).isRequired,\n  selectedListKey: PropTypes.string,\n  selectedListLabel: PropTypes.string,\n  selectedResourceRows: PropTypes.arrayOf(PropTypes.object),\n  selectedRoleRows: PropTypes.arrayOf(PropTypes.object),\n};\n\nRolesStep.defaultProps = {\n  onRolesClick: () => {},\n  selectedListKey: 'name',\n  selectedListLabel: null,\n  selectedResourceRows: [],\n  selectedRoleRows: [],\n};\n\nexport default RolesStep;\n"]},"metadata":{},"sourceType":"module"}