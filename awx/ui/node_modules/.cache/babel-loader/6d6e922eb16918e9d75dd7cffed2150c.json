{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import React from'react';import{useField}from'formik';import StepName from'components/LaunchPrompt/steps/StepName';import RunStep from'./RunStep';import{jsx as _jsx}from\"react/jsx-runtime\";var STEP_ID='runType';export default function useRunTypeStep(askLinkType){var _useField=useField('linkType'),_useField2=_slicedToArray(_useField,2),meta=_useField2[1];return{step:getStep(askLinkType,meta),initialValues:askLinkType?{linkType:'success'}:{},isReady:true,contentError:null,hasError:!!meta.error,setTouched:function setTouched(setFieldTouched){setFieldTouched('linkType',true,false);},validate:function validate(){}};}function getStep(askLinkType,meta){if(!askLinkType){return null;}return{id:STEP_ID,name:/*#__PURE__*/_jsx(StepName,{hasErrors:false,id:\"run-type-step\",children:/*i18n*/i18n._(\"Run type\")}),component:/*#__PURE__*/_jsx(RunStep,{}),enableNext:meta.value!==''};}","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Template/WorkflowJobTemplateVisualizer/Modals/NodeModals/useRunTypeStep.js"],"names":["React","useField","StepName","RunStep","STEP_ID","useRunTypeStep","askLinkType","meta","step","getStep","initialValues","linkType","isReady","contentError","hasError","error","setTouched","setFieldTouched","validate","id","name","component","enableNext","value"],"mappings":"sIAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,QAAT,KAAyB,QAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wCAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,C,2CAEA,GAAMC,CAAAA,OAAO,CAAG,SAAhB,CAEA,cAAe,SAASC,CAAAA,cAAT,CAAwBC,WAAxB,CAAqC,CAClD,cAAiBL,QAAQ,CAAC,UAAD,CAAzB,wCAASM,IAAT,eAEA,MAAO,CACLC,IAAI,CAAEC,OAAO,CAACH,WAAD,CAAcC,IAAd,CADR,CAELG,aAAa,CAAEJ,WAAW,CAAG,CAAEK,QAAQ,CAAE,SAAZ,CAAH,CAA6B,EAFlD,CAGLC,OAAO,CAAE,IAHJ,CAILC,YAAY,CAAE,IAJT,CAKLC,QAAQ,CAAE,CAAC,CAACP,IAAI,CAACQ,KALZ,CAMLC,UAAU,CAAE,oBAACC,eAAD,CAAqB,CAC/BA,eAAe,CAAC,UAAD,CAAa,IAAb,CAAmB,KAAnB,CAAf,CACD,CARI,CASLC,QAAQ,CAAE,mBAAM,CAAE,CATb,CAAP,CAWD,CACD,QAAST,CAAAA,OAAT,CAAiBH,WAAjB,CAA8BC,IAA9B,CAAoC,CAClC,GAAI,CAACD,WAAL,CAAkB,CAChB,MAAO,KAAP,CACD,CACD,MAAO,CACLa,EAAE,CAAEf,OADC,CAELgB,IAAI,cACF,KAAC,QAAD,EAAU,SAAS,CAAE,KAArB,CAA4B,EAAE,CAAC,eAA/B,kBACG,kBADH,EAHG,CAOLC,SAAS,cAAE,KAAC,OAAD,IAPN,CAQLC,UAAU,CAAEf,IAAI,CAACgB,KAAL,GAAe,EARtB,CAAP,CAUD","sourcesContent":["import React from 'react';\nimport { t } from '@lingui/macro';\nimport { useField } from 'formik';\nimport StepName from 'components/LaunchPrompt/steps/StepName';\nimport RunStep from './RunStep';\n\nconst STEP_ID = 'runType';\n\nexport default function useRunTypeStep(askLinkType) {\n  const [, meta] = useField('linkType');\n\n  return {\n    step: getStep(askLinkType, meta),\n    initialValues: askLinkType ? { linkType: 'success' } : {},\n    isReady: true,\n    contentError: null,\n    hasError: !!meta.error,\n    setTouched: (setFieldTouched) => {\n      setFieldTouched('linkType', true, false);\n    },\n    validate: () => {},\n  };\n}\nfunction getStep(askLinkType, meta) {\n  if (!askLinkType) {\n    return null;\n  }\n  return {\n    id: STEP_ID,\n    name: (\n      <StepName hasErrors={false} id=\"run-type-step\">\n        {t`Run type`}\n      </StepName>\n    ),\n    component: <RunStep />,\n    enableNext: meta.value !== '',\n  };\n}\n"]},"metadata":{},"sourceType":"module"}