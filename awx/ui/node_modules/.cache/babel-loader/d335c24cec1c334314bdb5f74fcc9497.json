{"ast":null,"code":"import _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownContext } from './dropdownConstants';\nimport { KEYHANDLER_DIRECTION } from '../../helpers/constants';\nimport { preventedEvents } from '../../helpers/util';\nimport { Tooltip } from '../Tooltip';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nexport var InternalDropdownItem = /*#__PURE__*/function (_React$Component) {\n  _inherits(InternalDropdownItem, _React$Component);\n\n  var _super = _createSuper(InternalDropdownItem);\n\n  function InternalDropdownItem() {\n    var _this;\n\n    _classCallCheck(this, InternalDropdownItem);\n\n    _this = _super.apply(this, arguments);\n    _this.ref = React.createRef();\n    _this.additionalRef = React.createRef();\n\n    _this.getInnerNode = function (node) {\n      return node && node.childNodes && node.childNodes.length ? node.childNodes[0] : node;\n    };\n\n    _this.onKeyDown = function (event) {\n      // Detected key press on this item, notify the menu parent so that the appropriate item can be focused\n      var innerIndex = event.target === _this.ref.current ? 0 : 1;\n\n      if (!_this.props.customChild) {\n        event.preventDefault();\n      }\n\n      if (event.key === 'ArrowUp') {\n        _this.props.context.keyHandler(_this.props.index, innerIndex, KEYHANDLER_DIRECTION.UP);\n\n        event.stopPropagation();\n      } else if (event.key === 'ArrowDown') {\n        _this.props.context.keyHandler(_this.props.index, innerIndex, KEYHANDLER_DIRECTION.DOWN);\n\n        event.stopPropagation();\n      } else if (event.key === 'ArrowRight') {\n        _this.props.context.keyHandler(_this.props.index, innerIndex, KEYHANDLER_DIRECTION.RIGHT);\n\n        event.stopPropagation();\n      } else if (event.key === 'ArrowLeft') {\n        _this.props.context.keyHandler(_this.props.index, innerIndex, KEYHANDLER_DIRECTION.LEFT);\n\n        event.stopPropagation();\n      } else if (event.key === 'Enter' || event.key === ' ') {\n        event.target.click();\n        _this.props.enterTriggersArrowDown && _this.props.context.keyHandler(_this.props.index, innerIndex, KEYHANDLER_DIRECTION.DOWN);\n      }\n    };\n\n    _this.componentRef = function (element) {\n      _this.ref.current = element;\n      var component = _this.props.component;\n      var ref = component.ref;\n\n      if (ref) {\n        if (typeof ref === 'function') {\n          ref(element);\n        } else {\n          ref.current = element;\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(InternalDropdownItem, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          context = _this$props.context,\n          index = _this$props.index,\n          isDisabled = _this$props.isDisabled,\n          role = _this$props.role,\n          customChild = _this$props.customChild,\n          autoFocus = _this$props.autoFocus;\n      var customRef = customChild ? this.getInnerNode(this.ref.current) : this.ref.current;\n      context.sendRef(index, [customRef, customChild ? customRef : this.additionalRef.current], isDisabled, role === 'separator');\n      autoFocus && setTimeout(function () {\n        return customRef.focus();\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this$props2 = this.props,\n          context = _this$props2.context,\n          index = _this$props2.index,\n          isDisabled = _this$props2.isDisabled,\n          role = _this$props2.role,\n          customChild = _this$props2.customChild;\n      var customRef = customChild ? this.getInnerNode(this.ref.current) : this.ref.current;\n      context.sendRef(index, [customRef, customChild ? customRef : this.additionalRef.current], isDisabled, role === 'separator');\n    }\n  }, {\n    key: \"extendAdditionalChildRef\",\n    value: function extendAdditionalChildRef() {\n      var additionalChild = this.props.additionalChild;\n      return React.cloneElement(additionalChild, {\n        ref: this.additionalRef\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      var _a = this.props,\n          className = _a.className,\n          children = _a.children,\n          isHovered = _a.isHovered,\n          context = _a.context,\n          _onClick = _a.onClick,\n          component = _a.component,\n          role = _a.role,\n          isDisabled = _a.isDisabled,\n          isAriaDisabled = _a.isAriaDisabled,\n          isPlainText = _a.isPlainText,\n          index = _a.index,\n          href = _a.href,\n          tooltip = _a.tooltip,\n          tooltipProps = _a.tooltipProps,\n          id = _a.id,\n          componentID = _a.componentID,\n          listItemClassName = _a.listItemClassName,\n          additionalChild = _a.additionalChild,\n          customChild = _a.customChild,\n          enterTriggersArrowDown = _a.enterTriggersArrowDown,\n          icon = _a.icon,\n          autoFocus = _a.autoFocus,\n          styleChildren = _a.styleChildren,\n          description = _a.description,\n          inoperableEvents = _a.inoperableEvents,\n          additionalProps = __rest(_a, [\"className\", \"children\", \"isHovered\", \"context\", \"onClick\", \"component\", \"role\", \"isDisabled\", \"isAriaDisabled\", \"isPlainText\", \"index\", \"href\", \"tooltip\", \"tooltipProps\", \"id\", \"componentID\", \"listItemClassName\", \"additionalChild\", \"customChild\", \"enterTriggersArrowDown\", \"icon\", \"autoFocus\", \"styleChildren\", \"description\", \"inoperableEvents\"]);\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n      var classes = css(icon && styles.modifiers.icon, isAriaDisabled && styles.modifiers.ariaDisabled, className);\n\n      if (component === 'a') {\n        additionalProps['aria-disabled'] = isDisabled || isAriaDisabled;\n      } else if (component === 'button') {\n        additionalProps['aria-disabled'] = isDisabled || isAriaDisabled;\n        additionalProps.type = additionalProps.type || 'button';\n      }\n\n      var renderWithTooltip = function renderWithTooltip(childNode) {\n        return tooltip ? React.createElement(Tooltip, Object.assign({\n          content: tooltip\n        }, tooltipProps), childNode) : childNode;\n      };\n\n      var renderClonedComponent = function renderClonedComponent(element) {\n        return React.cloneElement(element, Object.assign(Object.assign({}, styleChildren && {\n          className: css(element.props.className, classes)\n        }), _this2.props.role !== 'separator' && {\n          role: role,\n          ref: _this2.componentRef\n        }));\n      };\n\n      var renderDefaultComponent = function renderDefaultComponent(tag) {\n        var Component = tag;\n        var componentContent = description ? React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          className: styles.dropdownMenuItemMain\n        }, icon && React.createElement(\"span\", {\n          className: css(styles.dropdownMenuItemIcon)\n        }, icon), children), React.createElement(\"div\", {\n          className: styles.dropdownMenuItemDescription\n        }, description)) : React.createElement(React.Fragment, null, icon && React.createElement(\"span\", {\n          className: css(styles.dropdownMenuItemIcon)\n        }, icon), children);\n        return React.createElement(Component, Object.assign({}, additionalProps, isDisabled || isAriaDisabled ? preventedEvents(inoperableEvents) : null, {\n          href: href,\n          ref: _this2.ref,\n          className: classes,\n          id: componentID,\n          role: role\n        }), componentContent);\n      };\n\n      return React.createElement(DropdownContext.Consumer, null, function (_ref) {\n        var onSelect = _ref.onSelect,\n            itemClass = _ref.itemClass,\n            disabledClass = _ref.disabledClass,\n            plainTextClass = _ref.plainTextClass;\n\n        if (_this2.props.role !== 'separator') {\n          classes = css(classes, isDisabled && disabledClass, isPlainText && plainTextClass, itemClass, description && styles.modifiers.description);\n        }\n\n        if (customChild) {\n          return React.cloneElement(customChild, {\n            ref: _this2.ref,\n            onKeyDown: _this2.onKeyDown\n          });\n        }\n\n        return React.createElement(\"li\", {\n          className: listItemClassName || null,\n          role: \"none\",\n          onKeyDown: _this2.onKeyDown,\n          onClick: function onClick(event) {\n            if (!isDisabled && !isAriaDisabled) {\n              _onClick(event);\n\n              onSelect(event);\n            }\n          },\n          id: id\n        }, renderWithTooltip(React.isValidElement(component) ? renderClonedComponent(component) : renderDefaultComponent(component)), additionalChild && _this2.extendAdditionalChildRef());\n      });\n    }\n  }]);\n\n  return InternalDropdownItem;\n}(React.Component);\nInternalDropdownItem.displayName = 'InternalDropdownItem';\nInternalDropdownItem.defaultProps = {\n  className: '',\n  isHovered: false,\n  component: 'a',\n  role: 'none',\n  isDisabled: false,\n  isPlainText: false,\n  tooltipProps: {},\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onClick: function onClick(event) {\n    return undefined;\n  },\n  index: -1,\n  context: {\n    keyHandler: function keyHandler() {},\n    sendRef: function sendRef() {}\n  },\n  enterTriggersArrowDown: false,\n  icon: null,\n  styleChildren: true,\n  description: null,\n  inoperableEvents: ['onClick', 'onKeyPress']\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Dropdown/InternalDropdownItem.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownContext } from './dropdownConstants';\nimport { KEYHANDLER_DIRECTION } from '../../helpers/constants';\nimport { preventedEvents } from '../../helpers/util';\nimport { Tooltip } from '../Tooltip';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\n\nexport interface InternalDropdownItemProps extends React.HTMLProps<HTMLAnchorElement> {\n  /** Anything which can be rendered as dropdown item */\n  children?: React.ReactNode;\n  /** Whether to set className on component when React.isValidElement(component) */\n  styleChildren?: boolean;\n  /** Classes applied to root element of dropdown item */\n  className?: string;\n  /** Class applied to list element */\n  listItemClassName?: string;\n  /** Indicates which component will be used as dropdown item. Will have className injected if React.isValidElement(component) */\n  component?: React.ReactNode;\n  /** Role for the item */\n  role?: string;\n  /** Render dropdown item as disabled option */\n  isDisabled?: boolean;\n  /** Render dropdown item as aria disabled option */\n  isAriaDisabled?: boolean;\n  /** Render dropdown item as a non-interactive item */\n  isPlainText?: boolean;\n  /** Forces display of the hover state of the element */\n  isHovered?: boolean;\n  /** Default hyperlink location */\n  href?: string;\n  /** Tooltip to display when hovered over the item */\n  tooltip?: React.ReactNode;\n  /** Additional tooltip props forwarded to the Tooltip component */\n  tooltipProps?: any;\n  index?: number;\n  context?: {\n    keyHandler?: (index: number, innerIndex: number, direction: string) => void;\n    sendRef?: (index: number, ref: any, isDisabled: boolean, isSeparator: boolean) => void;\n  };\n  /** Callback for click event */\n  onClick?: (event: React.MouseEvent<any> | React.KeyboardEvent | MouseEvent) => void;\n  /** ID for the list element */\n  id?: string;\n  /** ID for the component element */\n  componentID?: string;\n  /** Additional content to include alongside item within the <li> */\n  additionalChild?: React.ReactNode;\n  /** Custom item rendering that receives the DropdownContext */\n  customChild?: React.ReactNode;\n  /** Flag indicating if hitting enter on an item also triggers an arrow down key press */\n  enterTriggersArrowDown?: boolean;\n  /** An image to display within the InternalDropdownItem, appearing before any component children */\n  icon?: React.ReactNode;\n  /** Initial focus on the item when the menu is opened (Note: Only applicable to one of the items) */\n  autoFocus?: boolean;\n  /** A short description of the dropdown item, displayed under the dropdown item content */\n  description?: React.ReactNode;\n  /** Events to prevent when the item is disabled */\n  inoperableEvents?: string[];\n}\n\nexport class InternalDropdownItem extends React.Component<InternalDropdownItemProps> {\n  static displayName = 'InternalDropdownItem';\n  ref = React.createRef<HTMLLIElement>();\n  additionalRef = React.createRef<any>();\n\n  static defaultProps: InternalDropdownItemProps = {\n    className: '',\n    isHovered: false,\n    component: 'a',\n    role: 'none',\n    isDisabled: false,\n    isPlainText: false,\n    tooltipProps: {},\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onClick: (event: React.MouseEvent<any> | React.KeyboardEvent | MouseEvent) => undefined as any,\n    index: -1,\n    context: {\n      keyHandler: () => {},\n      sendRef: () => {}\n    },\n    enterTriggersArrowDown: false,\n    icon: null,\n    styleChildren: true,\n    description: null,\n    inoperableEvents: ['onClick', 'onKeyPress']\n  };\n\n  componentDidMount() {\n    const { context, index, isDisabled, role, customChild, autoFocus } = this.props;\n    const customRef = customChild ? this.getInnerNode(this.ref.current) : this.ref.current;\n    context.sendRef(\n      index,\n      [customRef, customChild ? customRef : this.additionalRef.current],\n      isDisabled,\n      role === 'separator'\n    );\n    autoFocus && setTimeout(() => customRef.focus());\n  }\n\n  componentDidUpdate() {\n    const { context, index, isDisabled, role, customChild } = this.props;\n    const customRef = customChild ? this.getInnerNode(this.ref.current) : this.ref.current;\n    context.sendRef(\n      index,\n      [customRef, customChild ? customRef : this.additionalRef.current],\n      isDisabled,\n      role === 'separator'\n    );\n  }\n\n  getInnerNode = (node: any) => (node && node.childNodes && node.childNodes.length ? node.childNodes[0] : node);\n\n  onKeyDown = (event: any) => {\n    // Detected key press on this item, notify the menu parent so that the appropriate item can be focused\n    const innerIndex = event.target === this.ref.current ? 0 : 1;\n    if (!this.props.customChild) {\n      event.preventDefault();\n    }\n    if (event.key === 'ArrowUp') {\n      this.props.context.keyHandler(this.props.index, innerIndex, KEYHANDLER_DIRECTION.UP);\n      event.stopPropagation();\n    } else if (event.key === 'ArrowDown') {\n      this.props.context.keyHandler(this.props.index, innerIndex, KEYHANDLER_DIRECTION.DOWN);\n      event.stopPropagation();\n    } else if (event.key === 'ArrowRight') {\n      this.props.context.keyHandler(this.props.index, innerIndex, KEYHANDLER_DIRECTION.RIGHT);\n      event.stopPropagation();\n    } else if (event.key === 'ArrowLeft') {\n      this.props.context.keyHandler(this.props.index, innerIndex, KEYHANDLER_DIRECTION.LEFT);\n      event.stopPropagation();\n    } else if (event.key === 'Enter' || event.key === ' ') {\n      event.target.click();\n      this.props.enterTriggersArrowDown &&\n        this.props.context.keyHandler(this.props.index, innerIndex, KEYHANDLER_DIRECTION.DOWN);\n    }\n  };\n\n  extendAdditionalChildRef() {\n    const { additionalChild } = this.props;\n\n    return React.cloneElement(additionalChild as React.ReactElement<any>, {\n      ref: this.additionalRef\n    });\n  }\n\n  componentRef = (element: HTMLLIElement) => {\n    (this.ref as React.MutableRefObject<any>).current = element;\n    const { component } = this.props;\n    const ref = (component as any).ref;\n    if (ref) {\n      if (typeof ref === 'function') {\n        ref(element);\n      } else {\n        (ref as React.MutableRefObject<any>).current = element;\n      }\n    }\n  };\n\n  render() {\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    const {\n      className,\n      children,\n      isHovered,\n      context,\n      onClick,\n      component,\n      role,\n      isDisabled,\n      isAriaDisabled,\n      isPlainText,\n      index,\n      href,\n      tooltip,\n      tooltipProps,\n      id,\n      componentID,\n      listItemClassName,\n      additionalChild,\n      customChild,\n      enterTriggersArrowDown,\n      icon,\n      autoFocus,\n      styleChildren,\n      description,\n      inoperableEvents,\n      ...additionalProps\n    } = this.props;\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    let classes = css(icon && styles.modifiers.icon, isAriaDisabled && styles.modifiers.ariaDisabled, className);\n\n    if (component === 'a') {\n      additionalProps['aria-disabled'] = isDisabled || isAriaDisabled;\n    } else if (component === 'button') {\n      additionalProps['aria-disabled'] = isDisabled || isAriaDisabled;\n      additionalProps.type = additionalProps.type || 'button';\n    }\n    const renderWithTooltip = (childNode: React.ReactNode) =>\n      tooltip ? (\n        <Tooltip content={tooltip} {...tooltipProps}>\n          {childNode}\n        </Tooltip>\n      ) : (\n        childNode\n      );\n\n    const renderClonedComponent = (element: React.ReactElement<any>) =>\n      React.cloneElement(element, {\n        ...(styleChildren && {\n          className: css(element.props.className, classes)\n        }),\n        ...(this.props.role !== 'separator' && { role, ref: this.componentRef })\n      });\n\n    const renderDefaultComponent = (tag: string) => {\n      const Component = tag as any;\n\n      const componentContent = description ? (\n        <>\n          <div className={styles.dropdownMenuItemMain}>\n            {icon && <span className={css(styles.dropdownMenuItemIcon)}>{icon}</span>}\n            {children}\n          </div>\n          <div className={styles.dropdownMenuItemDescription}>{description}</div>\n        </>\n      ) : (\n        <>\n          {icon && <span className={css(styles.dropdownMenuItemIcon)}>{icon}</span>}\n          {children}\n        </>\n      );\n\n      return (\n        <Component\n          {...additionalProps}\n          {...(isDisabled || isAriaDisabled ? preventedEvents(inoperableEvents) : null)}\n          href={href}\n          ref={this.ref}\n          className={classes}\n          id={componentID}\n          role={role}\n        >\n          {componentContent}\n        </Component>\n      );\n    };\n\n    return (\n      <DropdownContext.Consumer>\n        {({ onSelect, itemClass, disabledClass, plainTextClass }) => {\n          if (this.props.role !== 'separator') {\n            classes = css(\n              classes,\n              isDisabled && disabledClass,\n              isPlainText && plainTextClass,\n              itemClass,\n              description && styles.modifiers.description\n            );\n          }\n          if (customChild) {\n            return React.cloneElement(customChild as React.ReactElement<any>, {\n              ref: this.ref,\n              onKeyDown: this.onKeyDown\n            });\n          }\n\n          return (\n            <li\n              className={listItemClassName || null}\n              role=\"none\"\n              onKeyDown={this.onKeyDown}\n              onClick={(event: any) => {\n                if (!isDisabled && !isAriaDisabled) {\n                  onClick(event);\n                  onSelect(event);\n                }\n              }}\n              id={id}\n            >\n              {renderWithTooltip(\n                React.isValidElement(component)\n                  ? renderClonedComponent(component)\n                  : renderDefaultComponent(component as string)\n              )}\n              {additionalChild && this.extendAdditionalChildRef()}\n            </li>\n          );\n        }}\n      </DropdownContext.Consumer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}