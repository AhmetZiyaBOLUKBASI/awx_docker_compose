{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import{i18n}from\"@lingui/core\";import React from'react';import{useField}from'formik';import styled from'styled-components';import{Title}from'@patternfly/react-core';import SelectableCard from'components/SelectableCard';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Grid=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-auto-rows: 100px;\\n  grid-gap: 20px;\\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\\n  margin: 20px 0px;\\n  width: 100%;\\n\"])));function RunStep(){var _useField=useField('linkType'),_useField2=_slicedToArray(_useField,3),field=_useField2[0],helpers=_useField2[2];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Title,{headingLevel:\"h1\",size:\"xl\",children:/*i18n*/i18n._(\"Run\")}),/*#__PURE__*/_jsx(\"p\",{children:/*i18n*/i18n._(\"Specify the conditions under which this node should be executed\")}),/*#__PURE__*/_jsxs(Grid,{children:[/*#__PURE__*/_jsx(SelectableCard,{id:\"link-type-success\",isSelected:field.value==='success',label:/*i18n*/i18n._(\"On Success\"),description:/*i18n*/i18n._(\"Execute when the parent node results in a successful state.\"),onClick:function onClick(){return helpers.setValue('success');}}),/*#__PURE__*/_jsx(SelectableCard,{id:\"link-type-failure\",isSelected:field.value==='failure',label:/*i18n*/i18n._(\"On Failure\"),description:/*i18n*/i18n._(\"Execute when the parent node results in a failure state.\"),onClick:function onClick(){return helpers.setValue('failure');}}),/*#__PURE__*/_jsx(SelectableCard,{id:\"link-type-always\",isSelected:field.value==='always',label:/*i18n*/i18n._(\"Always\"),description:/*i18n*/i18n._(\"Execute regardless of the parent node's final state.\"),onClick:function onClick(){return helpers.setValue('always');}})]})]});}export default RunStep;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Template/WorkflowJobTemplateVisualizer/Modals/NodeModals/RunStep.js"],"names":["React","useField","styled","Title","SelectableCard","Grid","div","RunStep","field","helpers","value","setValue"],"mappings":"iRAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,QAAT,KAAyB,QAAzB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,KAAT,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,2BAA3B,C,6IAEA,GAAMC,CAAAA,IAAI,CAAGH,MAAM,CAACI,GAAV,wOAAV,CASA,QAASC,CAAAA,OAAT,EAAmB,CACjB,cAA2BN,QAAQ,CAAC,UAAD,CAAnC,wCAAOO,KAAP,eAAgBC,OAAhB,eACA,mBACE,wCACE,KAAC,KAAD,EAAO,YAAY,CAAC,IAApB,CAAyB,IAAI,CAAC,IAA9B,kBACG,aADH,EADF,cAIE,2BACG,yEADH,EAJF,cAOE,MAAC,IAAD,yBACE,KAAC,cAAD,EACE,EAAE,CAAC,mBADL,CAEE,UAAU,CAAED,KAAK,CAACE,KAAN,GAAgB,SAF9B,CAGE,KAAK,SAAE,oBAHT,CAIE,WAAW,SAAE,qEAJf,CAKE,OAAO,CAAE,yBAAMD,CAAAA,OAAO,CAACE,QAAR,CAAiB,SAAjB,CAAN,EALX,EADF,cAQE,KAAC,cAAD,EACE,EAAE,CAAC,mBADL,CAEE,UAAU,CAAEH,KAAK,CAACE,KAAN,GAAgB,SAF9B,CAGE,KAAK,SAAE,oBAHT,CAIE,WAAW,SAAE,kEAJf,CAKE,OAAO,CAAE,yBAAMD,CAAAA,OAAO,CAACE,QAAR,CAAiB,SAAjB,CAAN,EALX,EARF,cAeE,KAAC,cAAD,EACE,EAAE,CAAC,kBADL,CAEE,UAAU,CAAEH,KAAK,CAACE,KAAN,GAAgB,QAF9B,CAGE,KAAK,SAAE,gBAHT,CAIE,WAAW,SAAE,8DAJf,CAKE,OAAO,CAAE,yBAAMD,CAAAA,OAAO,CAACE,QAAR,CAAiB,QAAjB,CAAN,EALX,EAfF,GAPF,GADF,CAiCD,CACD,cAAeJ,CAAAA,OAAf","sourcesContent":["import React from 'react';\n\nimport { useField } from 'formik';\nimport { t } from '@lingui/macro';\nimport styled from 'styled-components';\nimport { Title } from '@patternfly/react-core';\nimport SelectableCard from 'components/SelectableCard';\n\nconst Grid = styled.div`\n  display: grid;\n  grid-auto-rows: 100px;\n  grid-gap: 20px;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  margin: 20px 0px;\n  width: 100%;\n`;\n\nfunction RunStep() {\n  const [field, , helpers] = useField('linkType');\n  return (\n    <>\n      <Title headingLevel=\"h1\" size=\"xl\">\n        {t`Run`}\n      </Title>\n      <p>\n        {t`Specify the conditions under which this node should be executed`}\n      </p>\n      <Grid>\n        <SelectableCard\n          id=\"link-type-success\"\n          isSelected={field.value === 'success'}\n          label={t`On Success`}\n          description={t`Execute when the parent node results in a successful state.`}\n          onClick={() => helpers.setValue('success')}\n        />\n        <SelectableCard\n          id=\"link-type-failure\"\n          isSelected={field.value === 'failure'}\n          label={t`On Failure`}\n          description={t`Execute when the parent node results in a failure state.`}\n          onClick={() => helpers.setValue('failure')}\n        />\n        <SelectableCard\n          id=\"link-type-always\"\n          isSelected={field.value === 'always'}\n          label={t`Always`}\n          description={t`Execute regardless of the parent node's final state.`}\n          onClick={() => helpers.setValue('always')}\n        />\n      </Grid>\n    </>\n  );\n}\nexport default RunStep;\n"]},"metadata":{},"sourceType":"module"}