{"ast":null,"code":"import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useState}from'react';import{useHistory}from'react-router-dom';import{AdHocCommandsAPI,InventorySourcesAPI,JobsAPI,JobTemplatesAPI,ProjectsAPI,WorkflowJobsAPI,WorkflowJobTemplatesAPI}from'api';import AlertModal from'../AlertModal';import ErrorDetail from'../ErrorDetail';import LaunchPrompt from'../LaunchPrompt';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function canLaunchWithoutPrompt(launchData){return launchData.can_start_without_user_input&&!launchData.ask_inventory_on_launch&&!launchData.ask_variables_on_launch&&!launchData.ask_limit_on_launch&&!launchData.ask_scm_branch_on_launch&&!launchData.survey_enabled&&(!launchData.passwords_needed_to_start||launchData.passwords_needed_to_start.length===0)&&(!launchData.variables_needed_to_start||launchData.variables_needed_to_start.length===0);}function LaunchButton(_ref){var resource=_ref.resource,children=_ref.children;var history=useHistory();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showLaunchPrompt=_useState2[0],setShowLaunchPrompt=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),launchConfig=_useState4[0],setLaunchConfig=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),surveyConfig=_useState6[0],setSurveyConfig=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isLaunching=_useState8[0],setIsLaunching=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),error=_useState10[0],setError=_useState10[1];var handleLaunch=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var readLaunch,readSurvey,_yield$readLaunch,launch,_yield$readSurvey,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsLaunching(true);readLaunch=resource.type==='workflow_job_template'?WorkflowJobTemplatesAPI.readLaunch(resource.id):JobTemplatesAPI.readLaunch(resource.id);readSurvey=resource.type==='workflow_job_template'?WorkflowJobTemplatesAPI.readSurvey(resource.id):JobTemplatesAPI.readSurvey(resource.id);_context.prev=3;_context.next=6;return readLaunch;case 6:_yield$readLaunch=_context.sent;launch=_yield$readLaunch.data;setLaunchConfig(launch);if(!launch.survey_enabled){_context.next=15;break;}_context.next=12;return readSurvey;case 12:_yield$readSurvey=_context.sent;data=_yield$readSurvey.data;setSurveyConfig(data);case 15:if(!canLaunchWithoutPrompt(launch)){_context.next=20;break;}_context.next=18;return launchWithParams({});case 18:_context.next=21;break;case 20:setShowLaunchPrompt(true);case 21:_context.next=26;break;case 23:_context.prev=23;_context.t0=_context[\"catch\"](3);setError(_context.t0);case 26:_context.prev=26;setIsLaunching(false);return _context.finish(26);case 29:case\"end\":return _context.stop();}}},_callee,null,[[3,23,26,29]]);}));return function handleLaunch(){return _ref2.apply(this,arguments);};}();var launchWithParams=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(params){var jobPromise,_yield$jobPromise,job;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;if(resource.type==='job_template'){jobPromise=JobTemplatesAPI.launch(resource.id,params||{});}else if(resource.type==='workflow_job_template'){jobPromise=WorkflowJobTemplatesAPI.launch(resource.id,params||{});}else if(resource.type==='job'){jobPromise=JobsAPI.relaunch(resource.id,params||{});}else if(resource.type==='workflow_job'){jobPromise=WorkflowJobsAPI.relaunch(resource.id,params||{});}_context2.next=4;return jobPromise;case 4:_yield$jobPromise=_context2.sent;job=_yield$jobPromise.data;history.push(\"/jobs/\".concat(job.id,\"/output\"));_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);setError(_context2.t0);case 12:_context2.prev=12;setIsLaunching(false);return _context2.finish(12);case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9,12,15]]);}));return function launchWithParams(_x){return _ref3.apply(this,arguments);};}();var handleRelaunch=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(params){var readRelaunch,relaunch,_yield$readRelaunch,relaunchConfig,_yield$relaunch,job;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:setIsLaunching(true);if(resource.type==='inventory_update'){// We'll need to handle the scenario where the src no longer exists\nreadRelaunch=InventorySourcesAPI.readLaunchUpdate(resource.inventory_source);}else if(resource.type==='project_update'){// We'll need to handle the scenario where the project no longer exists\nreadRelaunch=ProjectsAPI.readLaunchUpdate(resource.project);}else if(resource.type==='workflow_job'){readRelaunch=WorkflowJobsAPI.readRelaunch(resource.id);}else if(resource.type==='ad_hoc_command'){readRelaunch=AdHocCommandsAPI.readRelaunch(resource.id);}else if(resource.type==='job'){readRelaunch=JobsAPI.readRelaunch(resource.id);}_context3.prev=2;_context3.next=5;return readRelaunch;case 5:_yield$readRelaunch=_context3.sent;relaunchConfig=_yield$readRelaunch.data;setLaunchConfig(relaunchConfig);if(!(!relaunchConfig.passwords_needed_to_start||relaunchConfig.passwords_needed_to_start.length===0)){_context3.next=17;break;}if(resource.type==='inventory_update'){relaunch=InventorySourcesAPI.launchUpdate(resource.inventory_source);}else if(resource.type==='project_update'){relaunch=ProjectsAPI.launchUpdate(resource.project);}else if(resource.type==='workflow_job'){relaunch=WorkflowJobsAPI.relaunch(resource.id);}else if(resource.type==='ad_hoc_command'){relaunch=AdHocCommandsAPI.relaunch(resource.id);}else if(resource.type==='job'){relaunch=JobsAPI.relaunch(resource.id,params||{});}_context3.next=12;return relaunch;case 12:_yield$relaunch=_context3.sent;job=_yield$relaunch.data;history.push(\"/jobs/\".concat(job.id,\"/output\"));_context3.next=18;break;case 17:setShowLaunchPrompt(true);case 18:_context3.next=23;break;case 20:_context3.prev=20;_context3.t0=_context3[\"catch\"](2);setError(_context3.t0);case 23:_context3.prev=23;setIsLaunching(false);return _context3.finish(23);case 26:case\"end\":return _context3.stop();}}},_callee3,null,[[2,20,23,26]]);}));return function handleRelaunch(_x2){return _ref4.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(_Fragment,{children:[children({handleLaunch:handleLaunch,handleRelaunch:handleRelaunch,isLaunching:isLaunching}),error&&/*#__PURE__*/_jsxs(AlertModal,{isOpen:error,variant:\"error\",title:/*i18n*/i18n._(\"Error!\"),onClose:function onClose(){return setError(null);},children:[/*i18n*/i18n._(\"Failed to launch job.\"),/*#__PURE__*/_jsx(ErrorDetail,{error:error})]}),showLaunchPrompt&&/*#__PURE__*/_jsx(LaunchPrompt,{launchConfig:launchConfig,surveyConfig:surveyConfig,resource:resource,onLaunch:launchWithParams,onCancel:function onCancel(){return setShowLaunchPrompt(false);}})]});}export default LaunchButton;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/LaunchButton/LaunchButton.js"],"names":["React","useState","useHistory","AdHocCommandsAPI","InventorySourcesAPI","JobsAPI","JobTemplatesAPI","ProjectsAPI","WorkflowJobsAPI","WorkflowJobTemplatesAPI","AlertModal","ErrorDetail","LaunchPrompt","canLaunchWithoutPrompt","launchData","can_start_without_user_input","ask_inventory_on_launch","ask_variables_on_launch","ask_limit_on_launch","ask_scm_branch_on_launch","survey_enabled","passwords_needed_to_start","length","variables_needed_to_start","LaunchButton","resource","children","history","showLaunchPrompt","setShowLaunchPrompt","launchConfig","setLaunchConfig","surveyConfig","setSurveyConfig","isLaunching","setIsLaunching","error","setError","handleLaunch","readLaunch","type","id","readSurvey","launch","data","launchWithParams","params","jobPromise","relaunch","job","push","handleRelaunch","readRelaunch","readLaunchUpdate","inventory_source","project","relaunchConfig","launchUpdate"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { number, shape } from 'prop-types';\n\nimport { t } from '@lingui/macro';\n\nimport {\n  AdHocCommandsAPI,\n  InventorySourcesAPI,\n  JobsAPI,\n  JobTemplatesAPI,\n  ProjectsAPI,\n  WorkflowJobsAPI,\n  WorkflowJobTemplatesAPI,\n} from 'api';\nimport AlertModal from '../AlertModal';\nimport ErrorDetail from '../ErrorDetail';\nimport LaunchPrompt from '../LaunchPrompt';\n\nfunction canLaunchWithoutPrompt(launchData) {\n  return (\n    launchData.can_start_without_user_input &&\n    !launchData.ask_inventory_on_launch &&\n    !launchData.ask_variables_on_launch &&\n    !launchData.ask_limit_on_launch &&\n    !launchData.ask_scm_branch_on_launch &&\n    !launchData.survey_enabled &&\n    (!launchData.passwords_needed_to_start ||\n      launchData.passwords_needed_to_start.length === 0) &&\n    (!launchData.variables_needed_to_start ||\n      launchData.variables_needed_to_start.length === 0)\n  );\n}\n\nfunction LaunchButton({ resource, children }) {\n  const history = useHistory();\n  const [showLaunchPrompt, setShowLaunchPrompt] = useState(false);\n  const [launchConfig, setLaunchConfig] = useState(null);\n  const [surveyConfig, setSurveyConfig] = useState(null);\n  const [isLaunching, setIsLaunching] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleLaunch = async () => {\n    setIsLaunching(true);\n    const readLaunch =\n      resource.type === 'workflow_job_template'\n        ? WorkflowJobTemplatesAPI.readLaunch(resource.id)\n        : JobTemplatesAPI.readLaunch(resource.id);\n    const readSurvey =\n      resource.type === 'workflow_job_template'\n        ? WorkflowJobTemplatesAPI.readSurvey(resource.id)\n        : JobTemplatesAPI.readSurvey(resource.id);\n    try {\n      const { data: launch } = await readLaunch;\n      setLaunchConfig(launch);\n\n      if (launch.survey_enabled) {\n        const { data } = await readSurvey;\n\n        setSurveyConfig(data);\n      }\n\n      if (canLaunchWithoutPrompt(launch)) {\n        await launchWithParams({});\n      } else {\n        setShowLaunchPrompt(true);\n      }\n    } catch (err) {\n      setError(err);\n    } finally {\n      setIsLaunching(false);\n    }\n  };\n\n  const launchWithParams = async (params) => {\n    try {\n      let jobPromise;\n\n      if (resource.type === 'job_template') {\n        jobPromise = JobTemplatesAPI.launch(resource.id, params || {});\n      } else if (resource.type === 'workflow_job_template') {\n        jobPromise = WorkflowJobTemplatesAPI.launch(resource.id, params || {});\n      } else if (resource.type === 'job') {\n        jobPromise = JobsAPI.relaunch(resource.id, params || {});\n      } else if (resource.type === 'workflow_job') {\n        jobPromise = WorkflowJobsAPI.relaunch(resource.id, params || {});\n      }\n\n      const { data: job } = await jobPromise;\n      history.push(`/jobs/${job.id}/output`);\n    } catch (launchError) {\n      setError(launchError);\n    } finally {\n      setIsLaunching(false);\n    }\n  };\n\n  const handleRelaunch = async (params) => {\n    let readRelaunch;\n    let relaunch;\n\n    setIsLaunching(true);\n    if (resource.type === 'inventory_update') {\n      // We'll need to handle the scenario where the src no longer exists\n      readRelaunch = InventorySourcesAPI.readLaunchUpdate(\n        resource.inventory_source\n      );\n    } else if (resource.type === 'project_update') {\n      // We'll need to handle the scenario where the project no longer exists\n      readRelaunch = ProjectsAPI.readLaunchUpdate(resource.project);\n    } else if (resource.type === 'workflow_job') {\n      readRelaunch = WorkflowJobsAPI.readRelaunch(resource.id);\n    } else if (resource.type === 'ad_hoc_command') {\n      readRelaunch = AdHocCommandsAPI.readRelaunch(resource.id);\n    } else if (resource.type === 'job') {\n      readRelaunch = JobsAPI.readRelaunch(resource.id);\n    }\n\n    try {\n      const { data: relaunchConfig } = await readRelaunch;\n      setLaunchConfig(relaunchConfig);\n      if (\n        !relaunchConfig.passwords_needed_to_start ||\n        relaunchConfig.passwords_needed_to_start.length === 0\n      ) {\n        if (resource.type === 'inventory_update') {\n          relaunch = InventorySourcesAPI.launchUpdate(\n            resource.inventory_source\n          );\n        } else if (resource.type === 'project_update') {\n          relaunch = ProjectsAPI.launchUpdate(resource.project);\n        } else if (resource.type === 'workflow_job') {\n          relaunch = WorkflowJobsAPI.relaunch(resource.id);\n        } else if (resource.type === 'ad_hoc_command') {\n          relaunch = AdHocCommandsAPI.relaunch(resource.id);\n        } else if (resource.type === 'job') {\n          relaunch = JobsAPI.relaunch(resource.id, params || {});\n        }\n        const { data: job } = await relaunch;\n        history.push(`/jobs/${job.id}/output`);\n      } else {\n        setShowLaunchPrompt(true);\n      }\n    } catch (err) {\n      setError(err);\n    } finally {\n      setIsLaunching(false);\n    }\n  };\n\n  return (\n    <>\n      {children({\n        handleLaunch,\n        handleRelaunch,\n        isLaunching,\n      })}\n      {error && (\n        <AlertModal\n          isOpen={error}\n          variant=\"error\"\n          title={t`Error!`}\n          onClose={() => setError(null)}\n        >\n          {t`Failed to launch job.`}\n          <ErrorDetail error={error} />\n        </AlertModal>\n      )}\n      {showLaunchPrompt && (\n        <LaunchPrompt\n          launchConfig={launchConfig}\n          surveyConfig={surveyConfig}\n          resource={resource}\n          onLaunch={launchWithParams}\n          onCancel={() => setShowLaunchPrompt(false)}\n        />\n      )}\n    </>\n  );\n}\n\nLaunchButton.propTypes = {\n  resource: shape({\n    id: number.isRequired,\n  }).isRequired,\n};\n\nexport default LaunchButton;\n"]},"metadata":{},"sourceType":"module"}