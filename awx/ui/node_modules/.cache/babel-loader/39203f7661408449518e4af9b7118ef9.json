{"ast":null,"code":"import _slicedToArray from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport progressStyle from '@patternfly/react-styles/css/components/Progress/progress';\nimport { css } from '@patternfly/react-styles';\nimport { Tooltip } from '../Tooltip';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/esm/icons/times-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport { ProgressBar } from './ProgressBar';\nexport var ProgressMeasureLocation;\n\n(function (ProgressMeasureLocation) {\n  ProgressMeasureLocation[\"outside\"] = \"outside\";\n  ProgressMeasureLocation[\"inside\"] = \"inside\";\n  ProgressMeasureLocation[\"top\"] = \"top\";\n  ProgressMeasureLocation[\"none\"] = \"none\";\n})(ProgressMeasureLocation || (ProgressMeasureLocation = {}));\n\nexport var ProgressVariant;\n\n(function (ProgressVariant) {\n  ProgressVariant[\"danger\"] = \"danger\";\n  ProgressVariant[\"success\"] = \"success\";\n  ProgressVariant[\"warning\"] = \"warning\";\n})(ProgressVariant || (ProgressVariant = {}));\n\nvar variantToIcon = {\n  danger: TimesCircleIcon,\n  success: CheckCircleIcon,\n  warning: ExclamationTriangleIcon\n};\nexport var ProgressContainer = function ProgressContainer(_ref) {\n  var progressBarAriaProps = _ref.progressBarAriaProps,\n      value = _ref.value,\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? '' : _ref$title,\n      parentId = _ref.parentId,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? null : _ref$label,\n      _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? null : _ref$variant,\n      _ref$measureLocation = _ref.measureLocation,\n      measureLocation = _ref$measureLocation === void 0 ? ProgressMeasureLocation.top : _ref$measureLocation,\n      _ref$isTitleTruncated = _ref.isTitleTruncated,\n      isTitleTruncated = _ref$isTitleTruncated === void 0 ? false : _ref$isTitleTruncated,\n      tooltipPosition = _ref.tooltipPosition;\n  var StatusIcon = variantToIcon.hasOwnProperty(variant) && variantToIcon[variant];\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      tooltip = _React$useState2[0],\n      setTooltip = _React$useState2[1];\n\n  var onMouseEnter = function onMouseEnter(event) {\n    if (event.target.offsetWidth < event.target.scrollWidth) {\n      setTooltip(title || event.target.innerHTML);\n    } else {\n      setTooltip('');\n    }\n  };\n\n  var Title = React.createElement(\"div\", {\n    className: css(progressStyle.progressDescription, isTitleTruncated && typeof title === 'string' && progressStyle.modifiers.truncate),\n    id: \"\".concat(parentId, \"-description\"),\n    \"aria-hidden\": \"true\",\n    onMouseEnter: isTitleTruncated && typeof title === 'string' ? onMouseEnter : null\n  }, title);\n  return React.createElement(React.Fragment, null, tooltip ? React.createElement(Tooltip, {\n    position: tooltipPosition,\n    content: tooltip,\n    isVisible: true\n  }, Title) : Title, React.createElement(\"div\", {\n    className: css(progressStyle.progressStatus),\n    \"aria-hidden\": \"true\"\n  }, (measureLocation === ProgressMeasureLocation.top || measureLocation === ProgressMeasureLocation.outside) && React.createElement(\"span\", {\n    className: css(progressStyle.progressMeasure)\n  }, label || \"\".concat(value, \"%\")), variantToIcon.hasOwnProperty(variant) && React.createElement(\"span\", {\n    className: css(progressStyle.progressStatusIcon)\n  }, React.createElement(StatusIcon, null))), React.createElement(ProgressBar, {\n    role: \"progressbar\",\n    progressBarAriaProps: progressBarAriaProps,\n    value: value\n  }, measureLocation === ProgressMeasureLocation.inside && \"\".concat(value, \"%\")));\n};\nProgressContainer.displayName = 'ProgressContainer';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Progress/ProgressContainer.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport progressStyle from '@patternfly/react-styles/css/components/Progress/progress';\nimport { css } from '@patternfly/react-styles';\nimport { Tooltip, TooltipPosition } from '../Tooltip';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/esm/icons/times-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport { AriaProps, ProgressBar } from './ProgressBar';\n\nexport enum ProgressMeasureLocation {\n  outside = 'outside',\n  inside = 'inside',\n  top = 'top',\n  none = 'none'\n}\n\nexport enum ProgressVariant {\n  danger = 'danger',\n  success = 'success',\n  warning = 'warning'\n}\n\nexport interface ProgressContainerProps extends Omit<React.HTMLProps<HTMLDivElement>, 'label' | 'title'> {\n  /** Properties needed for aria support */\n  progressBarAriaProps?: AriaProps;\n  /** Progress component DOM ID. */\n  parentId: string;\n  /** Progress title. The isTitleTruncated property will only affect string titles. Node title truncation must be handled manually. */\n  title?: React.ReactNode;\n  /** Label to indicate what progress is showing. */\n  label?: React.ReactNode;\n  /** Type of progress status. */\n  variant?: 'danger' | 'success' | 'warning';\n  /** Location of progress value. */\n  measureLocation?: 'outside' | 'inside' | 'top' | 'none';\n  /** Actual progress value. */\n  value: number;\n  /** Whether string title should be truncated */\n  isTitleTruncated?: boolean;\n  /** Position of the tooltip which is displayed if title is truncated */\n  tooltipPosition?:\n    | TooltipPosition\n    | 'auto'\n    | 'top'\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'left-start'\n    | 'left-end'\n    | 'right-start'\n    | 'right-end';\n}\n\nconst variantToIcon = {\n  danger: TimesCircleIcon,\n  success: CheckCircleIcon,\n  warning: ExclamationTriangleIcon\n};\n\nexport const ProgressContainer: React.FunctionComponent<ProgressContainerProps> = ({\n  progressBarAriaProps,\n  value,\n  title = '',\n  parentId,\n  label = null,\n  variant = null,\n  measureLocation = ProgressMeasureLocation.top,\n  isTitleTruncated = false,\n  tooltipPosition\n}: ProgressContainerProps) => {\n  const StatusIcon = variantToIcon.hasOwnProperty(variant) && variantToIcon[variant];\n  const [tooltip, setTooltip] = React.useState('');\n  const onMouseEnter = (event: any) => {\n    if (event.target.offsetWidth < event.target.scrollWidth) {\n      setTooltip(title || event.target.innerHTML);\n    } else {\n      setTooltip('');\n    }\n  };\n  const Title = (\n    <div\n      className={css(\n        progressStyle.progressDescription,\n        isTitleTruncated && typeof title === 'string' && progressStyle.modifiers.truncate\n      )}\n      id={`${parentId}-description`}\n      aria-hidden=\"true\"\n      onMouseEnter={isTitleTruncated && typeof title === 'string' ? onMouseEnter : null}\n    >\n      {title}\n    </div>\n  );\n\n  return (\n    <React.Fragment>\n      {tooltip ? (\n        <Tooltip position={tooltipPosition} content={tooltip} isVisible>\n          {Title}\n        </Tooltip>\n      ) : (\n        Title\n      )}\n      <div className={css(progressStyle.progressStatus)} aria-hidden=\"true\">\n        {(measureLocation === ProgressMeasureLocation.top || measureLocation === ProgressMeasureLocation.outside) && (\n          <span className={css(progressStyle.progressMeasure)}>{label || `${value}%`}</span>\n        )}\n        {variantToIcon.hasOwnProperty(variant) && (\n          <span className={css(progressStyle.progressStatusIcon)}>\n            <StatusIcon />\n          </span>\n        )}\n      </div>\n      <ProgressBar role=\"progressbar\" progressBarAriaProps={progressBarAriaProps} value={value}>\n        {measureLocation === ProgressMeasureLocation.inside && `${value}%`}\n      </ProgressBar>\n    </React.Fragment>\n  );\n};\nProgressContainer.displayName = 'ProgressContainer';\n"]},"metadata":{},"sourceType":"module"}