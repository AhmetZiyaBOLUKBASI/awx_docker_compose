{"ast":null,"code":"import _slicedToArray from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Button } from '../Button';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport { FindRefWrapper } from '../../helpers/Popper/FindRefWrapper';\nexport var PopoverCloseButton = function PopoverCloseButton(_a) {\n  var _a$onClose = _a.onClose,\n      onClose = _a$onClose === void 0 ? function () {\n    return undefined;\n  } : _a$onClose,\n      props = __rest(_a, [\"onClose\"]);\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      closeButtonElement = _React$useState2[0],\n      setCloseButtonElement = _React$useState2[1];\n\n  React.useEffect(function () {\n    closeButtonElement && closeButtonElement.addEventListener('click', onClose, false);\n    return function () {\n      closeButtonElement && closeButtonElement.removeEventListener('click', onClose, false);\n    };\n  }, [closeButtonElement]);\n  return React.createElement(FindRefWrapper, {\n    onFoundRef: function onFoundRef(foundRef) {\n      return setCloseButtonElement(foundRef);\n    }\n  }, React.createElement(Button, Object.assign({\n    variant: \"plain\",\n    \"aria-label\": true\n  }, props, {\n    style: {\n      pointerEvents: 'auto'\n    }\n  }), React.createElement(TimesIcon, null)));\n};\nPopoverCloseButton.displayName = 'PopoverCloseButton';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Popover/PopoverCloseButton.tsx"],"names":[],"mappings":";;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,MAAT,QAAuB,WAAvB;AACA,OAAO,SAAP,MAAsB,mDAAtB;AACA,SAAS,cAAT,QAA+B,qCAA/B;AAEA,OAAO,IAAM,kBAAkB,GAAqD,SAAvE,kBAAuE,CAAC,EAAD,EAGtD;AAHuD,mBAClD,EADkD,CACnF,OADmF;AAAA,MACnF,OADmF,2BACzE;AAAA,WAAM,SAAN;AAAA,GADyE;AAAA,MAEhF,KAFgF,GAE3E,MAAA,CAAA,EAAA,EAF2E,CAAA,SAAA,CAE3E,CAF2E;;AAInF,wBAAoD,KAAK,CAAC,QAAN,CAAe,IAAf,CAApD;AAAA;AAAA,MAAO,kBAAP;AAAA,MAA2B,qBAA3B;;AACA,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAK;AACnB,IAAA,kBAAkB,IAAI,kBAAkB,CAAC,gBAAnB,CAAoC,OAApC,EAA6C,OAA7C,EAAsD,KAAtD,CAAtB;AACA,WAAO,YAAK;AACV,MAAA,kBAAkB,IAAI,kBAAkB,CAAC,mBAAnB,CAAuC,OAAvC,EAAgD,OAAhD,EAAyD,KAAzD,CAAtB;AACD,KAFD;AAGD,GALD,EAKG,CAAC,kBAAD,CALH;AAMA,SACE,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe;AAAC,IAAA,UAAU,EAAE,oBAAC,QAAD;AAAA,aAAmB,qBAAqB,CAAC,QAAD,CAAxC;AAAA;AAAb,GAAf,EACE,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO,MAAA,CAAA,MAAA,CAAA;AAAC,IAAA,OAAO,EAAC,OAAT;AAAgB,kBAAA;AAAhB,GAAA,EAAgC,KAAhC,EAAqC;AAAE,IAAA,KAAK,EAAE;AAAE,MAAA,aAAa,EAAE;AAAjB;AAAT,GAArC,CAAP,EACE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,IAAV,CADF,CADF,CADF;AAOD,CAlBM;AAmBP,kBAAkB,CAAC,WAAnB,GAAiC,oBAAjC","sourcesContent":["import * as React from 'react';\nimport { Button } from '../Button';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport { FindRefWrapper } from '../../helpers/Popper/FindRefWrapper';\n\nexport const PopoverCloseButton: React.FunctionComponent<PopoverCloseButtonProps> = ({\n  onClose = () => undefined as void,\n  ...props\n}: PopoverCloseButtonProps) => {\n  const [closeButtonElement, setCloseButtonElement] = React.useState(null);\n  React.useEffect(() => {\n    closeButtonElement && closeButtonElement.addEventListener('click', onClose, false);\n    return () => {\n      closeButtonElement && closeButtonElement.removeEventListener('click', onClose, false);\n    };\n  }, [closeButtonElement]);\n  return (\n    <FindRefWrapper onFoundRef={(foundRef: any) => setCloseButtonElement(foundRef)}>\n      <Button variant=\"plain\" aria-label {...props} style={{ pointerEvents: 'auto' }}>\n        <TimesIcon />\n      </Button>\n    </FindRefWrapper>\n  );\n};\nPopoverCloseButton.displayName = 'PopoverCloseButton';\n\nexport interface PopoverCloseButtonProps {\n  /** PopoverCloseButton onClose function */\n  onClose?: (event: any) => void;\n  /** Aria label for the Close button */\n  'aria-label': string;\n}\n"]},"metadata":{},"sourceType":"module"}