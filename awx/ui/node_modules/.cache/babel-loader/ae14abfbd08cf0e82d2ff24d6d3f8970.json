{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectWithoutProperties from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";import _taggedTemplateLiteral from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _excluded=[\"fieldOptions\",\"isFieldGroupValid\",\"credentialKind\",\"isVaultIdDisabled\"];var _templateObject;import{i18n}from\"@lingui/core\";/* eslint-disable react/jsx-no-useless-fragment */import React,{useState}from'react';import{useLocation}from'react-router-dom';import{useField,useFormikContext}from'formik';import styled from'styled-components';import{Button,ButtonVariant,FileUpload as PFFileUpload,FormGroup,InputGroup,TextInput,Tooltip}from'@patternfly/react-core';import{PficonHistoryIcon}from'@patternfly/react-icons';import{PasswordInput}from'components/FormField';import AnsibleSelect from'components/AnsibleSelect';import Popover from'components/Popover';import{CredentialType}from'types';import{required}from'util/validators';import{CredentialPluginField}from'../CredentialPlugins';import BecomeMethodField from'./BecomeMethodField';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FileUpload=styled(PFFileUpload)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  flex-grow: 1;\\n\"])));function CredentialInput(_ref){var fieldOptions=_ref.fieldOptions,isFieldGroupValid=_ref.isFieldGroupValid,credentialKind=_ref.credentialKind,isVaultIdDisabled=_ref.isVaultIdDisabled,rest=_objectWithoutProperties(_ref,_excluded);var _useState=useState(''),_useState2=_slicedToArray(_useState,2),fileName=_useState2[0],setFileName=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),fileIsUploading=_useState4[0],setFileIsUploading=_useState4[1];var _useField=useField(\"inputs.\".concat(fieldOptions.id)),_useField2=_slicedToArray(_useField,3),subFormField=_useField2[0],meta=_useField2[1],helpers=_useField2[2];var _useField3=useField(\"passwordPrompts.\".concat(fieldOptions.id)),_useField4=_slicedToArray(_useField3,1),passwordPromptsField=_useField4[0];var isValid=!(meta.touched&&meta.error);var RevertReplaceButton=/*#__PURE__*/_jsx(_Fragment,{children:meta.initialValue&&meta.initialValue!==''&&!meta.initialValue.credential&&!passwordPromptsField.value&&/*#__PURE__*/_jsx(Tooltip,{id:\"credential-\".concat(fieldOptions.id,\"-replace-tooltip\"),content:meta.value!==meta.initialValue?/*i18n*/i18n._(\"Revert\"):/*i18n*/i18n._(\"Replace\"),children:/*#__PURE__*/_jsx(Button,{id:\"credential-\".concat(fieldOptions.id,\"-replace-button\"),variant:ButtonVariant.control,\"aria-label\":meta.touched?/*i18n*/i18n._(\"Revert field to previously saved value\"):/*i18n*/i18n._(\"Replace field with new value\"),onClick:function onClick(){if(meta.value!==meta.initialValue){helpers.setValue(meta.initialValue);}else{helpers.setValue('',false);}},children:/*#__PURE__*/_jsx(PficonHistoryIcon,{})})})});if(fieldOptions.multiline){var handleFileChange=function handleFileChange(value,filename){helpers.setValue(value);setFileName(filename);};if(fieldOptions.secret){return/*#__PURE__*/_jsxs(InputGroup,{children:[RevertReplaceButton,/*#__PURE__*/_jsx(FileUpload,_objectSpread(_objectSpread(_objectSpread({},subFormField),rest),{},{id:\"credential-\".concat(fieldOptions.id),type:\"text\",filename:fileName,filenamePlaceholder:/*i18n*/i18n._(\"Drag a file here or browse to upload\"),browseButtonText:/*i18n*/i18n._(\"Browse\\u2026\"),clearButtonText:/*i18n*/i18n._(\"Clear\"),onChange:handleFileChange,onReadStarted:function onReadStarted(){return setFileIsUploading(true);},onReadFinished:function onReadFinished(){return setFileIsUploading(false);},isLoading:fileIsUploading,allowEditingUploadedText:true,validated:isValid?'default':'error'}))]});}return/*#__PURE__*/_jsx(FileUpload,_objectSpread(_objectSpread(_objectSpread({},subFormField),rest),{},{id:\"credential-\".concat(fieldOptions.id),type:\"text\",filename:fileName,filenamePlaceholder:/*i18n*/i18n._(\"Drag a file here or browse to upload\"),browseButtonText:/*i18n*/i18n._(\"Browse\\u2026\"),clearButtonText:/*i18n*/i18n._(\"Clear\"),onChange:handleFileChange,onReadStarted:function onReadStarted(){return setFileIsUploading(true);},onReadFinished:function onReadFinished(){return setFileIsUploading(false);},isLoading:fileIsUploading,allowEditingUploadedText:true,validated:isValid?'default':'error',isDisabled:false}));}if(fieldOptions.secret){var passwordInput=function passwordInput(){return/*#__PURE__*/_jsxs(_Fragment,{children:[RevertReplaceButton,/*#__PURE__*/_jsx(PasswordInput,_objectSpread(_objectSpread({isFieldGroupValid:isFieldGroupValid},subFormField),{},{id:\"credential-\".concat(fieldOptions.id)},rest))]});};return credentialKind==='external'?/*#__PURE__*/_jsx(InputGroup,{children:passwordInput()}):passwordInput();}return/*#__PURE__*/_jsx(TextInput,_objectSpread(_objectSpread({},subFormField),{},{id:\"credential-\".concat(fieldOptions.id),onChange:function onChange(value,event){subFormField.onChange(event);},isDisabled:isVaultIdDisabled,validated:isValid?'default':'error'}));}CredentialInput.defaultProps={credentialKind:''};function CredentialField(_ref2){var _credentialType$input;var credentialType=_ref2.credentialType,fieldOptions=_ref2.fieldOptions;var _useFormikContext=useFormikContext(),formikValues=_useFormikContext.values;var location=useLocation();var requiredFields=(credentialType===null||credentialType===void 0?void 0:(_credentialType$input=credentialType.inputs)===null||_credentialType$input===void 0?void 0:_credentialType$input.required)||[];var isRequired=requiredFields.includes(fieldOptions.id);var validateField=function validateField(){if(isRequired&&!(formikValues!==null&&formikValues!==void 0&&formikValues.passwordPrompts[fieldOptions.id])){var validationMsg=fieldOptions.ask_at_runtime?/*i18n*/i18n._(\"Provide a value for this field or select the Prompt on launch option.\"):null;return required(validationMsg);}return null;};var _useField5=useField({name:\"inputs.\".concat(fieldOptions.id),validate:validateField()}),_useField6=_slicedToArray(_useField5,3),subFormField=_useField6[0],meta=_useField6[1],helpers=_useField6[2];var isValid=!(meta.touched&&meta.error)||formikValues.passwordPrompts[fieldOptions.id];if(fieldOptions.choices){var selectOptions=fieldOptions.choices.map(function(choice){return{value:choice,key:choice,label:choice};});return/*#__PURE__*/_jsx(FormGroup,{fieldId:\"credential-\".concat(fieldOptions.id),helperTextInvalid:meta.error,label:fieldOptions.label,isRequired:isRequired,validated:isValid?'default':'error',children:/*#__PURE__*/_jsx(AnsibleSelect,_objectSpread(_objectSpread({},subFormField),{},{id:\"credential-\".concat(fieldOptions.id),data:selectOptions,onChange:function onChange(event,value){helpers.setValue(value);}}))});}if(credentialType.kind==='external'){return/*#__PURE__*/_jsx(FormGroup,{fieldId:\"credential-\".concat(fieldOptions.id),helperTextInvalid:meta.error,label:fieldOptions.label,labelIcon:fieldOptions.help_text&&/*#__PURE__*/_jsx(Popover,{content:fieldOptions.help_text}),isRequired:isRequired,validated:isValid?'default':'error',children:/*#__PURE__*/_jsx(CredentialInput,{credentialKind:credentialType.kind,fieldOptions:fieldOptions,isDisabled:!!(meta.initialValue&&meta.initialValue!==''&&meta.value===meta.initialValue)})});}if(credentialType.kind==='ssh'&&fieldOptions.id==='become_method'){return/*#__PURE__*/_jsx(BecomeMethodField,{fieldOptions:fieldOptions,isRequired:isRequired});}var disabled=false;if(credentialType.kind==='vault'&&location.pathname.endsWith('edit')&&fieldOptions.id==='vault_id'){disabled=true;}return/*#__PURE__*/_jsx(CredentialPluginField,{fieldOptions:fieldOptions,isRequired:isRequired,validated:isValid?'default':'error',children:/*#__PURE__*/_jsx(CredentialInput,{isFieldGroupValid:isValid,fieldOptions:fieldOptions,isVaultIdDisabled:disabled})});}CredentialField.defaultProps={};export default CredentialField;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Credential/shared/CredentialFormFields/CredentialField.js"],"names":["React","useState","useLocation","useField","useFormikContext","styled","Button","ButtonVariant","FileUpload","PFFileUpload","FormGroup","InputGroup","TextInput","Tooltip","PficonHistoryIcon","PasswordInput","AnsibleSelect","Popover","CredentialType","required","CredentialPluginField","BecomeMethodField","CredentialInput","fieldOptions","isFieldGroupValid","credentialKind","isVaultIdDisabled","rest","fileName","setFileName","fileIsUploading","setFileIsUploading","id","subFormField","meta","helpers","passwordPromptsField","isValid","touched","error","RevertReplaceButton","initialValue","credential","value","control","setValue","multiline","handleFileChange","filename","secret","passwordInput","event","onChange","defaultProps","CredentialField","credentialType","formikValues","values","location","requiredFields","inputs","isRequired","includes","validateField","passwordPrompts","validationMsg","ask_at_runtime","name","validate","choices","selectOptions","map","choice","key","label","kind","help_text","disabled","pathname","endsWith"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-no-useless-fragment */\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useField, useFormikContext } from 'formik';\nimport { shape, string } from 'prop-types';\nimport styled from 'styled-components';\n\nimport { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  FileUpload as PFFileUpload,\n  FormGroup,\n  InputGroup,\n  TextInput,\n  Tooltip,\n} from '@patternfly/react-core';\nimport { PficonHistoryIcon } from '@patternfly/react-icons';\nimport { PasswordInput } from 'components/FormField';\nimport AnsibleSelect from 'components/AnsibleSelect';\nimport Popover from 'components/Popover';\nimport { CredentialType } from 'types';\nimport { required } from 'util/validators';\nimport { CredentialPluginField } from '../CredentialPlugins';\nimport BecomeMethodField from './BecomeMethodField';\n\nconst FileUpload = styled(PFFileUpload)`\n  flex-grow: 1;\n`;\n\nfunction CredentialInput({\n  fieldOptions,\n  isFieldGroupValid,\n  credentialKind,\n  isVaultIdDisabled,\n  ...rest\n}) {\n  const [fileName, setFileName] = useState('');\n  const [fileIsUploading, setFileIsUploading] = useState(false);\n  const [subFormField, meta, helpers] = useField(`inputs.${fieldOptions.id}`);\n  const [passwordPromptsField] = useField(`passwordPrompts.${fieldOptions.id}`);\n  const isValid = !(meta.touched && meta.error);\n\n  const RevertReplaceButton = (\n    <>\n      {meta.initialValue &&\n        meta.initialValue !== '' &&\n        !meta.initialValue.credential &&\n        !passwordPromptsField.value && (\n          <Tooltip\n            id={`credential-${fieldOptions.id}-replace-tooltip`}\n            content={meta.value !== meta.initialValue ? t`Revert` : t`Replace`}\n          >\n            <Button\n              id={`credential-${fieldOptions.id}-replace-button`}\n              variant={ButtonVariant.control}\n              aria-label={\n                meta.touched\n                  ? t`Revert field to previously saved value`\n                  : t`Replace field with new value`\n              }\n              onClick={() => {\n                if (meta.value !== meta.initialValue) {\n                  helpers.setValue(meta.initialValue);\n                } else {\n                  helpers.setValue('', false);\n                }\n              }}\n            >\n              <PficonHistoryIcon />\n            </Button>\n          </Tooltip>\n        )}\n    </>\n  );\n\n  if (fieldOptions.multiline) {\n    const handleFileChange = (value, filename) => {\n      helpers.setValue(value);\n      setFileName(filename);\n    };\n\n    if (fieldOptions.secret) {\n      return (\n        <InputGroup>\n          {RevertReplaceButton}\n          <FileUpload\n            {...subFormField}\n            {...rest}\n            id={`credential-${fieldOptions.id}`}\n            type=\"text\"\n            filename={fileName}\n            filenamePlaceholder={t`Drag a file here or browse to upload`}\n            browseButtonText={t`Browse…`}\n            clearButtonText={t`Clear`}\n            onChange={handleFileChange}\n            onReadStarted={() => setFileIsUploading(true)}\n            onReadFinished={() => setFileIsUploading(false)}\n            isLoading={fileIsUploading}\n            allowEditingUploadedText\n            validated={isValid ? 'default' : 'error'}\n          />\n        </InputGroup>\n      );\n    }\n\n    return (\n      <FileUpload\n        {...subFormField}\n        {...rest}\n        id={`credential-${fieldOptions.id}`}\n        type=\"text\"\n        filename={fileName}\n        filenamePlaceholder={t`Drag a file here or browse to upload`}\n        browseButtonText={t`Browse…`}\n        clearButtonText={t`Clear`}\n        onChange={handleFileChange}\n        onReadStarted={() => setFileIsUploading(true)}\n        onReadFinished={() => setFileIsUploading(false)}\n        isLoading={fileIsUploading}\n        allowEditingUploadedText\n        validated={isValid ? 'default' : 'error'}\n        isDisabled={false}\n      />\n    );\n  }\n\n  if (fieldOptions.secret) {\n    const passwordInput = () => (\n      <>\n        {RevertReplaceButton}\n        <PasswordInput\n          isFieldGroupValid={isFieldGroupValid}\n          {...subFormField}\n          id={`credential-${fieldOptions.id}`}\n          {...rest}\n        />\n      </>\n    );\n    return credentialKind === 'external' ? (\n      <InputGroup>{passwordInput()}</InputGroup>\n    ) : (\n      passwordInput()\n    );\n  }\n  return (\n    <TextInput\n      {...subFormField}\n      id={`credential-${fieldOptions.id}`}\n      onChange={(value, event) => {\n        subFormField.onChange(event);\n      }}\n      isDisabled={isVaultIdDisabled}\n      validated={isValid ? 'default' : 'error'}\n    />\n  );\n}\n\nCredentialInput.propTypes = {\n  fieldOptions: shape({\n    id: string.isRequired,\n    label: string.isRequired,\n  }).isRequired,\n  credentialKind: string,\n};\n\nCredentialInput.defaultProps = {\n  credentialKind: '',\n};\n\nfunction CredentialField({ credentialType, fieldOptions }) {\n  const { values: formikValues } = useFormikContext();\n  const location = useLocation();\n  const requiredFields = credentialType?.inputs?.required || [];\n  const isRequired = requiredFields.includes(fieldOptions.id);\n  const validateField = () => {\n    if (isRequired && !formikValues?.passwordPrompts[fieldOptions.id]) {\n      const validationMsg = fieldOptions.ask_at_runtime\n        ? t`Provide a value for this field or select the Prompt on launch option.`\n        : null;\n      return required(validationMsg);\n    }\n    return null;\n  };\n  const [subFormField, meta, helpers] = useField({\n    name: `inputs.${fieldOptions.id}`,\n    validate: validateField(),\n  });\n  const isValid =\n    !(meta.touched && meta.error) ||\n    formikValues.passwordPrompts[fieldOptions.id];\n\n  if (fieldOptions.choices) {\n    const selectOptions = fieldOptions.choices.map((choice) => ({\n      value: choice,\n      key: choice,\n      label: choice,\n    }));\n    return (\n      <FormGroup\n        fieldId={`credential-${fieldOptions.id}`}\n        helperTextInvalid={meta.error}\n        label={fieldOptions.label}\n        isRequired={isRequired}\n        validated={isValid ? 'default' : 'error'}\n      >\n        <AnsibleSelect\n          {...subFormField}\n          id={`credential-${fieldOptions.id}`}\n          data={selectOptions}\n          onChange={(event, value) => {\n            helpers.setValue(value);\n          }}\n        />\n      </FormGroup>\n    );\n  }\n  if (credentialType.kind === 'external') {\n    return (\n      <FormGroup\n        fieldId={`credential-${fieldOptions.id}`}\n        helperTextInvalid={meta.error}\n        label={fieldOptions.label}\n        labelIcon={\n          fieldOptions.help_text && <Popover content={fieldOptions.help_text} />\n        }\n        isRequired={isRequired}\n        validated={isValid ? 'default' : 'error'}\n      >\n        <CredentialInput\n          credentialKind={credentialType.kind}\n          fieldOptions={fieldOptions}\n          isDisabled={\n            !!(\n              meta.initialValue &&\n              meta.initialValue !== '' &&\n              meta.value === meta.initialValue\n            )\n          }\n        />\n      </FormGroup>\n    );\n  }\n  if (credentialType.kind === 'ssh' && fieldOptions.id === 'become_method') {\n    return (\n      <BecomeMethodField fieldOptions={fieldOptions} isRequired={isRequired} />\n    );\n  }\n\n  let disabled = false;\n  if (\n    credentialType.kind === 'vault' &&\n    location.pathname.endsWith('edit') &&\n    fieldOptions.id === 'vault_id'\n  ) {\n    disabled = true;\n  }\n  return (\n    <CredentialPluginField\n      fieldOptions={fieldOptions}\n      isRequired={isRequired}\n      validated={isValid ? 'default' : 'error'}\n    >\n      <CredentialInput\n        isFieldGroupValid={isValid}\n        fieldOptions={fieldOptions}\n        isVaultIdDisabled={disabled}\n      />\n    </CredentialPluginField>\n  );\n}\n\nCredentialField.propTypes = {\n  credentialType: CredentialType.isRequired,\n  fieldOptions: shape({\n    id: string.isRequired,\n    label: string.isRequired,\n  }).isRequired,\n};\n\nCredentialField.defaultProps = {};\n\nexport default CredentialField;\n"]},"metadata":{},"sourceType":"module"}