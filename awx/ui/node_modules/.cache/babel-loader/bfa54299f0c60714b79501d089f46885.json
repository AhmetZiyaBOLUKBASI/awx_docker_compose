{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useCallback,useEffect}from'react';import{useHistory}from'react-router-dom';import{FormGroup}from'@patternfly/react-core';import{CredentialsAPI}from'api';import{Credential}from'types';import{getSearchableKeys}from'components/PaginatedTable';import{getQSConfig,parseQueryString,mergeParams}from'util/qs';import useAutoPopulateLookup from'hooks/useAutoPopulateLookup';import useRequest from'hooks/useRequest';import Popover from'../Popover';import Lookup from'./Lookup';import OptionsList from'../OptionsList';import LookupErrorMessage from'./shared/LookupErrorMessage';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QS_CONFIG=getQSConfig('credentials',{page:1,page_size:5,order_by:'name'});function CredentialLookup(_ref){var autoPopulate=_ref.autoPopulate,credentialTypeId=_ref.credentialTypeId,credentialTypeKind=_ref.credentialTypeKind,credentialTypeNamespace=_ref.credentialTypeNamespace,fieldName=_ref.fieldName,helperTextInvalid=_ref.helperTextInvalid,isDisabled=_ref.isDisabled,isSelectedDraggable=_ref.isSelectedDraggable,isValid=_ref.isValid,label=_ref.label,modalDescription=_ref.modalDescription,multiple=_ref.multiple,onBlur=_ref.onBlur,onChange=_ref.onChange,required=_ref.required,tooltip=_ref.tooltip,validate=_ref.validate,value=_ref.value;var history=useHistory();var autoPopulateLookup=useAutoPopulateLookup(onChange);var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _actionsResponse$data,_actionsResponse$data2;var params,typeIdParams,typeKindParams,typeNamespaceParams,_yield$Promise$all,_yield$Promise$all2,data,actionsResponse,searchKeys,item;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:params=parseQueryString(QS_CONFIG,history.location.search);typeIdParams=credentialTypeId?{credential_type:credentialTypeId}:{};typeKindParams=credentialTypeKind?{credential_type__kind:credentialTypeKind}:{};typeNamespaceParams=credentialTypeNamespace?{credential_type__namespace:credentialTypeNamespace}:{};_context.next=6;return Promise.all([CredentialsAPI.read(mergeParams(params,_objectSpread(_objectSpread(_objectSpread({},typeIdParams),typeKindParams),typeNamespaceParams))),CredentialsAPI.readOptions()]);case 6:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);data=_yield$Promise$all2[0].data;actionsResponse=_yield$Promise$all2[1];if(autoPopulate){autoPopulateLookup(data.results);}searchKeys=getSearchableKeys((_actionsResponse$data=actionsResponse.data.actions)===null||_actionsResponse$data===void 0?void 0:_actionsResponse$data.GET);item=searchKeys.find(function(k){return k.key==='type';});if(item){item.key='credential_type__kind';}return _context.abrupt(\"return\",{count:data.count,credentials:data.results,relatedSearchableKeys:((actionsResponse===null||actionsResponse===void 0?void 0:(_actionsResponse$data2=actionsResponse.data)===null||_actionsResponse$data2===void 0?void 0:_actionsResponse$data2.related_search_fields)||[]).map(function(val){return val.slice(0,-8);}),searchableKeys:searchKeys});case 15:case\"end\":return _context.stop();}}},_callee);})),[autoPopulate,autoPopulateLookup,credentialTypeId,credentialTypeKind,credentialTypeNamespace,history.location.search]),{count:0,credentials:[],relatedSearchableKeys:[],searchableKeys:[]}),_useRequest$result=_useRequest.result,count=_useRequest$result.count,credentials=_useRequest$result.credentials,relatedSearchableKeys=_useRequest$result.relatedSearchableKeys,searchableKeys=_useRequest$result.searchableKeys,error=_useRequest.error,fetchCredentials=_useRequest.request;var checkCredentialName=useCallback(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(name){var typeIdParams,typeKindParams,typeNamespaceParams,_yield$CredentialsAPI,_yield$CredentialsAPI2,nameMatchResults,nameMatchCount;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(name){_context2.next=3;break;}onChange(null);return _context2.abrupt(\"return\");case 3:_context2.prev=3;typeIdParams=credentialTypeId?{credential_type:credentialTypeId}:{};typeKindParams=credentialTypeKind?{credential_type__kind:credentialTypeKind}:{};typeNamespaceParams=credentialTypeNamespace?{credential_type__namespace:credentialTypeNamespace}:{};_context2.next=9;return CredentialsAPI.read(_objectSpread(_objectSpread(_objectSpread({name:name},typeIdParams),typeKindParams),typeNamespaceParams));case 9:_yield$CredentialsAPI=_context2.sent;_yield$CredentialsAPI2=_yield$CredentialsAPI.data;nameMatchResults=_yield$CredentialsAPI2.results;nameMatchCount=_yield$CredentialsAPI2.count;onChange(nameMatchCount?nameMatchResults[0]:null);_context2.next=19;break;case 16:_context2.prev=16;_context2.t0=_context2[\"catch\"](3);onChange(null);case 19:case\"end\":return _context2.stop();}}},_callee2,null,[[3,16]]);}));return function(_x){return _ref3.apply(this,arguments);};}(),[onChange,credentialTypeId,credentialTypeKind,credentialTypeNamespace]);useEffect(function(){fetchCredentials();},[fetchCredentials]);// TODO: replace credential type search with REST-based grabbing of cred types\nreturn/*#__PURE__*/_jsxs(FormGroup,{fieldId:\"credential\",isRequired:required,validated:isValid?'default':'error',label:label,labelIcon:tooltip&&/*#__PURE__*/_jsx(Popover,{content:tooltip}),helperTextInvalid:helperTextInvalid,children:[/*#__PURE__*/_jsx(Lookup,{id:\"credential\",header:label,value:value,onBlur:onBlur,onChange:onChange,onUpdate:fetchCredentials,onDebounce:checkCredentialName,fieldName:fieldName,validate:validate,required:required,qsConfig:QS_CONFIG,isDisabled:isDisabled,multiple:multiple,modalDescription:modalDescription,renderOptionsList:function renderOptionsList(_ref4){var state=_ref4.state,dispatch=_ref4.dispatch,canDelete=_ref4.canDelete;return/*#__PURE__*/_jsx(OptionsList,{value:state.selectedItems,options:credentials,optionCount:count,header:label,qsConfig:QS_CONFIG,searchColumns:[{name:/*i18n*/i18n._(\"Name\"),key:'name__icontains',isDefault:true},{name:/*i18n*/i18n._(\"Created By (Username)\"),key:'created_by__username__icontains'},{name:/*i18n*/i18n._(\"Modified By (Username)\"),key:'modified_by__username__icontains'}],sortColumns:[{name:/*i18n*/i18n._(\"Name\"),key:'name'}],searchableKeys:searchableKeys,relatedSearchableKeys:relatedSearchableKeys,readOnly:!canDelete,name:\"credential\",selectItem:function selectItem(item){return dispatch({type:'SELECT_ITEM',item:item});},deselectItem:function deselectItem(item){return dispatch({type:'DESELECT_ITEM',item:item});},sortSelectedItems:function sortSelectedItems(selectedItems){return dispatch({type:'SET_SELECTED_ITEMS',selectedItems:selectedItems});},multiple:multiple,isSelectedDraggable:isSelectedDraggable});}}),/*#__PURE__*/_jsx(LookupErrorMessage,{error:error})]});}function idOrKind(props,propName,componentName){var error;if(!Object.prototype.hasOwnProperty.call(props,'credentialTypeId')&&!Object.prototype.hasOwnProperty.call(props,'credentialTypeKind'))error=new Error(\"Either \\\"credentialTypeId\\\" or \\\"credentialTypeKind\\\" is required\");if(!Object.prototype.hasOwnProperty.call(props,'credentialTypeId')&&typeof props[propName]!=='string'){error=new Error(\"Invalid prop '\".concat(propName,\"' '\").concat(props[propName],\"' supplied to '\").concat(componentName,\"'.\"));}return error;}CredentialLookup.defaultProps={credentialTypeId:'',credentialTypeKind:'',helperTextInvalid:'',isValid:true,multiple:false,onBlur:function onBlur(){},required:false,value:null,isDisabled:false,autoPopulate:false,validate:function validate(){return undefined;},fieldName:'credential'};export{CredentialLookup as _CredentialLookup};export default CredentialLookup;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/Lookup/CredentialLookup.js"],"names":["React","useCallback","useEffect","useHistory","FormGroup","CredentialsAPI","Credential","getSearchableKeys","getQSConfig","parseQueryString","mergeParams","useAutoPopulateLookup","useRequest","Popover","Lookup","OptionsList","LookupErrorMessage","QS_CONFIG","page","page_size","order_by","CredentialLookup","autoPopulate","credentialTypeId","credentialTypeKind","credentialTypeNamespace","fieldName","helperTextInvalid","isDisabled","isSelectedDraggable","isValid","label","modalDescription","multiple","onBlur","onChange","required","tooltip","validate","value","history","autoPopulateLookup","params","location","search","typeIdParams","credential_type","typeKindParams","credential_type__kind","typeNamespaceParams","credential_type__namespace","Promise","all","read","readOptions","data","actionsResponse","results","searchKeys","actions","GET","item","find","k","key","count","credentials","relatedSearchableKeys","related_search_fields","map","val","slice","searchableKeys","result","error","fetchCredentials","request","checkCredentialName","name","nameMatchResults","nameMatchCount","state","dispatch","canDelete","selectedItems","isDefault","type","idOrKind","props","propName","componentName","Object","prototype","hasOwnProperty","call","Error","defaultProps","undefined","_CredentialLookup"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  arrayOf,\n  bool,\n  func,\n  node,\n  number,\n  string,\n  oneOfType,\n} from 'prop-types';\n\nimport { t } from '@lingui/macro';\nimport { FormGroup } from '@patternfly/react-core';\nimport { CredentialsAPI } from 'api';\nimport { Credential } from 'types';\nimport { getSearchableKeys } from 'components/PaginatedTable';\nimport { getQSConfig, parseQueryString, mergeParams } from 'util/qs';\nimport useAutoPopulateLookup from 'hooks/useAutoPopulateLookup';\nimport useRequest from 'hooks/useRequest';\nimport Popover from '../Popover';\nimport Lookup from './Lookup';\nimport OptionsList from '../OptionsList';\nimport LookupErrorMessage from './shared/LookupErrorMessage';\n\nconst QS_CONFIG = getQSConfig('credentials', {\n  page: 1,\n  page_size: 5,\n  order_by: 'name',\n});\n\nfunction CredentialLookup({\n  autoPopulate,\n  credentialTypeId,\n  credentialTypeKind,\n  credentialTypeNamespace,\n  fieldName,\n  helperTextInvalid,\n  isDisabled,\n  isSelectedDraggable,\n  isValid,\n  label,\n  modalDescription,\n  multiple,\n  onBlur,\n  onChange,\n  required,\n  tooltip,\n  validate,\n  value,\n}) {\n  const history = useHistory();\n  const autoPopulateLookup = useAutoPopulateLookup(onChange);\n  const {\n    result: { count, credentials, relatedSearchableKeys, searchableKeys },\n    error,\n    request: fetchCredentials,\n  } = useRequest(\n    useCallback(async () => {\n      const params = parseQueryString(QS_CONFIG, history.location.search);\n      const typeIdParams = credentialTypeId\n        ? { credential_type: credentialTypeId }\n        : {};\n      const typeKindParams = credentialTypeKind\n        ? { credential_type__kind: credentialTypeKind }\n        : {};\n      const typeNamespaceParams = credentialTypeNamespace\n        ? { credential_type__namespace: credentialTypeNamespace }\n        : {};\n\n      const [{ data }, actionsResponse] = await Promise.all([\n        CredentialsAPI.read(\n          mergeParams(params, {\n            ...typeIdParams,\n            ...typeKindParams,\n            ...typeNamespaceParams,\n          })\n        ),\n        CredentialsAPI.readOptions(),\n      ]);\n\n      if (autoPopulate) {\n        autoPopulateLookup(data.results);\n      }\n\n      const searchKeys = getSearchableKeys(actionsResponse.data.actions?.GET);\n      const item = searchKeys.find((k) => k.key === 'type');\n      if (item) {\n        item.key = 'credential_type__kind';\n      }\n\n      return {\n        count: data.count,\n        credentials: data.results,\n        relatedSearchableKeys: (\n          actionsResponse?.data?.related_search_fields || []\n        ).map((val) => val.slice(0, -8)),\n        searchableKeys: searchKeys,\n      };\n    }, [\n      autoPopulate,\n      autoPopulateLookup,\n      credentialTypeId,\n      credentialTypeKind,\n      credentialTypeNamespace,\n      history.location.search,\n    ]),\n    {\n      count: 0,\n      credentials: [],\n      relatedSearchableKeys: [],\n      searchableKeys: [],\n    }\n  );\n\n  const checkCredentialName = useCallback(\n    async (name) => {\n      if (!name) {\n        onChange(null);\n        return;\n      }\n\n      try {\n        const typeIdParams = credentialTypeId\n          ? { credential_type: credentialTypeId }\n          : {};\n        const typeKindParams = credentialTypeKind\n          ? { credential_type__kind: credentialTypeKind }\n          : {};\n        const typeNamespaceParams = credentialTypeNamespace\n          ? { credential_type__namespace: credentialTypeNamespace }\n          : {};\n\n        const {\n          data: { results: nameMatchResults, count: nameMatchCount },\n        } = await CredentialsAPI.read({\n          name,\n          ...typeIdParams,\n          ...typeKindParams,\n          ...typeNamespaceParams,\n        });\n        onChange(nameMatchCount ? nameMatchResults[0] : null);\n      } catch {\n        onChange(null);\n      }\n    },\n    [onChange, credentialTypeId, credentialTypeKind, credentialTypeNamespace]\n  );\n\n  useEffect(() => {\n    fetchCredentials();\n  }, [fetchCredentials]);\n\n  // TODO: replace credential type search with REST-based grabbing of cred types\n\n  return (\n    <FormGroup\n      fieldId=\"credential\"\n      isRequired={required}\n      validated={isValid ? 'default' : 'error'}\n      label={label}\n      labelIcon={tooltip && <Popover content={tooltip} />}\n      helperTextInvalid={helperTextInvalid}\n    >\n      <Lookup\n        id=\"credential\"\n        header={label}\n        value={value}\n        onBlur={onBlur}\n        onChange={onChange}\n        onUpdate={fetchCredentials}\n        onDebounce={checkCredentialName}\n        fieldName={fieldName}\n        validate={validate}\n        required={required}\n        qsConfig={QS_CONFIG}\n        isDisabled={isDisabled}\n        multiple={multiple}\n        modalDescription={modalDescription}\n        renderOptionsList={({ state, dispatch, canDelete }) => (\n          <OptionsList\n            value={state.selectedItems}\n            options={credentials}\n            optionCount={count}\n            header={label}\n            qsConfig={QS_CONFIG}\n            searchColumns={[\n              {\n                name: t`Name`,\n                key: 'name__icontains',\n                isDefault: true,\n              },\n              {\n                name: t`Created By (Username)`,\n                key: 'created_by__username__icontains',\n              },\n              {\n                name: t`Modified By (Username)`,\n                key: 'modified_by__username__icontains',\n              },\n            ]}\n            sortColumns={[\n              {\n                name: t`Name`,\n                key: 'name',\n              },\n            ]}\n            searchableKeys={searchableKeys}\n            relatedSearchableKeys={relatedSearchableKeys}\n            readOnly={!canDelete}\n            name=\"credential\"\n            selectItem={(item) => dispatch({ type: 'SELECT_ITEM', item })}\n            deselectItem={(item) => dispatch({ type: 'DESELECT_ITEM', item })}\n            sortSelectedItems={(selectedItems) =>\n              dispatch({ type: 'SET_SELECTED_ITEMS', selectedItems })\n            }\n            multiple={multiple}\n            isSelectedDraggable={isSelectedDraggable}\n          />\n        )}\n      />\n      <LookupErrorMessage error={error} />\n    </FormGroup>\n  );\n}\n\nfunction idOrKind(props, propName, componentName) {\n  let error;\n  if (\n    !Object.prototype.hasOwnProperty.call(props, 'credentialTypeId') &&\n    !Object.prototype.hasOwnProperty.call(props, 'credentialTypeKind')\n  )\n    error = new Error(\n      `Either \"credentialTypeId\" or \"credentialTypeKind\" is required`\n    );\n  if (\n    !Object.prototype.hasOwnProperty.call(props, 'credentialTypeId') &&\n    typeof props[propName] !== 'string'\n  ) {\n    error = new Error(\n      `Invalid prop '${propName}' '${props[propName]}' supplied to '${componentName}'.`\n    );\n  }\n  return error;\n}\n\nCredentialLookup.propTypes = {\n  credentialTypeId: oneOfType([number, string]),\n  credentialTypeKind: idOrKind,\n  helperTextInvalid: node,\n  isValid: bool,\n  label: string.isRequired,\n  multiple: bool,\n  onBlur: func,\n  onChange: func.isRequired,\n  required: bool,\n  value: oneOfType([Credential, arrayOf(Credential)]),\n  isDisabled: bool,\n  autoPopulate: bool,\n  validate: func,\n  fieldName: string,\n};\n\nCredentialLookup.defaultProps = {\n  credentialTypeId: '',\n  credentialTypeKind: '',\n  helperTextInvalid: '',\n  isValid: true,\n  multiple: false,\n  onBlur: () => {},\n  required: false,\n  value: null,\n  isDisabled: false,\n  autoPopulate: false,\n  validate: () => undefined,\n  fieldName: 'credential',\n};\n\nexport { CredentialLookup as _CredentialLookup };\nexport default CredentialLookup;\n"]},"metadata":{},"sourceType":"module"}