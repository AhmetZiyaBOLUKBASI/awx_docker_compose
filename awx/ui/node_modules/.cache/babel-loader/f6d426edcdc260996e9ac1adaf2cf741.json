{"ast":null,"code":"import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useEffect,useCallback}from'react';import{Formik,useField,useFormikContext}from'formik';import{useLocation}from'react-router-dom';import{Form}from'@patternfly/react-core';import{InstanceGroup}from'types';import{VariablesField}from'components/CodeEditor';import ContentError from'components/ContentError';import ContentLoading from'components/ContentLoading';import FormActionGroup from'components/FormActionGroup';import FormField,{FormSubmitError}from'components/FormField';import{FormColumnLayout,FormFullWidthLayout}from'components/FormLayout';import{toHostFilter,toSearchParams}from'components/Lookup/shared/HostFilterUtils';import HostFilterLookup from'components/Lookup/HostFilterLookup';import InstanceGroupsLookup from'components/Lookup/InstanceGroupsLookup';import OrganizationLookup from'components/Lookup/OrganizationLookup';import useRequest from'hooks/useRequest';import{required}from'util/validators';import{InventoriesAPI}from'api';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SmartInventoryFormFields=function SmartInventoryFormFields(_ref){var _organizationField$va;var inventory=_ref.inventory;var _useFormikContext=useFormikContext(),setFieldValue=_useFormikContext.setFieldValue,setFieldTouched=_useFormikContext.setFieldTouched;var _useField=useField('organization'),_useField2=_slicedToArray(_useField,3),organizationField=_useField2[0],organizationMeta=_useField2[1],organizationHelpers=_useField2[2];var _useField3=useField('instance_groups'),_useField4=_slicedToArray(_useField3,3),instanceGroupsField=_useField4[0],instanceGroupsHelpers=_useField4[2];var _useField5=useField({name:'host_filter',validate:required(null)}),_useField6=_slicedToArray(_useField5,3),hostFilterField=_useField6[0],hostFilterMeta=_useField6[1],hostFilterHelpers=_useField6[2];var handleOrganizationUpdate=useCallback(function(value){setFieldValue('organization',value);setFieldTouched('organization',true,false);},[setFieldValue,setFieldTouched]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FormField,{id:\"name\",label:/*i18n*/i18n._(\"Name\"),name:\"name\",type:\"text\",validate:required(null),isRequired:true}),/*#__PURE__*/_jsx(FormField,{id:\"description\",label:/*i18n*/i18n._(\"Description\"),name:\"description\",type:\"text\"}),/*#__PURE__*/_jsx(OrganizationLookup,{helperTextInvalid:organizationMeta.error,isValid:!organizationMeta.touched||!organizationMeta.error,onBlur:function onBlur(){return organizationHelpers.setTouched();},onChange:handleOrganizationUpdate,value:organizationField.value,required:true,autoPopulate:!(inventory!==null&&inventory!==void 0&&inventory.id),validate:required(/*i18n*/i18n._(\"Select a value for this field\"))}),/*#__PURE__*/_jsx(HostFilterLookup,{value:hostFilterField.value,organizationId:(_organizationField$va=organizationField.value)===null||_organizationField$va===void 0?void 0:_organizationField$va.id,helperTextInvalid:hostFilterMeta.error,onChange:function onChange(value){hostFilterHelpers.setValue(value);},onBlur:function onBlur(){return hostFilterHelpers.setTouched();},isValid:!hostFilterMeta.touched||!hostFilterMeta.error,isDisabled:!organizationField.value,enableNegativeFiltering:false,enableRelatedFuzzyFiltering:false}),/*#__PURE__*/_jsx(InstanceGroupsLookup,{value:instanceGroupsField.value,onChange:function onChange(value){instanceGroupsHelpers.setValue(value);},tooltip:/*i18n*/i18n._(\"Select the Instance Groups for this Inventory to run on.\")}),/*#__PURE__*/_jsx(FormFullWidthLayout,{children:/*#__PURE__*/_jsx(VariablesField,{id:\"variables\",name:\"variables\",label:/*i18n*/i18n._(\"Variables\"),tooltip:/*i18n*/i18n._(\"Enter inventory variables using either JSON or YAML syntax.\\nUse the radio button to toggle between the two. Refer to the\\nAnsible Controller documentation for example syntax.\")})})]});};function SmartInventoryForm(_ref2){var _inventory$summary_fi;var inventory=_ref2.inventory,instanceGroups=_ref2.instanceGroups,_onSubmit=_ref2.onSubmit,onCancel=_ref2.onCancel,submitError=_ref2.submitError;var _useLocation=useLocation(),search=_useLocation.search;var queryParams=new URLSearchParams(search);var hostFilterFromParams=queryParams.get('host_filter');function addHostFilter(string){if(!string)return null;if(string.includes('ansible_facts')&&!string.includes('host_filter')){return string.replace('ansible_facts','host_filter=ansible_facts');}return string;}var initialValues={description:inventory.description||'',host_filter:addHostFilter(inventory.host_filter)||(hostFilterFromParams?toHostFilter(toSearchParams(hostFilterFromParams)):''),instance_groups:instanceGroups||[],kind:'smart',name:inventory.name||'',organization:((_inventory$summary_fi=inventory.summary_fields)===null||_inventory$summary_fi===void 0?void 0:_inventory$summary_fi.organization)||null,variables:inventory.variables||'---'};var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$InventoriesAPI,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return InventoriesAPI.readOptions();case 2:_yield$InventoriesAPI=_context.sent;data=_yield$InventoriesAPI.data;return _context.abrupt(\"return\",data);case 5:case\"end\":return _context.stop();}}},_callee);})),[]),null),isLoading=_useRequest.isLoading,optionsError=_useRequest.error,fetchOptions=_useRequest.request,options=_useRequest.result;useEffect(function(){fetchOptions();},[fetchOptions]);if(isLoading){return/*#__PURE__*/_jsx(ContentLoading,{});}if(optionsError){return/*#__PURE__*/_jsx(ContentError,{error:optionsError});}return/*#__PURE__*/_jsx(Formik,{initialValues:initialValues,onSubmit:function onSubmit(values){_onSubmit(values);},children:function children(formik){var _options$actions;return/*#__PURE__*/_jsx(Form,{autoComplete:\"off\",onSubmit:formik.handleSubmit,children:/*#__PURE__*/_jsxs(FormColumnLayout,{children:[/*#__PURE__*/_jsx(SmartInventoryFormFields,{inventory:inventory}),submitError&&/*#__PURE__*/_jsx(FormSubmitError,{error:submitError}),/*#__PURE__*/_jsx(FormActionGroup,{onCancel:onCancel,onSubmit:formik.handleSubmit,submitDisabled:!(options!==null&&options!==void 0&&(_options$actions=options.actions)!==null&&_options$actions!==void 0&&_options$actions.POST)})]})});}});}SmartInventoryForm.defaultProps={instanceGroups:[],inventory:{},submitError:null};export default SmartInventoryForm;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Inventory/shared/SmartInventoryForm.js"],"names":["React","useEffect","useCallback","Formik","useField","useFormikContext","useLocation","Form","InstanceGroup","VariablesField","ContentError","ContentLoading","FormActionGroup","FormField","FormSubmitError","FormColumnLayout","FormFullWidthLayout","toHostFilter","toSearchParams","HostFilterLookup","InstanceGroupsLookup","OrganizationLookup","useRequest","required","InventoriesAPI","SmartInventoryFormFields","inventory","setFieldValue","setFieldTouched","organizationField","organizationMeta","organizationHelpers","instanceGroupsField","instanceGroupsHelpers","name","validate","hostFilterField","hostFilterMeta","hostFilterHelpers","handleOrganizationUpdate","value","error","touched","setTouched","id","setValue","SmartInventoryForm","instanceGroups","onSubmit","onCancel","submitError","search","queryParams","URLSearchParams","hostFilterFromParams","get","addHostFilter","string","includes","replace","initialValues","description","host_filter","instance_groups","kind","organization","summary_fields","variables","readOptions","data","isLoading","optionsError","fetchOptions","request","options","result","values","formik","handleSubmit","actions","POST","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from 'react';\nimport { Formik, useField, useFormikContext } from 'formik';\nimport { t } from '@lingui/macro';\nimport { useLocation } from 'react-router-dom';\nimport { func, shape, arrayOf } from 'prop-types';\nimport { Form } from '@patternfly/react-core';\nimport { InstanceGroup } from 'types';\nimport { VariablesField } from 'components/CodeEditor';\nimport ContentError from 'components/ContentError';\nimport ContentLoading from 'components/ContentLoading';\nimport FormActionGroup from 'components/FormActionGroup';\nimport FormField, { FormSubmitError } from 'components/FormField';\nimport { FormColumnLayout, FormFullWidthLayout } from 'components/FormLayout';\nimport {\n  toHostFilter,\n  toSearchParams,\n} from 'components/Lookup/shared/HostFilterUtils';\nimport HostFilterLookup from 'components/Lookup/HostFilterLookup';\nimport InstanceGroupsLookup from 'components/Lookup/InstanceGroupsLookup';\nimport OrganizationLookup from 'components/Lookup/OrganizationLookup';\nimport useRequest from 'hooks/useRequest';\nimport { required } from 'util/validators';\nimport { InventoriesAPI } from 'api';\n\nconst SmartInventoryFormFields = ({ inventory }) => {\n  const { setFieldValue, setFieldTouched } = useFormikContext();\n  const [organizationField, organizationMeta, organizationHelpers] =\n    useField('organization');\n  const [instanceGroupsField, , instanceGroupsHelpers] =\n    useField('instance_groups');\n  const [hostFilterField, hostFilterMeta, hostFilterHelpers] = useField({\n    name: 'host_filter',\n    validate: required(null),\n  });\n  const handleOrganizationUpdate = useCallback(\n    (value) => {\n      setFieldValue('organization', value);\n      setFieldTouched('organization', true, false);\n    },\n    [setFieldValue, setFieldTouched]\n  );\n\n  return (\n    <>\n      <FormField\n        id=\"name\"\n        label={t`Name`}\n        name=\"name\"\n        type=\"text\"\n        validate={required(null)}\n        isRequired\n      />\n      <FormField\n        id=\"description\"\n        label={t`Description`}\n        name=\"description\"\n        type=\"text\"\n      />\n      <OrganizationLookup\n        helperTextInvalid={organizationMeta.error}\n        isValid={!organizationMeta.touched || !organizationMeta.error}\n        onBlur={() => organizationHelpers.setTouched()}\n        onChange={handleOrganizationUpdate}\n        value={organizationField.value}\n        required\n        autoPopulate={!inventory?.id}\n        validate={required(t`Select a value for this field`)}\n      />\n      <HostFilterLookup\n        value={hostFilterField.value}\n        organizationId={organizationField.value?.id}\n        helperTextInvalid={hostFilterMeta.error}\n        onChange={(value) => {\n          hostFilterHelpers.setValue(value);\n        }}\n        onBlur={() => hostFilterHelpers.setTouched()}\n        isValid={!hostFilterMeta.touched || !hostFilterMeta.error}\n        isDisabled={!organizationField.value}\n        enableNegativeFiltering={false}\n        enableRelatedFuzzyFiltering={false}\n      />\n      <InstanceGroupsLookup\n        value={instanceGroupsField.value}\n        onChange={(value) => {\n          instanceGroupsHelpers.setValue(value);\n        }}\n        tooltip={t`Select the Instance Groups for this Inventory to run on.`}\n      />\n      <FormFullWidthLayout>\n        <VariablesField\n          id=\"variables\"\n          name=\"variables\"\n          label={t`Variables`}\n          tooltip={t`Enter inventory variables using either JSON or YAML syntax.\n            Use the radio button to toggle between the two. Refer to the\n            Ansible Controller documentation for example syntax.`}\n        />\n      </FormFullWidthLayout>\n    </>\n  );\n};\n\nfunction SmartInventoryForm({\n  inventory,\n  instanceGroups,\n  onSubmit,\n  onCancel,\n  submitError,\n}) {\n  const { search } = useLocation();\n  const queryParams = new URLSearchParams(search);\n  const hostFilterFromParams = queryParams.get('host_filter');\n\n  function addHostFilter(string) {\n    if (!string) return null;\n    if (string.includes('ansible_facts') && !string.includes('host_filter')) {\n      return string.replace('ansible_facts', 'host_filter=ansible_facts');\n    }\n    return string;\n  }\n\n  const initialValues = {\n    description: inventory.description || '',\n    host_filter:\n      addHostFilter(inventory.host_filter) ||\n      (hostFilterFromParams\n        ? toHostFilter(toSearchParams(hostFilterFromParams))\n        : ''),\n    instance_groups: instanceGroups || [],\n    kind: 'smart',\n    name: inventory.name || '',\n    organization: inventory.summary_fields?.organization || null,\n    variables: inventory.variables || '---',\n  };\n\n  const {\n    isLoading,\n    error: optionsError,\n    request: fetchOptions,\n    result: options,\n  } = useRequest(\n    useCallback(async () => {\n      const { data } = await InventoriesAPI.readOptions();\n      return data;\n    }, []),\n    null\n  );\n\n  useEffect(() => {\n    fetchOptions();\n  }, [fetchOptions]);\n\n  if (isLoading) {\n    return <ContentLoading />;\n  }\n\n  if (optionsError) {\n    return <ContentError error={optionsError} />;\n  }\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values) => {\n        onSubmit(values);\n      }}\n    >\n      {(formik) => (\n        <Form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n          <FormColumnLayout>\n            <SmartInventoryFormFields inventory={inventory} />\n            {submitError && <FormSubmitError error={submitError} />}\n            <FormActionGroup\n              onCancel={onCancel}\n              onSubmit={formik.handleSubmit}\n              submitDisabled={!options?.actions?.POST}\n            />\n          </FormColumnLayout>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nSmartInventoryForm.propTypes = {\n  instanceGroups: arrayOf(InstanceGroup),\n  inventory: shape({}),\n  onCancel: func.isRequired,\n  onSubmit: func.isRequired,\n  submitError: shape({}),\n};\n\nSmartInventoryForm.defaultProps = {\n  instanceGroups: [],\n  inventory: {},\n  submitError: null,\n};\n\nexport default SmartInventoryForm;\n"]},"metadata":{},"sourceType":"module"}