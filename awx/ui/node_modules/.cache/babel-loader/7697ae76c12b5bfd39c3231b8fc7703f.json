{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _excluded=[\"inventory\",\"onSubmit\",\"onCancel\",\"submitError\",\"instanceGroups\"];import{i18n}from\"@lingui/core\";import React,{useCallback,useState}from'react';import{Formik,useField,useFormikContext}from'formik';import{func,shape}from'prop-types';import{Form,FormGroup}from'@patternfly/react-core';import{VariablesField}from'components/CodeEditor';import Popover from'components/Popover';import FormField,{FormSubmitError}from'components/FormField';import FormActionGroup from'components/FormActionGroup';import{required}from'util/validators';import LabelSelect from'components/LabelSelect';import InstanceGroupsLookup from'components/Lookup/InstanceGroupsLookup';import OrganizationLookup from'components/Lookup/OrganizationLookup';import ContentError from'components/ContentError';import{FormColumnLayout,FormFullWidthLayout}from'components/FormLayout';import helpText from'./Inventory.helptext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function InventoryFormFields(_ref){var inventory=_ref.inventory;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),contentError=_useState2[0],setContentError=_useState2[1];var _useFormikContext=useFormikContext(),setFieldValue=_useFormikContext.setFieldValue,setFieldTouched=_useFormikContext.setFieldTouched;var _useField=useField('organization'),_useField2=_slicedToArray(_useField,3),organizationField=_useField2[0],organizationMeta=_useField2[1],organizationHelpers=_useField2[2];var _useField3=useField('instanceGroups'),_useField4=_slicedToArray(_useField3,3),instanceGroupsField=_useField4[0],instanceGroupsHelpers=_useField4[2];var _useField5=useField('labels'),_useField6=_slicedToArray(_useField5,3),labelsField=_useField6[0],labelsHelpers=_useField6[2];var handleOrganizationUpdate=useCallback(function(value){setFieldValue('organization',value);setFieldTouched('organization',true,false);},[setFieldValue,setFieldTouched]);if(contentError){return/*#__PURE__*/_jsx(ContentError,{error:contentError});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FormField,{id:\"inventory-name\",label:/*i18n*/i18n._(\"Name\"),name:\"name\",type:\"text\",validate:required(null),isRequired:true}),/*#__PURE__*/_jsx(FormField,{id:\"inventory-description\",label:/*i18n*/i18n._(\"Description\"),name:\"description\",type:\"text\"}),/*#__PURE__*/_jsx(OrganizationLookup,{helperTextInvalid:organizationMeta.error,isValid:!organizationMeta.touched||!organizationMeta.error,onBlur:function onBlur(){return organizationHelpers.setTouched();},onChange:handleOrganizationUpdate,value:organizationField.value,touched:organizationMeta.touched,error:organizationMeta.error,required:true,autoPopulate:!(inventory!==null&&inventory!==void 0&&inventory.id),validate:required(/*i18n*/i18n._(\"Select a value for this field\"))}),/*#__PURE__*/_jsx(InstanceGroupsLookup,{value:instanceGroupsField.value,onChange:function onChange(value){instanceGroupsHelpers.setValue(value);},fieldName:\"instanceGroups\"}),/*#__PURE__*/_jsxs(FormFullWidthLayout,{children:[/*#__PURE__*/_jsx(FormGroup,{label:/*i18n*/i18n._(\"Labels\"),labelIcon:/*#__PURE__*/_jsx(Popover,{content:helpText.labels}),fieldId:\"inventory-labels\",children:/*#__PURE__*/_jsx(LabelSelect,{value:labelsField.value,onChange:function onChange(labels){return labelsHelpers.setValue(labels);},onError:setContentError,createText:/*i18n*/i18n._(\"Create\")})}),/*#__PURE__*/_jsx(VariablesField,{tooltip:helpText.variables(),id:\"inventory-variables\",name:\"variables\",label:/*i18n*/i18n._(\"Variables\")})]})]});}function InventoryForm(_ref2){var _inventory$summary_fi,_inventory$summary_fi2;var _ref2$inventory=_ref2.inventory,inventory=_ref2$inventory===void 0?{}:_ref2$inventory,_onSubmit=_ref2.onSubmit,onCancel=_ref2.onCancel,submitError=_ref2.submitError,instanceGroups=_ref2.instanceGroups,rest=_objectWithoutProperties(_ref2,_excluded);var initialValues={name:inventory.name||'',description:inventory.description||'',variables:inventory.variables||'---',organization:inventory.summary_fields&&inventory.summary_fields.organization||null,instanceGroups:instanceGroups||[],labels:(inventory===null||inventory===void 0?void 0:(_inventory$summary_fi=inventory.summary_fields)===null||_inventory$summary_fi===void 0?void 0:(_inventory$summary_fi2=_inventory$summary_fi.labels)===null||_inventory$summary_fi2===void 0?void 0:_inventory$summary_fi2.results)||[]};return/*#__PURE__*/_jsx(Formik,{initialValues:initialValues,onSubmit:function onSubmit(values){_onSubmit(values);},children:function children(formik){return/*#__PURE__*/_jsx(Form,{autoComplete:\"off\",onSubmit:formik.handleSubmit,children:/*#__PURE__*/_jsxs(FormColumnLayout,{children:[/*#__PURE__*/_jsx(InventoryFormFields,_objectSpread(_objectSpread({},rest),{},{inventory:inventory})),/*#__PURE__*/_jsx(FormSubmitError,{error:submitError}),/*#__PURE__*/_jsx(FormActionGroup,{onCancel:onCancel,onSubmit:formik.handleSubmit})]})});}});}InventoryForm.propType={handleSubmit:func.isRequired,handleCancel:func.isRequired,instanceGroups:shape(),inventory:shape(),submitError:shape()};InventoryForm.defaultProps={inventory:{},instanceGroups:[],submitError:null};export default InventoryForm;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Inventory/shared/InventoryForm.js"],"names":["React","useCallback","useState","Formik","useField","useFormikContext","func","shape","Form","FormGroup","VariablesField","Popover","FormField","FormSubmitError","FormActionGroup","required","LabelSelect","InstanceGroupsLookup","OrganizationLookup","ContentError","FormColumnLayout","FormFullWidthLayout","helpText","InventoryFormFields","inventory","contentError","setContentError","setFieldValue","setFieldTouched","organizationField","organizationMeta","organizationHelpers","instanceGroupsField","instanceGroupsHelpers","labelsField","labelsHelpers","handleOrganizationUpdate","value","error","touched","setTouched","id","setValue","labels","variables","InventoryForm","onSubmit","onCancel","submitError","instanceGroups","rest","initialValues","name","description","organization","summary_fields","results","values","formik","handleSubmit","propType","isRequired","handleCancel","defaultProps"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { Formik, useField, useFormikContext } from 'formik';\nimport { t } from '@lingui/macro';\nimport { func, shape } from 'prop-types';\nimport { Form, FormGroup } from '@patternfly/react-core';\nimport { VariablesField } from 'components/CodeEditor';\nimport Popover from 'components/Popover';\nimport FormField, { FormSubmitError } from 'components/FormField';\nimport FormActionGroup from 'components/FormActionGroup';\nimport { required } from 'util/validators';\nimport LabelSelect from 'components/LabelSelect';\nimport InstanceGroupsLookup from 'components/Lookup/InstanceGroupsLookup';\nimport OrganizationLookup from 'components/Lookup/OrganizationLookup';\nimport ContentError from 'components/ContentError';\nimport { FormColumnLayout, FormFullWidthLayout } from 'components/FormLayout';\nimport helpText from './Inventory.helptext';\n\nfunction InventoryFormFields({ inventory }) {\n  const [contentError, setContentError] = useState(false);\n  const { setFieldValue, setFieldTouched } = useFormikContext();\n  const [organizationField, organizationMeta, organizationHelpers] =\n    useField('organization');\n  const [instanceGroupsField, , instanceGroupsHelpers] =\n    useField('instanceGroups');\n  const [labelsField, , labelsHelpers] = useField('labels');\n  const handleOrganizationUpdate = useCallback(\n    (value) => {\n      setFieldValue('organization', value);\n      setFieldTouched('organization', true, false);\n    },\n    [setFieldValue, setFieldTouched]\n  );\n\n  if (contentError) {\n    return <ContentError error={contentError} />;\n  }\n\n  return (\n    <>\n      <FormField\n        id=\"inventory-name\"\n        label={t`Name`}\n        name=\"name\"\n        type=\"text\"\n        validate={required(null)}\n        isRequired\n      />\n      <FormField\n        id=\"inventory-description\"\n        label={t`Description`}\n        name=\"description\"\n        type=\"text\"\n      />\n      <OrganizationLookup\n        helperTextInvalid={organizationMeta.error}\n        isValid={!organizationMeta.touched || !organizationMeta.error}\n        onBlur={() => organizationHelpers.setTouched()}\n        onChange={handleOrganizationUpdate}\n        value={organizationField.value}\n        touched={organizationMeta.touched}\n        error={organizationMeta.error}\n        required\n        autoPopulate={!inventory?.id}\n        validate={required(t`Select a value for this field`)}\n      />\n      <InstanceGroupsLookup\n        value={instanceGroupsField.value}\n        onChange={(value) => {\n          instanceGroupsHelpers.setValue(value);\n        }}\n        fieldName=\"instanceGroups\"\n      />\n      <FormFullWidthLayout>\n        <FormGroup\n          label={t`Labels`}\n          labelIcon={<Popover content={helpText.labels} />}\n          fieldId=\"inventory-labels\"\n        >\n          <LabelSelect\n            value={labelsField.value}\n            onChange={(labels) => labelsHelpers.setValue(labels)}\n            onError={setContentError}\n            createText={t`Create`}\n          />\n        </FormGroup>\n        <VariablesField\n          tooltip={helpText.variables()}\n          id=\"inventory-variables\"\n          name=\"variables\"\n          label={t`Variables`}\n        />\n      </FormFullWidthLayout>\n    </>\n  );\n}\n\nfunction InventoryForm({\n  inventory = {},\n  onSubmit,\n  onCancel,\n  submitError,\n  instanceGroups,\n  ...rest\n}) {\n  const initialValues = {\n    name: inventory.name || '',\n    description: inventory.description || '',\n    variables: inventory.variables || '---',\n    organization:\n      (inventory.summary_fields && inventory.summary_fields.organization) ||\n      null,\n    instanceGroups: instanceGroups || [],\n    labels: inventory?.summary_fields?.labels?.results || [],\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values) => {\n        onSubmit(values);\n      }}\n    >\n      {(formik) => (\n        <Form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n          <FormColumnLayout>\n            <InventoryFormFields {...rest} inventory={inventory} />\n            <FormSubmitError error={submitError} />\n            <FormActionGroup\n              onCancel={onCancel}\n              onSubmit={formik.handleSubmit}\n            />\n          </FormColumnLayout>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nInventoryForm.propType = {\n  handleSubmit: func.isRequired,\n  handleCancel: func.isRequired,\n  instanceGroups: shape(),\n  inventory: shape(),\n  submitError: shape(),\n};\n\nInventoryForm.defaultProps = {\n  inventory: {},\n  instanceGroups: [],\n  submitError: null,\n};\n\nexport default InventoryForm;\n"]},"metadata":{},"sourceType":"module"}