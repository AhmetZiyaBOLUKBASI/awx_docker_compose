{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState}from'react';import{useHistory}from'react-router-dom';import{CardBody}from'components/Card';import HostForm from'components/HostForm';import{GroupsAPI}from'api';import{jsx as _jsx}from\"react/jsx-runtime\";function InventoryGroupHostAdd(_ref){var inventoryGroup=_ref.inventoryGroup;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),formError=_useState2[0],setFormError=_useState2[1];var baseUrl=\"/inventories/inventory/\".concat(inventoryGroup.inventory);var history=useHistory();var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData){var values,_yield$GroupsAPI$crea,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;values=_objectSpread(_objectSpread({},formData),{},{inventory:inventoryGroup.inventory});_context.next=4;return GroupsAPI.createHost(inventoryGroup.id,values);case 4:_yield$GroupsAPI$crea=_context.sent;response=_yield$GroupsAPI$crea.data;history.push(\"\".concat(baseUrl,\"/hosts/\").concat(response.id,\"/details\"));_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);setFormError(_context.t0);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleCancel=function handleCancel(){history.push(\"\".concat(baseUrl,\"/groups/\").concat(inventoryGroup.id,\"/nested_hosts\"));};return/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(HostForm,{handleSubmit:handleSubmit,handleCancel:handleCancel,isInventoryVisible:false,submitError:formError})});}export default InventoryGroupHostAdd;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Inventory/InventoryGroupHostAdd/InventoryGroupHostAdd.js"],"names":["React","useState","useHistory","CardBody","HostForm","GroupsAPI","InventoryGroupHostAdd","inventoryGroup","formError","setFormError","baseUrl","inventory","history","handleSubmit","formData","values","createHost","id","response","data","push","handleCancel"],"mappings":"8ZAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,QAAT,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,qBAArB,CAEA,OAASC,SAAT,KAA0B,KAA1B,C,2CAEA,QAASC,CAAAA,qBAAT,MAAmD,IAAlBC,CAAAA,cAAkB,MAAlBA,cAAkB,CACjD,cAAkCN,QAAQ,CAAC,IAAD,CAA1C,wCAAOO,SAAP,eAAkBC,YAAlB,eACA,GAAMC,CAAAA,OAAO,kCAA6BH,cAAc,CAACI,SAA5C,CAAb,CACA,GAAMC,CAAAA,OAAO,CAAGV,UAAU,EAA1B,CAEA,GAAMW,CAAAA,YAAY,2FAAG,iBAAOC,QAAP,4KAEXC,MAFW,gCAGZD,QAHY,MAIfH,SAAS,CAAEJ,cAAc,CAACI,SAJX,yBAOgBN,CAAAA,SAAS,CAACW,UAAV,CAC/BT,cAAc,CAACU,EADgB,CAE/BF,MAF+B,CAPhB,4CAOHG,QAPG,uBAOTC,IAPS,CAWjBP,OAAO,CAACQ,IAAR,WAAgBV,OAAhB,mBAAiCQ,QAAQ,CAACD,EAA1C,cAXiB,+EAajBR,YAAY,aAAZ,CAbiB,oEAAH,kBAAZI,CAAAA,YAAY,6CAAlB,CAiBA,GAAMQ,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBT,OAAO,CAACQ,IAAR,WAAgBV,OAAhB,oBAAkCH,cAAc,CAACU,EAAjD,mBACD,CAFD,CAIA,mBACE,KAAC,QAAD,wBACE,KAAC,QAAD,EACE,YAAY,CAAEJ,YADhB,CAEE,YAAY,CAAEQ,YAFhB,CAGE,kBAAkB,CAAE,KAHtB,CAIE,WAAW,CAAEb,SAJf,EADF,EADF,CAUD,CAED,cAAeF,CAAAA,qBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { CardBody } from 'components/Card';\nimport HostForm from 'components/HostForm';\n\nimport { GroupsAPI } from 'api';\n\nfunction InventoryGroupHostAdd({ inventoryGroup }) {\n  const [formError, setFormError] = useState(null);\n  const baseUrl = `/inventories/inventory/${inventoryGroup.inventory}`;\n  const history = useHistory();\n\n  const handleSubmit = async (formData) => {\n    try {\n      const values = {\n        ...formData,\n        inventory: inventoryGroup.inventory,\n      };\n\n      const { data: response } = await GroupsAPI.createHost(\n        inventoryGroup.id,\n        values\n      );\n      history.push(`${baseUrl}/hosts/${response.id}/details`);\n    } catch (error) {\n      setFormError(error);\n    }\n  };\n\n  const handleCancel = () => {\n    history.push(`${baseUrl}/groups/${inventoryGroup.id}/nested_hosts`);\n  };\n\n  return (\n    <CardBody>\n      <HostForm\n        handleSubmit={handleSubmit}\n        handleCancel={handleCancel}\n        isInventoryVisible={false}\n        submitError={formError}\n      />\n    </CardBody>\n  );\n}\n\nexport default InventoryGroupHostAdd;\n"]},"metadata":{},"sourceType":"module"}