{"ast":null,"code":"import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState}from'react';import{useHistory}from'react-router-dom';import{CardBody}from'components/Card';import HostForm from'components/HostForm';import{HostsAPI}from'api';import{jsx as _jsx}from\"react/jsx-runtime\";function InventoryHostEdit(_ref){var host=_ref.host,inventory=_ref.inventory;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),formError=_useState2[0],setFormError=_useState2[1];var detailsUrl=\"/inventories/inventory/\".concat(inventory.id,\"/hosts/\").concat(host.id,\"/details\");var history=useHistory();var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return HostsAPI.update(host.id,values);case 3:history.push(detailsUrl);_context.next=9;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](0);setFormError(_context.t0);case 9:case\"end\":return _context.stop();}}},_callee,null,[[0,6]]);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleCancel=function handleCancel(){history.push(detailsUrl);};return/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(HostForm,{host:host,handleSubmit:handleSubmit,handleCancel:handleCancel,isInventoryVisible:false,submitError:formError})});}export default InventoryHostEdit;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Inventory/InventoryHostEdit/InventoryHostEdit.js"],"names":["React","useState","useHistory","CardBody","HostForm","HostsAPI","InventoryHostEdit","host","inventory","formError","setFormError","detailsUrl","id","history","handleSubmit","values","update","push","handleCancel"],"mappings":"wTAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,QAAT,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,qBAArB,CAEA,OAASC,QAAT,KAAyB,KAAzB,C,2CAEA,QAASC,CAAAA,iBAAT,MAAgD,IAAnBC,CAAAA,IAAmB,MAAnBA,IAAmB,CAAbC,SAAa,MAAbA,SAAa,CAC9C,cAAkCP,QAAQ,CAAC,IAAD,CAA1C,wCAAOQ,SAAP,eAAkBC,YAAlB,eACA,GAAMC,CAAAA,UAAU,kCAA6BH,SAAS,CAACI,EAAvC,mBAAmDL,IAAI,CAACK,EAAxD,YAAhB,CACA,GAAMC,CAAAA,OAAO,CAAGX,UAAU,EAA1B,CAEA,GAAMY,CAAAA,YAAY,2FAAG,iBAAOC,MAAP,wJAEXV,CAAAA,QAAQ,CAACW,MAAT,CAAgBT,IAAI,CAACK,EAArB,CAAyBG,MAAzB,CAFW,QAGjBF,OAAO,CAACI,IAAR,CAAaN,UAAb,EAHiB,8EAKjBD,YAAY,aAAZ,CALiB,mEAAH,kBAAZI,CAAAA,YAAY,6CAAlB,CASA,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBL,OAAO,CAACI,IAAR,CAAaN,UAAb,EACD,CAFD,CAIA,mBACE,KAAC,QAAD,wBACE,KAAC,QAAD,EACE,IAAI,CAAEJ,IADR,CAEE,YAAY,CAAEO,YAFhB,CAGE,YAAY,CAAEI,YAHhB,CAIE,kBAAkB,CAAE,KAJtB,CAKE,WAAW,CAAET,SALf,EADF,EADF,CAWD,CAMD,cAAeH,CAAAA,iBAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { CardBody } from 'components/Card';\nimport HostForm from 'components/HostForm';\n\nimport { HostsAPI } from 'api';\n\nfunction InventoryHostEdit({ host, inventory }) {\n  const [formError, setFormError] = useState(null);\n  const detailsUrl = `/inventories/inventory/${inventory.id}/hosts/${host.id}/details`;\n  const history = useHistory();\n\n  const handleSubmit = async (values) => {\n    try {\n      await HostsAPI.update(host.id, values);\n      history.push(detailsUrl);\n    } catch (error) {\n      setFormError(error);\n    }\n  };\n\n  const handleCancel = () => {\n    history.push(detailsUrl);\n  };\n\n  return (\n    <CardBody>\n      <HostForm\n        host={host}\n        handleSubmit={handleSubmit}\n        handleCancel={handleCancel}\n        isInventoryVisible={false}\n        submitError={formError}\n      />\n    </CardBody>\n  );\n}\n\nInventoryHostEdit.propTypes = {\n  host: PropTypes.shape().isRequired,\n};\n\nexport default InventoryHostEdit;\n"]},"metadata":{},"sourceType":"module"}