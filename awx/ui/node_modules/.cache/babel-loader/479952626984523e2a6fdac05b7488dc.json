{"ast":null,"code":"import _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownMenu } from './DropdownMenu';\nimport { DropdownContext, DropdownDirection, DropdownPosition } from './dropdownConstants';\nimport { getOUIAProps } from '../../helpers';\nimport { Popper } from '../../helpers/Popper/Popper';\nexport var DropdownWithContext = /*#__PURE__*/function (_React$Component) {\n  _inherits(DropdownWithContext, _React$Component);\n\n  var _super = _createSuper(DropdownWithContext);\n\n  function DropdownWithContext(props) {\n    var _this;\n\n    _classCallCheck(this, DropdownWithContext);\n\n    _this = _super.call(this, props);\n    _this.openedOnEnter = false;\n    _this.baseComponentRef = React.createRef();\n    _this.menuComponentRef = React.createRef();\n\n    _this.onEnter = function () {\n      _this.openedOnEnter = true;\n    };\n\n    _this.setMenuComponentRef = function (element) {\n      _this.menuComponentRef = element;\n    };\n\n    _this.getMenuComponentRef = function () {\n      return _this.menuComponentRef;\n    };\n\n    if (props.dropdownItems && props.dropdownItems.length > 0 && props.children) {\n      // eslint-disable-next-line no-console\n      console.error('Children and dropdownItems props have been provided. Only the dropdownItems prop items will be rendered');\n    }\n\n    return _this;\n  }\n\n  _createClass(DropdownWithContext, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (!this.props.isOpen) {\n        this.openedOnEnter = false;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _a = this.props,\n          children = _a.children,\n          className = _a.className,\n          direction = _a.direction,\n          dropdownItems = _a.dropdownItems,\n          isOpen = _a.isOpen,\n          isPlain = _a.isPlain,\n          isText = _a.isText,\n          isGrouped = _a.isGrouped,\n          isFullHeight = _a.isFullHeight,\n          onSelect = _a.onSelect,\n          position = _a.position,\n          toggle = _a.toggle,\n          autoFocus = _a.autoFocus,\n          menuAppendTo = _a.menuAppendTo,\n          isFlipEnabled = _a.isFlipEnabled,\n          props = __rest(_a, [\"children\", \"className\", \"direction\", \"dropdownItems\", \"isOpen\", \"isPlain\", \"isText\", \"isGrouped\", \"isFullHeight\", \"onSelect\", \"position\", \"toggle\", \"autoFocus\", \"menuAppendTo\", \"isFlipEnabled\"]);\n\n      var id = toggle.props.id || \"pf-dropdown-toggle-id-\".concat(DropdownWithContext.currentId++);\n      var component;\n      var renderedContent;\n      var ariaHasPopup = false;\n\n      if (dropdownItems && dropdownItems.length > 0) {\n        component = 'ul';\n        renderedContent = dropdownItems;\n        ariaHasPopup = true;\n      } else {\n        component = 'div';\n        renderedContent = React.Children.toArray(children);\n      }\n\n      var openedOnEnter = this.openedOnEnter;\n      return React.createElement(DropdownContext.Consumer, null, function (_ref) {\n        var baseClass = _ref.baseClass,\n            baseComponent = _ref.baseComponent,\n            contextId = _ref.id,\n            ouiaId = _ref.ouiaId,\n            ouiaComponentType = _ref.ouiaComponentType,\n            ouiaSafe = _ref.ouiaSafe,\n            alignments = _ref.alignments;\n        var BaseComponent = baseComponent;\n        var menuContainer = React.createElement(DropdownMenu // This removes the `position: absolute` styling from the `.pf-c-dropdown__menu`\n        // allowing the menu to flip correctly\n        , Object.assign({}, isFlipEnabled && {\n          style: {\n            position: 'revert',\n            minWidth: 'min-content'\n          }\n        }, {\n          setMenuComponentRef: _this2.setMenuComponentRef,\n          component: component,\n          isOpen: isOpen,\n          position: position,\n          \"aria-labelledby\": contextId ? \"\".concat(contextId, \"-toggle\") : id,\n          isGrouped: isGrouped,\n          autoFocus: openedOnEnter && autoFocus,\n          alignments: alignments\n        }), renderedContent);\n        var popperContainer = React.createElement(\"div\", {\n          className: css(baseClass, direction === DropdownDirection.up && styles.modifiers.top, position === DropdownPosition.right && styles.modifiers.alignRight, isOpen && styles.modifiers.expanded, className)\n        }, isOpen && menuContainer);\n        var mainContainer = React.createElement(BaseComponent, Object.assign({}, props, {\n          className: css(baseClass, direction === DropdownDirection.up && styles.modifiers.top, position === DropdownPosition.right && styles.modifiers.alignRight, isOpen && styles.modifiers.expanded, isFullHeight && styles.modifiers.fullHeight, className),\n          ref: _this2.baseComponentRef\n        }, getOUIAProps(ouiaComponentType, ouiaId, ouiaSafe)), React.Children.map(toggle, function (oneToggle) {\n          return React.cloneElement(oneToggle, {\n            parentRef: _this2.baseComponentRef,\n            getMenuRef: _this2.getMenuComponentRef,\n            isOpen: isOpen,\n            id: id,\n            isPlain: isPlain,\n            isText: isText,\n            'aria-haspopup': ariaHasPopup,\n            onEnter: function onEnter() {\n              _this2.onEnter();\n\n              oneToggle.props.onEnter && oneToggle.props.onEnter();\n            }\n          });\n        }), menuAppendTo === 'inline' && isOpen && menuContainer);\n\n        var getParentElement = function getParentElement() {\n          if (_this2.baseComponentRef && _this2.baseComponentRef.current) {\n            return _this2.baseComponentRef.current.parentElement;\n          }\n\n          return null;\n        };\n\n        return menuAppendTo === 'inline' ? mainContainer : React.createElement(Popper, {\n          trigger: mainContainer,\n          popper: popperContainer,\n          direction: direction,\n          position: position,\n          appendTo: menuAppendTo === 'parent' ? getParentElement() : menuAppendTo,\n          isVisible: isOpen\n        });\n      });\n    }\n  }]);\n\n  return DropdownWithContext;\n}(React.Component);\nDropdownWithContext.displayName = 'DropdownWithContext'; // seed for the aria-labelledby ID\n\nDropdownWithContext.currentId = 0;\nDropdownWithContext.defaultProps = {\n  className: '',\n  dropdownItems: [],\n  isOpen: false,\n  isPlain: false,\n  isText: false,\n  isGrouped: false,\n  position: DropdownPosition.left,\n  direction: DropdownDirection.down,\n  onSelect: function onSelect() {\n    return undefined;\n  },\n  autoFocus: true,\n  menuAppendTo: 'inline',\n  isFlipEnabled: false\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Dropdown/DropdownWithContext.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownMenu } from './DropdownMenu';\nimport { DropdownProps } from './Dropdown';\nimport { DropdownContext, DropdownDirection, DropdownPosition } from './dropdownConstants';\nimport { getOUIAProps, OUIAProps } from '../../helpers';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport { Popper } from '../../helpers/Popper/Popper';\n\nexport class DropdownWithContext extends React.Component<DropdownProps & OUIAProps> {\n  static displayName = 'DropdownWithContext';\n\n  openedOnEnter = false;\n  baseComponentRef = React.createRef<any>();\n  menuComponentRef = React.createRef<any>();\n\n  // seed for the aria-labelledby ID\n  static currentId = 0;\n\n  static defaultProps: PickOptional<DropdownProps> = {\n    className: '',\n    dropdownItems: [] as any[],\n    isOpen: false,\n    isPlain: false,\n    isText: false,\n    isGrouped: false,\n    position: DropdownPosition.left,\n    direction: DropdownDirection.down,\n    onSelect: (): void => undefined,\n    autoFocus: true,\n    menuAppendTo: 'inline',\n    isFlipEnabled: false\n  };\n\n  constructor(props: DropdownProps & OUIAProps) {\n    super(props);\n    if (props.dropdownItems && props.dropdownItems.length > 0 && props.children) {\n      // eslint-disable-next-line no-console\n      console.error(\n        'Children and dropdownItems props have been provided. Only the dropdownItems prop items will be rendered'\n      );\n    }\n  }\n\n  onEnter = () => {\n    this.openedOnEnter = true;\n  };\n\n  componentDidUpdate() {\n    if (!this.props.isOpen) {\n      this.openedOnEnter = false;\n    }\n  }\n\n  setMenuComponentRef = (element: any) => {\n    this.menuComponentRef = element;\n  };\n\n  getMenuComponentRef = () => this.menuComponentRef;\n\n  render() {\n    const {\n      children,\n      className,\n      direction,\n      dropdownItems,\n      isOpen,\n      isPlain,\n      isText,\n      isGrouped,\n      isFullHeight,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onSelect,\n      position,\n      toggle,\n      autoFocus,\n      menuAppendTo,\n      isFlipEnabled,\n      ...props\n    } = this.props;\n    const id = toggle.props.id || `pf-dropdown-toggle-id-${DropdownWithContext.currentId++}`;\n    let component: string;\n    let renderedContent: React.ReactNode[];\n    let ariaHasPopup = false;\n    if (dropdownItems && dropdownItems.length > 0) {\n      component = 'ul';\n      renderedContent = dropdownItems;\n      ariaHasPopup = true;\n    } else {\n      component = 'div';\n      renderedContent = React.Children.toArray(children);\n    }\n    const openedOnEnter = this.openedOnEnter;\n    return (\n      <DropdownContext.Consumer>\n        {({ baseClass, baseComponent, id: contextId, ouiaId, ouiaComponentType, ouiaSafe, alignments }) => {\n          const BaseComponent = baseComponent as any;\n          const menuContainer = (\n            <DropdownMenu\n              // This removes the `position: absolute` styling from the `.pf-c-dropdown__menu`\n              // allowing the menu to flip correctly\n              {...(isFlipEnabled && { style: { position: 'revert', minWidth: 'min-content' } })}\n              setMenuComponentRef={this.setMenuComponentRef}\n              component={component}\n              isOpen={isOpen}\n              position={position}\n              aria-labelledby={contextId ? `${contextId}-toggle` : id}\n              isGrouped={isGrouped}\n              autoFocus={openedOnEnter && autoFocus}\n              alignments={alignments}\n            >\n              {renderedContent}\n            </DropdownMenu>\n          );\n          const popperContainer = (\n            <div\n              className={css(\n                baseClass,\n                direction === DropdownDirection.up && styles.modifiers.top,\n                position === DropdownPosition.right && styles.modifiers.alignRight,\n                isOpen && styles.modifiers.expanded,\n                className\n              )}\n            >\n              {isOpen && menuContainer}\n            </div>\n          );\n          const mainContainer = (\n            <BaseComponent\n              {...props}\n              className={css(\n                baseClass,\n                direction === DropdownDirection.up && styles.modifiers.top,\n                position === DropdownPosition.right && styles.modifiers.alignRight,\n                isOpen && styles.modifiers.expanded,\n                isFullHeight && styles.modifiers.fullHeight,\n                className\n              )}\n              ref={this.baseComponentRef}\n              {...getOUIAProps(ouiaComponentType, ouiaId, ouiaSafe)}\n            >\n              {React.Children.map(toggle, oneToggle =>\n                React.cloneElement(oneToggle, {\n                  parentRef: this.baseComponentRef,\n                  getMenuRef: this.getMenuComponentRef,\n                  isOpen,\n                  id,\n                  isPlain,\n                  isText,\n                  'aria-haspopup': ariaHasPopup,\n                  onEnter: () => {\n                    this.onEnter();\n                    oneToggle.props.onEnter && oneToggle.props.onEnter();\n                  }\n                })\n              )}\n              {menuAppendTo === 'inline' && isOpen && menuContainer}\n            </BaseComponent>\n          );\n          const getParentElement = () => {\n            if (this.baseComponentRef && this.baseComponentRef.current) {\n              return this.baseComponentRef.current.parentElement;\n            }\n            return null;\n          };\n          return menuAppendTo === 'inline' ? (\n            mainContainer\n          ) : (\n            <Popper\n              trigger={mainContainer}\n              popper={popperContainer}\n              direction={direction}\n              position={position}\n              appendTo={menuAppendTo === 'parent' ? getParentElement() : menuAppendTo}\n              isVisible={isOpen}\n            />\n          );\n        }}\n      </DropdownContext.Consumer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}