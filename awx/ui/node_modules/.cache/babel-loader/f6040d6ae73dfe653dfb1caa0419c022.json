{"ast":null,"code":"import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useState,useEffect,useCallback}from'react';import{Switch,Tooltip}from'@patternfly/react-core';import useRequest from'hooks/useRequest';import{InstancesAPI}from'api';import{useConfig}from'contexts/Config';import ErrorDetail from'../ErrorDetail';import AlertModal from'../AlertModal';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function InstanceToggle(_ref){var className=_ref.className,fetchInstances=_ref.fetchInstances,instance=_ref.instance,onToggle=_ref.onToggle;var _useConfig=useConfig(),_useConfig$me=_useConfig.me,me=_useConfig$me===void 0?{}:_useConfig$me;var _useState=useState(instance.enabled),_useState2=_slicedToArray(_useState,2),isEnabled=_useState2[0],setIsEnabled=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showError=_useState4[0],setShowError=_useState4[1];var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return InstancesAPI.update(instance.id,{enabled:!isEnabled});case 2:_context.next=4;return fetchInstances();case 4:return _context.abrupt(\"return\",!isEnabled);case 5:case\"end\":return _context.stop();}}},_callee);})),[instance,isEnabled,fetchInstances]),instance.enabled),result=_useRequest.result,isLoading=_useRequest.isLoading,error=_useRequest.error,toggleInstance=_useRequest.request;useEffect(function(){if(result!==isEnabled){setIsEnabled(result);if(onToggle){onToggle(result);}}},[result,isEnabled,onToggle]);useEffect(function(){if(error){setShowError(true);}},[error]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Tooltip,{content:/*i18n*/i18n._(\"Set the instance enabled or disabled. If disabled, jobs will not be assigned to this instance.\"),position:\"top\",children:/*#__PURE__*/_jsx(Switch,{className:className,css:\"display: inline-flex;\",id:\"host-\".concat(instance.id,\"-toggle\"),label:/*i18n*/i18n._(\"Enabled\"),labelOff:/*i18n*/i18n._(\"Disabled\"),isChecked:isEnabled,isDisabled:isLoading||!(me!==null&&me!==void 0&&me.is_superuser),onChange:toggleInstance,ouiaId:\"host-\".concat(instance.id,\"-toggle\"),\"aria-label\":/*i18n*/i18n._(\"Toggle instance\")})}),showError&&error&&!isLoading&&/*#__PURE__*/_jsxs(AlertModal,{variant:\"error\",title:/*i18n*/i18n._(\"Error!\"),isOpen:error&&!isLoading,onClose:function onClose(){return setShowError(false);},children:[/*i18n*/i18n._(\"Failed to toggle instance.\"),/*#__PURE__*/_jsx(ErrorDetail,{error:error})]})]});}export default InstanceToggle;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/InstanceToggle/InstanceToggle.js"],"names":["React","useState","useEffect","useCallback","Switch","Tooltip","useRequest","InstancesAPI","useConfig","ErrorDetail","AlertModal","InstanceToggle","className","fetchInstances","instance","onToggle","me","enabled","isEnabled","setIsEnabled","showError","setShowError","update","id","result","isLoading","error","toggleInstance","request","is_superuser"],"mappings":"uVAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,WAArC,KAAwD,OAAxD,CAGA,OAASC,MAAT,CAAiBC,OAAjB,KAAgC,wBAAhC,CACA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CACA,OAASC,YAAT,KAA6B,KAA7B,CACA,OAASC,SAAT,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,C,6IAEA,QAASC,CAAAA,cAAT,MAA2E,IAAjDC,CAAAA,SAAiD,MAAjDA,SAAiD,CAAtCC,cAAsC,MAAtCA,cAAsC,CAAtBC,QAAsB,MAAtBA,QAAsB,CAAZC,QAAY,MAAZA,QAAY,CACzE,eAAoBP,SAAS,EAA7B,0BAAQQ,EAAR,CAAQA,EAAR,wBAAa,EAAb,eACA,cAAkCf,QAAQ,CAACa,QAAQ,CAACG,OAAV,CAA1C,wCAAOC,SAAP,eAAkBC,YAAlB,eACA,eAAkClB,QAAQ,CAAC,KAAD,CAA1C,yCAAOmB,SAAP,eAAkBC,YAAlB,eAEA,gBAKIf,UAAU,CACZH,WAAW,sEAAC,yJACJI,CAAAA,YAAY,CAACe,MAAb,CAAoBR,QAAQ,CAACS,EAA7B,CAAiC,CAAEN,OAAO,CAAE,CAACC,SAAZ,CAAjC,CADI,8BAEJL,CAAAA,cAAc,EAFV,wCAGH,CAACK,SAHE,wDAAD,GAIR,CAACJ,QAAD,CAAWI,SAAX,CAAsBL,cAAtB,CAJQ,CADC,CAMZC,QAAQ,CAACG,OANG,CALd,CACEO,MADF,aACEA,MADF,CAEEC,SAFF,aAEEA,SAFF,CAGEC,KAHF,aAGEA,KAHF,CAIWC,cAJX,aAIEC,OAJF,CAcA1B,SAAS,CAAC,UAAM,CACd,GAAIsB,MAAM,GAAKN,SAAf,CAA0B,CACxBC,YAAY,CAACK,MAAD,CAAZ,CACA,GAAIT,QAAJ,CAAc,CACZA,QAAQ,CAACS,MAAD,CAAR,CACD,CACF,CACF,CAPQ,CAON,CAACA,MAAD,CAASN,SAAT,CAAoBH,QAApB,CAPM,CAAT,CASAb,SAAS,CAAC,UAAM,CACd,GAAIwB,KAAJ,CAAW,CACTL,YAAY,CAAC,IAAD,CAAZ,CACD,CACF,CAJQ,CAIN,CAACK,KAAD,CAJM,CAAT,CAMA,mBACE,wCACE,KAAC,OAAD,EACE,OAAO,SAAE,wGADX,CAEE,QAAQ,CAAC,KAFX,uBAIE,KAAC,MAAD,EACE,SAAS,CAAEd,SADb,CAEE,GAAG,CAAC,uBAFN,CAGE,EAAE,gBAAUE,QAAQ,CAACS,EAAnB,WAHJ,CAIE,KAAK,SAAE,iBAJT,CAKE,QAAQ,SAAE,kBALZ,CAME,SAAS,CAAEL,SANb,CAOE,UAAU,CAAEO,SAAS,EAAI,EAACT,EAAD,SAACA,EAAD,WAACA,EAAE,CAAEa,YAAL,CAP3B,CAQE,QAAQ,CAAEF,cARZ,CASE,MAAM,gBAAUb,QAAQ,CAACS,EAAnB,WATR,CAUE,qBAAY,yBAVd,EAJF,EADF,CAkBGH,SAAS,EAAIM,KAAb,EAAsB,CAACD,SAAvB,eACC,MAAC,UAAD,EACE,OAAO,CAAC,OADV,CAEE,KAAK,SAAE,gBAFT,CAGE,MAAM,CAAEC,KAAK,EAAI,CAACD,SAHpB,CAIE,OAAO,CAAE,yBAAMJ,CAAAA,YAAY,CAAC,KAAD,CAAlB,EAJX,mBAMG,oCANH,cAOE,KAAC,WAAD,EAAa,KAAK,CAAEK,KAApB,EAPF,GAnBJ,GADF,CAgCD,CAED,cAAef,CAAAA,cAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nimport { t } from '@lingui/macro';\nimport { Switch, Tooltip } from '@patternfly/react-core';\nimport useRequest from 'hooks/useRequest';\nimport { InstancesAPI } from 'api';\nimport { useConfig } from 'contexts/Config';\nimport ErrorDetail from '../ErrorDetail';\nimport AlertModal from '../AlertModal';\n\nfunction InstanceToggle({ className, fetchInstances, instance, onToggle }) {\n  const { me = {} } = useConfig();\n  const [isEnabled, setIsEnabled] = useState(instance.enabled);\n  const [showError, setShowError] = useState(false);\n\n  const {\n    result,\n    isLoading,\n    error,\n    request: toggleInstance,\n  } = useRequest(\n    useCallback(async () => {\n      await InstancesAPI.update(instance.id, { enabled: !isEnabled });\n      await fetchInstances();\n      return !isEnabled;\n    }, [instance, isEnabled, fetchInstances]),\n    instance.enabled\n  );\n\n  useEffect(() => {\n    if (result !== isEnabled) {\n      setIsEnabled(result);\n      if (onToggle) {\n        onToggle(result);\n      }\n    }\n  }, [result, isEnabled, onToggle]);\n\n  useEffect(() => {\n    if (error) {\n      setShowError(true);\n    }\n  }, [error]);\n\n  return (\n    <>\n      <Tooltip\n        content={t`Set the instance enabled or disabled. If disabled, jobs will not be assigned to this instance.`}\n        position=\"top\"\n      >\n        <Switch\n          className={className}\n          css=\"display: inline-flex;\"\n          id={`host-${instance.id}-toggle`}\n          label={t`Enabled`}\n          labelOff={t`Disabled`}\n          isChecked={isEnabled}\n          isDisabled={isLoading || !me?.is_superuser}\n          onChange={toggleInstance}\n          ouiaId={`host-${instance.id}-toggle`}\n          aria-label={t`Toggle instance`}\n        />\n      </Tooltip>\n      {showError && error && !isLoading && (\n        <AlertModal\n          variant=\"error\"\n          title={t`Error!`}\n          isOpen={error && !isLoading}\n          onClose={() => setShowError(false)}\n        >\n          {t`Failed to toggle instance.`}\n          <ErrorDetail error={error} />\n        </AlertModal>\n      )}\n    </>\n  );\n}\n\nexport default InstanceToggle;\n"]},"metadata":{},"sourceType":"module"}