{"ast":null,"code":"import{i18n}from\"@lingui/core\";import React from'react';import{string,bool,func}from'prop-types';import{Link}from'react-router-dom';import{Button}from'@patternfly/react-core';import{Tr,Td}from'@patternfly/react-table';import{PencilAltIcon}from'@patternfly/react-icons';import{ActionsTd,ActionItem,TdBreakWord}from'components/PaginatedTable';import{CredentialType}from'types';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CredentialTypeListItem(_ref){var credentialType=_ref.credentialType,detailUrl=_ref.detailUrl,isSelected=_ref.isSelected,onSelect=_ref.onSelect,rowIndex=_ref.rowIndex;var labelId=\"check-action-\".concat(credentialType.id);return/*#__PURE__*/_jsxs(Tr,{id:\"credential-type-row-\".concat(credentialType.id),ouiaId:\"credential-type-row-\".concat(credentialType.id),children:[/*#__PURE__*/_jsx(Td,{select:{rowIndex:rowIndex,isSelected:isSelected,onSelect:onSelect},dataLabel:/*i18n*/i18n._(\"Selected\")}),/*#__PURE__*/_jsx(TdBreakWord,{id:labelId,dataLabel:/*i18n*/i18n._(\"Name\"),children:/*#__PURE__*/_jsx(Link,{to:\"\".concat(detailUrl),children:/*#__PURE__*/_jsx(\"b\",{children:credentialType.name})})}),/*#__PURE__*/_jsx(ActionsTd,{dataLabel:/*i18n*/i18n._(\"Actions\"),children:/*#__PURE__*/_jsx(ActionItem,{visible:credentialType.summary_fields.user_capabilities.edit,tooltip:/*i18n*/i18n._(\"Edit credential type\"),children:/*#__PURE__*/_jsx(Button,{ouiaId:\"\".concat(credentialType.id,\"-edit-button\"),\"aria-label\":/*i18n*/i18n._(\"Edit credential type\"),variant:\"plain\",component:Link,to:\"/credential_types/\".concat(credentialType.id,\"/edit\"),children:/*#__PURE__*/_jsx(PencilAltIcon,{})})})})]});}CredentialTypeListItem.prototype={credentialType:CredentialType.isRequired,detailUrl:string.isRequired,isSelected:bool.isRequired,onSelect:func.isRequired};export default CredentialTypeListItem;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/CredentialType/CredentialTypeList/CredentialTypeListItem.js"],"names":["React","string","bool","func","Link","Button","Tr","Td","PencilAltIcon","ActionsTd","ActionItem","TdBreakWord","CredentialType","CredentialTypeListItem","credentialType","detailUrl","isSelected","onSelect","rowIndex","labelId","id","name","summary_fields","user_capabilities","edit","prototype","isRequired"],"mappings":"+BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,IAAvB,KAAmC,YAAnC,CAEA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,MAAT,KAAuB,wBAAvB,CACA,OAASC,EAAT,CAAaC,EAAb,KAAuB,yBAAvB,CACA,OAASC,aAAT,KAA8B,yBAA9B,CACA,OAASC,SAAT,CAAoBC,UAApB,CAAgCC,WAAhC,KAAmD,2BAAnD,CACA,OAASC,cAAT,KAA+B,OAA/B,C,wFAEA,QAASC,CAAAA,sBAAT,MAMG,IALDC,CAAAA,cAKC,MALDA,cAKC,CAJDC,SAIC,MAJDA,SAIC,CAHDC,UAGC,MAHDA,UAGC,CAFDC,QAEC,MAFDA,QAEC,CADDC,QACC,MADDA,QACC,CACD,GAAMC,CAAAA,OAAO,wBAAmBL,cAAc,CAACM,EAAlC,CAAb,CAEA,mBACE,MAAC,EAAD,EACE,EAAE,+BAAyBN,cAAc,CAACM,EAAxC,CADJ,CAEE,MAAM,+BAAyBN,cAAc,CAACM,EAAxC,CAFR,wBAIE,KAAC,EAAD,EACE,MAAM,CAAE,CACNF,QAAQ,CAARA,QADM,CAENF,UAAU,CAAVA,UAFM,CAGNC,QAAQ,CAARA,QAHM,CADV,CAME,SAAS,SAAE,kBANb,EAJF,cAYE,KAAC,WAAD,EAAa,EAAE,CAAEE,OAAjB,CAA0B,SAAS,SAAE,cAArC,uBACE,KAAC,IAAD,EAAM,EAAE,WAAKJ,SAAL,CAAR,uBACE,mBAAID,cAAc,CAACO,IAAnB,EADF,EADF,EAZF,cAiBE,KAAC,SAAD,EAAW,SAAS,SAAE,iBAAtB,uBACE,KAAC,UAAD,EACE,OAAO,CAAEP,cAAc,CAACQ,cAAf,CAA8BC,iBAA9B,CAAgDC,IAD3D,CAEE,OAAO,SAAE,8BAFX,uBAIE,KAAC,MAAD,EACE,MAAM,WAAKV,cAAc,CAACM,EAApB,gBADR,CAEE,qBAAY,8BAFd,CAGE,OAAO,CAAC,OAHV,CAIE,SAAS,CAAEhB,IAJb,CAKE,EAAE,6BAAuBU,cAAc,CAACM,EAAtC,SALJ,uBAOE,KAAC,aAAD,IAPF,EAJF,EADF,EAjBF,GADF,CAoCD,CAEDP,sBAAsB,CAACY,SAAvB,CAAmC,CACjCX,cAAc,CAAEF,cAAc,CAACc,UADE,CAEjCX,SAAS,CAAEd,MAAM,CAACyB,UAFe,CAGjCV,UAAU,CAAEd,IAAI,CAACwB,UAHgB,CAIjCT,QAAQ,CAAEd,IAAI,CAACuB,UAJkB,CAAnC,CAOA,cAAeb,CAAAA,sBAAf","sourcesContent":["import React from 'react';\nimport { string, bool, func } from 'prop-types';\nimport { t } from '@lingui/macro';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\nimport { Tr, Td } from '@patternfly/react-table';\nimport { PencilAltIcon } from '@patternfly/react-icons';\nimport { ActionsTd, ActionItem, TdBreakWord } from 'components/PaginatedTable';\nimport { CredentialType } from 'types';\n\nfunction CredentialTypeListItem({\n  credentialType,\n  detailUrl,\n  isSelected,\n  onSelect,\n  rowIndex,\n}) {\n  const labelId = `check-action-${credentialType.id}`;\n\n  return (\n    <Tr\n      id={`credential-type-row-${credentialType.id}`}\n      ouiaId={`credential-type-row-${credentialType.id}`}\n    >\n      <Td\n        select={{\n          rowIndex,\n          isSelected,\n          onSelect,\n        }}\n        dataLabel={t`Selected`}\n      />\n      <TdBreakWord id={labelId} dataLabel={t`Name`}>\n        <Link to={`${detailUrl}`}>\n          <b>{credentialType.name}</b>\n        </Link>\n      </TdBreakWord>\n      <ActionsTd dataLabel={t`Actions`}>\n        <ActionItem\n          visible={credentialType.summary_fields.user_capabilities.edit}\n          tooltip={t`Edit credential type`}\n        >\n          <Button\n            ouiaId={`${credentialType.id}-edit-button`}\n            aria-label={t`Edit credential type`}\n            variant=\"plain\"\n            component={Link}\n            to={`/credential_types/${credentialType.id}/edit`}\n          >\n            <PencilAltIcon />\n          </Button>\n        </ActionItem>\n      </ActionsTd>\n    </Tr>\n  );\n}\n\nCredentialTypeListItem.prototype = {\n  credentialType: CredentialType.isRequired,\n  detailUrl: string.isRequired,\n  isSelected: bool.isRequired,\n  onSelect: func.isRequired,\n};\n\nexport default CredentialTypeListItem;\n"]},"metadata":{},"sourceType":"module"}