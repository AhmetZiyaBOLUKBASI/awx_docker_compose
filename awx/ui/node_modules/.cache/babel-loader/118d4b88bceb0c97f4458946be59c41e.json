{"ast":null,"code":"import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{useEffect,useState}from'react';import{RootAPI}from'api';export default function useBrandName(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),brandName=_useState2[0],setBrandName=_useState2[1];useEffect(function(){function fetchBrandName(){return _fetchBrandName.apply(this,arguments);}function _fetchBrandName(){_fetchBrandName=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$RootAPI$readAs,BRAND_NAME;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return RootAPI.readAssetVariables();case 2:_yield$RootAPI$readAs=_context.sent;BRAND_NAME=_yield$RootAPI$readAs.data.BRAND_NAME;setBrandName(BRAND_NAME);case 5:case\"end\":return _context.stop();}}},_callee);}));return _fetchBrandName.apply(this,arguments);}fetchBrandName();},[]);return brandName;}","map":{"version":3,"sources":["/awx_devel/awx/ui/src/hooks/useBrandName.js"],"names":["useEffect","useState","RootAPI","useBrandName","brandName","setBrandName","fetchBrandName","readAssetVariables","BRAND_NAME","data"],"mappings":"wTAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,OAAT,KAAwB,KAAxB,CAEA,cAAe,SAASC,CAAAA,YAAT,EAAwB,CACrC,cAAkCF,QAAQ,CAAC,EAAD,CAA1C,wCAAOG,SAAP,eAAkBC,YAAlB,eAEAL,SAAS,CAAC,UAAM,SACCM,CAAAA,cADD,oJACd,8LAGYJ,CAAAA,OAAO,CAACK,kBAAR,EAHZ,4CAEYC,UAFZ,uBAEIC,IAFJ,CAEYD,UAFZ,CAIEH,YAAY,CAACG,UAAD,CAAZ,CAJF,sDADc,iDAOdF,cAAc,GACf,CARQ,CAQN,EARM,CAAT,CAUA,MAAOF,CAAAA,SAAP,CACD","sourcesContent":["import { useEffect, useState } from 'react';\nimport { RootAPI } from 'api';\n\nexport default function useBrandName() {\n  const [brandName, setBrandName] = useState('');\n\n  useEffect(() => {\n    async function fetchBrandName() {\n      const {\n        data: { BRAND_NAME },\n      } = await RootAPI.readAssetVariables();\n      setBrandName(BRAND_NAME);\n    }\n    fetchBrandName();\n  }, []);\n\n  return brandName;\n}\n"]},"metadata":{},"sourceType":"module"}