{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { FocusTrap } from '../../helpers';\nimport modalStyles from '@patternfly/react-styles/css/components/ModalBox/modal-box';\nimport bullsEyeStyles from '@patternfly/react-styles/css/layouts/Bullseye/bullseye';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps } from '../../helpers';\nimport { Backdrop } from '../Backdrop/Backdrop';\nimport { ModalBoxBody } from './ModalBoxBody';\nimport { ModalBoxCloseButton } from './ModalBoxCloseButton';\nimport { ModalBox } from './ModalBox';\nimport { ModalBoxFooter } from './ModalBoxFooter';\nimport { ModalBoxDescription } from './ModalBoxDescription';\nimport { ModalBoxHeader } from './ModalBoxHeader';\nimport { ModalBoxTitle, isVariantIcon } from './ModalBoxTitle';\nexport var ModalContent = function ModalContent(_a) {\n  var children = _a.children,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      _a$isOpen = _a.isOpen,\n      isOpen = _a$isOpen === void 0 ? false : _a$isOpen,\n      _a$header = _a.header,\n      header = _a$header === void 0 ? null : _a$header,\n      _a$help = _a.help,\n      help = _a$help === void 0 ? null : _a$help,\n      _a$description = _a.description,\n      description = _a$description === void 0 ? null : _a$description,\n      _a$title = _a.title,\n      title = _a$title === void 0 ? '' : _a$title,\n      _a$titleIconVariant = _a.titleIconVariant,\n      titleIconVariant = _a$titleIconVariant === void 0 ? null : _a$titleIconVariant,\n      _a$titleLabel = _a.titleLabel,\n      titleLabel = _a$titleLabel === void 0 ? '' : _a$titleLabel,\n      _a$ariaLabel = _a['aria-label'],\n      ariaLabel = _a$ariaLabel === void 0 ? '' : _a$ariaLabel,\n      ariaDescribedby = _a['aria-describedby'],\n      ariaLabelledby = _a['aria-labelledby'],\n      bodyAriaLabel = _a.bodyAriaLabel,\n      bodyAriaRole = _a.bodyAriaRole,\n      _a$showClose = _a.showClose,\n      showClose = _a$showClose === void 0 ? true : _a$showClose,\n      _a$footer = _a.footer,\n      footer = _a$footer === void 0 ? null : _a$footer,\n      _a$actions = _a.actions,\n      actions = _a$actions === void 0 ? [] : _a$actions,\n      _a$onClose = _a.onClose,\n      onClose = _a$onClose === void 0 ? function () {\n    return undefined;\n  } : _a$onClose,\n      _a$variant = _a.variant,\n      variant = _a$variant === void 0 ? 'default' : _a$variant,\n      position = _a.position,\n      positionOffset = _a.positionOffset,\n      _a$width = _a.width,\n      width = _a$width === void 0 ? -1 : _a$width,\n      boxId = _a.boxId,\n      labelId = _a.labelId,\n      descriptorId = _a.descriptorId,\n      _a$disableFocusTrap = _a.disableFocusTrap,\n      disableFocusTrap = _a$disableFocusTrap === void 0 ? false : _a$disableFocusTrap,\n      _a$hasNoBodyWrapper = _a.hasNoBodyWrapper,\n      hasNoBodyWrapper = _a$hasNoBodyWrapper === void 0 ? false : _a$hasNoBodyWrapper,\n      ouiaId = _a.ouiaId,\n      _a$ouiaSafe = _a.ouiaSafe,\n      ouiaSafe = _a$ouiaSafe === void 0 ? true : _a$ouiaSafe,\n      props = __rest(_a, [\"children\", \"className\", \"isOpen\", \"header\", \"help\", \"description\", \"title\", \"titleIconVariant\", \"titleLabel\", 'aria-label', 'aria-describedby', 'aria-labelledby', \"bodyAriaLabel\", \"bodyAriaRole\", \"showClose\", \"footer\", \"actions\", \"onClose\", \"variant\", \"position\", \"positionOffset\", \"width\", \"boxId\", \"labelId\", \"descriptorId\", \"disableFocusTrap\", \"hasNoBodyWrapper\", \"ouiaId\", \"ouiaSafe\"]);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  var modalBoxHeader = header ? React.createElement(ModalBoxHeader, {\n    help: help\n  }, header) : title && React.createElement(ModalBoxHeader, {\n    help: help\n  }, React.createElement(ModalBoxTitle, {\n    title: title,\n    titleIconVariant: titleIconVariant,\n    titleLabel: titleLabel,\n    id: labelId\n  }), description && React.createElement(ModalBoxDescription, {\n    id: descriptorId\n  }, description));\n  var modalBoxFooter = footer ? React.createElement(ModalBoxFooter, null, footer) : actions.length > 0 && React.createElement(ModalBoxFooter, null, actions);\n  var defaultModalBodyAriaRole = bodyAriaLabel ? 'region' : undefined;\n  var modalBody = hasNoBodyWrapper ? children : React.createElement(ModalBoxBody, Object.assign({\n    \"aria-label\": bodyAriaLabel,\n    role: bodyAriaRole || defaultModalBodyAriaRole\n  }, props, !description && !ariaDescribedby && {\n    id: descriptorId\n  }), children);\n  var boxStyle = width === -1 ? {} : {\n    width: width\n  };\n\n  var ariaLabelledbyFormatted = function ariaLabelledbyFormatted() {\n    if (ariaLabelledby === null) {\n      return null;\n    }\n\n    var idRefList = [];\n\n    if ((ariaLabel && boxId) !== '') {\n      idRefList.push(ariaLabel && boxId);\n    }\n\n    if (ariaLabelledby) {\n      idRefList.push(ariaLabelledby);\n    }\n\n    if (title) {\n      idRefList.push(labelId);\n    }\n\n    return idRefList.join(' ');\n  };\n\n  var modalBox = React.createElement(ModalBox, Object.assign({\n    id: boxId,\n    style: boxStyle,\n    className: css(className, isVariantIcon(titleIconVariant) && modalStyles.modifiers[titleIconVariant]),\n    variant: variant,\n    position: position,\n    positionOffset: positionOffset,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledbyFormatted(),\n    \"aria-describedby\": ariaDescribedby || (hasNoBodyWrapper ? null : descriptorId)\n  }, getOUIAProps(ModalContent.displayName, ouiaId, ouiaSafe)), showClose && React.createElement(ModalBoxCloseButton, {\n    onClose: onClose,\n    ouiaId: ouiaId\n  }), modalBoxHeader, modalBody, modalBoxFooter);\n  return React.createElement(Backdrop, null, React.createElement(FocusTrap, {\n    active: !disableFocusTrap,\n    focusTrapOptions: {\n      clickOutsideDeactivates: true,\n      tabbableOptions: {\n        displayCheck: 'none'\n      }\n    },\n    className: css(bullsEyeStyles.bullseye)\n  }, modalBox));\n};\nModalContent.displayName = 'ModalContent';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Modal/ModalContent.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { FocusTrap } from '../../helpers';\nimport modalStyles from '@patternfly/react-styles/css/components/ModalBox/modal-box';\nimport bullsEyeStyles from '@patternfly/react-styles/css/layouts/Bullseye/bullseye';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, OUIAProps } from '../../helpers';\n\nimport { Backdrop } from '../Backdrop/Backdrop';\nimport { ModalBoxBody } from './ModalBoxBody';\nimport { ModalBoxCloseButton } from './ModalBoxCloseButton';\nimport { ModalBox } from './ModalBox';\nimport { ModalBoxFooter } from './ModalBoxFooter';\nimport { ModalBoxDescription } from './ModalBoxDescription';\nimport { ModalBoxHeader } from './ModalBoxHeader';\nimport { ModalBoxTitle, isVariantIcon } from './ModalBoxTitle';\n\nexport interface ModalContentProps extends OUIAProps {\n  /** Content rendered inside the Modal. */\n  children: React.ReactNode;\n  /** Additional classes added to the button */\n  className?: string;\n  /** Variant of the modal */\n  variant?: 'small' | 'medium' | 'large' | 'default';\n  /** Alternate position of the modal */\n  position?: 'top';\n  /** Offset from alternate position. Can be any valid CSS length/percentage */\n  positionOffset?: string;\n  /** Flag to show the modal */\n  isOpen?: boolean;\n  /** Complex header (more than just text), supersedes title for header content */\n  header?: React.ReactNode;\n  /** Optional help section for the Modal Header */\n  help?: React.ReactNode;\n  /** Description of the modal */\n  description?: React.ReactNode;\n  /** Simple text content of the Modal Header, also used for aria-label on the body */\n  title?: string;\n  /** Optional alert icon (or other) to show before the title of the Modal Header\n   * When the predefined alert types are used the default styling\n   * will be automatically applied */\n  titleIconVariant?: 'success' | 'danger' | 'warning' | 'info' | 'default' | React.ComponentType<any>;\n  /** Optional title label text for screen readers */\n  titleLabel?: string;\n  /** Id of Modal Box label */\n  'aria-labelledby'?: string | null;\n  /** Accessible descriptor of modal */\n  'aria-label'?: string;\n  /** Id of Modal Box description */\n  'aria-describedby'?: string;\n  /** Accessible label applied to the modal box body. This should be used to communicate important information about the modal box body div if needed, such as that it is scrollable */\n  bodyAriaLabel?: string;\n  /** Accessible role applied to the modal box body. This will default to region if a body aria label is applied. Set to a more appropriate role as applicable based on the modal content and context */\n  bodyAriaRole?: string;\n  /** Flag to show the close button in the header area of the modal */\n  showClose?: boolean;\n  /** Default width of the content. */\n  width?: number | string;\n  /** Custom footer */\n  footer?: React.ReactNode;\n  /** Action buttons to add to the standard Modal Footer, ignored if `footer` is given */\n  actions?: any;\n  /** A callback for when the close button is clicked */\n  onClose?: () => void;\n  /** Id of the ModalBox container */\n  boxId: string;\n  /** Id of the ModalBox title */\n  labelId: string;\n  /** Id of the ModalBoxBody */\n  descriptorId: string;\n  /** Flag to disable focus trap */\n  disableFocusTrap?: boolean;\n  /** Flag indicating if modal content should be placed in a modal box body wrapper */\n  hasNoBodyWrapper?: boolean;\n}\n\nexport const ModalContent: React.FunctionComponent<ModalContentProps> = ({\n  children,\n  className = '',\n  isOpen = false,\n  header = null,\n  help = null,\n  description = null,\n  title = '',\n  titleIconVariant = null,\n  titleLabel = '',\n  'aria-label': ariaLabel = '',\n  'aria-describedby': ariaDescribedby,\n  'aria-labelledby': ariaLabelledby,\n  bodyAriaLabel,\n  bodyAriaRole,\n  showClose = true,\n  footer = null,\n  actions = [],\n  onClose = () => undefined as any,\n  variant = 'default',\n  position,\n  positionOffset,\n  width = -1,\n  boxId,\n  labelId,\n  descriptorId,\n  disableFocusTrap = false,\n  hasNoBodyWrapper = false,\n  ouiaId,\n  ouiaSafe = true,\n  ...props\n}: ModalContentProps) => {\n  if (!isOpen) {\n    return null;\n  }\n\n  const modalBoxHeader = header ? (\n    <ModalBoxHeader help={help}>{header}</ModalBoxHeader>\n  ) : (\n    title && (\n      <ModalBoxHeader help={help}>\n        <ModalBoxTitle title={title} titleIconVariant={titleIconVariant} titleLabel={titleLabel} id={labelId} />\n        {description && <ModalBoxDescription id={descriptorId}>{description}</ModalBoxDescription>}\n      </ModalBoxHeader>\n    )\n  );\n\n  const modalBoxFooter = footer ? (\n    <ModalBoxFooter>{footer}</ModalBoxFooter>\n  ) : (\n    actions.length > 0 && <ModalBoxFooter>{actions}</ModalBoxFooter>\n  );\n\n  const defaultModalBodyAriaRole = bodyAriaLabel ? 'region' : undefined;\n\n  const modalBody = hasNoBodyWrapper ? (\n    children\n  ) : (\n    <ModalBoxBody\n      aria-label={bodyAriaLabel}\n      role={bodyAriaRole || defaultModalBodyAriaRole}\n      {...props}\n      {...(!description && !ariaDescribedby && { id: descriptorId })}\n    >\n      {children}\n    </ModalBoxBody>\n  );\n  const boxStyle = width === -1 ? {} : { width };\n  const ariaLabelledbyFormatted = (): null | string => {\n    if (ariaLabelledby === null) {\n      return null;\n    }\n    const idRefList: string[] = [];\n    if ((ariaLabel && boxId) !== '') {\n      idRefList.push(ariaLabel && boxId);\n    }\n    if (ariaLabelledby) {\n      idRefList.push(ariaLabelledby);\n    }\n    if (title) {\n      idRefList.push(labelId);\n    }\n    return idRefList.join(' ');\n  };\n\n  const modalBox = (\n    <ModalBox\n      id={boxId}\n      style={boxStyle}\n      className={css(\n        className,\n        isVariantIcon(titleIconVariant) &&\n          modalStyles.modifiers[titleIconVariant as 'success' | 'warning' | 'info' | 'danger' | 'default']\n      )}\n      variant={variant}\n      position={position}\n      positionOffset={positionOffset}\n      aria-label={ariaLabel}\n      aria-labelledby={ariaLabelledbyFormatted()}\n      aria-describedby={ariaDescribedby || (hasNoBodyWrapper ? null : descriptorId)}\n      {...getOUIAProps(ModalContent.displayName, ouiaId, ouiaSafe)}\n    >\n      {showClose && <ModalBoxCloseButton onClose={onClose} ouiaId={ouiaId} />}\n      {modalBoxHeader}\n      {modalBody}\n      {modalBoxFooter}\n    </ModalBox>\n  );\n  return (\n    <Backdrop>\n      <FocusTrap\n        active={!disableFocusTrap}\n        focusTrapOptions={{ clickOutsideDeactivates: true, tabbableOptions: { displayCheck: 'none' } }}\n        className={css(bullsEyeStyles.bullseye)}\n      >\n        {modalBox}\n      </FocusTrap>\n    </Backdrop>\n  );\n};\nModalContent.displayName = 'ModalContent';\n"]},"metadata":{},"sourceType":"module"}