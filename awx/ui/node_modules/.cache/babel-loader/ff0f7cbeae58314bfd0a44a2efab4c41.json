{"ast":null,"code":"import{i18n}from\"@lingui/core\";import React from'react';import{Formik}from'formik';import{Form,Card}from'@patternfly/react-core';import{CardBody}from'components/Card';import FormField,{FormSubmitError}from'components/FormField';import FormActionGroup from'components/FormActionGroup/FormActionGroup';import{VariablesField}from'components/CodeEditor';import{required}from'util/validators';import{FormColumnLayout,FormFullWidthLayout}from'components/FormLayout';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function InventoryGroupForm(_ref){var error=_ref.error,_ref$group=_ref.group,group=_ref$group===void 0?{}:_ref$group,handleSubmit=_ref.handleSubmit,handleCancel=_ref.handleCancel;var initialValues={name:group.name||'',description:group.description||'',variables:group.variables||'---'};return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(Formik,{initialValues:initialValues,onSubmit:handleSubmit,children:function children(formik){return/*#__PURE__*/_jsx(Form,{autoComplete:\"off\",onSubmit:formik.handleSubmit,children:/*#__PURE__*/_jsxs(FormColumnLayout,{children:[/*#__PURE__*/_jsx(FormField,{id:\"inventoryGroup-name\",name:\"name\",type:\"text\",label:/*i18n*/i18n._(\"Name\"),validate:required(null),isRequired:true}),/*#__PURE__*/_jsx(FormField,{id:\"inventoryGroup-description\",name:\"description\",type:\"text\",label:/*i18n*/i18n._(\"Description\")}),/*#__PURE__*/_jsx(FormFullWidthLayout,{children:/*#__PURE__*/_jsx(VariablesField,{id:\"host-variables\",name:\"variables\",label:/*i18n*/i18n._(\"Variables\")})}),/*#__PURE__*/_jsx(FormActionGroup,{onCancel:handleCancel,onSubmit:formik.handleSubmit}),error&&/*#__PURE__*/_jsx(FormSubmitError,{error:error})]})});}})})});}export default InventoryGroupForm;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Inventory/shared/InventoryGroupForm.js"],"names":["React","Formik","Form","Card","CardBody","FormField","FormSubmitError","FormActionGroup","VariablesField","required","FormColumnLayout","FormFullWidthLayout","InventoryGroupForm","error","group","handleSubmit","handleCancel","initialValues","name","description","variables","formik"],"mappings":"+BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,MAAT,KAAuB,QAAvB,CACA,OAASC,IAAT,CAAeC,IAAf,KAA2B,wBAA3B,CAGA,OAASC,QAAT,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,SAAP,EAAoBC,eAApB,KAA2C,sBAA3C,CACA,MAAOC,CAAAA,eAAP,KAA4B,4CAA5B,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,QAAT,KAAyB,iBAAzB,CACA,OAASC,gBAAT,CAA2BC,mBAA3B,KAAsD,uBAAtD,C,wFAEA,QAASC,CAAAA,kBAAT,MAA+E,IAAjDC,CAAAA,KAAiD,MAAjDA,KAAiD,iBAA1CC,KAA0C,CAA1CA,KAA0C,qBAAlC,EAAkC,YAA9BC,YAA8B,MAA9BA,YAA8B,CAAhBC,YAAgB,MAAhBA,YAAgB,CAC7E,GAAMC,CAAAA,aAAa,CAAG,CACpBC,IAAI,CAAEJ,KAAK,CAACI,IAAN,EAAc,EADA,CAEpBC,WAAW,CAAEL,KAAK,CAACK,WAAN,EAAqB,EAFd,CAGpBC,SAAS,CAAEN,KAAK,CAACM,SAAN,EAAmB,KAHV,CAAtB,CAMA,mBACE,KAAC,IAAD,wBACE,KAAC,QAAD,wBACE,KAAC,MAAD,EAAQ,aAAa,CAAEH,aAAvB,CAAsC,QAAQ,CAAEF,YAAhD,UACG,kBAACM,MAAD,qBACC,KAAC,IAAD,EAAM,YAAY,CAAC,KAAnB,CAAyB,QAAQ,CAAEA,MAAM,CAACN,YAA1C,uBACE,MAAC,gBAAD,yBACE,KAAC,SAAD,EACE,EAAE,CAAC,qBADL,CAEE,IAAI,CAAC,MAFP,CAGE,IAAI,CAAC,MAHP,CAIE,KAAK,SAAE,cAJT,CAKE,QAAQ,CAAEN,QAAQ,CAAC,IAAD,CALpB,CAME,UAAU,KANZ,EADF,cASE,KAAC,SAAD,EACE,EAAE,CAAC,4BADL,CAEE,IAAI,CAAC,aAFP,CAGE,IAAI,CAAC,MAHP,CAIE,KAAK,SAAE,qBAJT,EATF,cAeE,KAAC,mBAAD,wBACE,KAAC,cAAD,EACE,EAAE,CAAC,gBADL,CAEE,IAAI,CAAC,WAFP,CAGE,KAAK,SAAE,mBAHT,EADF,EAfF,cAsBE,KAAC,eAAD,EACE,QAAQ,CAAEO,YADZ,CAEE,QAAQ,CAAEK,MAAM,CAACN,YAFnB,EAtBF,CA0BGF,KAAK,eAAI,KAAC,eAAD,EAAiB,KAAK,CAAEA,KAAxB,EA1BZ,GADF,EADD,EADH,EADF,EADF,EADF,CAwCD,CAED,cAAeD,CAAAA,kBAAf","sourcesContent":["import React from 'react';\n\nimport { Formik } from 'formik';\nimport { Form, Card } from '@patternfly/react-core';\nimport { t } from '@lingui/macro';\n\nimport { CardBody } from 'components/Card';\nimport FormField, { FormSubmitError } from 'components/FormField';\nimport FormActionGroup from 'components/FormActionGroup/FormActionGroup';\nimport { VariablesField } from 'components/CodeEditor';\nimport { required } from 'util/validators';\nimport { FormColumnLayout, FormFullWidthLayout } from 'components/FormLayout';\n\nfunction InventoryGroupForm({ error, group = {}, handleSubmit, handleCancel }) {\n  const initialValues = {\n    name: group.name || '',\n    description: group.description || '',\n    variables: group.variables || '---',\n  };\n\n  return (\n    <Card>\n      <CardBody>\n        <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n          {(formik) => (\n            <Form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n              <FormColumnLayout>\n                <FormField\n                  id=\"inventoryGroup-name\"\n                  name=\"name\"\n                  type=\"text\"\n                  label={t`Name`}\n                  validate={required(null)}\n                  isRequired\n                />\n                <FormField\n                  id=\"inventoryGroup-description\"\n                  name=\"description\"\n                  type=\"text\"\n                  label={t`Description`}\n                />\n                <FormFullWidthLayout>\n                  <VariablesField\n                    id=\"host-variables\"\n                    name=\"variables\"\n                    label={t`Variables`}\n                  />\n                </FormFullWidthLayout>\n                <FormActionGroup\n                  onCancel={handleCancel}\n                  onSubmit={formik.handleSubmit}\n                />\n                {error && <FormSubmitError error={error} />}\n              </FormColumnLayout>\n            </Form>\n          )}\n        </Formik>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default InventoryGroupForm;\n"]},"metadata":{},"sourceType":"module"}