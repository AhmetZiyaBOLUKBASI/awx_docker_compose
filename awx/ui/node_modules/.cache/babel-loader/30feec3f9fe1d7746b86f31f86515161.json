{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _excluded=[\"inputs\",\"organization\",\"passwordPrompts\"];import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import React,{useCallback,useEffect}from'react';import{useHistory}from'react-router-dom';import{PageSection,Card}from'@patternfly/react-core';import{CardBody}from'components/Card';import ContentError from'components/ContentError';import ContentLoading from'components/ContentLoading';import{CredentialInputSourcesAPI,CredentialTypesAPI,CredentialsAPI}from'api';import useRequest from'hooks/useRequest';import CredentialForm from'../shared/CredentialForm';import{jsx as _jsx}from\"react/jsx-runtime\";var fetchCredentialTypes=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var pageNo,credentialTypes,_yield$CredentialType,data,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:pageNo=_args.length>0&&_args[0]!==undefined?_args[0]:1;credentialTypes=_args.length>1&&_args[1]!==undefined?_args[1]:[];_context.next=4;return CredentialTypesAPI.read({page_size:200,page:pageNo});case 4:_yield$CredentialType=_context.sent;data=_yield$CredentialType.data;if(!data.next){_context.next=8;break;}return _context.abrupt(\"return\",fetchCredentialTypes(pageNo+1,credentialTypes.concat(data.results)));case 8:return _context.abrupt(\"return\",credentialTypes.concat(data.results));case 9:case\"end\":return _context.stop();}}},_callee);}));return function fetchCredentialTypes(){return _ref.apply(this,arguments);};}();function CredentialAdd(_ref2){var me=_ref2.me;var history=useHistory();var _useRequest=useRequest(useCallback(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values,credentialTypesMap){var credentialTypeInputs,inputs,organization,passwordPrompts,remainingValues,nonPluginInputs,pluginInputs,possibleFields,modifiedData,_yield$CredentialsAPI,newCredentialId;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:credentialTypeInputs=credentialTypesMap[values.credential_type].inputs;inputs=values.inputs,organization=values.organization,passwordPrompts=values.passwordPrompts,remainingValues=_objectWithoutProperties(values,_excluded);nonPluginInputs={};pluginInputs={};possibleFields=credentialTypeInputs.fields||[];possibleFields.forEach(function(field){var input=inputs[field.id];if(input!==null&&input!==void 0&&input.credential&&input!==null&&input!==void 0&&input.inputs){pluginInputs[field.id]=input;}else if(passwordPrompts[field.id]){nonPluginInputs[field.id]='ASK';}else{nonPluginInputs[field.id]=input;}});modifiedData=_objectSpread({inputs:nonPluginInputs},remainingValues);// can send only one of org, user, team\n// can send only one of org, user, team\nif(organization!==null&&organization!==void 0&&organization.id){modifiedData.organization=organization.id;}else if(me!==null&&me!==void 0&&me.id){modifiedData.user=me.id;}_context2.next=10;return CredentialsAPI.create(modifiedData);case 10:_yield$CredentialsAPI=_context2.sent;newCredentialId=_yield$CredentialsAPI.data.id;_context2.next=14;return Promise.all(Object.entries(pluginInputs).map(function(_ref4){var _ref5=_slicedToArray(_ref4,2),key=_ref5[0],value=_ref5[1];return CredentialInputSourcesAPI.create({input_field_name:key,metadata:value.inputs,source_credential:value.credential.id,target_credential:newCredentialId});}));case 14:return _context2.abrupt(\"return\",newCredentialId);case 15:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x,_x2){return _ref3.apply(this,arguments);};}(),[me])),submitError=_useRequest.error,submitRequest=_useRequest.request,credentialId=_useRequest.result;useEffect(function(){if(credentialId){history.push(\"/credentials/\".concat(credentialId,\"/details\"));}},[credentialId,history]);var _useRequest2=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var credTypes,creds;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetchCredentialTypes();case 2:credTypes=_context3.sent;creds=credTypes.reduce(function(credentialTypesMap,credentialType){credentialTypesMap[credentialType.id]=credentialType;return credentialTypesMap;},{});return _context3.abrupt(\"return\",creds);case 5:case\"end\":return _context3.stop();}}},_callee3);})),[]),{}),isLoading=_useRequest2.isLoading,error=_useRequest2.error,loadData=_useRequest2.request,result=_useRequest2.result;useEffect(function(){loadData();},[loadData]);var handleCancel=function handleCancel(){history.push('/credentials');};var handleSubmit=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(values){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return submitRequest(values,result);case 2:case\"end\":return _context4.stop();}}},_callee4);}));return function handleSubmit(_x3){return _ref7.apply(this,arguments);};}();if(error){return/*#__PURE__*/_jsx(PageSection,{children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(ContentError,{error:error})})})});}if(isLoading){return/*#__PURE__*/_jsx(PageSection,{children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(ContentLoading,{})})})});}return/*#__PURE__*/_jsx(PageSection,{children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(CredentialForm,{onCancel:handleCancel,onSubmit:handleSubmit,credentialTypes:result,submitError:submitError})})})});}export{CredentialAdd as _CredentialAdd};export default CredentialAdd;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Credential/CredentialAdd/CredentialAdd.js"],"names":["React","useCallback","useEffect","useHistory","PageSection","Card","CardBody","ContentError","ContentLoading","CredentialInputSourcesAPI","CredentialTypesAPI","CredentialsAPI","useRequest","CredentialForm","fetchCredentialTypes","pageNo","credentialTypes","read","page_size","page","data","next","concat","results","CredentialAdd","me","history","values","credentialTypesMap","credentialTypeInputs","credential_type","inputs","organization","passwordPrompts","remainingValues","nonPluginInputs","pluginInputs","possibleFields","fields","forEach","field","input","id","credential","modifiedData","user","create","newCredentialId","Promise","all","Object","entries","map","key","value","input_field_name","metadata","source_credential","target_credential","submitError","error","submitRequest","request","credentialId","result","push","credTypes","creds","reduce","credentialType","isLoading","loadData","handleCancel","handleSubmit","_CredentialAdd"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { PageSection, Card } from '@patternfly/react-core';\nimport { CardBody } from 'components/Card';\nimport ContentError from 'components/ContentError';\nimport ContentLoading from 'components/ContentLoading';\nimport {\n  CredentialInputSourcesAPI,\n  CredentialTypesAPI,\n  CredentialsAPI,\n} from 'api';\nimport useRequest from 'hooks/useRequest';\nimport CredentialForm from '../shared/CredentialForm';\n\nconst fetchCredentialTypes = async (pageNo = 1, credentialTypes = []) => {\n  const { data } = await CredentialTypesAPI.read({\n    page_size: 200,\n    page: pageNo,\n  });\n  if (data.next) {\n    return fetchCredentialTypes(\n      pageNo + 1,\n      credentialTypes.concat(data.results)\n    );\n  }\n  return credentialTypes.concat(data.results);\n};\n\nfunction CredentialAdd({ me }) {\n  const history = useHistory();\n\n  const {\n    error: submitError,\n    request: submitRequest,\n    result: credentialId,\n  } = useRequest(\n    useCallback(\n      async (values, credentialTypesMap) => {\n        const { inputs: credentialTypeInputs } =\n          credentialTypesMap[values.credential_type];\n\n        const { inputs, organization, passwordPrompts, ...remainingValues } =\n          values;\n\n        const nonPluginInputs = {};\n        const pluginInputs = {};\n        const possibleFields = credentialTypeInputs.fields || [];\n\n        possibleFields.forEach((field) => {\n          const input = inputs[field.id];\n          if (input?.credential && input?.inputs) {\n            pluginInputs[field.id] = input;\n          } else if (passwordPrompts[field.id]) {\n            nonPluginInputs[field.id] = 'ASK';\n          } else {\n            nonPluginInputs[field.id] = input;\n          }\n        });\n\n        const modifiedData = { inputs: nonPluginInputs, ...remainingValues };\n        // can send only one of org, user, team\n        if (organization?.id) {\n          modifiedData.organization = organization.id;\n        } else if (me?.id) {\n          modifiedData.user = me.id;\n        }\n        const {\n          data: { id: newCredentialId },\n        } = await CredentialsAPI.create(modifiedData);\n\n        await Promise.all(\n          Object.entries(pluginInputs).map(([key, value]) =>\n            CredentialInputSourcesAPI.create({\n              input_field_name: key,\n              metadata: value.inputs,\n              source_credential: value.credential.id,\n              target_credential: newCredentialId,\n            })\n          )\n        );\n\n        return newCredentialId;\n      },\n      [me]\n    )\n  );\n\n  useEffect(() => {\n    if (credentialId) {\n      history.push(`/credentials/${credentialId}/details`);\n    }\n  }, [credentialId, history]);\n\n  const {\n    isLoading,\n    error,\n    request: loadData,\n    result,\n  } = useRequest(\n    useCallback(async () => {\n      const credTypes = await fetchCredentialTypes();\n      const creds = credTypes.reduce((credentialTypesMap, credentialType) => {\n        credentialTypesMap[credentialType.id] = credentialType;\n        return credentialTypesMap;\n      }, {});\n      return creds;\n    }, []),\n    {}\n  );\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  const handleCancel = () => {\n    history.push('/credentials');\n  };\n\n  const handleSubmit = async (values) => {\n    await submitRequest(values, result);\n  };\n\n  if (error) {\n    return (\n      <PageSection>\n        <Card>\n          <CardBody>\n            <ContentError error={error} />\n          </CardBody>\n        </Card>\n      </PageSection>\n    );\n  }\n  if (isLoading) {\n    return (\n      <PageSection>\n        <Card>\n          <CardBody>\n            <ContentLoading />\n          </CardBody>\n        </Card>\n      </PageSection>\n    );\n  }\n  return (\n    <PageSection>\n      <Card>\n        <CardBody>\n          <CredentialForm\n            onCancel={handleCancel}\n            onSubmit={handleSubmit}\n            credentialTypes={result}\n            submitError={submitError}\n          />\n        </CardBody>\n      </Card>\n    </PageSection>\n  );\n}\n\nexport { CredentialAdd as _CredentialAdd };\nexport default CredentialAdd;\n"]},"metadata":{},"sourceType":"module"}