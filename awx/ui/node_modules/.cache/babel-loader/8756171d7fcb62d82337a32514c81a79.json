{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/List/list';\nimport { css } from '@patternfly/react-styles';\nexport var OrderType;\n\n(function (OrderType) {\n  OrderType[\"number\"] = \"1\";\n  OrderType[\"lowercaseLetter\"] = \"a\";\n  OrderType[\"uppercaseLetter\"] = \"A\";\n  OrderType[\"lowercaseRomanNumber\"] = \"i\";\n  OrderType[\"uppercaseRomanNumber\"] = \"I\";\n})(OrderType || (OrderType = {}));\n\nexport var ListVariant;\n\n(function (ListVariant) {\n  ListVariant[\"inline\"] = \"inline\";\n})(ListVariant || (ListVariant = {}));\n\nexport var ListComponent;\n\n(function (ListComponent) {\n  ListComponent[\"ol\"] = \"ol\";\n  ListComponent[\"ul\"] = \"ul\";\n})(ListComponent || (ListComponent = {}));\n\nexport var List = function List(_a) {\n  var _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      _a$variant = _a.variant,\n      variant = _a$variant === void 0 ? null : _a$variant,\n      _a$isBordered = _a.isBordered,\n      isBordered = _a$isBordered === void 0 ? false : _a$isBordered,\n      _a$isPlain = _a.isPlain,\n      isPlain = _a$isPlain === void 0 ? false : _a$isPlain,\n      _a$iconSize = _a.iconSize,\n      iconSize = _a$iconSize === void 0 ? 'default' : _a$iconSize,\n      _a$type = _a.type,\n      type = _a$type === void 0 ? OrderType.number : _a$type,\n      _a$ref = _a.ref,\n      ref = _a$ref === void 0 ? null : _a$ref,\n      _a$component = _a.component,\n      component = _a$component === void 0 ? ListComponent.ul : _a$component,\n      props = __rest(_a, [\"className\", \"children\", \"variant\", \"isBordered\", \"isPlain\", \"iconSize\", \"type\", \"ref\", \"component\"]);\n\n  return component === ListComponent.ol ? React.createElement(\"ol\", Object.assign({\n    ref: ref,\n    type: type\n  }, props, {\n    className: css(styles.list, variant && styles.modifiers[variant], isBordered && styles.modifiers.bordered, isPlain && styles.modifiers.plain, iconSize && iconSize === 'large' && styles.modifiers.iconLg, className)\n  }), children) : React.createElement(\"ul\", Object.assign({\n    ref: ref\n  }, props, {\n    className: css(styles.list, variant && styles.modifiers[variant], isBordered && styles.modifiers.bordered, isPlain && styles.modifiers.plain, iconSize && iconSize === 'large' && styles.modifiers.iconLg, className)\n  }), children);\n};\nList.displayName = 'List';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/List/List.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/List/list';\nimport { css } from '@patternfly/react-styles';\n\nexport enum OrderType {\n  number = '1',\n  lowercaseLetter = 'a',\n  uppercaseLetter = 'A',\n  lowercaseRomanNumber = 'i',\n  uppercaseRomanNumber = 'I'\n}\n\nexport enum ListVariant {\n  inline = 'inline'\n}\n\nexport enum ListComponent {\n  ol = 'ol',\n  ul = 'ul'\n}\n\nexport interface ListProps extends Omit<React.HTMLProps<HTMLUListElement | HTMLOListElement>, 'type'> {\n  /** Anything that can be rendered inside of the list */\n  children?: React.ReactNode;\n  /** Additional classes added to the list */\n  className?: string;\n  /** Adds list variant styles */\n  variant?: ListVariant.inline;\n  /** Modifies the list to add borders between items */\n  isBordered?: boolean;\n  /** Modifies the list to include plain styling */\n  isPlain?: boolean;\n  /** Modifies the size of the icons in the list */\n  iconSize?: 'default' | 'large';\n  /** Sets the way items are numbered if variant is set to ordered */\n  type?: OrderType;\n  component?: 'ol' | 'ul';\n}\n\nexport const List: React.FunctionComponent<ListProps> = ({\n  className = '',\n  children = null,\n  variant = null,\n  isBordered = false,\n  isPlain = false,\n  iconSize = 'default',\n  type = OrderType.number,\n  ref = null,\n  component = ListComponent.ul,\n  ...props\n}: ListProps) =>\n  component === ListComponent.ol ? (\n    <ol\n      ref={ref as React.LegacyRef<HTMLOListElement>}\n      type={type}\n      {...props}\n      className={css(\n        styles.list,\n        variant && styles.modifiers[variant],\n        isBordered && styles.modifiers.bordered,\n        isPlain && styles.modifiers.plain,\n        iconSize && iconSize === 'large' && styles.modifiers.iconLg,\n        className\n      )}\n    >\n      {children}\n    </ol>\n  ) : (\n    <ul\n      ref={ref as React.LegacyRef<HTMLUListElement>}\n      {...props}\n      className={css(\n        styles.list,\n        variant && styles.modifiers[variant],\n        isBordered && styles.modifiers.bordered,\n        isPlain && styles.modifiers.plain,\n        iconSize && iconSize === 'large' && styles.modifiers.iconLg,\n        className\n      )}\n    >\n      {children}\n    </ul>\n  );\nList.displayName = 'List';\n"]},"metadata":{},"sourceType":"module"}