{"ast":null,"code":"import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useCallback}from'react';import{Formik,useField}from'formik';import{Button,Tooltip,Wizard,WizardContextConsumer,WizardFooter}from'@patternfly/react-core';import{CredentialsAPI}from'api';import useRequest from'hooks/useRequest';import CredentialsStep from'./CredentialsStep';import MetadataStep from'./MetadataStep';import{CredentialPluginTestAlert}from'..';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CredentialPluginWizard(_ref){var handleSubmit=_ref.handleSubmit,onClose=_ref.onClose;var _useField=useField('credential'),_useField2=_slicedToArray(_useField,1),selectedCredential=_useField2[0];var _useField3=useField('inputs'),_useField4=_slicedToArray(_useField3,1),inputValues=_useField4[0];var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",CredentialsAPI.test(selectedCredential.value.id,{metadata:inputValues.value}));case 1:case\"end\":return _context.stop();}}},_callee);})),[selectedCredential,inputValues]),null),testPluginSuccess=_useRequest.result,testPluginError=_useRequest.error,testPluginMetadata=_useRequest.request;var steps=[{id:1,name:/*i18n*/i18n._(\"Credential\"),key:'credential',component:/*#__PURE__*/_jsx(CredentialsStep,{}),enableNext:!!selectedCredential.value},{id:2,name:/*i18n*/i18n._(\"Metadata\"),key:'metadata',component:/*#__PURE__*/_jsx(MetadataStep,{}),canJumpTo:!!selectedCredential.value}];var CustomFooter=/*#__PURE__*/_jsx(WizardFooter,{children:/*#__PURE__*/_jsx(WizardContextConsumer,{children:function children(_ref3){var activeStep=_ref3.activeStep,onNext=_ref3.onNext,onBack=_ref3.onBack;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{ouiaId:\"credential-plugin-prompt-next\",id:\"credential-plugin-prompt-next\",variant:\"primary\",onClick:onNext,isDisabled:!selectedCredential.value,children:activeStep.key==='metadata'?/*i18n*/i18n._(\"OK\"):/*i18n*/i18n._(\"Next\")}),activeStep&&activeStep.key==='metadata'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Tooltip,{content:/*i18n*/i18n._(\"Click this button to verify connection to the secret management system using the selected credential and specified inputs.\"),position:\"right\",children:/*#__PURE__*/_jsx(Button,{ouiaId:\"credential-plugin-prompt-test\",id:\"credential-plugin-prompt-test\",variant:\"secondary\",onClick:function onClick(){return testPluginMetadata();},children:/*i18n*/i18n._(\"Test\")})}),/*#__PURE__*/_jsx(Button,{ouiaId:\"credential-plugin-prompt-back\",id:\"credential-plugin-prompt-back\",variant:\"secondary\",onClick:onBack,children:/*i18n*/i18n._(\"Back\")})]}),/*#__PURE__*/_jsx(Button,{ouiaId:\"credential-plugin-prompt-cancel\",id:\"credential-plugin-prompt-cancel\",variant:\"link\",onClick:onClose,children:/*i18n*/i18n._(\"Cancel\")})]});}})});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Wizard,{isOpen:true,onClose:onClose,title:/*i18n*/i18n._(\"External Secret Management System\"),steps:steps,onSave:handleSubmit,footer:CustomFooter}),selectedCredential.value&&/*#__PURE__*/_jsx(CredentialPluginTestAlert,{credentialName:selectedCredential.value.name,successResponse:testPluginSuccess,errorResponse:testPluginError})]});}function CredentialPluginPrompt(_ref4){var onClose=_ref4.onClose,onSubmit=_ref4.onSubmit,initialValues=_ref4.initialValues;return/*#__PURE__*/_jsx(Formik,{initialValues:{credential:(initialValues===null||initialValues===void 0?void 0:initialValues.credential)||null,inputs:(initialValues===null||initialValues===void 0?void 0:initialValues.inputs)||{}},onSubmit:onSubmit,children:function children(_ref5){var handleSubmit=_ref5.handleSubmit;return/*#__PURE__*/_jsx(CredentialPluginWizard,{handleSubmit:handleSubmit,onClose:onClose});}});}CredentialPluginPrompt.defaultProps={initialValues:{}};export default CredentialPluginPrompt;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Credential/shared/CredentialPlugins/CredentialPluginPrompt/CredentialPluginPrompt.js"],"names":["React","useCallback","Formik","useField","Button","Tooltip","Wizard","WizardContextConsumer","WizardFooter","CredentialsAPI","useRequest","CredentialsStep","MetadataStep","CredentialPluginTestAlert","CredentialPluginWizard","handleSubmit","onClose","selectedCredential","inputValues","test","value","id","metadata","testPluginSuccess","result","testPluginError","error","testPluginMetadata","request","steps","name","key","component","enableNext","canJumpTo","CustomFooter","activeStep","onNext","onBack","CredentialPluginPrompt","onSubmit","initialValues","credential","inputs","defaultProps"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport { func, shape } from 'prop-types';\nimport { Formik, useField } from 'formik';\nimport { t } from '@lingui/macro';\nimport {\n  Button,\n  Tooltip,\n  Wizard,\n  WizardContextConsumer,\n  WizardFooter,\n} from '@patternfly/react-core';\nimport { CredentialsAPI } from 'api';\nimport useRequest from 'hooks/useRequest';\nimport CredentialsStep from './CredentialsStep';\nimport MetadataStep from './MetadataStep';\nimport { CredentialPluginTestAlert } from '..';\n\nfunction CredentialPluginWizard({ handleSubmit, onClose }) {\n  const [selectedCredential] = useField('credential');\n  const [inputValues] = useField('inputs');\n\n  const {\n    result: testPluginSuccess,\n    error: testPluginError,\n    request: testPluginMetadata,\n  } = useRequest(\n    useCallback(\n      async () =>\n        CredentialsAPI.test(selectedCredential.value.id, {\n          metadata: inputValues.value,\n        }),\n      [selectedCredential, inputValues]\n    ),\n    null\n  );\n\n  const steps = [\n    {\n      id: 1,\n      name: t`Credential`,\n      key: 'credential',\n      component: <CredentialsStep />,\n      enableNext: !!selectedCredential.value,\n    },\n    {\n      id: 2,\n      name: t`Metadata`,\n      key: 'metadata',\n      component: <MetadataStep />,\n      canJumpTo: !!selectedCredential.value,\n    },\n  ];\n\n  const CustomFooter = (\n    <WizardFooter>\n      <WizardContextConsumer>\n        {({ activeStep, onNext, onBack }) => (\n          <>\n            <Button\n              ouiaId=\"credential-plugin-prompt-next\"\n              id=\"credential-plugin-prompt-next\"\n              variant=\"primary\"\n              onClick={onNext}\n              isDisabled={!selectedCredential.value}\n            >\n              {activeStep.key === 'metadata' ? t`OK` : t`Next`}\n            </Button>\n            {activeStep && activeStep.key === 'metadata' && (\n              <>\n                <Tooltip\n                  content={t`Click this button to verify connection to the secret management system using the selected credential and specified inputs.`}\n                  position=\"right\"\n                >\n                  <Button\n                    ouiaId=\"credential-plugin-prompt-test\"\n                    id=\"credential-plugin-prompt-test\"\n                    variant=\"secondary\"\n                    onClick={() => testPluginMetadata()}\n                  >\n                    {t`Test`}\n                  </Button>\n                </Tooltip>\n\n                <Button\n                  ouiaId=\"credential-plugin-prompt-back\"\n                  id=\"credential-plugin-prompt-back\"\n                  variant=\"secondary\"\n                  onClick={onBack}\n                >\n                  {t`Back`}\n                </Button>\n              </>\n            )}\n            <Button\n              ouiaId=\"credential-plugin-prompt-cancel\"\n              id=\"credential-plugin-prompt-cancel\"\n              variant=\"link\"\n              onClick={onClose}\n            >\n              {t`Cancel`}\n            </Button>\n          </>\n        )}\n      </WizardContextConsumer>\n    </WizardFooter>\n  );\n\n  return (\n    <>\n      <Wizard\n        isOpen\n        onClose={onClose}\n        title={t`External Secret Management System`}\n        steps={steps}\n        onSave={handleSubmit}\n        footer={CustomFooter}\n      />\n      {selectedCredential.value && (\n        <CredentialPluginTestAlert\n          credentialName={selectedCredential.value.name}\n          successResponse={testPluginSuccess}\n          errorResponse={testPluginError}\n        />\n      )}\n    </>\n  );\n}\n\nfunction CredentialPluginPrompt({ onClose, onSubmit, initialValues }) {\n  return (\n    <Formik\n      initialValues={{\n        credential: initialValues?.credential || null,\n        inputs: initialValues?.inputs || {},\n      }}\n      onSubmit={onSubmit}\n    >\n      {({ handleSubmit }) => (\n        <CredentialPluginWizard handleSubmit={handleSubmit} onClose={onClose} />\n      )}\n    </Formik>\n  );\n}\n\nCredentialPluginPrompt.propTypes = {\n  onClose: func.isRequired,\n  onSubmit: func.isRequired,\n  initialValues: shape({}),\n};\n\nCredentialPluginPrompt.defaultProps = {\n  initialValues: {},\n};\n\nexport default CredentialPluginPrompt;\n"]},"metadata":{},"sourceType":"module"}