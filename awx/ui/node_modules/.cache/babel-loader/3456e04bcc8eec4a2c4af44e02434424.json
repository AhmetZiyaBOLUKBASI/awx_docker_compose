{"ast":null,"code":"/* eslint-disable */ // Set a special variable to add `nonce` attributes to all styles/script tags\n// See https://github.com/webpack/webpack/pull/3210\n__webpack_nonce__=window.NONCE_ID;// Send report when a CSP violation occurs\n// See: https://w3c.github.io/webappsec-csp/2/#violation-reports\n// See: https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent\ndocument.addEventListener('securitypolicyviolation',function(e){var violation={'csp-report':{'blocked-uri':e.blockedURI,'document-uri':e.documentURI,'effective-directive':e.effectiveDirective,'original-policy':e.originalPolicy,referrer:e.referrer,'status-code':e.statusCode,'violated-directive':e.violatedDirective}};if(e.sourceFile)violation['csp-report']['source-file']=e.sourceFile;if(e.lineNumber)violation['csp-report']['line-number']=e.lineNumber;if(e.columnNumber)violation['csp-report']['column-number']=e.columnNumber;var xhr=new XMLHttpRequest();xhr.open('POST','/csp-violation/',true);xhr.setRequestHeader('content-type','application/csp-report');xhr.send(JSON.stringify(violation));});","map":{"version":3,"sources":["/awx_devel/awx/ui/src/setupCSP.js"],"names":["__webpack_nonce__","window","NONCE_ID","document","addEventListener","e","violation","blockedURI","documentURI","effectiveDirective","originalPolicy","referrer","statusCode","violatedDirective","sourceFile","lineNumber","columnNumber","xhr","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify"],"mappings":"AAAA,oB,CAEA;AACA;AACAA,iBAAiB,CAAGC,MAAM,CAACC,QAA3B,CAEA;AACA;AACA;AACAC,QAAQ,CAACC,gBAAT,CAA0B,yBAA1B,CAAqD,SAACC,CAAD,CAAO,CAC1D,GAAMC,CAAAA,SAAS,CAAG,CAChB,aAAc,CACZ,cAAeD,CAAC,CAACE,UADL,CAEZ,eAAgBF,CAAC,CAACG,WAFN,CAGZ,sBAAuBH,CAAC,CAACI,kBAHb,CAIZ,kBAAmBJ,CAAC,CAACK,cAJT,CAKZC,QAAQ,CAAEN,CAAC,CAACM,QALA,CAMZ,cAAeN,CAAC,CAACO,UANL,CAOZ,qBAAsBP,CAAC,CAACQ,iBAPZ,CADE,CAAlB,CAWA,GAAIR,CAAC,CAACS,UAAN,CAAkBR,SAAS,CAAC,YAAD,CAAT,CAAwB,aAAxB,EAAyCD,CAAC,CAACS,UAA3C,CAClB,GAAIT,CAAC,CAACU,UAAN,CAAkBT,SAAS,CAAC,YAAD,CAAT,CAAwB,aAAxB,EAAyCD,CAAC,CAACU,UAA3C,CAClB,GAAIV,CAAC,CAACW,YAAN,CAAoBV,SAAS,CAAC,YAAD,CAAT,CAAwB,eAAxB,EAA2CD,CAAC,CAACW,YAA7C,CAEpB,GAAMC,CAAAA,GAAG,CAAG,GAAIC,CAAAA,cAAJ,EAAZ,CACAD,GAAG,CAACE,IAAJ,CAAS,MAAT,CAAiB,iBAAjB,CAAoC,IAApC,EACAF,GAAG,CAACG,gBAAJ,CAAqB,cAArB,CAAqC,wBAArC,EACAH,GAAG,CAACI,IAAJ,CAASC,IAAI,CAACC,SAAL,CAAejB,SAAf,CAAT,EACD,CApBD","sourcesContent":["/* eslint-disable */\n\n// Set a special variable to add `nonce` attributes to all styles/script tags\n// See https://github.com/webpack/webpack/pull/3210\n__webpack_nonce__ = window.NONCE_ID;\n\n// Send report when a CSP violation occurs\n// See: https://w3c.github.io/webappsec-csp/2/#violation-reports\n// See: https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent\ndocument.addEventListener('securitypolicyviolation', (e) => {\n  const violation = {\n    'csp-report': {\n      'blocked-uri': e.blockedURI,\n      'document-uri': e.documentURI,\n      'effective-directive': e.effectiveDirective,\n      'original-policy': e.originalPolicy,\n      referrer: e.referrer,\n      'status-code': e.statusCode,\n      'violated-directive': e.violatedDirective,\n    },\n  };\n  if (e.sourceFile) violation['csp-report']['source-file'] = e.sourceFile;\n  if (e.lineNumber) violation['csp-report']['line-number'] = e.lineNumber;\n  if (e.columnNumber) violation['csp-report']['column-number'] = e.columnNumber;\n\n  const xhr = new XMLHttpRequest();\n  xhr.open('POST', '/csp-violation/', true);\n  xhr.setRequestHeader('content-type', 'application/csp-report');\n  xhr.send(JSON.stringify(violation));\n});\n"]},"metadata":{},"sourceType":"module"}