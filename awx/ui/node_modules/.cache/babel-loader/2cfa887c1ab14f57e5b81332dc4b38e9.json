{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _taggedTemplateLiteral from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import{i18n}from\"@lingui/core\";import React from'react';import styled from'styled-components';import{ExclamationCircleIcon as PFExclamationCircleIcon}from'@patternfly/react-icons';import{Tooltip}from'@patternfly/react-core';import{useFormikContext}from'formik';import yaml from'js-yaml';import mergeExtraVars,{maskPasswords}from'util/prompt/mergeExtraVars';import getSurveyValues from'util/prompt/getSurveyValues';import PromptDetail from'../../PromptDetail';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ExclamationCircleIcon=styled(PFExclamationCircleIcon)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin-left: 10px;\\n  margin-top: -2px;\\n\"])));var ErrorMessageWrapper=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  color: var(--pf-global--danger-color--200);\\n  display: flex;\\n  font-weight: var(--pf-global--FontWeight--bold);\\n  margin-bottom: 10px;\\n\"])));function PreviewStep(_ref){var resource=_ref.resource,launchConfig=_ref.launchConfig,surveyConfig=_ref.surveyConfig,formErrors=_ref.formErrors;var _useFormikContext=useFormikContext(),values=_useFormikContext.values;var surveyValues=getSurveyValues(values);var overrides=_objectSpread({},values);if(launchConfig.ask_variables_on_launch||launchConfig.survey_enabled){try{var initialExtraVars=launchConfig.ask_variables_on_launch&&(overrides.extra_vars||'---');if(surveyConfig!==null&&surveyConfig!==void 0&&surveyConfig.spec){var passwordFields=surveyConfig.spec.filter(function(q){return q.type==='password';}).map(function(q){return q.variable;});var masked=maskPasswords(surveyValues,passwordFields);overrides.extra_vars=yaml.dump(mergeExtraVars(initialExtraVars,masked));}else{overrides.extra_vars=yaml.dump(mergeExtraVars(initialExtraVars,{}));}}catch(e){//\n}}return/*#__PURE__*/_jsxs(_Fragment,{children:[formErrors&&/*#__PURE__*/_jsxs(ErrorMessageWrapper,{children:[/*i18n*/i18n._(\"Some of the previous step(s) have errors\"),/*#__PURE__*/_jsx(Tooltip,{position:\"right\",content:/*i18n*/i18n._(\"See errors on the left\"),trigger:\"click mouseenter focus\",children:/*#__PURE__*/_jsx(ExclamationCircleIcon,{})})]}),/*#__PURE__*/_jsx(PromptDetail,{resource:resource,launchConfig:launchConfig,overrides:overrides})]});}export default PreviewStep;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/LaunchPrompt/steps/PreviewStep.js"],"names":["React","styled","ExclamationCircleIcon","PFExclamationCircleIcon","Tooltip","useFormikContext","yaml","mergeExtraVars","maskPasswords","getSurveyValues","PromptDetail","ErrorMessageWrapper","div","PreviewStep","resource","launchConfig","surveyConfig","formErrors","values","surveyValues","overrides","ask_variables_on_launch","survey_enabled","initialExtraVars","extra_vars","spec","passwordFields","filter","q","type","map","variable","masked","dump","e"],"mappings":"iSAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,qBAAqB,GAAIC,CAAAA,uBAAlC,KAAiE,yBAAjE,CACA,OAASC,OAAT,KAAwB,wBAAxB,CAEA,OAASC,gBAAT,KAAiC,QAAjC,CAEA,MAAOC,CAAAA,IAAP,KAAiB,SAAjB,CACA,MAAOC,CAAAA,cAAP,EAAyBC,aAAzB,KAA8C,4BAA9C,CACA,MAAOC,CAAAA,eAAP,KAA4B,6BAA5B,CACA,MAAOC,CAAAA,YAAP,KAAyB,oBAAzB,C,6IAEA,GAAMR,CAAAA,qBAAqB,CAAGD,MAAM,CAACE,uBAAD,CAAT,8GAA3B,CAKA,GAAMQ,CAAAA,mBAAmB,CAAGV,MAAM,CAACW,GAAV,0OAAzB,CAQA,QAASC,CAAAA,WAAT,MAA2E,IAApDC,CAAAA,QAAoD,MAApDA,QAAoD,CAA1CC,YAA0C,MAA1CA,YAA0C,CAA5BC,YAA4B,MAA5BA,YAA4B,CAAdC,UAAc,MAAdA,UAAc,CACzE,sBAAmBZ,gBAAgB,EAAnC,CAAQa,MAAR,mBAAQA,MAAR,CACA,GAAMC,CAAAA,YAAY,CAAGV,eAAe,CAACS,MAAD,CAApC,CAEA,GAAME,CAAAA,SAAS,kBACVF,MADU,CAAf,CAIA,GAAIH,YAAY,CAACM,uBAAb,EAAwCN,YAAY,CAACO,cAAzD,CAAyE,CACvE,GAAI,CACF,GAAMC,CAAAA,gBAAgB,CACpBR,YAAY,CAACM,uBAAb,GAAyCD,SAAS,CAACI,UAAV,EAAwB,KAAjE,CADF,CAEA,GAAIR,YAAJ,SAAIA,YAAJ,WAAIA,YAAY,CAAES,IAAlB,CAAwB,CACtB,GAAMC,CAAAA,cAAc,CAAGV,YAAY,CAACS,IAAb,CACpBE,MADoB,CACb,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,IAAF,GAAW,UAAlB,EADa,EAEpBC,GAFoB,CAEhB,SAACF,CAAD,QAAOA,CAAAA,CAAC,CAACG,QAAT,EAFgB,CAAvB,CAGA,GAAMC,CAAAA,MAAM,CAAGxB,aAAa,CAACW,YAAD,CAAeO,cAAf,CAA5B,CACAN,SAAS,CAACI,UAAV,CAAuBlB,IAAI,CAAC2B,IAAL,CACrB1B,cAAc,CAACgB,gBAAD,CAAmBS,MAAnB,CADO,CAAvB,CAGD,CARD,IAQO,CACLZ,SAAS,CAACI,UAAV,CAAuBlB,IAAI,CAAC2B,IAAL,CAAU1B,cAAc,CAACgB,gBAAD,CAAmB,EAAnB,CAAxB,CAAvB,CACD,CACF,CAAC,MAAOW,CAAP,CAAU,CACV;AACD,CACF,CAED,mBACE,2BACGjB,UAAU,eACT,MAAC,mBAAD,oBACG,kDADH,cAEE,KAAC,OAAD,EACE,QAAQ,CAAC,OADX,CAEE,OAAO,SAAE,gCAFX,CAGE,OAAO,CAAC,wBAHV,uBAKE,KAAC,qBAAD,IALF,EAFF,GAFJ,cAaE,KAAC,YAAD,EACE,QAAQ,CAAEH,QADZ,CAEE,YAAY,CAAEC,YAFhB,CAGE,SAAS,CAAEK,SAHb,EAbF,GADF,CAqBD,CAED,cAAeP,CAAAA,WAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { ExclamationCircleIcon as PFExclamationCircleIcon } from '@patternfly/react-icons';\nimport { Tooltip } from '@patternfly/react-core';\nimport { t } from '@lingui/macro';\nimport { useFormikContext } from 'formik';\n\nimport yaml from 'js-yaml';\nimport mergeExtraVars, { maskPasswords } from 'util/prompt/mergeExtraVars';\nimport getSurveyValues from 'util/prompt/getSurveyValues';\nimport PromptDetail from '../../PromptDetail';\n\nconst ExclamationCircleIcon = styled(PFExclamationCircleIcon)`\n  margin-left: 10px;\n  margin-top: -2px;\n`;\n\nconst ErrorMessageWrapper = styled.div`\n  align-items: center;\n  color: var(--pf-global--danger-color--200);\n  display: flex;\n  font-weight: var(--pf-global--FontWeight--bold);\n  margin-bottom: 10px;\n`;\n\nfunction PreviewStep({ resource, launchConfig, surveyConfig, formErrors }) {\n  const { values } = useFormikContext();\n  const surveyValues = getSurveyValues(values);\n\n  const overrides = {\n    ...values,\n  };\n\n  if (launchConfig.ask_variables_on_launch || launchConfig.survey_enabled) {\n    try {\n      const initialExtraVars =\n        launchConfig.ask_variables_on_launch && (overrides.extra_vars || '---');\n      if (surveyConfig?.spec) {\n        const passwordFields = surveyConfig.spec\n          .filter((q) => q.type === 'password')\n          .map((q) => q.variable);\n        const masked = maskPasswords(surveyValues, passwordFields);\n        overrides.extra_vars = yaml.dump(\n          mergeExtraVars(initialExtraVars, masked)\n        );\n      } else {\n        overrides.extra_vars = yaml.dump(mergeExtraVars(initialExtraVars, {}));\n      }\n    } catch (e) {\n      //\n    }\n  }\n\n  return (\n    <>\n      {formErrors && (\n        <ErrorMessageWrapper>\n          {t`Some of the previous step(s) have errors`}\n          <Tooltip\n            position=\"right\"\n            content={t`See errors on the left`}\n            trigger=\"click mouseenter focus\"\n          >\n            <ExclamationCircleIcon />\n          </Tooltip>\n        </ErrorMessageWrapper>\n      )}\n      <PromptDetail\n        resource={resource}\n        launchConfig={launchConfig}\n        overrides={overrides}\n      />\n    </>\n  );\n}\n\nexport default PreviewStep;\n"]},"metadata":{},"sourceType":"module"}