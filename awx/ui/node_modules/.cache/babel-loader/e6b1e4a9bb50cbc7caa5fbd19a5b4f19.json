{"ast":null,"code":"import _taggedTemplateLiteral from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import React from'react';import{Chip,Split as PFSplit,SplitItem}from'@patternfly/react-core';import styled from'styled-components';import ChipGroup from'../ChipGroup';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Split=styled(PFSplit)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin: 20px 0 5px 0 !important;\\n  align-items: baseline;\\n\"])));var SplitLabelItem=styled(SplitItem)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  font-weight: bold;\\n  margin-right: 32px;\\n  word-break: initial;\\n\"])));function SelectedList(props){var label=props.label,selected=props.selected,onRemove=props.onRemove,displayKey=props.displayKey,isReadOnly=props.isReadOnly,renderItemChip=props.renderItemChip;var renderChip=renderItemChip||function(_ref){var item=_ref.item,removeItem=_ref.removeItem;return/*#__PURE__*/_jsx(Chip,{onClick:removeItem,isReadOnly:isReadOnly,children:item[displayKey]},item.id);};return/*#__PURE__*/_jsxs(Split,{children:[/*#__PURE__*/_jsx(SplitLabelItem,{children:label}),/*#__PURE__*/_jsx(SplitItem,{children:/*#__PURE__*/_jsx(ChipGroup,{numChips:5,totalChips:selected.length,ouiaId:\"selected-list-chips\",children:selected.map(function(item){return renderChip({item:item,removeItem:function removeItem(){return onRemove(item);},canDelete:!isReadOnly});})})})]});}SelectedList.defaultProps={displayKey:'name',label:'Selected',onRemove:function onRemove(){return null;},isReadOnly:false,renderItemChip:null};export default SelectedList;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/SelectedList/SelectedList.js"],"names":["React","Chip","Split","PFSplit","SplitItem","styled","ChipGroup","SplitLabelItem","SelectedList","props","label","selected","onRemove","displayKey","isReadOnly","renderItemChip","renderChip","item","removeItem","id","length","map","canDelete","defaultProps"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,IAAT,CAAeC,KAAK,GAAIC,CAAAA,OAAxB,CAAiCC,SAAjC,KAAkD,wBAAlD,CAEA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,C,wFAEA,GAAMJ,CAAAA,KAAK,CAAGG,MAAM,CAACF,OAAD,CAAT,iIAAX,CAKA,GAAMI,CAAAA,cAAc,CAAGF,MAAM,CAACD,SAAD,CAAT,0IAApB,CAMA,QAASI,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAC3B,GAAQC,CAAAA,KAAR,CACED,KADF,CAAQC,KAAR,CAAeC,QAAf,CACEF,KADF,CAAeE,QAAf,CAAyBC,QAAzB,CACEH,KADF,CAAyBG,QAAzB,CAAmCC,UAAnC,CACEJ,KADF,CAAmCI,UAAnC,CAA+CC,UAA/C,CACEL,KADF,CAA+CK,UAA/C,CAA2DC,cAA3D,CACEN,KADF,CAA2DM,cAA3D,CAGA,GAAMC,CAAAA,UAAU,CACdD,cAAc,EACb,kBAAGE,CAAAA,IAAH,MAAGA,IAAH,CAASC,UAAT,MAASA,UAAT,oBACC,KAAC,IAAD,EAAoB,OAAO,CAAEA,UAA7B,CAAyC,UAAU,CAAEJ,UAArD,UACGG,IAAI,CAACJ,UAAD,CADP,EAAWI,IAAI,CAACE,EAAhB,CADD,EAFH,CAQA,mBACE,MAAC,KAAD,yBACE,KAAC,cAAD,WAAiBT,KAAjB,EADF,cAEE,KAAC,SAAD,wBACE,KAAC,SAAD,EACE,QAAQ,CAAE,CADZ,CAEE,UAAU,CAAEC,QAAQ,CAACS,MAFvB,CAGE,MAAM,CAAC,qBAHT,UAKGT,QAAQ,CAACU,GAAT,CAAa,SAACJ,IAAD,QACZD,CAAAA,UAAU,CAAC,CACTC,IAAI,CAAJA,IADS,CAETC,UAAU,CAAE,4BAAMN,CAAAA,QAAQ,CAACK,IAAD,CAAd,EAFH,CAGTK,SAAS,CAAE,CAACR,UAHH,CAAD,CADE,EAAb,CALH,EADF,EAFF,GADF,CAoBD,CAWDN,YAAY,CAACe,YAAb,CAA4B,CAC1BV,UAAU,CAAE,MADc,CAE1BH,KAAK,CAAE,UAFmB,CAG1BE,QAAQ,CAAE,0BAAM,KAAN,EAHgB,CAI1BE,UAAU,CAAE,KAJc,CAK1BC,cAAc,CAAE,IALU,CAA5B,CAQA,cAAeP,CAAAA,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip, Split as PFSplit, SplitItem } from '@patternfly/react-core';\n\nimport styled from 'styled-components';\nimport ChipGroup from '../ChipGroup';\n\nconst Split = styled(PFSplit)`\n  margin: 20px 0 5px 0 !important;\n  align-items: baseline;\n`;\n\nconst SplitLabelItem = styled(SplitItem)`\n  font-weight: bold;\n  margin-right: 32px;\n  word-break: initial;\n`;\n\nfunction SelectedList(props) {\n  const { label, selected, onRemove, displayKey, isReadOnly, renderItemChip } =\n    props;\n\n  const renderChip =\n    renderItemChip ||\n    (({ item, removeItem }) => (\n      <Chip key={item.id} onClick={removeItem} isReadOnly={isReadOnly}>\n        {item[displayKey]}\n      </Chip>\n    ));\n\n  return (\n    <Split>\n      <SplitLabelItem>{label}</SplitLabelItem>\n      <SplitItem>\n        <ChipGroup\n          numChips={5}\n          totalChips={selected.length}\n          ouiaId=\"selected-list-chips\"\n        >\n          {selected.map((item) =>\n            renderChip({\n              item,\n              removeItem: () => onRemove(item),\n              canDelete: !isReadOnly,\n            })\n          )}\n        </ChipGroup>\n      </SplitItem>\n    </Split>\n  );\n}\n\nSelectedList.propTypes = {\n  displayKey: PropTypes.string,\n  label: PropTypes.string,\n  onRemove: PropTypes.func,\n  selected: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isReadOnly: PropTypes.bool,\n  renderItemChip: PropTypes.func,\n};\n\nSelectedList.defaultProps = {\n  displayKey: 'name',\n  label: 'Selected',\n  onRemove: () => null,\n  isReadOnly: false,\n  renderItemChip: null,\n};\n\nexport default SelectedList;\n"]},"metadata":{},"sourceType":"module"}