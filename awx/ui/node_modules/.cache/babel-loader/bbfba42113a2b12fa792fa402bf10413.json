{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Form/form';\nimport { css } from '@patternfly/react-styles';\nexport var Form = function Form(_a) {\n  var _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      _a$isHorizontal = _a.isHorizontal,\n      isHorizontal = _a$isHorizontal === void 0 ? false : _a$isHorizontal,\n      _a$isWidthLimited = _a.isWidthLimited,\n      isWidthLimited = _a$isWidthLimited === void 0 ? false : _a$isWidthLimited,\n      _a$maxWidth = _a.maxWidth,\n      maxWidth = _a$maxWidth === void 0 ? '' : _a$maxWidth,\n      props = __rest(_a, [\"children\", \"className\", \"isHorizontal\", \"isWidthLimited\", \"maxWidth\"]);\n\n  return React.createElement(\"form\", Object.assign({\n    noValidate: true\n  }, maxWidth && {\n    style: Object.assign({\n      '--pf-c-form--m-limit-width--MaxWidth': maxWidth\n    }, props.style)\n  }, props, {\n    className: css(styles.form, isHorizontal && styles.modifiers.horizontal, (isWidthLimited || maxWidth) && styles.modifiers.limitWidth, className)\n  }), children);\n};\nForm.displayName = 'Form';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Form/Form.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,mDAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AAeA,OAAO,IAAM,IAAI,GAAuC,SAA3C,IAA2C,CAAC,EAAD,EAOxC;AAPyC,oBAK1C,EAL0C,CACvD,QADuD;AAAA,MACvD,QADuD,4BAC5C,IAD4C;AAAA,qBAK1C,EAL0C,CAEvD,SAFuD;AAAA,MAEvD,SAFuD,6BAE3C,EAF2C;AAAA,wBAK1C,EAL0C,CAGvD,YAHuD;AAAA,MAGvD,YAHuD,gCAGxC,KAHwC;AAAA,0BAK1C,EAL0C,CAIvD,cAJuD;AAAA,MAIvD,cAJuD,kCAItC,KAJsC;AAAA,oBAK1C,EAL0C,CAKvD,QALuD;AAAA,MAKvD,QALuD,4BAK5C,EAL4C;AAAA,MAMpD,KANoD,GAM/C,MAAA,CAAA,EAAA,EAN+C,CAAA,UAAA,EAAA,WAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,UAAA,CAM/C,CAN+C;;AAOxC,SACf,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACE,IAAA,UAAU,EAAA;AADZ,GAAA,EAEO,QAAQ,IAAI;AACf,IAAA,KAAK,EAAE,MAAA,CAAA,MAAA,CAAA;AACL,8CAAwC;AADnC,KAAA,EAEF,KAAK,CAAC,KAFJ;AADQ,GAFnB,EAQM,KARN,EAQW;AACT,IAAA,SAAS,EAAE,GAAG,CACZ,MAAM,CAAC,IADK,EAEZ,YAAY,IAAI,MAAM,CAAC,SAAP,CAAiB,UAFrB,EAGZ,CAAC,cAAc,IAAI,QAAnB,KAAgC,MAAM,CAAC,SAAP,CAAiB,UAHrC,EAIZ,SAJY;AADL,GARX,CAAA,EAgBG,QAhBH,CADe;AAmBhB,CA1BM;AA2BP,IAAI,CAAC,WAAL,GAAmB,MAAnB","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Form/form';\nimport { css } from '@patternfly/react-styles';\n\nexport interface FormProps extends React.HTMLProps<HTMLFormElement> {\n  /** Anything that can be rendered as Form content. */\n  children?: React.ReactNode;\n  /** Additional classes added to the Form. */\n  className?: string;\n  /** Sets the Form to horizontal. */\n  isHorizontal?: boolean;\n  /** Limits the max-width of the form. */\n  isWidthLimited?: boolean;\n  /** Sets a custom max-width for the form. */\n  maxWidth?: string;\n}\n\nexport const Form: React.FunctionComponent<FormProps> = ({\n  children = null,\n  className = '',\n  isHorizontal = false,\n  isWidthLimited = false,\n  maxWidth = '',\n  ...props\n}: FormProps) => (\n  <form\n    noValidate\n    {...(maxWidth && {\n      style: {\n        '--pf-c-form--m-limit-width--MaxWidth': maxWidth,\n        ...props.style\n      } as React.CSSProperties\n    })}\n    {...props}\n    className={css(\n      styles.form,\n      isHorizontal && styles.modifiers.horizontal,\n      (isWidthLimited || maxWidth) && styles.modifiers.limitWidth,\n      className\n    )}\n  >\n    {children}\n  </form>\n);\nForm.displayName = 'Form';\n"]},"metadata":{},"sourceType":"module"}