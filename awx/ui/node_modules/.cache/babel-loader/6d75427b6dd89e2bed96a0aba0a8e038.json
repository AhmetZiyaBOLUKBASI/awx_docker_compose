{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/layouts/Stack/stack';\nimport { css } from '@patternfly/react-styles';\nexport var StackItem = function StackItem(_a) {\n  var _a$isFilled = _a.isFilled,\n      isFilled = _a$isFilled === void 0 ? false : _a$isFilled,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      props = __rest(_a, [\"isFilled\", \"className\", \"children\"]);\n\n  return React.createElement(\"div\", Object.assign({}, props, {\n    className: css(styles.stackItem, isFilled && styles.modifiers.fill, className)\n  }), children);\n};\nStackItem.displayName = 'StackItem';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/layouts/Stack/StackItem.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,kDAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AAWA,OAAO,IAAM,SAAS,GAA4C,SAArD,SAAqD,CAAC,EAAD,EAK7C;AAL8C,oBAGlD,EAHkD,CACjE,QADiE;AAAA,MACjE,QADiE,4BACtD,KADsD;AAAA,qBAGlD,EAHkD,CAEjE,SAFiE;AAAA,MAEjE,SAFiE,6BAErD,EAFqD;AAAA,oBAGlD,EAHkD,CAGjE,QAHiE;AAAA,MAGjE,QAHiE,4BAGtD,IAHsD;AAAA,MAI9D,KAJ8D,GAIzD,MAAA,CAAA,EAAA,EAJyD,CAAA,UAAA,EAAA,WAAA,EAAA,UAAA,CAIzD,CAJyD;;AAK7C,SACpB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAS,KAAT,EAAc;AAAE,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,SAAR,EAAmB,QAAQ,IAAI,MAAM,CAAC,SAAP,CAAiB,IAAhD,EAAsD,SAAtD;AAAhB,GAAd,CAAA,EACG,QADH,CADoB;AAIrB,CATM;AAUP,SAAS,CAAC,WAAV,GAAwB,WAAxB","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/layouts/Stack/stack';\nimport { css } from '@patternfly/react-styles';\n\nexport interface StackItemProps extends React.HTMLProps<HTMLDivElement> {\n  /** Flag indicating if this Stack Layout item should fill the available vertical space. */\n  isFilled?: boolean;\n  /** additional classes added to the Stack Layout Item */\n  children?: React.ReactNode;\n  /** content rendered inside the Stack Layout Item */\n  className?: string;\n}\n\nexport const StackItem: React.FunctionComponent<StackItemProps> = ({\n  isFilled = false,\n  className = '',\n  children = null,\n  ...props\n}: StackItemProps) => (\n  <div {...props} className={css(styles.stackItem, isFilled && styles.modifiers.fill, className)}>\n    {children}\n  </div>\n);\nStackItem.displayName = 'StackItem';\n"]},"metadata":{},"sourceType":"module"}