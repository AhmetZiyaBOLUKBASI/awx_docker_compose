{"ast":null,"code":"import _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { canUseDOM } from '../../helpers';\nimport { AlertGroupInline } from './AlertGroupInline';\nexport var AlertGroup = /*#__PURE__*/function (_React$Component) {\n  _inherits(AlertGroup, _React$Component);\n\n  var _super = _createSuper(AlertGroup);\n\n  function AlertGroup() {\n    var _this;\n\n    _classCallCheck(this, AlertGroup);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      container: undefined\n    };\n    return _this;\n  }\n\n  _createClass(AlertGroup, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var container = document.createElement('div');\n      var target = this.getTargetElement();\n      this.setState({\n        container: container\n      });\n      target.appendChild(container);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var target = this.getTargetElement();\n\n      if (this.state.container) {\n        target.removeChild(this.state.container);\n      }\n    }\n  }, {\n    key: \"getTargetElement\",\n    value: function getTargetElement() {\n      var appendTo = this.props.appendTo;\n\n      if (typeof appendTo === 'function') {\n        return appendTo();\n      }\n\n      return appendTo || document.body;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          className = _a.className,\n          children = _a.children,\n          isToast = _a.isToast,\n          isLiveRegion = _a.isLiveRegion,\n          onOverflowClick = _a.onOverflowClick,\n          overflowMessage = _a.overflowMessage,\n          props = __rest(_a, [\"className\", \"children\", \"isToast\", \"isLiveRegion\", \"onOverflowClick\", \"overflowMessage\"]);\n\n      var alertGroup = React.createElement(AlertGroupInline, Object.assign({\n        onOverflowClick: onOverflowClick,\n        className: className,\n        isToast: isToast,\n        isLiveRegion: isLiveRegion,\n        overflowMessage: overflowMessage\n      }, props), children);\n\n      if (!this.props.isToast) {\n        return alertGroup;\n      }\n\n      var container = this.state.container;\n\n      if (!canUseDOM || !container) {\n        return null;\n      }\n\n      return ReactDOM.createPortal(alertGroup, container);\n    }\n  }]);\n\n  return AlertGroup;\n}(React.Component);\nAlertGroup.displayName = 'AlertGroup';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/AlertGroup/AlertGroup.tsx"],"names":[],"mappings":";;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAK,QAAZ,MAA0B,WAA1B;AACA,SAAS,SAAT,QAA0B,eAA1B;AACA,SAAS,gBAAT,QAAiC,oBAAjC;AAuBA,WAAa,UAAb;AAAA;;AAAA;;AAAA,wBAAA;AAAA;;AAAA;;;AAEE,UAAA,KAAA,GAAQ;AACN,MAAA,SAAS,EAAE;AADL,KAAR;AAFF;AAsDC;;AAtDD;AAAA;AAAA,WAME,6BAAiB;AACf,UAAM,SAAS,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAlB;AACA,UAAM,MAAM,GAAgB,KAAK,gBAAL,EAA5B;AACA,WAAK,QAAL,CAAc;AAAE,QAAA,SAAS,EAAT;AAAF,OAAd;AACA,MAAA,MAAM,CAAC,WAAP,CAAmB,SAAnB;AACD;AAXH;AAAA;AAAA,WAaE,gCAAoB;AAClB,UAAM,MAAM,GAAgB,KAAK,gBAAL,EAA5B;;AACA,UAAI,KAAK,KAAL,CAAW,SAAf,EAA0B;AACxB,QAAA,MAAM,CAAC,WAAP,CAAmB,KAAK,KAAL,CAAW,SAA9B;AACD;AACF;AAlBH;AAAA;AAAA,WAoBE,4BAAgB;AACd,UAAM,QAAQ,GAAG,KAAK,KAAL,CAAW,QAA5B;;AACA,UAAI,OAAO,QAAP,KAAoB,UAAxB,EAAoC;AAClC,eAAO,QAAQ,EAAf;AACD;;AACD,aAAO,QAAQ,IAAI,QAAQ,CAAC,IAA5B;AACD;AA1BH;AAAA;AAAA,WA4BE,kBAAM;AACE,UAAA,EAAA,GAA6F,KAA7F,KAAA;AAAA,UAAE,SAAF,GAA8E,EAA9E,CAAE,SAAF;AAAA,UAAa,QAAb,GAA8E,EAA9E,CAAa,QAAb;AAAA,UAAuB,OAAvB,GAA8E,EAA9E,CAAuB,OAAvB;AAAA,UAAgC,YAAhC,GAA8E,EAA9E,CAAgC,YAAhC;AAAA,UAA8C,eAA9C,GAA8E,EAA9E,CAA8C,eAA9C;AAAA,UAA+D,eAA/D,GAA8E,EAA9E,CAA+D,eAA/D;AAAA,UAAmF,KAAnF,GAAwF,MAAA,CAAA,EAAA,EAAxF,CAAA,WAAA,EAAA,UAAA,EAAA,SAAA,EAAA,cAAA,EAAA,iBAAA,EAAA,iBAAA,CAAwF,CAAxF;;AACN,UAAM,UAAU,GACd,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAiB,MAAA,CAAA,MAAA,CAAA;AACf,QAAA,eAAe,EAAE,eADF;AAEf,QAAA,SAAS,EAAE,SAFI;AAGf,QAAA,OAAO,EAAE,OAHM;AAIf,QAAA,YAAY,EAAE,YAJC;AAKf,QAAA,eAAe,EAAE;AALF,OAAA,EAMX,KANW,CAAjB,EAQG,QARH,CADF;;AAYA,UAAI,CAAC,KAAK,KAAL,CAAW,OAAhB,EAAyB;AACvB,eAAO,UAAP;AACD;;AAED,UAAM,SAAS,GAAG,KAAK,KAAL,CAAW,SAA7B;;AAEA,UAAI,CAAC,SAAD,IAAc,CAAC,SAAnB,EAA8B;AAC5B,eAAO,IAAP;AACD;;AAED,aAAO,QAAQ,CAAC,YAAT,CAAsB,UAAtB,EAAkC,SAAlC,CAAP;AACD;AArDH;;AAAA;AAAA,EAAgC,KAAK,CAAC,SAAtC;AACS,UAAA,CAAA,WAAA,GAAc,YAAd","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { canUseDOM } from '../../helpers';\nimport { AlertGroupInline } from './AlertGroupInline';\n\nexport interface AlertGroupProps extends Omit<React.HTMLProps<HTMLUListElement>, 'className'> {\n  /** Additional classes added to the AlertGroup */\n  className?: string;\n  /** Alerts to be rendered in the AlertGroup */\n  children?: React.ReactNode;\n  /** Toast notifications are positioned at the top right corner of the viewport */\n  isToast?: boolean;\n  /** Turns the container into a live region so that changes to content within the AlertGroup, such as appending an Alert, are reliably announced to assistive technology. */\n  isLiveRegion?: boolean;\n  /** Determine where the alert is appended to */\n  appendTo?: HTMLElement | (() => HTMLElement);\n  /** Function to call if user clicks on overflow message */\n  onOverflowClick?: () => void;\n  /** Custom text to show for the overflow message */\n  overflowMessage?: string;\n}\n\ninterface AlertGroupState {\n  container: HTMLElement;\n}\n\nexport class AlertGroup extends React.Component<AlertGroupProps, AlertGroupState> {\n  static displayName = 'AlertGroup';\n  state = {\n    container: undefined\n  } as AlertGroupState;\n\n  componentDidMount() {\n    const container = document.createElement('div');\n    const target: HTMLElement = this.getTargetElement();\n    this.setState({ container });\n    target.appendChild(container);\n  }\n\n  componentWillUnmount() {\n    const target: HTMLElement = this.getTargetElement();\n    if (this.state.container) {\n      target.removeChild(this.state.container);\n    }\n  }\n\n  getTargetElement() {\n    const appendTo = this.props.appendTo;\n    if (typeof appendTo === 'function') {\n      return appendTo();\n    }\n    return appendTo || document.body;\n  }\n\n  render() {\n    const { className, children, isToast, isLiveRegion, onOverflowClick, overflowMessage, ...props } = this.props;\n    const alertGroup = (\n      <AlertGroupInline\n        onOverflowClick={onOverflowClick}\n        className={className}\n        isToast={isToast}\n        isLiveRegion={isLiveRegion}\n        overflowMessage={overflowMessage}\n        {...props}\n      >\n        {children}\n      </AlertGroupInline>\n    );\n    if (!this.props.isToast) {\n      return alertGroup;\n    }\n\n    const container = this.state.container;\n\n    if (!canUseDOM || !container) {\n      return null;\n    }\n\n    return ReactDOM.createPortal(alertGroup, container);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}