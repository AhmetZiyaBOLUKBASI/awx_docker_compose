{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/DescriptionList/description-list';\nimport { css } from '@patternfly/react-styles';\nexport var DescriptionListTerm = function DescriptionListTerm(_a) {\n  var children = _a.children,\n      className = _a.className,\n      icon = _a.icon,\n      props = __rest(_a, [\"children\", \"className\", \"icon\"]);\n\n  return React.createElement(\"dt\", Object.assign({\n    className: css(styles.descriptionListTerm, className)\n  }, props), icon ? React.createElement(\"span\", {\n    className: css(styles.descriptionListTermIcon)\n  }, icon) : null, React.createElement(\"span\", {\n    className: css(styles.descriptionListText)\n  }, children));\n};\nDescriptionListTerm.displayName = 'DescriptionListTerm';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/DescriptionList/DescriptionListTerm.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,0EAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AAWA,OAAO,IAAM,mBAAmB,GAAsD,SAAzE,mBAAyE,CAAC,EAAD,EAKvD;AALwD,MACrF,QADqF,GAGjF,EAHiF,CACrF,QADqF;AAAA,MAErF,SAFqF,GAGjF,EAHiF,CAErF,SAFqF;AAAA,MAGrF,IAHqF,GAGjF,EAHiF,CAGrF,IAHqF;AAAA,MAIlF,KAJkF,GAI7E,MAAA,CAAA,EAAA,EAJ6E,CAAA,UAAA,EAAA,WAAA,EAAA,MAAA,CAI7E,CAJ6E;;AAKvD,SAC9B,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AAAI,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,mBAAR,EAA6B,SAA7B;AAAlB,GAAA,EAA+D,KAA/D,CAAA,EACG,IAAI,GAAG,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,uBAAR;AAApB,GAAA,EAAuD,IAAvD,CAAH,GAAyE,IADhF,EAEE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,mBAAR;AAApB,GAAA,EAAmD,QAAnD,CAFF,CAD8B;AAK/B,CAVM;AAWP,mBAAmB,CAAC,WAApB,GAAkC,qBAAlC","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/DescriptionList/description-list';\nimport { css } from '@patternfly/react-styles';\n\nexport interface DescriptionListTermProps extends React.HTMLProps<HTMLElement> {\n  /** Anything that can be rendered inside of list term */\n  children: React.ReactNode;\n  /** Icon that is rendered inside of list term to the left side of the children */\n  icon?: React.ReactNode;\n  /** Additional classes added to the DescriptionListTerm */\n  className?: string;\n}\n\nexport const DescriptionListTerm: React.FunctionComponent<DescriptionListTermProps> = ({\n  children,\n  className,\n  icon,\n  ...props\n}: DescriptionListTermProps) => (\n  <dt className={css(styles.descriptionListTerm, className)} {...props}>\n    {icon ? <span className={css(styles.descriptionListTermIcon)}>{icon}</span> : null}\n    <span className={css(styles.descriptionListText)}>{children}</span>\n  </dt>\n);\nDescriptionListTerm.displayName = 'DescriptionListTerm';\n"]},"metadata":{},"sourceType":"module"}