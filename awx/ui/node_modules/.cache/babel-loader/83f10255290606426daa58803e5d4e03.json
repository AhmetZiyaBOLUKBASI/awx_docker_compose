{"ast":null,"code":"import _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Backdrop/backdrop';\nimport { canUseDOM } from '../../helpers';\nimport { KEY_CODES } from '../../helpers/constants';\nimport { AboutModalContainer } from './AboutModalContainer';\nexport var AboutModal = /*#__PURE__*/function (_React$Component) {\n  _inherits(AboutModal, _React$Component);\n\n  var _super = _createSuper(AboutModal);\n\n  function AboutModal(props) {\n    var _this;\n\n    _classCallCheck(this, AboutModal);\n\n    _this = _super.call(this, props);\n    _this.id = AboutModal.currentId++;\n    _this.ariaLabelledBy = \"pf-about-modal-title-\".concat(_this.id);\n    _this.ariaDescribedBy = \"pf-about-modal-content-\".concat(_this.id);\n\n    _this.handleEscKeyClick = function (event) {\n      if (event.keyCode === KEY_CODES.ESCAPE_KEY && _this.props.isOpen) {\n        _this.props.onClose();\n      }\n    };\n\n    _this.toggleSiblingsFromScreenReaders = function (hide) {\n      var appendTo = _this.props.appendTo;\n\n      var target = _this.getElement(appendTo);\n\n      var bodyChildren = target.children;\n\n      for (var _i = 0, _Array$from = Array.from(bodyChildren); _i < _Array$from.length; _i++) {\n        var child = _Array$from[_i];\n\n        if (child !== _this.state.container) {\n          hide ? child.setAttribute('aria-hidden', '' + hide) : child.removeAttribute('aria-hidden');\n        }\n      }\n    };\n\n    _this.getElement = function (appendTo) {\n      if (typeof appendTo === 'function') {\n        return appendTo();\n      }\n\n      return appendTo || document.body;\n    };\n\n    _this.state = {\n      container: undefined\n    };\n\n    if (props.brandImageSrc && !props.brandImageAlt) {\n      // eslint-disable-next-line no-console\n      console.error('AboutModal:', 'brandImageAlt is required when a brandImageSrc is specified');\n    }\n\n    return _this;\n  }\n\n  _createClass(AboutModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var container = document.createElement('div');\n      var target = this.getElement(this.props.appendTo);\n      this.setState({\n        container: container\n      });\n      target.appendChild(container);\n      target.addEventListener('keydown', this.handleEscKeyClick, false);\n\n      if (this.props.isOpen) {\n        target.classList.add(css(styles.backdropOpen));\n      } else {\n        target.classList.remove(css(styles.backdropOpen));\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var target = this.getElement(this.props.appendTo);\n\n      if (this.props.isOpen) {\n        target.classList.add(css(styles.backdropOpen));\n        this.toggleSiblingsFromScreenReaders(true);\n      } else {\n        target.classList.remove(css(styles.backdropOpen));\n        this.toggleSiblingsFromScreenReaders(false);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var target = this.getElement(this.props.appendTo);\n\n      if (this.state.container) {\n        target.removeChild(this.state.container);\n      }\n\n      target.removeEventListener('keydown', this.handleEscKeyClick, false);\n      target.classList.remove(css(styles.backdropOpen));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      var _a = this.props,\n          appendTo = _a.appendTo,\n          props = __rest(_a, [\"appendTo\"]);\n\n      var container = this.state.container;\n\n      if (!canUseDOM || !container) {\n        return null;\n      }\n\n      return ReactDOM.createPortal(React.createElement(AboutModalContainer, Object.assign({\n        aboutModalBoxHeaderId: this.ariaLabelledBy,\n        aboutModalBoxContentId: this.ariaDescribedBy\n      }, props)), container);\n    }\n  }]);\n\n  return AboutModal;\n}(React.Component);\nAboutModal.displayName = 'AboutModal';\nAboutModal.currentId = 0;\nAboutModal.defaultProps = {\n  className: '',\n  isOpen: false,\n  onClose: function onClose() {\n    return undefined;\n  },\n  productName: '',\n  trademark: '',\n  backgroundImageSrc: '',\n  noAboutModalBoxContentContainer: false,\n  appendTo: null\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/AboutModal/AboutModal.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Backdrop/backdrop';\nimport { canUseDOM } from '../../helpers';\nimport { KEY_CODES } from '../../helpers/constants';\nimport { AboutModalContainer } from './AboutModalContainer';\nimport { PickOptional } from '../../helpers/typeUtils';\n\nexport interface AboutModalProps {\n  /** Content rendered inside the about modal */\n  children: React.ReactNode;\n  /** Additional classes added to the about modal */\n  className?: string;\n  /** Flag to show the about modal  */\n  isOpen?: boolean;\n  /** A callback for when the close button is clicked  */\n  onClose?: () => void;\n  /** Product name  */\n  productName?: string;\n  /** Trademark information  */\n  trademark?: string;\n  /** The URL of the image for the brand  */\n  brandImageSrc: string;\n  /** The alternate text of the brand image  */\n  brandImageAlt: string;\n  /** The URL of the image for the background  */\n  backgroundImageSrc?: string;\n  /** Prevents the about modal from rendering content inside a container; allows for more flexible layouts  */\n  noAboutModalBoxContentContainer?: boolean;\n  /** The parent container to append the modal to. Defaults to document.body */\n  appendTo?: HTMLElement | (() => HTMLElement);\n  /** Set aria label to the close button */\n  closeButtonAriaLabel?: string;\n  /** Flag to disable focus trap */\n  disableFocusTrap?: boolean;\n}\n\ninterface ModalState {\n  container: HTMLElement;\n}\n\nexport class AboutModal extends React.Component<AboutModalProps, ModalState> {\n  static displayName = 'AboutModal';\n  private static currentId = 0;\n  private id = AboutModal.currentId++;\n  ariaLabelledBy = `pf-about-modal-title-${this.id}`;\n  ariaDescribedBy = `pf-about-modal-content-${this.id}`;\n\n  static defaultProps: PickOptional<AboutModalProps> = {\n    className: '',\n    isOpen: false,\n    onClose: (): any => undefined,\n    productName: '',\n    trademark: '',\n    backgroundImageSrc: '',\n    noAboutModalBoxContentContainer: false,\n    appendTo: null as HTMLElement\n  };\n\n  constructor(props: AboutModalProps) {\n    super(props);\n\n    this.state = {\n      container: undefined\n    };\n    if (props.brandImageSrc && !props.brandImageAlt) {\n      // eslint-disable-next-line no-console\n      console.error('AboutModal:', 'brandImageAlt is required when a brandImageSrc is specified');\n    }\n  }\n\n  handleEscKeyClick = (event: KeyboardEvent) => {\n    if (event.keyCode === KEY_CODES.ESCAPE_KEY && this.props.isOpen) {\n      this.props.onClose();\n    }\n  };\n\n  toggleSiblingsFromScreenReaders = (hide: boolean) => {\n    const { appendTo } = this.props;\n    const target: HTMLElement = this.getElement(appendTo);\n    const bodyChildren = target.children;\n    for (const child of Array.from(bodyChildren)) {\n      if (child !== this.state.container) {\n        hide ? child.setAttribute('aria-hidden', '' + hide) : child.removeAttribute('aria-hidden');\n      }\n    }\n  };\n\n  getElement = (appendTo: HTMLElement | (() => HTMLElement)) => {\n    if (typeof appendTo === 'function') {\n      return appendTo();\n    }\n    return appendTo || document.body;\n  };\n\n  componentDidMount() {\n    const container = document.createElement('div');\n    const target: HTMLElement = this.getElement(this.props.appendTo);\n    this.setState({ container });\n    target.appendChild(container);\n    target.addEventListener('keydown', this.handleEscKeyClick, false);\n\n    if (this.props.isOpen) {\n      target.classList.add(css(styles.backdropOpen));\n    } else {\n      target.classList.remove(css(styles.backdropOpen));\n    }\n  }\n\n  componentDidUpdate() {\n    const target: HTMLElement = this.getElement(this.props.appendTo);\n    if (this.props.isOpen) {\n      target.classList.add(css(styles.backdropOpen));\n      this.toggleSiblingsFromScreenReaders(true);\n    } else {\n      target.classList.remove(css(styles.backdropOpen));\n      this.toggleSiblingsFromScreenReaders(false);\n    }\n  }\n\n  componentWillUnmount() {\n    const target: HTMLElement = this.getElement(this.props.appendTo);\n    if (this.state.container) {\n      target.removeChild(this.state.container);\n    }\n    target.removeEventListener('keydown', this.handleEscKeyClick, false);\n    target.classList.remove(css(styles.backdropOpen));\n  }\n\n  render() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { appendTo, ...props } = this.props;\n    const { container } = this.state;\n\n    if (!canUseDOM || !container) {\n      return null;\n    }\n\n    return ReactDOM.createPortal(\n      <AboutModalContainer\n        aboutModalBoxHeaderId={this.ariaLabelledBy}\n        aboutModalBoxContentId={this.ariaDescribedBy}\n        {...props}\n      />,\n      container\n    ) as React.ReactElement;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}