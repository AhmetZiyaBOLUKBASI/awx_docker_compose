{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _excluded=[\"credential\",\"source_path\",\"source_project\",\"source_script\",\"execution_environment\"];import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import React,{useCallback,useEffect}from'react';import{useHistory}from'react-router-dom';import{Card}from'@patternfly/react-core';import{CardBody}from'components/Card';import useRequest from'hooks/useRequest';import{InventorySourcesAPI}from'api';import InventorySourceForm from'../shared/InventorySourceForm';import{jsx as _jsx}from\"react/jsx-runtime\";function InventorySourceEdit(_ref){var source=_ref.source,inventory=_ref.inventory;var history=useHistory();var id=inventory.id,organization=inventory.organization;var detailsUrl=\"/inventories/inventory/\".concat(id,\"/sources/\").concat(source.id,\"/details\");var _useRequest=useRequest(useCallback(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values){var _yield$InventorySourc,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return InventorySourcesAPI.replace(source.id,values);case 2:_yield$InventorySourc=_context.sent;data=_yield$InventorySourc.data;return _context.abrupt(\"return\",data);case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}(),[source.id]),null),error=_useRequest.error,request=_useRequest.request,result=_useRequest.result;useEffect(function(){if(result){history.push(detailsUrl);}},[result,detailsUrl,history]);var handleSubmit=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(form){var credential,source_path,source_project,source_script,execution_environment,remainingForm,sourcePath,sourceProject;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:credential=form.credential,source_path=form.source_path,source_project=form.source_project,source_script=form.source_script,execution_environment=form.execution_environment,remainingForm=_objectWithoutProperties(form,_excluded);sourcePath={};sourceProject={};if(form.source==='scm'){sourcePath.source_path=source_path==='/ (project root)'?'':source_path;sourceProject.source_project=source_project.id;}_context2.next=6;return request(_objectSpread(_objectSpread(_objectSpread({credential:(credential===null||credential===void 0?void 0:credential.id)||null,inventory:id,source_script:(source_script===null||source_script===void 0?void 0:source_script.id)||null,execution_environment:(execution_environment===null||execution_environment===void 0?void 0:execution_environment.id)||null},sourcePath),sourceProject),remainingForm));case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function handleSubmit(_x2){return _ref3.apply(this,arguments);};}();var handleCancel=function handleCancel(){history.push(detailsUrl);};return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(InventorySourceForm,{source:source,onCancel:handleCancel,onSubmit:handleSubmit,submitError:error,organizationId:organization})})});}export default InventorySourceEdit;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Inventory/InventorySourceEdit/InventorySourceEdit.js"],"names":["React","useCallback","useEffect","useHistory","Card","CardBody","useRequest","InventorySourcesAPI","InventorySourceForm","InventorySourceEdit","source","inventory","history","id","organization","detailsUrl","values","replace","data","error","request","result","push","handleSubmit","form","credential","source_path","source_project","source_script","execution_environment","remainingForm","sourcePath","sourceProject","handleCancel"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Card } from '@patternfly/react-core';\nimport { CardBody } from 'components/Card';\nimport useRequest from 'hooks/useRequest';\nimport { InventorySourcesAPI } from 'api';\nimport InventorySourceForm from '../shared/InventorySourceForm';\n\nfunction InventorySourceEdit({ source, inventory }) {\n  const history = useHistory();\n  const { id, organization } = inventory;\n  const detailsUrl = `/inventories/inventory/${id}/sources/${source.id}/details`;\n\n  const { error, request, result } = useRequest(\n    useCallback(\n      async (values) => {\n        const { data } = await InventorySourcesAPI.replace(source.id, values);\n        return data;\n      },\n      [source.id]\n    ),\n    null\n  );\n\n  useEffect(() => {\n    if (result) {\n      history.push(detailsUrl);\n    }\n  }, [result, detailsUrl, history]);\n\n  const handleSubmit = async (form) => {\n    const {\n      credential,\n      source_path,\n      source_project,\n      source_script,\n      execution_environment,\n      ...remainingForm\n    } = form;\n\n    const sourcePath = {};\n    const sourceProject = {};\n    if (form.source === 'scm') {\n      sourcePath.source_path =\n        source_path === '/ (project root)' ? '' : source_path;\n      sourceProject.source_project = source_project.id;\n    }\n\n    await request({\n      credential: credential?.id || null,\n      inventory: id,\n      source_script: source_script?.id || null,\n      execution_environment: execution_environment?.id || null,\n      ...sourcePath,\n      ...sourceProject,\n      ...remainingForm,\n    });\n  };\n\n  const handleCancel = () => {\n    history.push(detailsUrl);\n  };\n\n  return (\n    <Card>\n      <CardBody>\n        <InventorySourceForm\n          source={source}\n          onCancel={handleCancel}\n          onSubmit={handleSubmit}\n          submitError={error}\n          organizationId={organization}\n        />\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default InventorySourceEdit;\n"]},"metadata":{},"sourceType":"module"}