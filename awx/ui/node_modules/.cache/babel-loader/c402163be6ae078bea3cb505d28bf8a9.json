{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _taggedTemplateLiteral from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import{i18n}from\"@lingui/core\";import React from'react';import{Link as _Link}from'react-router-dom';import{Tooltip}from'@patternfly/react-core';import styled from'styled-components';import{formatDateString}from'util/dates';import{Job}from'types';import StatusIcon from'../StatusIcon';import{JOB_TYPE_URL_SEGMENTS}from'../../constants';/* eslint-disable react/jsx-pascal-case */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Link=styled(function(props){return/*#__PURE__*/_jsx(_Link,_objectSpread({},props));})(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin-right: 5px;\\n\"])));var Wrapper=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: inline-flex;\\n  flex-wrap: wrap;\\n\"])));/* eslint-enable react/jsx-pascal-case */var Sparkline=function Sparkline(_ref){var jobs=_ref.jobs;var generateTooltip=function generateTooltip(job){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*i18n*/i18n._(\"JOB ID:\"),\" \",job.id]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*i18n*/i18n._(\"STATUS:\"),\" \",job.status.toUpperCase()]}),job.finished&&/*#__PURE__*/_jsxs(\"div\",{children:[/*i18n*/i18n._(\"FINISHED:\"),\" \",formatDateString(job.finished)]})]});};var statusIcons=jobs.map(function(job){return/*#__PURE__*/_jsx(Tooltip,{position:\"top\",content:generateTooltip(job),children:/*#__PURE__*/_jsx(Link,{\"aria-label\":/*i18n*/i18n._(\"View job {0}\",{0:job.id}),to:\"/jobs/\".concat(JOB_TYPE_URL_SEGMENTS[job.type],\"/\").concat(job.id),children:/*#__PURE__*/_jsx(StatusIcon,{status:job.status})})},job.id);});return/*#__PURE__*/_jsx(Wrapper,{children:statusIcons});};Sparkline.defaultProps={jobs:[]};export default Sparkline;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/Sparkline/Sparkline.js"],"names":["React","Link","_Link","Tooltip","styled","formatDateString","Job","StatusIcon","JOB_TYPE_URL_SEGMENTS","props","Wrapper","div","Sparkline","jobs","generateTooltip","job","id","status","toUpperCase","finished","statusIcons","map","type","defaultProps"],"mappings":"iSAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,OAASC,IAAI,GAAIC,CAAAA,KAAjB,KAA8B,kBAA9B,CACA,OAASC,OAAT,KAAwB,wBAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,OAASC,gBAAT,KAAiC,YAAjC,CACA,OAASC,GAAT,KAAoB,OAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CACA,OAASC,qBAAT,KAAsC,iBAAtC,CAEA,0C,6IACA,GAAMP,CAAAA,IAAI,CAAGG,MAAM,CAAC,SAACK,KAAD,qBAAW,KAAC,KAAD,kBAAWA,KAAX,EAAX,EAAD,CAAT,yFAAV,CAIA,GAAMC,CAAAA,OAAO,CAAGN,MAAM,CAACO,GAAV,kHAAb,CAIA,yCAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CAC9B,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,GAAD,qBACtB,wCACE,+BACG,iBADH,KACgBA,GAAG,CAACC,EADpB,GADF,cAIE,+BACG,iBADH,KACgBD,GAAG,CAACE,MAAJ,CAAWC,WAAX,EADhB,GAJF,CAOGH,GAAG,CAACI,QAAJ,eACC,+BACG,mBADH,KACkBd,gBAAgB,CAACU,GAAG,CAACI,QAAL,CADlC,GARJ,GADsB,EAAxB,CAgBA,GAAMC,CAAAA,WAAW,CAAGP,IAAI,CAACQ,GAAL,CAAS,SAACN,GAAD,qBAC3B,KAAC,OAAD,EAAS,QAAQ,CAAC,KAAlB,CAAwB,OAAO,CAAED,eAAe,CAACC,GAAD,CAAhD,uBACE,KAAC,IAAD,EACE,qBAAY,yBAAaA,GAAG,CAACC,EAAjB,EADd,CAEE,EAAE,iBAAWR,qBAAqB,CAACO,GAAG,CAACO,IAAL,CAAhC,aAA8CP,GAAG,CAACC,EAAlD,CAFJ,uBAIE,KAAC,UAAD,EAAY,MAAM,CAAED,GAAG,CAACE,MAAxB,EAJF,EADF,EAA4DF,GAAG,CAACC,EAAhE,CAD2B,EAAT,CAApB,CAWA,mBAAO,KAAC,OAAD,WAAUI,WAAV,EAAP,CACD,CA7BD,CAkCAR,SAAS,CAACW,YAAV,CAAyB,CACvBV,IAAI,CAAE,EADiB,CAAzB,CAIA,cAAeD,CAAAA,SAAf","sourcesContent":["import React from 'react';\nimport { arrayOf } from 'prop-types';\n\nimport { Link as _Link } from 'react-router-dom';\nimport { Tooltip } from '@patternfly/react-core';\nimport styled from 'styled-components';\nimport { t } from '@lingui/macro';\nimport { formatDateString } from 'util/dates';\nimport { Job } from 'types';\nimport StatusIcon from '../StatusIcon';\nimport { JOB_TYPE_URL_SEGMENTS } from '../../constants';\n\n/* eslint-disable react/jsx-pascal-case */\nconst Link = styled((props) => <_Link {...props} />)`\n  margin-right: 5px;\n`;\n\nconst Wrapper = styled.div`\n  display: inline-flex;\n  flex-wrap: wrap;\n`;\n/* eslint-enable react/jsx-pascal-case */\n\nconst Sparkline = ({ jobs }) => {\n  const generateTooltip = (job) => (\n    <>\n      <div>\n        {t`JOB ID:`} {job.id}\n      </div>\n      <div>\n        {t`STATUS:`} {job.status.toUpperCase()}\n      </div>\n      {job.finished && (\n        <div>\n          {t`FINISHED:`} {formatDateString(job.finished)}\n        </div>\n      )}\n    </>\n  );\n\n  const statusIcons = jobs.map((job) => (\n    <Tooltip position=\"top\" content={generateTooltip(job)} key={job.id}>\n      <Link\n        aria-label={t`View job ${job.id}`}\n        to={`/jobs/${JOB_TYPE_URL_SEGMENTS[job.type]}/${job.id}`}\n      >\n        <StatusIcon status={job.status} />\n      </Link>\n    </Tooltip>\n  ));\n\n  return <Wrapper>{statusIcons}</Wrapper>;\n};\n\nSparkline.propTypes = {\n  jobs: arrayOf(Job),\n};\nSparkline.defaultProps = {\n  jobs: [],\n};\n\nexport default Sparkline;\n"]},"metadata":{},"sourceType":"module"}