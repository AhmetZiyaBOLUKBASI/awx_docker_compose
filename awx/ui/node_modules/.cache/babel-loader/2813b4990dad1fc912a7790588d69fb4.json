{"ast":null,"code":"import{i18n}from\"@lingui/core\";import React from'react';import{Link}from'react-router-dom';import{Switch}from'@patternfly/react-core';import{Tr,Td}from'@patternfly/react-table';import{ActionsTd,ActionItem}from'../PaginatedTable';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function NotificationListItem(_ref){var canToggleNotifications=_ref.canToggleNotifications,notification=_ref.notification,detailUrl=_ref.detailUrl,approvalsTurnedOn=_ref.approvalsTurnedOn,startedTurnedOn=_ref.startedTurnedOn,successTurnedOn=_ref.successTurnedOn,errorTurnedOn=_ref.errorTurnedOn,toggleNotification=_ref.toggleNotification,typeLabels=_ref.typeLabels,showApprovalsToggle=_ref.showApprovalsToggle;return/*#__PURE__*/_jsxs(Tr,{id:\"notification-row-\".concat(notification.id),ouiaId:\"notification-row-\".concat(notification.id),children:[/*#__PURE__*/_jsx(Td,{id:\"notification-\".concat(notification.id),dataLabel:/*i18n*/i18n._(\"Name\"),children:/*#__PURE__*/_jsx(Link,{to:\"\".concat(detailUrl),children:/*#__PURE__*/_jsx(\"b\",{children:notification.name})})}),/*#__PURE__*/_jsx(Td,{dataLabel:/*i18n*/i18n._(\"Type\"),children:typeLabels[notification.notification_type]}),/*#__PURE__*/_jsxs(ActionsTd,{dataLabel:/*i18n*/i18n._(\"Options\"),gridColumns:\"120px 120px 120px 120px\",children:[/*#__PURE__*/_jsx(ActionItem,{visible:showApprovalsToggle,children:/*#__PURE__*/_jsx(Switch,{id:\"notification-\".concat(notification.id,\"-approvals-toggle\"),ouiaId:\"notification-\".concat(notification.id,\"-approvals-toggle\"),label:/*i18n*/i18n._(\"Approval\"),labelOff:/*i18n*/i18n._(\"Approval\"),isChecked:approvalsTurnedOn,isDisabled:!canToggleNotifications,onChange:function onChange(){return toggleNotification(notification.id,approvalsTurnedOn,'approvals');},\"aria-label\":/*i18n*/i18n._(\"Toggle notification approvals\")})}),/*#__PURE__*/_jsx(ActionItem,{visible:true,children:/*#__PURE__*/_jsx(Switch,{id:\"notification-\".concat(notification.id,\"-started-toggle\"),ouiaId:\"notification-\".concat(notification.id,\"-started-toggle\"),label:/*i18n*/i18n._(\"Start\"),labelOff:/*i18n*/i18n._(\"Start\"),isChecked:startedTurnedOn,isDisabled:!canToggleNotifications,onChange:function onChange(){return toggleNotification(notification.id,startedTurnedOn,'started');},\"aria-label\":/*i18n*/i18n._(\"Toggle notification start\")})}),/*#__PURE__*/_jsx(ActionItem,{visible:true,children:/*#__PURE__*/_jsx(Switch,{id:\"notification-\".concat(notification.id,\"-success-toggle\"),ouiaId:\"notification-\".concat(notification.id,\"-success-toggle\"),label:/*i18n*/i18n._(\"Success\"),labelOff:/*i18n*/i18n._(\"Success\"),isChecked:successTurnedOn,isDisabled:!canToggleNotifications,onChange:function onChange(){return toggleNotification(notification.id,successTurnedOn,'success');},\"aria-label\":/*i18n*/i18n._(\"Toggle notification success\")})}),/*#__PURE__*/_jsx(ActionItem,{visible:true,children:/*#__PURE__*/_jsx(Switch,{id:\"notification-\".concat(notification.id,\"-error-toggle\"),ouiaId:\"notification-\".concat(notification.id,\"-error-toggle\"),label:/*i18n*/i18n._(\"Failure\"),labelOff:/*i18n*/i18n._(\"Failure\"),isChecked:errorTurnedOn,isDisabled:!canToggleNotifications,onChange:function onChange(){return toggleNotification(notification.id,errorTurnedOn,'error');},\"aria-label\":/*i18n*/i18n._(\"Toggle notification failure\")})})]})]});}NotificationListItem.defaultProps={approvalsTurnedOn:false,errorTurnedOn:false,startedTurnedOn:false,successTurnedOn:false,showApprovalsToggle:false};export default NotificationListItem;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/NotificationList/NotificationListItem.js"],"names":["React","Link","Switch","Tr","Td","ActionsTd","ActionItem","NotificationListItem","canToggleNotifications","notification","detailUrl","approvalsTurnedOn","startedTurnedOn","successTurnedOn","errorTurnedOn","toggleNotification","typeLabels","showApprovalsToggle","id","name","notification_type","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { shape, number, string, bool, func } from 'prop-types';\n\nimport { t } from '@lingui/macro';\nimport { Link } from 'react-router-dom';\nimport { Switch } from '@patternfly/react-core';\nimport { Tr, Td } from '@patternfly/react-table';\nimport { ActionsTd, ActionItem } from '../PaginatedTable';\n\nfunction NotificationListItem({\n  canToggleNotifications,\n  notification,\n  detailUrl,\n  approvalsTurnedOn,\n  startedTurnedOn,\n  successTurnedOn,\n  errorTurnedOn,\n  toggleNotification,\n\n  typeLabels,\n  showApprovalsToggle,\n}) {\n  return (\n    <Tr\n      id={`notification-row-${notification.id}`}\n      ouiaId={`notification-row-${notification.id}`}\n    >\n      <Td id={`notification-${notification.id}`} dataLabel={t`Name`}>\n        <Link to={`${detailUrl}`}>\n          <b>{notification.name}</b>\n        </Link>\n      </Td>\n      <Td dataLabel={t`Type`}>{typeLabels[notification.notification_type]}</Td>\n      <ActionsTd dataLabel={t`Options`} gridColumns=\"120px 120px 120px 120px\">\n        <ActionItem visible={showApprovalsToggle}>\n          <Switch\n            id={`notification-${notification.id}-approvals-toggle`}\n            ouiaId={`notification-${notification.id}-approvals-toggle`}\n            label={t`Approval`}\n            labelOff={t`Approval`}\n            isChecked={approvalsTurnedOn}\n            isDisabled={!canToggleNotifications}\n            onChange={() =>\n              toggleNotification(\n                notification.id,\n                approvalsTurnedOn,\n                'approvals'\n              )\n            }\n            aria-label={t`Toggle notification approvals`}\n          />\n        </ActionItem>\n        <ActionItem visible>\n          <Switch\n            id={`notification-${notification.id}-started-toggle`}\n            ouiaId={`notification-${notification.id}-started-toggle`}\n            label={t`Start`}\n            labelOff={t`Start`}\n            isChecked={startedTurnedOn}\n            isDisabled={!canToggleNotifications}\n            onChange={() =>\n              toggleNotification(notification.id, startedTurnedOn, 'started')\n            }\n            aria-label={t`Toggle notification start`}\n          />\n        </ActionItem>\n        <ActionItem visible>\n          <Switch\n            id={`notification-${notification.id}-success-toggle`}\n            ouiaId={`notification-${notification.id}-success-toggle`}\n            label={t`Success`}\n            labelOff={t`Success`}\n            isChecked={successTurnedOn}\n            isDisabled={!canToggleNotifications}\n            onChange={() =>\n              toggleNotification(notification.id, successTurnedOn, 'success')\n            }\n            aria-label={t`Toggle notification success`}\n          />\n        </ActionItem>\n        <ActionItem visible>\n          <Switch\n            id={`notification-${notification.id}-error-toggle`}\n            ouiaId={`notification-${notification.id}-error-toggle`}\n            label={t`Failure`}\n            labelOff={t`Failure`}\n            isChecked={errorTurnedOn}\n            isDisabled={!canToggleNotifications}\n            onChange={() =>\n              toggleNotification(notification.id, errorTurnedOn, 'error')\n            }\n            aria-label={t`Toggle notification failure`}\n          />\n        </ActionItem>\n      </ActionsTd>\n    </Tr>\n  );\n}\n\nNotificationListItem.propTypes = {\n  notification: shape({\n    id: number.isRequired,\n    name: string.isRequired,\n    notification_type: string.isRequired,\n  }).isRequired,\n  canToggleNotifications: bool.isRequired,\n  detailUrl: string.isRequired,\n  approvalsTurnedOn: bool,\n  errorTurnedOn: bool,\n  startedTurnedOn: bool,\n  successTurnedOn: bool,\n  toggleNotification: func.isRequired,\n  typeLabels: shape().isRequired,\n  showApprovalsToggle: bool,\n};\n\nNotificationListItem.defaultProps = {\n  approvalsTurnedOn: false,\n  errorTurnedOn: false,\n  startedTurnedOn: false,\n  successTurnedOn: false,\n  showApprovalsToggle: false,\n};\n\nexport default NotificationListItem;\n"]},"metadata":{},"sourceType":"module"}