{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3;import{i18n}from\"@lingui/core\";import React from'react';import{useField}from'formik';import{FormGroup,TextInput,Button,InputGroup as PFInputGroup}from'@patternfly/react-core';import PFCheckIcon from'@patternfly/react-icons/dist/js/icons/check-icon';import styled from'styled-components';import Popover from'components/Popover';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var InputGroup=styled(PFInputGroup)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding-bottom: 5px;\\n\"])));var HelperTextWrapper=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  font-size: var(--pf-c-form__label--FontSize);\\n\"])));var CheckIcon=styled(PFCheckIcon)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  color: var(--pf-c-button--m-plain--disabled--Color);\\n  \",\";\\n\"])),function(props){return props.selected&&\"color: var(--pf-c-button--m-secondary--active--Color)\";});var validate=function validate(){return function(value){var message;var hasValue=value.find(function(_ref){var choice=_ref.choice;return choice.trim().length>0?choice:undefined;});if(!hasValue){message=/*i18n*/i18n._(\"There must be a value in at least one input\");}return message;};};function MultipleChoiceField(_ref2){var label=_ref2.label,tooltip=_ref2.tooltip;var _useField=useField({name:'formattedChoices',validate:validate()}),_useField2=_slicedToArray(_useField,3),formattedChoicesField=_useField2[0],formattedChoicesMeta=_useField2[1],formattedChoicesHelpers=_useField2[2];var _useField3=useField('type'),_useField4=_slicedToArray(_useField3,1),typeField=_useField4[0];var isValid=!(formattedChoicesMeta.touched&&formattedChoicesMeta.error);return/*#__PURE__*/_jsx(FormGroup,{label:label,isRequired:true,name:\"formattedChoices\",id:\"formattedChoices\",helperText:/*#__PURE__*/_jsxs(HelperTextWrapper,{children:[/*i18n*/i18n._(\"Type answer then click checkbox on right to select answer as\\ndefault.\"),/*#__PURE__*/_jsx(\"br\",{}),/*i18n*/i18n._(\"Press 'Enter' to add more answer choices. One answer\\nchoice per line.\")]}),helperTextInvalid:formattedChoicesMeta.error,onBlur:function onBlur(e){if(!e.currentTarget.contains(e.relatedTarget)){formattedChoicesHelpers.setTouched();}},validated:isValid?'default':'error',labelIcon:/*#__PURE__*/_jsx(Popover,{content:tooltip}),children:formattedChoicesField.value.map(function(_ref3,i){var choice=_ref3.choice,isDefault=_ref3.isDefault,id=_ref3.id;return/*#__PURE__*/_jsxs(InputGroup,{children:[/*#__PURE__*/_jsx(TextInput,{\"data-cy\":choice?\"\".concat(choice,\"-input\"):'new-choice-input',\"aria-label\":choice||/*i18n*/i18n._(\"new choice\"),onKeyUp:function onKeyUp(e){if(e.key==='Enter'&&choice.trim().length>0&&i===formattedChoicesField.value.length-1){formattedChoicesHelpers.setValue(formattedChoicesField.value.concat({choice:'',isDefault:false,id:i+1}));}if(e.key==='Backspace'&&!choice.trim()&&formattedChoicesField.value.length>1){var removeEmptyField=formattedChoicesField.value.filter(function(c,index){return index!==i;});formattedChoicesHelpers.setValue(removeEmptyField);}},value:choice,onChange:function onChange(value){var newValues=formattedChoicesField.value.map(function(choiceField,index){return i===index?{choice:value,isDefault:false,id:choiceField.id}:choiceField;});formattedChoicesHelpers.setValue(newValues);}}),/*#__PURE__*/_jsx(Button,{variant:\"control\",\"aria-label\":/*i18n*/i18n._(\"Click to toggle default value\"),ouiaId:choice?\"\".concat(choice,\"-button\"):'new-choice-button',isDisabled:!choice.trim(),onClick:function onClick(){var newValues=formattedChoicesField.value.map(function(choiceField,index){return i===index?{choice:choiceField.choice,isDefault:!choiceField.isDefault,id:choiceField.id}:choiceField;});var singleSelectValues=formattedChoicesField.value.map(function(choiceField,index){return i===index?{choice:choiceField.choice,isDefault:!choiceField.isDefault,id:choiceField.id}:{choice:choiceField.choice,isDefault:false,id:choiceField.id};});return typeField.value==='multiplechoice'?formattedChoicesHelpers.setValue(singleSelectValues):formattedChoicesHelpers.setValue(newValues);},children:/*#__PURE__*/_jsx(CheckIcon,{selected:isDefault})})]},id);})});}export default MultipleChoiceField;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Template/Survey/MultipleChoiceField.js"],"names":["React","useField","FormGroup","TextInput","Button","InputGroup","PFInputGroup","PFCheckIcon","styled","Popover","HelperTextWrapper","div","CheckIcon","props","selected","validate","value","message","hasValue","find","choice","trim","length","undefined","MultipleChoiceField","label","tooltip","name","formattedChoicesField","formattedChoicesMeta","formattedChoicesHelpers","typeField","isValid","touched","error","e","currentTarget","contains","relatedTarget","setTouched","map","i","isDefault","id","key","setValue","concat","removeEmptyField","filter","c","index","newValues","choiceField","singleSelectValues"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useField } from 'formik';\nimport { t } from '@lingui/macro';\nimport {\n  FormGroup,\n  TextInput,\n  Button,\n  InputGroup as PFInputGroup,\n} from '@patternfly/react-core';\nimport PFCheckIcon from '@patternfly/react-icons/dist/js/icons/check-icon';\nimport styled from 'styled-components';\nimport Popover from 'components/Popover';\n\nconst InputGroup = styled(PFInputGroup)`\n  padding-bottom: 5px;\n`;\n\nconst HelperTextWrapper = styled.div`\n  font-size: var(--pf-c-form__label--FontSize);\n`;\n\nconst CheckIcon = styled(PFCheckIcon)`\n  color: var(--pf-c-button--m-plain--disabled--Color);\n  ${(props) =>\n    props.selected && `color: var(--pf-c-button--m-secondary--active--Color)`};\n`;\n\nconst validate = () => (value) => {\n  let message;\n  const hasValue = value.find(({ choice }) =>\n    choice.trim().length > 0 ? choice : undefined\n  );\n  if (!hasValue) {\n    message = t`There must be a value in at least one input`;\n  }\n  return message;\n};\nfunction MultipleChoiceField({ label, tooltip }) {\n  const [formattedChoicesField, formattedChoicesMeta, formattedChoicesHelpers] =\n    useField({\n      name: 'formattedChoices',\n      validate: validate(),\n    });\n\n  const [typeField] = useField('type');\n  const isValid = !(formattedChoicesMeta.touched && formattedChoicesMeta.error);\n\n  return (\n    <FormGroup\n      label={label}\n      isRequired\n      name=\"formattedChoices\"\n      id=\"formattedChoices\"\n      helperText={\n        <HelperTextWrapper>\n          {t`Type answer then click checkbox on right to select answer as\n          default.`}\n          <br />\n          {t`Press 'Enter' to add more answer choices. One answer\n          choice per line.`}\n        </HelperTextWrapper>\n      }\n      helperTextInvalid={formattedChoicesMeta.error}\n      onBlur={(e) => {\n        if (!e.currentTarget.contains(e.relatedTarget)) {\n          formattedChoicesHelpers.setTouched();\n        }\n      }}\n      validated={isValid ? 'default' : 'error'}\n      labelIcon={<Popover content={tooltip} />}\n    >\n      {formattedChoicesField.value.map(({ choice, isDefault, id }, i) => (\n        <InputGroup key={id}>\n          <TextInput\n            data-cy={choice ? `${choice}-input` : 'new-choice-input'}\n            aria-label={choice || t`new choice`}\n            onKeyUp={(e) => {\n              if (\n                e.key === 'Enter' &&\n                choice.trim().length > 0 &&\n                i === formattedChoicesField.value.length - 1\n              ) {\n                formattedChoicesHelpers.setValue(\n                  formattedChoicesField.value.concat({\n                    choice: '',\n                    isDefault: false,\n                    id: i + 1,\n                  })\n                );\n              }\n\n              if (\n                e.key === 'Backspace' &&\n                !choice.trim() &&\n                formattedChoicesField.value.length > 1\n              ) {\n                const removeEmptyField = formattedChoicesField.value.filter(\n                  (c, index) => index !== i\n                );\n\n                formattedChoicesHelpers.setValue(removeEmptyField);\n              }\n            }}\n            value={choice}\n            onChange={(value) => {\n              const newValues = formattedChoicesField.value.map(\n                (choiceField, index) =>\n                  i === index\n                    ? { choice: value, isDefault: false, id: choiceField.id }\n                    : choiceField\n              );\n              formattedChoicesHelpers.setValue(newValues);\n            }}\n          />\n          <Button\n            variant=\"control\"\n            aria-label={t`Click to toggle default value`}\n            ouiaId={choice ? `${choice}-button` : 'new-choice-button'}\n            isDisabled={!choice.trim()}\n            onClick={() => {\n              const newValues = formattedChoicesField.value.map(\n                (choiceField, index) =>\n                  i === index\n                    ? {\n                        choice: choiceField.choice,\n                        isDefault: !choiceField.isDefault,\n                        id: choiceField.id,\n                      }\n                    : choiceField\n              );\n              const singleSelectValues = formattedChoicesField.value.map(\n                (choiceField, index) =>\n                  i === index\n                    ? {\n                        choice: choiceField.choice,\n                        isDefault: !choiceField.isDefault,\n                        id: choiceField.id,\n                      }\n                    : {\n                        choice: choiceField.choice,\n                        isDefault: false,\n                        id: choiceField.id,\n                      }\n              );\n              return typeField.value === 'multiplechoice'\n                ? formattedChoicesHelpers.setValue(singleSelectValues)\n                : formattedChoicesHelpers.setValue(newValues);\n            }}\n          >\n            <CheckIcon selected={isDefault} />\n          </Button>\n        </InputGroup>\n      ))}\n    </FormGroup>\n  );\n}\n\nexport default MultipleChoiceField;\n"]},"metadata":{},"sourceType":"module"}