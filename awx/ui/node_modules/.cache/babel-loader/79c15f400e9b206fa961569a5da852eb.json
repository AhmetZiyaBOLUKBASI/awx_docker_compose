{"ast":null,"code":"import _toConsumableArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{Trans}from\"@lingui/react\";import{i18n}from\"@lingui/core\";import React,{useCallback,useEffect}from'react';import{useLocation,useRouteMatch,Link}from'react-router-dom';import{Card,PageSection,DropdownItem}from'@patternfly/react-core';import{InventoriesAPI}from'api';import useRequest,{useDeleteItems}from'hooks/useRequest';import useSelected from'hooks/useSelected';import useToast,{AlertVariant}from'hooks/useToast';import AlertModal from'components/AlertModal';import DatalistToolbar from'components/DataListToolbar';import ErrorDetail from'components/ErrorDetail';import PaginatedTable,{HeaderRow,HeaderCell,ToolbarDeleteButton,getSearchableKeys}from'components/PaginatedTable';import{getQSConfig,parseQueryString}from'util/qs';import AddDropDownButton from'components/AddDropDownButton';import{relatedResourceDeleteRequests}from'util/getRelatedResourceDeleteDetails';import useWsInventories from'./useWsInventories';import InventoryListItem from'./InventoryListItem';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var QS_CONFIG=getQSConfig('inventory',{page:1,page_size:20,order_by:'name'});function InventoryList(){var location=useLocation();var match=useRouteMatch();var _useToast=useToast(),addToast=_useToast.addToast,Toast=_useToast.Toast,toastProps=_useToast.toastProps;var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _actionsResponse$data,_actionsResponse$data2;var params,_yield$Promise$all,_yield$Promise$all2,response,actionsResponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:params=parseQueryString(QS_CONFIG,location.search);_context.next=3;return Promise.all([InventoriesAPI.read(params),InventoriesAPI.readOptions()]);case 3:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);response=_yield$Promise$all2[0];actionsResponse=_yield$Promise$all2[1];return _context.abrupt(\"return\",{results:response.data.results,itemCount:response.data.count,actions:actionsResponse.data.actions,relatedSearchableKeys:((actionsResponse===null||actionsResponse===void 0?void 0:(_actionsResponse$data=actionsResponse.data)===null||_actionsResponse$data===void 0?void 0:_actionsResponse$data.related_search_fields)||[]).map(function(val){return val.slice(0,-8);}),searchableKeys:getSearchableKeys((_actionsResponse$data2=actionsResponse.data.actions)===null||_actionsResponse$data2===void 0?void 0:_actionsResponse$data2.GET)});case 8:case\"end\":return _context.stop();}}},_callee);})),[location]),{results:[],itemCount:0,actions:{},relatedSearchableKeys:[],searchableKeys:[]}),_useRequest$result=_useRequest.result,results=_useRequest$result.results,itemCount=_useRequest$result.itemCount,actions=_useRequest$result.actions,relatedSearchableKeys=_useRequest$result.relatedSearchableKeys,searchableKeys=_useRequest$result.searchableKeys,contentError=_useRequest.error,isLoading=_useRequest.isLoading,fetchInventories=_useRequest.request;useEffect(function(){fetchInventories();},[fetchInventories]);var fetchInventoriesById=useCallback(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ids){var params,_yield$InventoriesAPI,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:params=_objectSpread({},parseQueryString(QS_CONFIG,location.search));params.id__in=ids.join(',');_context2.next=4;return InventoriesAPI.read(params);case 4:_yield$InventoriesAPI=_context2.sent;data=_yield$InventoriesAPI.data;return _context2.abrupt(\"return\",data.results);case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x){return _ref2.apply(this,arguments);};}(),[location.search]// eslint-disable-line react-hooks/exhaustive-deps\n);var inventories=useWsInventories(results,fetchInventories,fetchInventoriesById,QS_CONFIG);var _useSelected=useSelected(inventories),selected=_useSelected.selected,isAllSelected=_useSelected.isAllSelected,handleSelect=_useSelected.handleSelect,selectAll=_useSelected.selectAll,clearSelected=_useSelected.clearSelected;var _useDeleteItems=useDeleteItems(useCallback(function(){return Promise.all(selected.map(function(team){return InventoriesAPI.destroy(team.id);}));},[selected]),{allItemsSelected:isAllSelected}),isDeleteLoading=_useDeleteItems.isLoading,deleteInventories=_useDeleteItems.deleteItems,deletionError=_useDeleteItems.deletionError,clearDeletionError=_useDeleteItems.clearDeletionError;var handleInventoryDelete=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return deleteInventories();case 2:clearSelected();case 3:case\"end\":return _context3.stop();}}},_callee3);}));return function handleInventoryDelete(){return _ref3.apply(this,arguments);};}();var handleCopy=useCallback(function(newInventoryId){addToast({id:newInventoryId,title:/*i18n*/i18n._(\"Inventory copied successfully\"),variant:AlertVariant.success,hasTimeout:true});},[addToast]);var hasContentLoading=isDeleteLoading||isLoading;var canAdd=actions&&actions.POST;var deleteDetailsRequests=relatedResourceDeleteRequests.inventory(selected[0]);var addInventory=/*i18n*/i18n._(\"Add inventory\");var addSmartInventory=/*i18n*/i18n._(\"Add smart inventory\");var addButton=/*#__PURE__*/_jsx(AddDropDownButton,{ouiaId:\"add-inventory-button\",dropdownItems:[/*#__PURE__*/_jsx(DropdownItem,{ouiaId:\"add-inventory-item\",to:\"\".concat(match.url,\"/inventory/add/\"),component:Link,\"aria-label\":addInventory,children:addInventory},addInventory),/*#__PURE__*/_jsx(DropdownItem,{ouiaId:\"add-smart-inventory-item\",to:\"\".concat(match.url,\"/smart_inventory/add/\"),component:Link,\"aria-label\":addSmartInventory,children:addSmartInventory},addSmartInventory)]},\"add\");return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(PageSection,{children:[/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(PaginatedTable,{contentError:contentError,hasContentLoading:hasContentLoading,items:inventories,itemCount:itemCount,pluralizedItemName:/*i18n*/i18n._(\"Inventories\"),qsConfig:QS_CONFIG,toolbarSearchColumns:[{name:/*i18n*/i18n._(\"Name\"),key:'name__icontains',isDefault:true},{name:/*i18n*/i18n._(\"Inventory Type\"),key:'or__kind',options:[['',/*i18n*/i18n._(\"Inventory\")],['smart',/*i18n*/i18n._(\"Smart Inventory\")]]},{name:/*i18n*/i18n._(\"Organization\"),key:'organization__name'},{name:/*i18n*/i18n._(\"Description\"),key:'description__icontains'},{name:/*i18n*/i18n._(\"Created By (Username)\"),key:'created_by__username__icontains'},{name:/*i18n*/i18n._(\"Modified By (Username)\"),key:'modified_by__username__icontains'}],toolbarSortColumns:[{name:/*i18n*/i18n._(\"Name\"),key:'name'}],toolbarSearchableKeys:searchableKeys,toolbarRelatedSearchableKeys:relatedSearchableKeys,clearSelected:clearSelected,headerRow:/*#__PURE__*/_jsxs(HeaderRow,{qsConfig:QS_CONFIG,children:[/*#__PURE__*/_jsx(HeaderCell,{sortKey:\"name\",children:/*i18n*/i18n._(\"Name\")}),/*#__PURE__*/_jsx(HeaderCell,{children:/*i18n*/i18n._(\"Sync Status\")}),/*#__PURE__*/_jsx(HeaderCell,{children:/*i18n*/i18n._(\"Type\")}),/*#__PURE__*/_jsx(HeaderCell,{children:/*i18n*/i18n._(\"Organization\")}),/*#__PURE__*/_jsx(HeaderCell,{children:/*i18n*/i18n._(\"Actions\")})]}),renderToolbar:function renderToolbar(props){return/*#__PURE__*/_jsx(DatalistToolbar,_objectSpread(_objectSpread({},props),{},{isAllSelected:isAllSelected,onSelectAll:selectAll,qsConfig:QS_CONFIG,additionalControls:[].concat(_toConsumableArray(canAdd?[addButton]:[]),[/*#__PURE__*/_jsx(ToolbarDeleteButton,{onDelete:handleInventoryDelete,itemsToDelete:selected,pluralizedItemName:/*i18n*/i18n._(\"Inventories\"),deleteDetailsRequests:deleteDetailsRequests,deleteMessage:/*#__PURE__*/_jsx(Trans,{id:\"{0, plural, one {This inventory is currently being used by some templates. Are you sure you want to delete it?} other {Deleting these inventories could impact some templates that rely on them. Are you sure you want to delete anyway?}}\",values:{0:selected.length}}),warningMessage:/*#__PURE__*/_jsx(Trans,{id:\"{0, plural, one {The inventory will be in a pending status until the final delete is processed.} other {The inventories will be in a pending status until the final delete is processed.}}\",values:{0:selected.length}})},\"delete\")])}));},renderRow:function renderRow(inventory,index){return/*#__PURE__*/_jsx(InventoryListItem,{value:inventory.name,inventory:inventory,rowIndex:index,fetchInventories:fetchInventories,detailUrl:inventory.kind==='smart'?\"\".concat(match.url,\"/smart_inventory/\").concat(inventory.id,\"/details\"):\"\".concat(match.url,\"/inventory/\").concat(inventory.id,\"/details\"),onSelect:function onSelect(){if(!inventory.pending_deletion){handleSelect(inventory);}},onCopy:handleCopy,isSelected:selected.some(function(row){return row.id===inventory.id;})},inventory.id);},emptyStateControls:canAdd&&addButton})}),/*#__PURE__*/_jsxs(AlertModal,{isOpen:deletionError,variant:\"error\",\"aria-label\":/*i18n*/i18n._(\"Deletion Error\"),title:/*i18n*/i18n._(\"Error!\"),onClose:clearDeletionError,children:[/*i18n*/i18n._(\"Failed to delete one or more inventories.\"),/*#__PURE__*/_jsx(ErrorDetail,{error:deletionError})]})]}),/*#__PURE__*/_jsx(Toast,_objectSpread({},toastProps))]});}export default InventoryList;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Inventory/InventoryList/InventoryList.js"],"names":["React","useCallback","useEffect","useLocation","useRouteMatch","Link","Card","PageSection","DropdownItem","InventoriesAPI","useRequest","useDeleteItems","useSelected","useToast","AlertVariant","AlertModal","DatalistToolbar","ErrorDetail","PaginatedTable","HeaderRow","HeaderCell","ToolbarDeleteButton","getSearchableKeys","getQSConfig","parseQueryString","AddDropDownButton","relatedResourceDeleteRequests","useWsInventories","InventoryListItem","QS_CONFIG","page","page_size","order_by","InventoryList","location","match","addToast","Toast","toastProps","params","search","Promise","all","read","readOptions","response","actionsResponse","results","data","itemCount","count","actions","relatedSearchableKeys","related_search_fields","map","val","slice","searchableKeys","GET","result","contentError","error","isLoading","fetchInventories","request","fetchInventoriesById","ids","id__in","join","inventories","selected","isAllSelected","handleSelect","selectAll","clearSelected","team","destroy","id","allItemsSelected","isDeleteLoading","deleteInventories","deleteItems","deletionError","clearDeletionError","handleInventoryDelete","handleCopy","newInventoryId","title","variant","success","hasTimeout","hasContentLoading","canAdd","POST","deleteDetailsRequests","inventory","addInventory","addSmartInventory","addButton","url","name","key","isDefault","options","props","length","index","kind","pending_deletion","some","row"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport { useLocation, useRouteMatch, Link } from 'react-router-dom';\nimport { t, Plural } from '@lingui/macro';\nimport { Card, PageSection, DropdownItem } from '@patternfly/react-core';\nimport { InventoriesAPI } from 'api';\nimport useRequest, { useDeleteItems } from 'hooks/useRequest';\nimport useSelected from 'hooks/useSelected';\nimport useToast, { AlertVariant } from 'hooks/useToast';\nimport AlertModal from 'components/AlertModal';\nimport DatalistToolbar from 'components/DataListToolbar';\nimport ErrorDetail from 'components/ErrorDetail';\nimport PaginatedTable, {\n  HeaderRow,\n  HeaderCell,\n  ToolbarDeleteButton,\n  getSearchableKeys,\n} from 'components/PaginatedTable';\nimport { getQSConfig, parseQueryString } from 'util/qs';\nimport AddDropDownButton from 'components/AddDropDownButton';\nimport { relatedResourceDeleteRequests } from 'util/getRelatedResourceDeleteDetails';\nimport useWsInventories from './useWsInventories';\nimport InventoryListItem from './InventoryListItem';\n\nconst QS_CONFIG = getQSConfig('inventory', {\n  page: 1,\n  page_size: 20,\n  order_by: 'name',\n});\n\nfunction InventoryList() {\n  const location = useLocation();\n  const match = useRouteMatch();\n  const { addToast, Toast, toastProps } = useToast();\n\n  const {\n    result: {\n      results,\n      itemCount,\n      actions,\n      relatedSearchableKeys,\n      searchableKeys,\n    },\n    error: contentError,\n    isLoading,\n    request: fetchInventories,\n  } = useRequest(\n    useCallback(async () => {\n      const params = parseQueryString(QS_CONFIG, location.search);\n      const [response, actionsResponse] = await Promise.all([\n        InventoriesAPI.read(params),\n        InventoriesAPI.readOptions(),\n      ]);\n      return {\n        results: response.data.results,\n        itemCount: response.data.count,\n        actions: actionsResponse.data.actions,\n        relatedSearchableKeys: (\n          actionsResponse?.data?.related_search_fields || []\n        ).map((val) => val.slice(0, -8)),\n        searchableKeys: getSearchableKeys(actionsResponse.data.actions?.GET),\n      };\n    }, [location]),\n    {\n      results: [],\n      itemCount: 0,\n      actions: {},\n      relatedSearchableKeys: [],\n      searchableKeys: [],\n    }\n  );\n\n  useEffect(() => {\n    fetchInventories();\n  }, [fetchInventories]);\n\n  const fetchInventoriesById = useCallback(\n    async (ids) => {\n      const params = { ...parseQueryString(QS_CONFIG, location.search) };\n      params.id__in = ids.join(',');\n      const { data } = await InventoriesAPI.read(params);\n      return data.results;\n    },\n    [location.search] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  const inventories = useWsInventories(\n    results,\n    fetchInventories,\n    fetchInventoriesById,\n    QS_CONFIG\n  );\n\n  const { selected, isAllSelected, handleSelect, selectAll, clearSelected } =\n    useSelected(inventories);\n\n  const {\n    isLoading: isDeleteLoading,\n    deleteItems: deleteInventories,\n    deletionError,\n    clearDeletionError,\n  } = useDeleteItems(\n    useCallback(\n      () =>\n        Promise.all(selected.map((team) => InventoriesAPI.destroy(team.id))),\n      [selected]\n    ),\n    {\n      allItemsSelected: isAllSelected,\n    }\n  );\n\n  const handleInventoryDelete = async () => {\n    await deleteInventories();\n    clearSelected();\n  };\n\n  const handleCopy = useCallback(\n    (newInventoryId) => {\n      addToast({\n        id: newInventoryId,\n        title: t`Inventory copied successfully`,\n        variant: AlertVariant.success,\n        hasTimeout: true,\n      });\n    },\n    [addToast]\n  );\n\n  const hasContentLoading = isDeleteLoading || isLoading;\n  const canAdd = actions && actions.POST;\n\n  const deleteDetailsRequests = relatedResourceDeleteRequests.inventory(\n    selected[0]\n  );\n\n  const addInventory = t`Add inventory`;\n  const addSmartInventory = t`Add smart inventory`;\n  const addButton = (\n    <AddDropDownButton\n      ouiaId=\"add-inventory-button\"\n      key=\"add\"\n      dropdownItems={[\n        <DropdownItem\n          ouiaId=\"add-inventory-item\"\n          to={`${match.url}/inventory/add/`}\n          component={Link}\n          key={addInventory}\n          aria-label={addInventory}\n        >\n          {addInventory}\n        </DropdownItem>,\n        <DropdownItem\n          ouiaId=\"add-smart-inventory-item\"\n          to={`${match.url}/smart_inventory/add/`}\n          component={Link}\n          key={addSmartInventory}\n          aria-label={addSmartInventory}\n        >\n          {addSmartInventory}\n        </DropdownItem>,\n      ]}\n    />\n  );\n\n  return (\n    <>\n      <PageSection>\n        <Card>\n          <PaginatedTable\n            contentError={contentError}\n            hasContentLoading={hasContentLoading}\n            items={inventories}\n            itemCount={itemCount}\n            pluralizedItemName={t`Inventories`}\n            qsConfig={QS_CONFIG}\n            toolbarSearchColumns={[\n              {\n                name: t`Name`,\n                key: 'name__icontains',\n                isDefault: true,\n              },\n              {\n                name: t`Inventory Type`,\n                key: 'or__kind',\n                options: [\n                  ['', t`Inventory`],\n                  ['smart', t`Smart Inventory`],\n                ],\n              },\n              {\n                name: t`Organization`,\n                key: 'organization__name',\n              },\n              {\n                name: t`Description`,\n                key: 'description__icontains',\n              },\n              {\n                name: t`Created By (Username)`,\n                key: 'created_by__username__icontains',\n              },\n              {\n                name: t`Modified By (Username)`,\n                key: 'modified_by__username__icontains',\n              },\n            ]}\n            toolbarSortColumns={[\n              {\n                name: t`Name`,\n                key: 'name',\n              },\n            ]}\n            toolbarSearchableKeys={searchableKeys}\n            toolbarRelatedSearchableKeys={relatedSearchableKeys}\n            clearSelected={clearSelected}\n            headerRow={\n              <HeaderRow qsConfig={QS_CONFIG}>\n                <HeaderCell sortKey=\"name\">{t`Name`}</HeaderCell>\n                <HeaderCell>{t`Sync Status`}</HeaderCell>\n                <HeaderCell>{t`Type`}</HeaderCell>\n                <HeaderCell>{t`Organization`}</HeaderCell>\n                <HeaderCell>{t`Actions`}</HeaderCell>\n              </HeaderRow>\n            }\n            renderToolbar={(props) => (\n              <DatalistToolbar\n                {...props}\n                isAllSelected={isAllSelected}\n                onSelectAll={selectAll}\n                qsConfig={QS_CONFIG}\n                additionalControls={[\n                  ...(canAdd ? [addButton] : []),\n                  <ToolbarDeleteButton\n                    key=\"delete\"\n                    onDelete={handleInventoryDelete}\n                    itemsToDelete={selected}\n                    pluralizedItemName={t`Inventories`}\n                    deleteDetailsRequests={deleteDetailsRequests}\n                    deleteMessage={\n                      <Plural\n                        value={selected.length}\n                        one=\"This inventory is currently being used by some templates. Are you sure you want to delete it?\"\n                        other=\"Deleting these inventories could impact some templates that rely on them. Are you sure you want to delete anyway?\"\n                      />\n                    }\n                    warningMessage={\n                      <Plural\n                        value={selected.length}\n                        one=\"The inventory will be in a pending status until the final delete is processed.\"\n                        other=\"The inventories will be in a pending status until the final delete is processed.\"\n                      />\n                    }\n                  />,\n                ]}\n              />\n            )}\n            renderRow={(inventory, index) => (\n              <InventoryListItem\n                key={inventory.id}\n                value={inventory.name}\n                inventory={inventory}\n                rowIndex={index}\n                fetchInventories={fetchInventories}\n                detailUrl={\n                  inventory.kind === 'smart'\n                    ? `${match.url}/smart_inventory/${inventory.id}/details`\n                    : `${match.url}/inventory/${inventory.id}/details`\n                }\n                onSelect={() => {\n                  if (!inventory.pending_deletion) {\n                    handleSelect(inventory);\n                  }\n                }}\n                onCopy={handleCopy}\n                isSelected={selected.some((row) => row.id === inventory.id)}\n              />\n            )}\n            emptyStateControls={canAdd && addButton}\n          />\n        </Card>\n        <AlertModal\n          isOpen={deletionError}\n          variant=\"error\"\n          aria-label={t`Deletion Error`}\n          title={t`Error!`}\n          onClose={clearDeletionError}\n        >\n          {t`Failed to delete one or more inventories.`}\n          <ErrorDetail error={deletionError} />\n        </AlertModal>\n      </PageSection>\n      <Toast {...toastProps} />\n    </>\n  );\n}\n\nexport default InventoryList;\n"]},"metadata":{},"sourceType":"module"}