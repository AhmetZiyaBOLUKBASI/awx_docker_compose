{"ast":null,"code":"import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from'@lingui/core';import{en,fr,es,ko,nl,ja,zh,zu}from'make-plural/plurals';export var locales={en:'English',ja:'Japanese',zu:'Zulu',fr:'French',es:'Spanish',ko:'Korean',zh:'Chinese',nl:'Dutch'};i18n.loadLocaleData({en:{plurals:en},fr:{plurals:fr},es:{plurals:es},ko:{plurals:ko},nl:{plurals:nl},ja:{plurals:ja},zh:{plurals:zh},zu:{plurals:zu}});/**\n * We do a dynamic import of just the catalog that we need\n * @param locale any locale string\n */export function dynamicActivate(_x){return _dynamicActivate.apply(this,arguments);}function _dynamicActivate(){_dynamicActivate=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(locale){var _yield$import,messages;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return import(\"./locales/\".concat(locale,\"/messages\"));case 2:_yield$import=_context.sent;messages=_yield$import.messages;i18n.load(locale,messages);i18n.activate(locale);case 6:case\"end\":return _context.stop();}}},_callee);}));return _dynamicActivate.apply(this,arguments);}","map":{"version":3,"sources":["/awx_devel/awx/ui/src/i18nLoader.js"],"names":["i18n","en","fr","es","ko","nl","ja","zh","zu","locales","loadLocaleData","plurals","dynamicActivate","locale","messages","load","activate"],"mappings":"iNAAA,OAASA,IAAT,KAAqB,cAArB,CACA,OAASC,EAAT,CAAaC,EAAb,CAAiBC,EAAjB,CAAqBC,EAArB,CAAyBC,EAAzB,CAA6BC,EAA7B,CAAiCC,EAAjC,CAAqCC,EAArC,KAA+C,qBAA/C,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,CACrBR,EAAE,CAAE,SADiB,CAErBK,EAAE,CAAE,UAFiB,CAGrBE,EAAE,CAAE,MAHiB,CAIrBN,EAAE,CAAE,QAJiB,CAKrBC,EAAE,CAAE,SALiB,CAMrBC,EAAE,CAAE,QANiB,CAOrBG,EAAE,CAAE,SAPiB,CAQrBF,EAAE,CAAE,OARiB,CAAhB,CAWPL,IAAI,CAACU,cAAL,CAAoB,CAClBT,EAAE,CAAE,CAAEU,OAAO,CAAEV,EAAX,CADc,CAElBC,EAAE,CAAE,CAAES,OAAO,CAAET,EAAX,CAFc,CAGlBC,EAAE,CAAE,CAAEQ,OAAO,CAAER,EAAX,CAHc,CAIlBC,EAAE,CAAE,CAAEO,OAAO,CAAEP,EAAX,CAJc,CAKlBC,EAAE,CAAE,CAAEM,OAAO,CAAEN,EAAX,CALc,CAMlBC,EAAE,CAAE,CAAEK,OAAO,CAAEL,EAAX,CANc,CAOlBC,EAAE,CAAE,CAAEI,OAAO,CAAEJ,EAAX,CAPc,CAQlBC,EAAE,CAAE,CAAEG,OAAO,CAAEH,EAAX,CARc,CAApB,EAWA;AACA;AACA;AACA,GACA,eAAsBI,CAAAA,eAAtB,oD,qGAAO,iBAA+BC,MAA/B,mKACsB,4BAAoBA,MAApB,cADtB,oCACGC,QADH,eACGA,QADH,CAELd,IAAI,CAACe,IAAL,CAAUF,MAAV,CAAkBC,QAAlB,EACAd,IAAI,CAACgB,QAAL,CAAcH,MAAd,EAHK,sD","sourcesContent":["import { i18n } from '@lingui/core';\nimport { en, fr, es, ko, nl, ja, zh, zu } from 'make-plural/plurals';\n\nexport const locales = {\n  en: 'English',\n  ja: 'Japanese',\n  zu: 'Zulu',\n  fr: 'French',\n  es: 'Spanish',\n  ko: 'Korean',\n  zh: 'Chinese',\n  nl: 'Dutch',\n};\n\ni18n.loadLocaleData({\n  en: { plurals: en },\n  fr: { plurals: fr },\n  es: { plurals: es },\n  ko: { plurals: ko },\n  nl: { plurals: nl },\n  ja: { plurals: ja },\n  zh: { plurals: zh },\n  zu: { plurals: zu },\n});\n\n/**\n * We do a dynamic import of just the catalog that we need\n * @param locale any locale string\n */\nexport async function dynamicActivate(locale) {\n  const { messages } = await import(`./locales/${locale}/messages`);\n  i18n.load(locale, messages);\n  i18n.activate(locale);\n}\n"]},"metadata":{},"sourceType":"module"}