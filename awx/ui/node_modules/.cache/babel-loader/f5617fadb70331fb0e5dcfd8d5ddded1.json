{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectWithoutProperties from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"id\",\"helperText\",\"name\",\"label\",\"tooltip\",\"tooltipMaxWidth\",\"validate\",\"isRequired\",\"type\"];/* eslint-disable react/jsx-no-useless-fragment */import React from'react';import{useField}from'formik';import{FormGroup,TextInput,TextArea}from'@patternfly/react-core';import Popover from'../Popover';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function FormField(props){var id=props.id,helperText=props.helperText,name=props.name,label=props.label,tooltip=props.tooltip,tooltipMaxWidth=props.tooltipMaxWidth,validate=props.validate,isRequired=props.isRequired,type=props.type,rest=_objectWithoutProperties(props,_excluded);var _useField=useField({name:name,validate:validate}),_useField2=_slicedToArray(_useField,2),field=_useField2[0],meta=_useField2[1];var isValid=!(meta.touched&&meta.error);return/*#__PURE__*/_jsx(_Fragment,{children:type==='textarea'&&/*#__PURE__*/_jsx(FormGroup,{fieldId:id,\"data-cy\":\"\".concat(id,\"-form-group\"),helperText:helperText,helperTextInvalid:meta.error,isRequired:isRequired,validated:isValid?'default':'error',label:label,labelIcon:/*#__PURE__*/_jsx(Popover,{content:tooltip,maxWidth:tooltipMaxWidth}),children:/*#__PURE__*/_jsx(TextArea,_objectSpread(_objectSpread(_objectSpread({id:id,isRequired:isRequired,validated:isValid?'default':'error',resizeOrientation:\"vertical\"},rest),field),{},{onChange:function onChange(value,event){field.onChange(event);}}))})||/*#__PURE__*/_jsx(FormGroup,{fieldId:id,\"data-cy\":\"\".concat(id,\"-form-group\"),helperText:helperText,helperTextInvalid:meta.error,isRequired:isRequired,validated:isValid?'default':'error',label:label,labelIcon:/*#__PURE__*/_jsx(Popover,{content:tooltip,maxWidth:tooltipMaxWidth}),children:/*#__PURE__*/_jsx(TextInput,_objectSpread(_objectSpread(_objectSpread({id:id,isRequired:isRequired,validated:isValid?'default':'error'},rest),field),{},{type:type,onChange:function onChange(value,event){field.onChange(event);}}))})});}FormField.defaultProps={helperText:'',type:'text',validate:function validate(){},isRequired:false,tooltip:null,tooltipMaxWidth:''};export default FormField;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/FormField/FormField.js"],"names":["React","useField","FormGroup","TextInput","TextArea","Popover","FormField","props","id","helperText","name","label","tooltip","tooltipMaxWidth","validate","isRequired","type","rest","field","meta","isValid","touched","error","value","event","onChange","defaultProps"],"mappings":"obAAA,kDACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,QAAT,KAAyB,QAAzB,CACA,OAASC,SAAT,CAAoBC,SAApB,CAA+BC,QAA/B,KAA+C,wBAA/C,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,C,gGAEA,QAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,CACxB,GACEC,CAAAA,EADF,CAWID,KAXJ,CACEC,EADF,CAEEC,UAFF,CAWIF,KAXJ,CAEEE,UAFF,CAGEC,IAHF,CAWIH,KAXJ,CAGEG,IAHF,CAIEC,KAJF,CAWIJ,KAXJ,CAIEI,KAJF,CAKEC,OALF,CAWIL,KAXJ,CAKEK,OALF,CAMEC,eANF,CAWIN,KAXJ,CAMEM,eANF,CAOEC,QAPF,CAWIP,KAXJ,CAOEO,QAPF,CAQEC,UARF,CAWIR,KAXJ,CAQEQ,UARF,CASEC,IATF,CAWIT,KAXJ,CASES,IATF,CAUKC,IAVL,0BAWIV,KAXJ,YAaA,cAAsBN,QAAQ,CAAC,CAAES,IAAI,CAAJA,IAAF,CAAQI,QAAQ,CAARA,QAAR,CAAD,CAA9B,wCAAOI,KAAP,eAAcC,IAAd,eACA,GAAMC,CAAAA,OAAO,CAAG,EAAED,IAAI,CAACE,OAAL,EAAgBF,IAAI,CAACG,KAAvB,CAAhB,CAEA,mBACE,yBACIN,IAAI,GAAK,UAAT,eACA,KAAC,SAAD,EACE,OAAO,CAAER,EADX,CAEE,oBAAYA,EAAZ,eAFF,CAGE,UAAU,CAAEC,UAHd,CAIE,iBAAiB,CAAEU,IAAI,CAACG,KAJ1B,CAKE,UAAU,CAAEP,UALd,CAME,SAAS,CAAEK,OAAO,CAAG,SAAH,CAAe,OANnC,CAOE,KAAK,CAAET,KAPT,CAQE,SAAS,cAAE,KAAC,OAAD,EAAS,OAAO,CAAEC,OAAlB,CAA2B,QAAQ,CAAEC,eAArC,EARb,uBAUE,KAAC,QAAD,4CACE,EAAE,CAAEL,EADN,CAEE,UAAU,CAAEO,UAFd,CAGE,SAAS,CAAEK,OAAO,CAAG,SAAH,CAAe,OAHnC,CAIE,iBAAiB,CAAC,UAJpB,EAKMH,IALN,EAMMC,KANN,MAOE,QAAQ,CAAE,kBAACK,KAAD,CAAQC,KAAR,CAAkB,CAC1BN,KAAK,CAACO,QAAN,CAAeD,KAAf,EACD,CATH,GAVF,EADD,eAwBC,KAAC,SAAD,EACE,OAAO,CAAEhB,EADX,CAEE,oBAAYA,EAAZ,eAFF,CAGE,UAAU,CAAEC,UAHd,CAIE,iBAAiB,CAAEU,IAAI,CAACG,KAJ1B,CAKE,UAAU,CAAEP,UALd,CAME,SAAS,CAAEK,OAAO,CAAG,SAAH,CAAe,OANnC,CAOE,KAAK,CAAET,KAPT,CAQE,SAAS,cAAE,KAAC,OAAD,EAAS,OAAO,CAAEC,OAAlB,CAA2B,QAAQ,CAAEC,eAArC,EARb,uBAUE,KAAC,SAAD,4CACE,EAAE,CAAEL,EADN,CAEE,UAAU,CAAEO,UAFd,CAGE,SAAS,CAAEK,OAAO,CAAG,SAAH,CAAe,OAHnC,EAIMH,IAJN,EAKMC,KALN,MAME,IAAI,CAAEF,IANR,CAOE,QAAQ,CAAE,kBAACO,KAAD,CAAQC,KAAR,CAAkB,CAC1BN,KAAK,CAACO,QAAN,CAAeD,KAAf,EACD,CATH,GAVF,EAzBJ,EADF,CAmDD,CAcDlB,SAAS,CAACoB,YAAV,CAAyB,CACvBjB,UAAU,CAAE,EADW,CAEvBO,IAAI,CAAE,MAFiB,CAGvBF,QAAQ,CAAE,mBAAM,CAAE,CAHK,CAIvBC,UAAU,CAAE,KAJW,CAKvBH,OAAO,CAAE,IALc,CAMvBC,eAAe,CAAE,EANM,CAAzB,CASA,cAAeP,CAAAA,SAAf","sourcesContent":["/* eslint-disable react/jsx-no-useless-fragment */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useField } from 'formik';\nimport { FormGroup, TextInput, TextArea } from '@patternfly/react-core';\nimport Popover from '../Popover';\n\nfunction FormField(props) {\n  const {\n    id,\n    helperText,\n    name,\n    label,\n    tooltip,\n    tooltipMaxWidth,\n    validate,\n    isRequired,\n    type,\n    ...rest\n  } = props;\n\n  const [field, meta] = useField({ name, validate });\n  const isValid = !(meta.touched && meta.error);\n\n  return (\n    <>\n      {(type === 'textarea' && (\n        <FormGroup\n          fieldId={id}\n          data-cy={`${id}-form-group`}\n          helperText={helperText}\n          helperTextInvalid={meta.error}\n          isRequired={isRequired}\n          validated={isValid ? 'default' : 'error'}\n          label={label}\n          labelIcon={<Popover content={tooltip} maxWidth={tooltipMaxWidth} />}\n        >\n          <TextArea\n            id={id}\n            isRequired={isRequired}\n            validated={isValid ? 'default' : 'error'}\n            resizeOrientation=\"vertical\"\n            {...rest}\n            {...field}\n            onChange={(value, event) => {\n              field.onChange(event);\n            }}\n          />\n        </FormGroup>\n      )) || (\n        <FormGroup\n          fieldId={id}\n          data-cy={`${id}-form-group`}\n          helperText={helperText}\n          helperTextInvalid={meta.error}\n          isRequired={isRequired}\n          validated={isValid ? 'default' : 'error'}\n          label={label}\n          labelIcon={<Popover content={tooltip} maxWidth={tooltipMaxWidth} />}\n        >\n          <TextInput\n            id={id}\n            isRequired={isRequired}\n            validated={isValid ? 'default' : 'error'}\n            {...rest}\n            {...field}\n            type={type}\n            onChange={(value, event) => {\n              field.onChange(event);\n            }}\n          />\n        </FormGroup>\n      )}\n    </>\n  );\n}\n\nFormField.propTypes = {\n  helperText: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n  type: PropTypes.string,\n  validate: PropTypes.func,\n  isRequired: PropTypes.bool,\n  tooltip: PropTypes.node,\n  tooltipMaxWidth: PropTypes.string,\n};\n\nFormField.defaultProps = {\n  helperText: '',\n  type: 'text',\n  validate: () => {},\n  isRequired: false,\n  tooltip: null,\n  tooltipMaxWidth: '',\n};\n\nexport default FormField;\n"]},"metadata":{},"sourceType":"module"}