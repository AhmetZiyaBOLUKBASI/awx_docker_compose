{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { DropdownItem } from '../Dropdown';\nimport { OverflowMenuContext } from './OverflowMenuContext';\nexport var OverflowMenuDropdownItem = function OverflowMenuDropdownItem(_a) {\n  var children = _a.children,\n      _a$isShared = _a.isShared,\n      isShared = _a$isShared === void 0 ? false : _a$isShared,\n      index = _a.index,\n      additionalProps = __rest(_a, [\"children\", \"isShared\", \"index\"]);\n\n  return React.createElement(OverflowMenuContext.Consumer, null, function (value) {\n    return (!isShared || value.isBelowBreakpoint) && React.createElement(DropdownItem, Object.assign({\n      component: \"button\",\n      index: index\n    }, additionalProps), children);\n  });\n};\nOverflowMenuDropdownItem.displayName = 'OverflowMenuDropdownItem';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/OverflowMenu/OverflowMenuDropdownItem.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,YAAT,QAAgD,aAAhD;AACA,SAAS,mBAAT,QAAoC,uBAApC;AASA,OAAO,IAAM,wBAAwB,GAA2D,SAAnF,wBAAmF,CAAC,EAAD,EAK5D;AAL6D,MAC/F,QAD+F,GAG1F,EAH0F,CAC/F,QAD+F;AAAA,oBAG1F,EAH0F,CAE/F,QAF+F;AAAA,MAE/F,QAF+F,4BAEpF,KAFoF;AAAA,MAG/F,KAH+F,GAG1F,EAH0F,CAG/F,KAH+F;AAAA,MAI5F,eAJ4F,GAI7E,MAAA,CAAA,EAAA,EAJ6E,CAAA,UAAA,EAAA,UAAA,EAAA,OAAA,CAI7E,CAJ6E;;AAK5D,SACnC,KAAA,CAAA,aAAA,CAAC,mBAAmB,CAAC,QAArB,EAA6B,IAA7B,EACG,UAAA,KAAK;AAAA,WACJ,CAAC,CAAC,QAAD,IAAa,KAAK,CAAC,iBAApB,KACE,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,MAAA,CAAA,MAAA,CAAA;AAAC,MAAA,SAAS,EAAC,QAAX;AAAoB,MAAA,KAAK,EAAE;AAA3B,KAAA,EAAsC,eAAtC,CAAb,EACG,QADH,CAFE;AAAA,GADR,CADmC;AAUpC,CAfM;AAgBP,wBAAwB,CAAC,WAAzB,GAAuC,0BAAvC","sourcesContent":["import * as React from 'react';\nimport { DropdownItem, DropdownItemProps } from '../Dropdown';\nimport { OverflowMenuContext } from './OverflowMenuContext';\n\nexport interface OverflowMenuDropdownItemProps extends DropdownItemProps {\n  /** Indicates when a dropdown item shows and hides the corresponding list item */\n  isShared?: boolean;\n  /** Indicates the index of the list item */\n  index?: number;\n}\n\nexport const OverflowMenuDropdownItem: React.FunctionComponent<OverflowMenuDropdownItemProps> = ({\n  children,\n  isShared = false,\n  index,\n  ...additionalProps\n}: OverflowMenuDropdownItemProps) => (\n  <OverflowMenuContext.Consumer>\n    {value =>\n      (!isShared || value.isBelowBreakpoint) && (\n        <DropdownItem component=\"button\" index={index} {...additionalProps}>\n          {children}\n        </DropdownItem>\n      )\n    }\n  </OverflowMenuContext.Consumer>\n);\nOverflowMenuDropdownItem.displayName = 'OverflowMenuDropdownItem';\n"]},"metadata":{},"sourceType":"module"}