{"ast":null,"code":"import _classCallCheck from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import Base from'../Base';import NotificationsMixin from'../mixins/Notifications.mixin';import LaunchUpdateMixin from'../mixins/LaunchUpdate.mixin';import SchedulesMixin from'../mixins/Schedules.mixin';var InventorySources=/*#__PURE__*/function(_LaunchUpdateMixin){_inherits(InventorySources,_LaunchUpdateMixin);var _super=_createSuper(InventorySources);function InventorySources(http){var _this;_classCallCheck(this,InventorySources);_this=_super.call(this,http);_this.baseUrl='api/v2/inventory_sources/';_this.createSchedule=_this.createSchedule.bind(_assertThisInitialized(_this));_this.createSyncStart=_this.createSyncStart.bind(_assertThisInitialized(_this));_this.destroyGroups=_this.destroyGroups.bind(_assertThisInitialized(_this));_this.destroyHosts=_this.destroyHosts.bind(_assertThisInitialized(_this));return _this;}_createClass(InventorySources,[{key:\"createSyncStart\",value:function createSyncStart(sourceId,extraVars){return this.http.post(\"\".concat(this.baseUrl).concat(sourceId,\"/update/\"),{extra_vars:extraVars});}},{key:\"readGroups\",value:function readGroups(id){return this.http.get(\"\".concat(this.baseUrl).concat(id,\"/groups/\"));}},{key:\"readHosts\",value:function readHosts(id){return this.http.get(\"\".concat(this.baseUrl).concat(id,\"/hosts/\"));}},{key:\"destroyGroups\",value:function destroyGroups(id){return this.http.delete(\"\".concat(this.baseUrl).concat(id,\"/groups/\"));}},{key:\"destroyHosts\",value:function destroyHosts(id){return this.http.delete(\"\".concat(this.baseUrl).concat(id,\"/hosts/\"));}}]);return InventorySources;}(LaunchUpdateMixin(NotificationsMixin(SchedulesMixin(Base))));export default InventorySources;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/api/models/InventorySources.js"],"names":["Base","NotificationsMixin","LaunchUpdateMixin","SchedulesMixin","InventorySources","http","baseUrl","createSchedule","bind","createSyncStart","destroyGroups","destroyHosts","sourceId","extraVars","post","extra_vars","id","get","delete"],"mappings":"mgBAAA,MAAOA,CAAAA,IAAP,KAAiB,SAAjB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,+BAA/B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,8BAA9B,CACA,MAAOC,CAAAA,cAAP,KAA2B,2BAA3B,C,GAEMC,CAAAA,gB,oIAGJ,0BAAYC,IAAZ,CAAkB,kDAChB,uBAAMA,IAAN,EACA,MAAKC,OAAL,CAAe,2BAAf,CAEA,MAAKC,cAAL,CAAsB,MAAKA,cAAL,CAAoBC,IAApB,+BAAtB,CACA,MAAKC,eAAL,CAAuB,MAAKA,eAAL,CAAqBD,IAArB,+BAAvB,CACA,MAAKE,aAAL,CAAqB,MAAKA,aAAL,CAAmBF,IAAnB,+BAArB,CACA,MAAKG,YAAL,CAAoB,MAAKA,YAAL,CAAkBH,IAAlB,+BAApB,CAPgB,aAQjB,C,4DAED,yBAAgBI,QAAhB,CAA0BC,SAA1B,CAAqC,CACnC,MAAO,MAAKR,IAAL,CAAUS,IAAV,WAAkB,KAAKR,OAAvB,SAAiCM,QAAjC,aAAqD,CAC1DG,UAAU,CAAEF,SAD8C,CAArD,CAAP,CAGD,C,0BAED,oBAAWG,EAAX,CAAe,CACb,MAAO,MAAKX,IAAL,CAAUY,GAAV,WAAiB,KAAKX,OAAtB,SAAgCU,EAAhC,aAAP,CACD,C,yBAED,mBAAUA,EAAV,CAAc,CACZ,MAAO,MAAKX,IAAL,CAAUY,GAAV,WAAiB,KAAKX,OAAtB,SAAgCU,EAAhC,YAAP,CACD,C,6BAED,uBAAcA,EAAd,CAAkB,CAChB,MAAO,MAAKX,IAAL,CAAUa,MAAV,WAAoB,KAAKZ,OAAzB,SAAmCU,EAAnC,aAAP,CACD,C,4BAED,sBAAaA,EAAb,CAAiB,CACf,MAAO,MAAKX,IAAL,CAAUa,MAAV,WAAoB,KAAKZ,OAAzB,SAAmCU,EAAnC,YAAP,CACD,C,8BAjC4Bd,iBAAiB,CAC9CD,kBAAkB,CAACE,cAAc,CAACH,IAAD,CAAf,CAD4B,C,EAmChD,cAAeI,CAAAA,gBAAf","sourcesContent":["import Base from '../Base';\nimport NotificationsMixin from '../mixins/Notifications.mixin';\nimport LaunchUpdateMixin from '../mixins/LaunchUpdate.mixin';\nimport SchedulesMixin from '../mixins/Schedules.mixin';\n\nclass InventorySources extends LaunchUpdateMixin(\n  NotificationsMixin(SchedulesMixin(Base))\n) {\n  constructor(http) {\n    super(http);\n    this.baseUrl = 'api/v2/inventory_sources/';\n\n    this.createSchedule = this.createSchedule.bind(this);\n    this.createSyncStart = this.createSyncStart.bind(this);\n    this.destroyGroups = this.destroyGroups.bind(this);\n    this.destroyHosts = this.destroyHosts.bind(this);\n  }\n\n  createSyncStart(sourceId, extraVars) {\n    return this.http.post(`${this.baseUrl}${sourceId}/update/`, {\n      extra_vars: extraVars,\n    });\n  }\n\n  readGroups(id) {\n    return this.http.get(`${this.baseUrl}${id}/groups/`);\n  }\n\n  readHosts(id) {\n    return this.http.get(`${this.baseUrl}${id}/hosts/`);\n  }\n\n  destroyGroups(id) {\n    return this.http.delete(`${this.baseUrl}${id}/groups/`);\n  }\n\n  destroyHosts(id) {\n    return this.http.delete(`${this.baseUrl}${id}/hosts/`);\n  }\n}\nexport default InventorySources;\n"]},"metadata":{},"sourceType":"module"}