{"ast":null,"code":"import _objectWithoutProperties from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _excluded=[\"confirm_password\"];import{i18n}from\"@lingui/core\";import React,{useCallback}from'react';import{Formik,useField,useFormikContext}from'formik';import{Form,FormGroup}from'@patternfly/react-core';import{useConfig}from'contexts/Config';import AnsibleSelect from'components/AnsibleSelect';import FormActionGroup from'components/FormActionGroup/FormActionGroup';import FormField,{PasswordField,FormSubmitError}from'components/FormField';import OrganizationLookup from'components/Lookup/OrganizationLookup';import{required}from'util/validators';import{FormColumnLayout}from'components/FormLayout';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function UserFormFields(_ref){var _user$auth;var user=_ref.user;var _useFormikContext=useFormikContext(),setFieldValue=_useFormikContext.setFieldValue,setFieldTouched=_useFormikContext.setFieldTouched;var _useConfig=useConfig(),_useConfig$me=_useConfig.me,me=_useConfig$me===void 0?{}:_useConfig$me;var ldapUser=user.ldap_dn;var socialAuthUser=((_user$auth=user.auth)===null||_user$auth===void 0?void 0:_user$auth.length)>0;var externalAccount=user.external_account;var userTypeOptions=[{value:'normal',key:'normal',label:/*i18n*/i18n._(\"Normal User\"),isDisabled:false},{value:'auditor',key:'auditor',label:/*i18n*/i18n._(\"System Auditor\"),isDisabled:false},{value:'administrator',key:'administrator',label:/*i18n*/i18n._(\"System Administrator\"),isDisabled:false}];var _useField=useField('organization'),_useField2=_slicedToArray(_useField,3),organizationField=_useField2[0],organizationMeta=_useField2[1],organizationHelpers=_useField2[2];var _useField3=useField('user_type'),_useField4=_slicedToArray(_useField3,2),userTypeField=_useField4[0],userTypeMeta=_useField4[1];var handleOrganizationUpdate=useCallback(function(value){setFieldValue('organization',value);setFieldTouched('organization',true,false);},[setFieldValue,setFieldTouched]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FormField,{id:\"user-first-name\",label:/*i18n*/i18n._(\"First Name\"),name:\"first_name\",type:\"text\"}),/*#__PURE__*/_jsx(FormField,{id:\"user-last-name\",label:/*i18n*/i18n._(\"Last Name\"),name:\"last_name\",type:\"text\"}),/*#__PURE__*/_jsx(FormField,{id:\"user-email\",label:/*i18n*/i18n._(\"Email\"),name:\"email\",type:\"text\"}),/*#__PURE__*/_jsx(FormField,{id:\"user-username\",label:/*i18n*/i18n._(\"Username\"),name:\"username\",type:\"text\",validate:!ldapUser&&!externalAccount?required(null):function(){return undefined;},isRequired:!ldapUser&&!externalAccount}),!ldapUser&&!(socialAuthUser&&externalAccount)&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(PasswordField,{id:\"user-password\",label:/*i18n*/i18n._(\"Password\"),name:\"password\",validate:!user.id?required(/*i18n*/i18n._(\"This field must not be blank\")):function(){return undefined;},isRequired:!user.id}),/*#__PURE__*/_jsx(PasswordField,{id:\"user-confirm-password\",label:/*i18n*/i18n._(\"Confirm Password\"),name:\"confirm_password\",validate:!user.id?required(/*i18n*/i18n._(\"This field must not be blank\")):function(){return undefined;},isRequired:!user.id})]}),me.is_superuser&&/*#__PURE__*/_jsx(FormGroup,{fieldId:\"user-type\",helperTextInvalid:userTypeMeta.error,isRequired:true,validated:!userTypeMeta.touched||!userTypeMeta.error?'default':'error',label:/*i18n*/i18n._(\"User Type\"),children:/*#__PURE__*/_jsx(AnsibleSelect,_objectSpread({isValid:!userTypeMeta.touched||!userTypeMeta.error,id:\"user-type\",data:userTypeOptions},userTypeField))}),!user.id&&/*#__PURE__*/_jsx(OrganizationLookup,{helperTextInvalid:organizationMeta.error,isValid:!organizationMeta.touched||!organizationMeta.error,onBlur:function onBlur(){return organizationHelpers.setTouched();},onChange:handleOrganizationUpdate,value:organizationField.value,required:true,autoPopulate:!(user!==null&&user!==void 0&&user.id),validate:required(/*i18n*/i18n._(\"Select a value for this field\"))})]});}function UserForm(_ref2){var user=_ref2.user,handleCancel=_ref2.handleCancel,handleSubmit=_ref2.handleSubmit,submitError=_ref2.submitError;var handleValidateAndSubmit=function handleValidateAndSubmit(values,_ref3){var setErrors=_ref3.setErrors;if(values.password!==values.confirm_password){setErrors({confirm_password:/*i18n*/i18n._(\"This value does not match the password you entered previously. Please confirm that password.\")});}else{values.is_superuser=values.user_type==='administrator';values.is_system_auditor=values.user_type==='auditor';if(!values.password||values.password===''){delete values.password;}var confirm_password=values.confirm_password,submitValues=_objectWithoutProperties(values,_excluded);handleSubmit(submitValues);}};var userType;if(user.is_superuser){userType='administrator';}else if(user.is_system_auditor){userType='auditor';}else{userType='normal';}return/*#__PURE__*/_jsx(Formik,{initialValues:{first_name:user.first_name||'',last_name:user.last_name||'',organization:null,email:user.email||'',username:user.username||'',password:'',confirm_password:'',user_type:userType},onSubmit:handleValidateAndSubmit,children:function children(formik){return/*#__PURE__*/_jsx(Form,{autoComplete:\"off\",onSubmit:formik.handleSubmit,children:/*#__PURE__*/_jsxs(FormColumnLayout,{children:[/*#__PURE__*/_jsx(UserFormFields,{user:user}),/*#__PURE__*/_jsx(FormSubmitError,{error:submitError}),/*#__PURE__*/_jsx(FormActionGroup,{onCancel:handleCancel,onSubmit:formik.handleSubmit})]})});}});}UserForm.defaultProps={user:{}};export default UserForm;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/User/shared/UserForm.js"],"names":["React","useCallback","Formik","useField","useFormikContext","Form","FormGroup","useConfig","AnsibleSelect","FormActionGroup","FormField","PasswordField","FormSubmitError","OrganizationLookup","required","FormColumnLayout","UserFormFields","user","setFieldValue","setFieldTouched","me","ldapUser","ldap_dn","socialAuthUser","auth","length","externalAccount","external_account","userTypeOptions","value","key","label","isDisabled","organizationField","organizationMeta","organizationHelpers","userTypeField","userTypeMeta","handleOrganizationUpdate","undefined","id","is_superuser","error","touched","setTouched","UserForm","handleCancel","handleSubmit","submitError","handleValidateAndSubmit","values","setErrors","password","confirm_password","user_type","is_system_auditor","submitValues","userType","first_name","last_name","organization","email","username","formik","defaultProps"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { t } from '@lingui/macro';\nimport { Formik, useField, useFormikContext } from 'formik';\nimport { Form, FormGroup } from '@patternfly/react-core';\nimport { useConfig } from 'contexts/Config';\nimport AnsibleSelect from 'components/AnsibleSelect';\nimport FormActionGroup from 'components/FormActionGroup/FormActionGroup';\nimport FormField, {\n  PasswordField,\n  FormSubmitError,\n} from 'components/FormField';\nimport OrganizationLookup from 'components/Lookup/OrganizationLookup';\nimport { required } from 'util/validators';\nimport { FormColumnLayout } from 'components/FormLayout';\n\nfunction UserFormFields({ user }) {\n  const { setFieldValue, setFieldTouched } = useFormikContext();\n  const { me = {} } = useConfig();\n  const ldapUser = user.ldap_dn;\n  const socialAuthUser = user.auth?.length > 0;\n  const externalAccount = user.external_account;\n\n  const userTypeOptions = [\n    {\n      value: 'normal',\n      key: 'normal',\n      label: t`Normal User`,\n      isDisabled: false,\n    },\n    {\n      value: 'auditor',\n      key: 'auditor',\n      label: t`System Auditor`,\n      isDisabled: false,\n    },\n    {\n      value: 'administrator',\n      key: 'administrator',\n      label: t`System Administrator`,\n      isDisabled: false,\n    },\n  ];\n\n  const [organizationField, organizationMeta, organizationHelpers] =\n    useField('organization');\n\n  const [userTypeField, userTypeMeta] = useField('user_type');\n\n  const handleOrganizationUpdate = useCallback(\n    (value) => {\n      setFieldValue('organization', value);\n      setFieldTouched('organization', true, false);\n    },\n    [setFieldValue, setFieldTouched]\n  );\n\n  return (\n    <>\n      <FormField\n        id=\"user-first-name\"\n        label={t`First Name`}\n        name=\"first_name\"\n        type=\"text\"\n      />\n      <FormField\n        id=\"user-last-name\"\n        label={t`Last Name`}\n        name=\"last_name\"\n        type=\"text\"\n      />\n      <FormField id=\"user-email\" label={t`Email`} name=\"email\" type=\"text\" />\n      <FormField\n        id=\"user-username\"\n        label={t`Username`}\n        name=\"username\"\n        type=\"text\"\n        validate={\n          !ldapUser && !externalAccount ? required(null) : () => undefined\n        }\n        isRequired={!ldapUser && !externalAccount}\n      />\n      {!ldapUser && !(socialAuthUser && externalAccount) && (\n        <>\n          <PasswordField\n            id=\"user-password\"\n            label={t`Password`}\n            name=\"password\"\n            validate={\n              !user.id\n                ? required(t`This field must not be blank`)\n                : () => undefined\n            }\n            isRequired={!user.id}\n          />\n          <PasswordField\n            id=\"user-confirm-password\"\n            label={t`Confirm Password`}\n            name=\"confirm_password\"\n            validate={\n              !user.id\n                ? required(t`This field must not be blank`)\n                : () => undefined\n            }\n            isRequired={!user.id}\n          />\n        </>\n      )}\n\n      {me.is_superuser && (\n        <FormGroup\n          fieldId=\"user-type\"\n          helperTextInvalid={userTypeMeta.error}\n          isRequired\n          validated={\n            !userTypeMeta.touched || !userTypeMeta.error ? 'default' : 'error'\n          }\n          label={t`User Type`}\n        >\n          <AnsibleSelect\n            isValid={!userTypeMeta.touched || !userTypeMeta.error}\n            id=\"user-type\"\n            data={userTypeOptions}\n            {...userTypeField}\n          />\n        </FormGroup>\n      )}\n\n      {!user.id && (\n        <OrganizationLookup\n          helperTextInvalid={organizationMeta.error}\n          isValid={!organizationMeta.touched || !organizationMeta.error}\n          onBlur={() => organizationHelpers.setTouched()}\n          onChange={handleOrganizationUpdate}\n          value={organizationField.value}\n          required\n          autoPopulate={!user?.id}\n          validate={required(t`Select a value for this field`)}\n        />\n      )}\n    </>\n  );\n}\n\nfunction UserForm({ user, handleCancel, handleSubmit, submitError }) {\n  const handleValidateAndSubmit = (values, { setErrors }) => {\n    if (values.password !== values.confirm_password) {\n      setErrors({\n        confirm_password: t`This value does not match the password you entered previously. Please confirm that password.`,\n      });\n    } else {\n      values.is_superuser = values.user_type === 'administrator';\n      values.is_system_auditor = values.user_type === 'auditor';\n      if (!values.password || values.password === '') {\n        delete values.password;\n      }\n      const { confirm_password, ...submitValues } = values;\n      handleSubmit(submitValues);\n    }\n  };\n\n  let userType;\n  if (user.is_superuser) {\n    userType = 'administrator';\n  } else if (user.is_system_auditor) {\n    userType = 'auditor';\n  } else {\n    userType = 'normal';\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        first_name: user.first_name || '',\n        last_name: user.last_name || '',\n        organization: null,\n        email: user.email || '',\n        username: user.username || '',\n        password: '',\n        confirm_password: '',\n        user_type: userType,\n      }}\n      onSubmit={handleValidateAndSubmit}\n    >\n      {(formik) => (\n        <Form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n          <FormColumnLayout>\n            <UserFormFields user={user} />\n            <FormSubmitError error={submitError} />\n            <FormActionGroup\n              onCancel={handleCancel}\n              onSubmit={formik.handleSubmit}\n            />\n          </FormColumnLayout>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nUserForm.propTypes = {\n  handleCancel: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  user: PropTypes.shape({}),\n};\n\nUserForm.defaultProps = {\n  user: {},\n};\n\nexport default UserForm;\n"]},"metadata":{},"sourceType":"module"}