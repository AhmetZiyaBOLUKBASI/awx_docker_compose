{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Button, ButtonVariant } from '../Button';\nimport { AlertContext } from './AlertContext';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Alert/alert';\nexport var AlertToggleExpandButton = function AlertToggleExpandButton(_a) {\n  var ariaLabel = _a['aria-label'],\n      variantLabel = _a.variantLabel,\n      onToggleExpand = _a.onToggleExpand,\n      isExpanded = _a.isExpanded,\n      props = __rest(_a, ['aria-label', \"variantLabel\", \"onToggleExpand\", \"isExpanded\"]);\n\n  var _React$useContext = React.useContext(AlertContext),\n      title = _React$useContext.title,\n      alertVariantLabel = _React$useContext.variantLabel;\n\n  return React.createElement(Button, Object.assign({\n    variant: ButtonVariant.plain,\n    onClick: onToggleExpand,\n    \"aria-expanded\": isExpanded,\n    \"aria-label\": ariaLabel === '' ? \"Toggle \".concat(variantLabel || alertVariantLabel, \" alert: \").concat(title) : ariaLabel\n  }, props), React.createElement(\"span\", {\n    className: css(styles.alertToggleIcon)\n  }, React.createElement(AngleRightIcon, {\n    \"aria-hidden\": \"true\"\n  })));\n};\nAlertToggleExpandButton.displayName = 'AlertToggleExpandButton';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Alert/AlertToggleExpandButton.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,MAAT,EAA8B,aAA9B,QAAmD,WAAnD;AACA,SAAS,YAAT,QAA6B,gBAA7B;AACA,OAAO,cAAP,MAA2B,yDAA3B;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,qDAAnB;AAaA,OAAO,IAAM,uBAAuB,GAA0D,SAAjF,uBAAiF,CAAC,EAAD,EAM3D;AAN4D,MAC/E,SAD+E,GAInF,EAJmF,CAC7F,YAD6F;AAAA,MAE7F,YAF6F,GAInF,EAJmF,CAE7F,YAF6F;AAAA,MAG7F,cAH6F,GAInF,EAJmF,CAG7F,cAH6F;AAAA,MAI7F,UAJ6F,GAInF,EAJmF,CAI7F,UAJ6F;AAAA,MAK1F,KAL0F,GAKrF,MAAA,CAAA,EAAA,EALqF,CAAA,YAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,YAAA,CAKrF,CALqF;;AAO7F,0BAAmD,KAAK,CAAC,UAAN,CAAiB,YAAjB,CAAnD;AAAA,MAAQ,KAAR,qBAAQ,KAAR;AAAA,MAA6B,iBAA7B,qBAAe,YAAf;;AACA,SACE,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO,MAAA,CAAA,MAAA,CAAA;AACL,IAAA,OAAO,EAAE,aAAa,CAAC,KADlB;AAEL,IAAA,OAAO,EAAE,cAFJ;AAEkB,qBACR,UAHV;AAGoB,kBACb,SAAS,KAAK,EAAd,oBAA6B,YAAY,IAAI,iBAA7C,qBAAyE,KAAzE,IAAmF;AAJ1F,GAAA,EAKD,KALC,CAAP,EAOE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,eAAR;AAApB,GAAA,EACE,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe;AAAA,mBAAa;AAAb,GAAf,CADF,CAPF,CADF;AAaD,CArBM;AAsBP,uBAAuB,CAAC,WAAxB,GAAsC,yBAAtC","sourcesContent":["import * as React from 'react';\nimport { Button, ButtonProps, ButtonVariant } from '../Button';\nimport { AlertContext } from './AlertContext';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Alert/alert';\n\nexport interface AlertToggleExpandButtonProps extends ButtonProps {\n  /** Aria label for the toggle button */\n  'aria-label'?: string;\n  /** A callback for when the toggle button is clicked */\n  onToggleExpand?: () => void;\n  /** Flag to indicate if the content is expanded */\n  isExpanded?: boolean;\n  /** Variant label for the toggle button */\n  variantLabel?: string;\n}\n\nexport const AlertToggleExpandButton: React.FunctionComponent<AlertToggleExpandButtonProps> = ({\n  'aria-label': ariaLabel,\n  variantLabel,\n  onToggleExpand,\n  isExpanded,\n  ...props\n}: AlertToggleExpandButtonProps) => {\n  const { title, variantLabel: alertVariantLabel } = React.useContext(AlertContext);\n  return (\n    <Button\n      variant={ButtonVariant.plain}\n      onClick={onToggleExpand}\n      aria-expanded={isExpanded}\n      aria-label={ariaLabel === '' ? `Toggle ${variantLabel || alertVariantLabel} alert: ${title}` : ariaLabel}\n      {...props}\n    >\n      <span className={css(styles.alertToggleIcon)}>\n        <AngleRightIcon aria-hidden=\"true\" />\n      </span>\n    </Button>\n  );\n};\nAlertToggleExpandButton.displayName = 'AlertToggleExpandButton';\n"]},"metadata":{},"sourceType":"module"}