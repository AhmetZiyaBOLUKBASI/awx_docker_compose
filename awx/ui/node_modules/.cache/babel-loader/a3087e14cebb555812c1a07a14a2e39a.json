{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useEffect,useCallback}from'react';import{useLocation}from'react-router-dom';import{InventorySourcesAPI}from'api';import{getQSConfig,parseQueryString}from'util/qs';import useRequest from'hooks/useRequest';import DataListToolbar from'components/DataListToolbar';import CheckboxListItem from'components/CheckboxListItem';import PaginatedTable,{HeaderCell,HeaderRow,getSearchableKeys}from'components/PaginatedTable';import{jsx as _jsx}from\"react/jsx-runtime\";var QS_CONFIG=getQSConfig('inventory-sources',{page:1,page_size:5,order_by:'name'});function InventorySourcesList(_ref){var nodeResource=_ref.nodeResource,onUpdateNodeResource=_ref.onUpdateNodeResource;var location=useLocation();var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _actionsResponse$data,_actionsResponse$data2;var params,_yield$Promise$all,_yield$Promise$all2,response,actionsResponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:params=parseQueryString(QS_CONFIG,location.search);_context.next=3;return Promise.all([InventorySourcesAPI.read(params),InventorySourcesAPI.readOptions()]);case 3:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);response=_yield$Promise$all2[0];actionsResponse=_yield$Promise$all2[1];return _context.abrupt(\"return\",{inventorySources:response.data.results,count:response.data.count,relatedSearchableKeys:((actionsResponse===null||actionsResponse===void 0?void 0:(_actionsResponse$data=actionsResponse.data)===null||_actionsResponse$data===void 0?void 0:_actionsResponse$data.related_search_fields)||[]).map(function(val){return val.slice(0,-8);}),searchableKeys:getSearchableKeys((_actionsResponse$data2=actionsResponse.data.actions)===null||_actionsResponse$data2===void 0?void 0:_actionsResponse$data2.GET)});case 8:case\"end\":return _context.stop();}}},_callee);})),[location]),{inventorySources:[],count:0,relatedSearchableKeys:[],searchableKeys:[]}),_useRequest$result=_useRequest.result,inventorySources=_useRequest$result.inventorySources,count=_useRequest$result.count,relatedSearchableKeys=_useRequest$result.relatedSearchableKeys,searchableKeys=_useRequest$result.searchableKeys,error=_useRequest.error,isLoading=_useRequest.isLoading,fetchInventorySources=_useRequest.request;useEffect(function(){fetchInventorySources();},[fetchInventorySources]);return/*#__PURE__*/_jsx(PaginatedTable,{contentError:error,hasContentLoading:isLoading,itemCount:count,items:inventorySources,qsConfig:QS_CONFIG,showPageSizeOptions:false,headerRow:/*#__PURE__*/_jsx(HeaderRow,{isExpandable:false,qsConfig:QS_CONFIG,children:/*#__PURE__*/_jsx(HeaderCell,{sortKey:\"name\",children:/*i18n*/i18n._(\"Name\")})}),renderRow:function renderRow(item,index){return/*#__PURE__*/_jsx(CheckboxListItem,{rowIndex:index,isSelected:!!(nodeResource&&nodeResource.id===item.id),itemId:item.id,name:item.name,label:item.name,onSelect:function onSelect(){return onUpdateNodeResource(item);},onDeselect:function onDeselect(){return onUpdateNodeResource(null);},isRadio:true},item.id);},renderToolbar:function renderToolbar(props){return/*#__PURE__*/_jsx(DataListToolbar,_objectSpread(_objectSpread({},props),{},{fillWidth:true}));},toolbarSearchColumns:[{name:/*i18n*/i18n._(\"Name\"),key:'name__icontains',isDefault:true},{name:/*i18n*/i18n._(\"Source\"),key:'or__source',options:[[\"file\",/*i18n*/i18n._(\"File, directory or script\")],[\"scm\",/*i18n*/i18n._(\"Sourced from a project\")],[\"ec2\",/*i18n*/i18n._(\"Amazon EC2\")],[\"gce\",/*i18n*/i18n._(\"Google Compute Engine\")],[\"azure_rm\",/*i18n*/i18n._(\"Microsoft Azure Resource Manager\")],[\"vmware\",/*i18n*/i18n._(\"VMware vCenter\")],[\"satellite6\",/*i18n*/i18n._(\"Red Hat Satellite 6\")],[\"openstack\",/*i18n*/i18n._(\"OpenStack\")],[\"rhv\",/*i18n*/i18n._(\"Red Hat Virtualization\")],[\"controller\",/*i18n*/i18n._(\"Red Hat Ansible Automation Platform\")]]}],toolbarSearchableKeys:searchableKeys,toolbarRelatedSearchableKeys:relatedSearchableKeys});}InventorySourcesList.defaultProps={nodeResource:null};export default InventorySourcesList;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Template/WorkflowJobTemplateVisualizer/Modals/NodeModals/NodeTypeStep/InventorySourcesList.js"],"names":["React","useEffect","useCallback","useLocation","InventorySourcesAPI","getQSConfig","parseQueryString","useRequest","DataListToolbar","CheckboxListItem","PaginatedTable","HeaderCell","HeaderRow","getSearchableKeys","QS_CONFIG","page","page_size","order_by","InventorySourcesList","nodeResource","onUpdateNodeResource","location","params","search","Promise","all","read","readOptions","response","actionsResponse","inventorySources","data","results","count","relatedSearchableKeys","related_search_fields","map","val","slice","searchableKeys","actions","GET","result","error","isLoading","fetchInventorySources","request","item","index","id","name","props","key","isDefault","options","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { t } from '@lingui/macro';\nimport { func, shape } from 'prop-types';\nimport { InventorySourcesAPI } from 'api';\nimport { getQSConfig, parseQueryString } from 'util/qs';\nimport useRequest from 'hooks/useRequest';\nimport DataListToolbar from 'components/DataListToolbar';\nimport CheckboxListItem from 'components/CheckboxListItem';\nimport PaginatedTable, {\n  HeaderCell,\n  HeaderRow,\n  getSearchableKeys,\n} from 'components/PaginatedTable';\n\nconst QS_CONFIG = getQSConfig('inventory-sources', {\n  page: 1,\n  page_size: 5,\n  order_by: 'name',\n});\n\nfunction InventorySourcesList({ nodeResource, onUpdateNodeResource }) {\n  const location = useLocation();\n\n  const {\n    result: { inventorySources, count, relatedSearchableKeys, searchableKeys },\n    error,\n    isLoading,\n    request: fetchInventorySources,\n  } = useRequest(\n    useCallback(async () => {\n      const params = parseQueryString(QS_CONFIG, location.search);\n      const [response, actionsResponse] = await Promise.all([\n        InventorySourcesAPI.read(params),\n        InventorySourcesAPI.readOptions(),\n      ]);\n      return {\n        inventorySources: response.data.results,\n        count: response.data.count,\n        relatedSearchableKeys: (\n          actionsResponse?.data?.related_search_fields || []\n        ).map((val) => val.slice(0, -8)),\n        searchableKeys: getSearchableKeys(actionsResponse.data.actions?.GET),\n      };\n    }, [location]),\n    {\n      inventorySources: [],\n      count: 0,\n      relatedSearchableKeys: [],\n      searchableKeys: [],\n    }\n  );\n\n  useEffect(() => {\n    fetchInventorySources();\n  }, [fetchInventorySources]);\n\n  return (\n    <PaginatedTable\n      contentError={error}\n      hasContentLoading={isLoading}\n      itemCount={count}\n      items={inventorySources}\n      qsConfig={QS_CONFIG}\n      showPageSizeOptions={false}\n      headerRow={\n        <HeaderRow isExpandable={false} qsConfig={QS_CONFIG}>\n          <HeaderCell sortKey=\"name\">{t`Name`}</HeaderCell>\n        </HeaderRow>\n      }\n      renderRow={(item, index) => (\n        <CheckboxListItem\n          rowIndex={index}\n          isSelected={!!(nodeResource && nodeResource.id === item.id)}\n          itemId={item.id}\n          key={item.id}\n          name={item.name}\n          label={item.name}\n          onSelect={() => onUpdateNodeResource(item)}\n          onDeselect={() => onUpdateNodeResource(null)}\n          isRadio\n        />\n      )}\n      renderToolbar={(props) => <DataListToolbar {...props} fillWidth />}\n      toolbarSearchColumns={[\n        {\n          name: t`Name`,\n          key: 'name__icontains',\n          isDefault: true,\n        },\n        {\n          name: t`Source`,\n          key: 'or__source',\n          options: [\n            [`file`, t`File, directory or script`],\n            [`scm`, t`Sourced from a project`],\n            [`ec2`, t`Amazon EC2`],\n            [`gce`, t`Google Compute Engine`],\n            [`azure_rm`, t`Microsoft Azure Resource Manager`],\n            [`vmware`, t`VMware vCenter`],\n            [`satellite6`, t`Red Hat Satellite 6`],\n            [`openstack`, t`OpenStack`],\n            [`rhv`, t`Red Hat Virtualization`],\n            [`controller`, t`Red Hat Ansible Automation Platform`],\n          ],\n        },\n      ]}\n      toolbarSearchableKeys={searchableKeys}\n      toolbarRelatedSearchableKeys={relatedSearchableKeys}\n    />\n  );\n}\n\nInventorySourcesList.propTypes = {\n  nodeResource: shape(),\n  onUpdateNodeResource: func.isRequired,\n};\n\nInventorySourcesList.defaultProps = {\n  nodeResource: null,\n};\n\nexport default InventorySourcesList;\n"]},"metadata":{},"sourceType":"module"}