{"ast":null,"code":"import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useEffect,useCallback}from'react';import{Switch,Route,Redirect,Link,useRouteMatch,useLocation}from'react-router-dom';import{Card}from'@patternfly/react-core';import{CaretLeftIcon}from'@patternfly/react-icons';import useRequest from'hooks/useRequest';import{InventoriesAPI}from'api';import ContentError from'components/ContentError';import ContentLoading from'components/ContentLoading';import RoutedTabs from'components/RoutedTabs';import JobList from'components/JobList';import InventoryHostDetail from'../InventoryHostDetail';import InventoryHostEdit from'../InventoryHostEdit';import InventoryHostFacts from'../InventoryHostFacts';import InventoryHostGroups from'../InventoryHostGroups';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function InventoryHost(_ref){var setBreadcrumb=_ref.setBreadcrumb,inventory=_ref.inventory;var location=useLocation();var match=useRouteMatch('/inventories/inventory/:id/hosts/:hostId');var hostListUrl=\"/inventories/inventory/\".concat(inventory.id,\"/hosts\");var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return InventoriesAPI.readHostDetail(inventory.id,match.params.hostId);case 2:response=_context.sent;return _context.abrupt(\"return\",{host:response});case 4:case\"end\":return _context.stop();}}},_callee);})),[inventory.id,match.params.hostId]),{host:null}),host=_useRequest.result.host,contentError=_useRequest.error,isLoading=_useRequest.isLoading,fetchHost=_useRequest.request;useEffect(function(){fetchHost();},[fetchHost,location.pathname]);useEffect(function(){if(inventory&&host){setBreadcrumb(inventory,host);}},[inventory,host,setBreadcrumb]);var tabsArray=[{name:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CaretLeftIcon,{}),/*i18n*/i18n._(\"Back to Hosts\")]}),link:\"\".concat(hostListUrl),id:0},{name:/*i18n*/i18n._(\"Details\"),link:\"\".concat(match.url,\"/details\"),id:1},{name:/*i18n*/i18n._(\"Facts\"),link:\"\".concat(match.url,\"/facts\"),id:2},{name:/*i18n*/i18n._(\"Groups\"),link:\"\".concat(match.url,\"/groups\"),id:3},{name:/*i18n*/i18n._(\"Jobs\"),link:\"\".concat(match.url,\"/jobs\"),id:4}];if(contentError){return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(ContentError,{error:contentError,children:contentError.response&&contentError.response.status===404&&/*#__PURE__*/_jsxs(\"span\",{children:[/*i18n*/i18n._(\"Host not found.\"),' ',/*#__PURE__*/_jsx(Link,{to:hostListUrl,children:/*i18n*/i18n._(\"View all Inventory Hosts.\")})]})})});}var showCardHeader=true;if(['edit'].some(function(name){return location.pathname.includes(name);})){showCardHeader=false;}return/*#__PURE__*/_jsxs(_Fragment,{children:[showCardHeader&&/*#__PURE__*/_jsx(RoutedTabs,{tabsArray:tabsArray}),isLoading&&/*#__PURE__*/_jsx(ContentLoading,{}),!isLoading&&host&&/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Redirect,{from:\"/inventories/inventory/:id/hosts/:hostId\",to:\"/inventories/inventory/:id/hosts/:hostId/details\",exact:true}),/*#__PURE__*/_jsx(Route,{path:\"/inventories/inventory/:id/hosts/:hostId/details\",children:/*#__PURE__*/_jsx(InventoryHostDetail,{host:host})},\"details\"),/*#__PURE__*/_jsx(Route,{path:\"/inventories/inventory/:id/hosts/:hostId/edit\",children:/*#__PURE__*/_jsx(InventoryHostEdit,{host:host,inventory:inventory})},\"edit\"),/*#__PURE__*/_jsx(Route,{path:\"/inventories/inventory/:id/hosts/:hostId/facts\",children:/*#__PURE__*/_jsx(InventoryHostFacts,{host:host})},\"facts\"),/*#__PURE__*/_jsx(Route,{path:\"/inventories/inventory/:id/hosts/:hostId/groups\",children:/*#__PURE__*/_jsx(InventoryHostGroups,{})},\"groups\"),/*#__PURE__*/_jsx(Route,{path:\"/inventories/inventory/:id/hosts/:hostId/jobs\",children:/*#__PURE__*/_jsx(JobList,{defaultParams:{job__hosts:host.id}})},\"jobs\"),/*#__PURE__*/_jsx(Route,{path:\"*\",children:/*#__PURE__*/_jsx(ContentError,{isNotFound:true,children:/*#__PURE__*/_jsx(Link,{to:\"\".concat(match.url,\"/details\"),children:/*i18n*/i18n._(\"View Inventory Host Details\")})})},\"not-found\")]})]});}export default InventoryHost;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Inventory/InventoryHost/InventoryHost.js"],"names":["React","useEffect","useCallback","Switch","Route","Redirect","Link","useRouteMatch","useLocation","Card","CaretLeftIcon","useRequest","InventoriesAPI","ContentError","ContentLoading","RoutedTabs","JobList","InventoryHostDetail","InventoryHostEdit","InventoryHostFacts","InventoryHostGroups","InventoryHost","setBreadcrumb","inventory","location","match","hostListUrl","id","readHostDetail","params","hostId","response","host","result","contentError","error","isLoading","fetchHost","request","pathname","tabsArray","name","link","url","status","showCardHeader","some","includes","job__hosts"],"mappings":"gPAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,WAA3B,KAA8C,OAA9C,CAGA,OACEC,MADF,CAEEC,KAFF,CAGEC,QAHF,CAIEC,IAJF,CAKEC,aALF,CAMEC,WANF,KAOO,kBAPP,CAQA,OAASC,IAAT,KAAqB,wBAArB,CACA,OAASC,aAAT,KAA8B,yBAA9B,CACA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CAEA,OAASC,cAAT,KAA+B,KAA/B,CACA,MAAOC,CAAAA,YAAP,KAAyB,yBAAzB,CACA,MAAOC,CAAAA,cAAP,KAA2B,2BAA3B,CACA,MAAOC,CAAAA,UAAP,KAAuB,uBAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,mBAAP,KAAgC,wBAAhC,CACA,MAAOC,CAAAA,iBAAP,KAA8B,sBAA9B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,wBAAhC,C,6IAEA,QAASC,CAAAA,aAAT,MAAqD,IAA5BC,CAAAA,aAA4B,MAA5BA,aAA4B,CAAbC,SAAa,MAAbA,SAAa,CACnD,GAAMC,CAAAA,QAAQ,CAAGhB,WAAW,EAA5B,CACA,GAAMiB,CAAAA,KAAK,CAAGlB,aAAa,CAAC,0CAAD,CAA3B,CACA,GAAMmB,CAAAA,WAAW,kCAA6BH,SAAS,CAACI,EAAvC,UAAjB,CAEA,gBAKIhB,UAAU,CACZT,WAAW,sEAAC,sKACaU,CAAAA,cAAc,CAACgB,cAAf,CACrBL,SAAS,CAACI,EADW,CAErBF,KAAK,CAACI,MAAN,CAAaC,MAFQ,CADb,QACJC,QADI,+CAKH,CACLC,IAAI,CAAED,QADD,CALG,wDAAD,GAQR,CAACR,SAAS,CAACI,EAAX,CAAeF,KAAK,CAACI,MAAN,CAAaC,MAA5B,CARQ,CADC,CAUZ,CACEE,IAAI,CAAE,IADR,CAVY,CALd,CACYA,IADZ,aACEC,MADF,CACYD,IADZ,CAESE,YAFT,aAEEC,KAFF,CAGEC,SAHF,aAGEA,SAHF,CAIWC,SAJX,aAIEC,OAJF,CAoBArC,SAAS,CAAC,UAAM,CACdoC,SAAS,GACV,CAFQ,CAEN,CAACA,SAAD,CAAYb,QAAQ,CAACe,QAArB,CAFM,CAAT,CAIAtC,SAAS,CAAC,UAAM,CACd,GAAIsB,SAAS,EAAIS,IAAjB,CAAuB,CACrBV,aAAa,CAACC,SAAD,CAAYS,IAAZ,CAAb,CACD,CACF,CAJQ,CAIN,CAACT,SAAD,CAAYS,IAAZ,CAAkBV,aAAlB,CAJM,CAAT,CAMA,GAAMkB,CAAAA,SAAS,CAAG,CAChB,CACEC,IAAI,cACF,wCACE,KAAC,aAAD,IADF,SAEG,uBAFH,GAFJ,CAOEC,IAAI,WAAKhB,WAAL,CAPN,CAQEC,EAAE,CAAE,CARN,CADgB,CAWhB,CACEc,IAAI,SAAE,iBADR,CAEEC,IAAI,WAAKjB,KAAK,CAACkB,GAAX,YAFN,CAGEhB,EAAE,CAAE,CAHN,CAXgB,CAgBhB,CACEc,IAAI,SAAE,eADR,CAEEC,IAAI,WAAKjB,KAAK,CAACkB,GAAX,UAFN,CAGEhB,EAAE,CAAE,CAHN,CAhBgB,CAqBhB,CACEc,IAAI,SAAE,gBADR,CAEEC,IAAI,WAAKjB,KAAK,CAACkB,GAAX,WAFN,CAGEhB,EAAE,CAAE,CAHN,CArBgB,CA0BhB,CACEc,IAAI,SAAE,cADR,CAEEC,IAAI,WAAKjB,KAAK,CAACkB,GAAX,SAFN,CAGEhB,EAAE,CAAE,CAHN,CA1BgB,CAAlB,CAiCA,GAAIO,YAAJ,CAAkB,CAChB,mBACE,KAAC,IAAD,wBACE,KAAC,YAAD,EAAc,KAAK,CAAEA,YAArB,UACGA,YAAY,CAACH,QAAb,EAAyBG,YAAY,CAACH,QAAb,CAAsBa,MAAtB,GAAiC,GAA1D,eACC,gCACG,yBADH,CACuB,GADvB,cAEE,KAAC,IAAD,EAAM,EAAE,CAAElB,WAAV,kBAAwB,mCAAxB,EAFF,GAFJ,EADF,EADF,CAYD,CAED,GAAImB,CAAAA,cAAc,CAAG,IAArB,CACA,GAAI,CAAC,MAAD,EAASC,IAAT,CAAc,SAACL,IAAD,QAAUjB,CAAAA,QAAQ,CAACe,QAAT,CAAkBQ,QAAlB,CAA2BN,IAA3B,CAAV,EAAd,CAAJ,CAA+D,CAC7DI,cAAc,CAAG,KAAjB,CACD,CAED,mBACE,2BACGA,cAAc,eAAI,KAAC,UAAD,EAAY,SAAS,CAAEL,SAAvB,EADrB,CAGGJ,SAAS,eAAI,KAAC,cAAD,IAHhB,CAKG,CAACA,SAAD,EAAcJ,IAAd,eACC,MAAC,MAAD,yBACE,KAAC,QAAD,EACE,IAAI,CAAC,0CADP,CAEE,EAAE,CAAC,kDAFL,CAGE,KAAK,KAHP,EADF,cAME,KAAC,KAAD,EAEE,IAAI,CAAC,kDAFP,uBAIE,KAAC,mBAAD,EAAqB,IAAI,CAAEA,IAA3B,EAJF,EACM,SADN,CANF,cAYE,KAAC,KAAD,EAEE,IAAI,CAAC,+CAFP,uBAIE,KAAC,iBAAD,EAAmB,IAAI,CAAEA,IAAzB,CAA+B,SAAS,CAAET,SAA1C,EAJF,EACM,MADN,CAZF,cAkBE,KAAC,KAAD,EAEE,IAAI,CAAC,gDAFP,uBAIE,KAAC,kBAAD,EAAoB,IAAI,CAAES,IAA1B,EAJF,EACM,OADN,CAlBF,cAwBE,KAAC,KAAD,EAEE,IAAI,CAAC,iDAFP,uBAIE,KAAC,mBAAD,IAJF,EACM,QADN,CAxBF,cA8BE,KAAC,KAAD,EAEE,IAAI,CAAC,+CAFP,uBAIE,KAAC,OAAD,EAAS,aAAa,CAAE,CAAEgB,UAAU,CAAEhB,IAAI,CAACL,EAAnB,CAAxB,EAJF,EACM,MADN,CA9BF,cAoCE,KAAC,KAAD,EAAuB,IAAI,CAAC,GAA5B,uBACE,KAAC,YAAD,EAAc,UAAU,KAAxB,uBACE,KAAC,IAAD,EAAM,EAAE,WAAKF,KAAK,CAACkB,GAAX,YAAR,kBACG,qCADH,EADF,EADF,EAAW,WAAX,CApCF,GANJ,GADF,CAsDD,CAED,cAAetB,CAAAA,aAAf","sourcesContent":["import React, { useEffect, useCallback } from 'react';\n\nimport { t } from '@lingui/macro';\nimport {\n  Switch,\n  Route,\n  Redirect,\n  Link,\n  useRouteMatch,\n  useLocation,\n} from 'react-router-dom';\nimport { Card } from '@patternfly/react-core';\nimport { CaretLeftIcon } from '@patternfly/react-icons';\nimport useRequest from 'hooks/useRequest';\n\nimport { InventoriesAPI } from 'api';\nimport ContentError from 'components/ContentError';\nimport ContentLoading from 'components/ContentLoading';\nimport RoutedTabs from 'components/RoutedTabs';\nimport JobList from 'components/JobList';\nimport InventoryHostDetail from '../InventoryHostDetail';\nimport InventoryHostEdit from '../InventoryHostEdit';\nimport InventoryHostFacts from '../InventoryHostFacts';\nimport InventoryHostGroups from '../InventoryHostGroups';\n\nfunction InventoryHost({ setBreadcrumb, inventory }) {\n  const location = useLocation();\n  const match = useRouteMatch('/inventories/inventory/:id/hosts/:hostId');\n  const hostListUrl = `/inventories/inventory/${inventory.id}/hosts`;\n\n  const {\n    result: { host },\n    error: contentError,\n    isLoading,\n    request: fetchHost,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await InventoriesAPI.readHostDetail(\n        inventory.id,\n        match.params.hostId\n      );\n      return {\n        host: response,\n      };\n    }, [inventory.id, match.params.hostId]),\n    {\n      host: null,\n    }\n  );\n\n  useEffect(() => {\n    fetchHost();\n  }, [fetchHost, location.pathname]);\n\n  useEffect(() => {\n    if (inventory && host) {\n      setBreadcrumb(inventory, host);\n    }\n  }, [inventory, host, setBreadcrumb]);\n\n  const tabsArray = [\n    {\n      name: (\n        <>\n          <CaretLeftIcon />\n          {t`Back to Hosts`}\n        </>\n      ),\n      link: `${hostListUrl}`,\n      id: 0,\n    },\n    {\n      name: t`Details`,\n      link: `${match.url}/details`,\n      id: 1,\n    },\n    {\n      name: t`Facts`,\n      link: `${match.url}/facts`,\n      id: 2,\n    },\n    {\n      name: t`Groups`,\n      link: `${match.url}/groups`,\n      id: 3,\n    },\n    {\n      name: t`Jobs`,\n      link: `${match.url}/jobs`,\n      id: 4,\n    },\n  ];\n\n  if (contentError) {\n    return (\n      <Card>\n        <ContentError error={contentError}>\n          {contentError.response && contentError.response.status === 404 && (\n            <span>\n              {t`Host not found.`}{' '}\n              <Link to={hostListUrl}>{t`View all Inventory Hosts.`}</Link>\n            </span>\n          )}\n        </ContentError>\n      </Card>\n    );\n  }\n\n  let showCardHeader = true;\n  if (['edit'].some((name) => location.pathname.includes(name))) {\n    showCardHeader = false;\n  }\n\n  return (\n    <>\n      {showCardHeader && <RoutedTabs tabsArray={tabsArray} />}\n\n      {isLoading && <ContentLoading />}\n\n      {!isLoading && host && (\n        <Switch>\n          <Redirect\n            from=\"/inventories/inventory/:id/hosts/:hostId\"\n            to=\"/inventories/inventory/:id/hosts/:hostId/details\"\n            exact\n          />\n          <Route\n            key=\"details\"\n            path=\"/inventories/inventory/:id/hosts/:hostId/details\"\n          >\n            <InventoryHostDetail host={host} />\n          </Route>\n          <Route\n            key=\"edit\"\n            path=\"/inventories/inventory/:id/hosts/:hostId/edit\"\n          >\n            <InventoryHostEdit host={host} inventory={inventory} />\n          </Route>\n          <Route\n            key=\"facts\"\n            path=\"/inventories/inventory/:id/hosts/:hostId/facts\"\n          >\n            <InventoryHostFacts host={host} />\n          </Route>\n          <Route\n            key=\"groups\"\n            path=\"/inventories/inventory/:id/hosts/:hostId/groups\"\n          >\n            <InventoryHostGroups />\n          </Route>\n          <Route\n            key=\"jobs\"\n            path=\"/inventories/inventory/:id/hosts/:hostId/jobs\"\n          >\n            <JobList defaultParams={{ job__hosts: host.id }} />\n          </Route>\n          <Route key=\"not-found\" path=\"*\">\n            <ContentError isNotFound>\n              <Link to={`${match.url}/details`}>\n                {t`View Inventory Host Details`}\n              </Link>\n            </ContentError>\n          </Route>\n        </Switch>\n      )}\n    </>\n  );\n}\n\nexport default InventoryHost;\n"]},"metadata":{},"sourceType":"module"}