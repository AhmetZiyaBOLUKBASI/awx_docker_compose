{"ast":null,"code":"import _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport checkStyles from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\nimport CheckIcon from '@patternfly/react-icons/dist/esm/icons/check-icon';\nimport { SelectConsumer, SelectVariant } from './selectConstants';\nimport StarIcon from '@patternfly/react-icons/dist/esm/icons/star-icon';\nimport { getUniqueId } from '../../helpers/util';\nimport { KeyTypes } from '../../helpers/constants';\nexport var SelectOption = /*#__PURE__*/function (_React$Component) {\n  _inherits(SelectOption, _React$Component);\n\n  var _super = _createSuper(SelectOption);\n\n  function SelectOption() {\n    var _this;\n\n    _classCallCheck(this, SelectOption);\n\n    _this = _super.apply(this, arguments);\n    _this.ref = React.createRef();\n    _this.liRef = React.createRef();\n    _this.favoriteRef = React.createRef();\n\n    _this.onKeyDown = function (event, innerIndex, onEnter, isCheckbox) {\n      var _this$props = _this.props,\n          index = _this$props.index,\n          keyHandler = _this$props.keyHandler,\n          isLastOptionBeforeFooter = _this$props.isLastOptionBeforeFooter;\n      var isLastItemBeforeFooter = false;\n\n      if (isLastOptionBeforeFooter !== undefined) {\n        isLastItemBeforeFooter = isLastOptionBeforeFooter(index);\n      }\n\n      if (event.key === KeyTypes.Tab) {\n        // More modal-like experience for checkboxes\n        if (isCheckbox && !isLastItemBeforeFooter) {\n          if (event.shiftKey) {\n            keyHandler(index, innerIndex, 'up');\n          } else {\n            keyHandler(index, innerIndex, 'down');\n          }\n\n          event.stopPropagation();\n        } else {\n          if (event.shiftKey) {\n            keyHandler(index, innerIndex, 'up');\n          } else {\n            keyHandler(index, innerIndex, 'tab');\n          }\n        }\n      }\n\n      event.preventDefault();\n\n      if (event.key === KeyTypes.ArrowUp) {\n        keyHandler(index, innerIndex, 'up');\n      } else if (event.key === KeyTypes.ArrowDown) {\n        keyHandler(index, innerIndex, 'down');\n      } else if (event.key === KeyTypes.ArrowLeft) {\n        keyHandler(index, innerIndex, 'left');\n      } else if (event.key === KeyTypes.ArrowRight) {\n        keyHandler(index, innerIndex, 'right');\n      } else if (event.key === KeyTypes.Enter) {\n        if (onEnter !== undefined) {\n          onEnter();\n        } else {\n          _this.ref.current.click();\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(SelectOption, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.sendRef(this.props.isDisabled ? null : this.ref.current, this.props.isDisabled ? null : this.favoriteRef.current, this.props.isDisabled ? null : this.liRef.current, this.props.index);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.props.sendRef(this.props.isDisabled ? null : this.ref.current, this.props.isDisabled ? null : this.favoriteRef.current, this.props.isDisabled ? null : this.liRef.current, this.props.index);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      var _a = this.props,\n          children = _a.children,\n          className = _a.className,\n          id = _a.id,\n          description = _a.description,\n          itemCount = _a.itemCount,\n          value = _a.value,\n          _onClick = _a.onClick,\n          isDisabled = _a.isDisabled,\n          isPlaceholder = _a.isPlaceholder,\n          isNoResultsOption = _a.isNoResultsOption,\n          isSelected = _a.isSelected,\n          isChecked = _a.isChecked,\n          isFocused = _a.isFocused,\n          sendRef = _a.sendRef,\n          keyHandler = _a.keyHandler,\n          index = _a.index,\n          component = _a.component,\n          inputId = _a.inputId,\n          isFavorite = _a.isFavorite,\n          _a$ariaIsFavoriteLabe = _a.ariaIsFavoriteLabel,\n          ariaIsFavoriteLabel = _a$ariaIsFavoriteLabe === void 0 ? 'starred' : _a$ariaIsFavoriteLabe,\n          _a$ariaIsNotFavoriteL = _a.ariaIsNotFavoriteLabel,\n          ariaIsNotFavoriteLabel = _a$ariaIsNotFavoriteL === void 0 ? 'not starred' : _a$ariaIsNotFavoriteL,\n          isLoad = _a.isLoad,\n          isLoading = _a.isLoading,\n          setViewMoreNextIndex = _a.setViewMoreNextIndex,\n          isLastOptionBeforeFooter = _a.isLastOptionBeforeFooter,\n          _a$isGrouped = _a.isGrouped,\n          isGrouped = _a$isGrouped === void 0 ? false : _a$isGrouped,\n          props = __rest(_a, [\"children\", \"className\", \"id\", \"description\", \"itemCount\", \"value\", \"onClick\", \"isDisabled\", \"isPlaceholder\", \"isNoResultsOption\", \"isSelected\", \"isChecked\", \"isFocused\", \"sendRef\", \"keyHandler\", \"index\", \"component\", \"inputId\", \"isFavorite\", \"ariaIsFavoriteLabel\", \"ariaIsNotFavoriteLabel\", \"isLoad\", \"isLoading\", \"setViewMoreNextIndex\", \"isLastOptionBeforeFooter\", \"isGrouped\"]);\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n      var Component = component;\n\n      if (!id && isFavorite !== null) {\n        // eslint-disable-next-line no-console\n        console.error('Please provide an id to use the favorites feature.');\n      }\n\n      var generatedId = id || getUniqueId('select-option');\n\n      var favoriteButton = function favoriteButton(onFavorite) {\n        return React.createElement(\"button\", {\n          className: css(styles.selectMenuItem, styles.modifiers.action, styles.modifiers.favoriteAction),\n          \"aria-label\": isFavorite ? ariaIsFavoriteLabel : ariaIsNotFavoriteLabel,\n          onClick: function onClick() {\n            onFavorite(generatedId.replace('favorite-', ''), isFavorite);\n          },\n          onKeyDown: function onKeyDown(event) {\n            _this2.onKeyDown(event, 1, function () {\n              return onFavorite(generatedId.replace('favorite-', ''), isFavorite);\n            });\n          },\n          ref: _this2.favoriteRef\n        }, React.createElement(\"span\", {\n          className: css(styles.selectMenuItemActionIcon)\n        }, React.createElement(StarIcon, null)));\n      };\n\n      var itemDisplay = itemCount ? React.createElement(\"span\", {\n        className: css(styles.selectMenuItemRow)\n      }, React.createElement(\"span\", {\n        className: css(styles.selectMenuItemText)\n      }, children || value && value.toString && value.toString()), React.createElement(\"span\", {\n        className: css(styles.selectMenuItemCount)\n      }, itemCount)) : children || value.toString();\n\n      var onViewMoreClick = function onViewMoreClick(event) {\n        // Set the index for the next item to focus after view more clicked, then call view more callback\n        setViewMoreNextIndex();\n\n        _onClick(event);\n      };\n\n      var renderOption = function renderOption(onSelect, onClose, variant, inputIdPrefix, onFavorite, shouldResetOnSelect) {\n        if (variant !== SelectVariant.checkbox && isLoading && isGrouped) {\n          return React.createElement(\"div\", {\n            role: \"presentation\",\n            className: css(styles.selectListItem, isLoading && styles.modifiers.loading, className)\n          }, children);\n        } else if (variant !== SelectVariant.checkbox && isLoad && isGrouped) {\n          return React.createElement(\"div\", null, React.createElement(\"button\", Object.assign({}, props, {\n            role: \"presentation\",\n            className: css(styles.selectMenuItem, styles.modifiers.load, className),\n            onClick: function onClick(event) {\n              onViewMoreClick(event);\n              event.stopPropagation();\n            },\n            ref: _this2.ref,\n            type: \"button\"\n          }), children || value.toString()));\n        } else if (variant !== SelectVariant.checkbox) {\n          return React.createElement(\"li\", {\n            id: generatedId,\n            role: \"presentation\",\n            className: css(isLoading && styles.selectListItem, !isLoading && styles.selectMenuWrapper, isFavorite && styles.modifiers.favorite, isFocused && styles.modifiers.focus, isLoading && styles.modifiers.loading),\n            ref: _this2.liRef\n          }, isLoading && children, isLoad && !isGrouped && React.createElement(\"button\", Object.assign({}, props, {\n            className: css(styles.selectMenuItem, styles.modifiers.load, className),\n            onClick: function onClick(event) {\n              onViewMoreClick(event);\n              event.stopPropagation();\n            },\n            ref: _this2.ref,\n            onKeyDown: function onKeyDown(event) {\n              _this2.onKeyDown(event, 0);\n            },\n            type: \"button\"\n          }), itemDisplay), !isLoading && !isLoad && React.createElement(React.Fragment, null, React.createElement(Component, Object.assign({}, props, {\n            className: css(styles.selectMenuItem, isLoad && styles.modifiers.load, isSelected && styles.modifiers.selected, isDisabled && styles.modifiers.disabled, description && styles.modifiers.description, isFavorite !== null && styles.modifiers.link, className),\n            onClick: function onClick(event) {\n              if (!isDisabled) {\n                _onClick(event);\n\n                onSelect(event, value, isPlaceholder);\n                shouldResetOnSelect && onClose();\n              }\n            },\n            role: \"option\",\n            \"aria-selected\": isSelected || null,\n            ref: _this2.ref,\n            onKeyDown: function onKeyDown(event) {\n              _this2.onKeyDown(event, 0);\n            },\n            type: \"button\"\n          }), description && React.createElement(React.Fragment, null, React.createElement(\"span\", {\n            className: css(styles.selectMenuItemMain)\n          }, itemDisplay, isSelected && React.createElement(\"span\", {\n            className: css(styles.selectMenuItemIcon)\n          }, React.createElement(CheckIcon, {\n            \"aria-hidden\": true\n          }))), React.createElement(\"span\", {\n            className: css(styles.selectMenuItemDescription)\n          }, description)), !description && React.createElement(React.Fragment, null, itemDisplay, isSelected && React.createElement(\"span\", {\n            className: css(styles.selectMenuItemIcon)\n          }, React.createElement(CheckIcon, {\n            \"aria-hidden\": true\n          })))), isFavorite !== null && id && favoriteButton(onFavorite)));\n        } else if (variant === SelectVariant.checkbox && isLoad) {\n          return React.createElement(\"button\", {\n            className: css(styles.selectMenuItem, styles.modifiers.load, isFocused && styles.modifiers.focus, className),\n            onKeyDown: function onKeyDown(event) {\n              _this2.onKeyDown(event, 0, undefined, true);\n            },\n            onClick: function onClick(event) {\n              onViewMoreClick(event);\n              event.stopPropagation();\n            },\n            ref: _this2.ref\n          }, children || value && value.toString && value.toString());\n        } else if (variant === SelectVariant.checkbox && isLoading) {\n          return React.createElement(\"div\", {\n            className: css(styles.selectListItem, isLoading && styles.modifiers.loading, className)\n          }, children);\n        } else if (variant === SelectVariant.checkbox && !isNoResultsOption && !isLoading && !isLoad) {\n          return React.createElement(\"label\", Object.assign({}, props, {\n            className: css(checkStyles.check, styles.selectMenuItem, isDisabled && styles.modifiers.disabled, description && styles.modifiers.description, className),\n            onKeyDown: function onKeyDown(event) {\n              _this2.onKeyDown(event, 0, undefined, true);\n            }\n          }), React.createElement(\"input\", {\n            id: inputId || \"\".concat(inputIdPrefix, \"-\").concat(value.toString()),\n            className: css(checkStyles.checkInput),\n            type: \"checkbox\",\n            onChange: function onChange(event) {\n              if (!isDisabled) {\n                _onClick(event);\n\n                onSelect(event, value);\n              }\n            },\n            ref: _this2.ref,\n            checked: isChecked || false,\n            disabled: isDisabled\n          }), React.createElement(\"span\", {\n            className: css(checkStyles.checkLabel, isDisabled && styles.modifiers.disabled)\n          }, itemDisplay), description && React.createElement(\"div\", {\n            className: css(checkStyles.checkDescription)\n          }, description));\n        } else if (variant === SelectVariant.checkbox && isNoResultsOption && !isLoading && !isLoad) {\n          return React.createElement(\"div\", null, React.createElement(Component, Object.assign({}, props, {\n            className: css(styles.selectMenuItem, isSelected && styles.modifiers.selected, isDisabled && styles.modifiers.disabled, className),\n            role: \"option\",\n            \"aria-selected\": isSelected || null,\n            ref: _this2.ref,\n            onKeyDown: function onKeyDown(event) {\n              _this2.onKeyDown(event, 0, undefined, true);\n            },\n            type: \"button\"\n          }), itemDisplay));\n        }\n      };\n\n      return React.createElement(SelectConsumer, null, function (_ref) {\n        var onSelect = _ref.onSelect,\n            onClose = _ref.onClose,\n            variant = _ref.variant,\n            inputIdPrefix = _ref.inputIdPrefix,\n            onFavorite = _ref.onFavorite,\n            shouldResetOnSelect = _ref.shouldResetOnSelect;\n        return React.createElement(React.Fragment, null, renderOption(onSelect, onClose, variant, inputIdPrefix, onFavorite, shouldResetOnSelect));\n      });\n    }\n  }]);\n\n  return SelectOption;\n}(React.Component);\nSelectOption.displayName = 'SelectOption';\nSelectOption.defaultProps = {\n  className: '',\n  value: '',\n  index: 0,\n  isDisabled: false,\n  isPlaceholder: false,\n  isSelected: false,\n  isChecked: false,\n  isNoResultsOption: false,\n  component: 'button',\n  onClick: function onClick() {},\n  sendRef: function sendRef() {},\n  keyHandler: function keyHandler() {},\n  inputId: '',\n  isFavorite: null,\n  isLoad: false,\n  isLoading: false,\n  setViewMoreNextIndex: function setViewMoreNextIndex() {},\n  isLastOptionBeforeFooter: function isLastOptionBeforeFooter() {\n    return false;\n  }\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Select/SelectOption.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport checkStyles from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\nimport CheckIcon from '@patternfly/react-icons/dist/esm/icons/check-icon';\nimport { SelectConsumer, SelectVariant } from './selectConstants';\nimport StarIcon from '@patternfly/react-icons/dist/esm/icons/star-icon';\nimport { getUniqueId } from '../../helpers/util';\nimport { KeyTypes } from '../../helpers/constants';\n\nexport interface SelectOptionObject {\n  /** Function returns a string to represent the select option object */\n  toString(): string;\n  /** Function returns a true if the passed in select option is equal to this select option object, false otherwise */\n  compareTo?(selectOption: any): boolean;\n}\nexport interface SelectOptionProps extends Omit<React.HTMLProps<HTMLElement>, 'type' | 'ref' | 'value'> {\n  /** Optional alternate display for the option */\n  children?: React.ReactNode;\n  /** Additional classes added to the Select Option */\n  className?: string;\n  /** Description of the item for single and both typeahead select variants */\n  description?: React.ReactNode;\n  /** Number of items matching the option */\n  itemCount?: number;\n  /** @hide Internal index of the option */\n  index?: number;\n  /** Indicates which component will be used as select item */\n  component?: React.ReactNode;\n  /** The value for the option, can be a string or select option object */\n  value: string | SelectOptionObject;\n  /** Flag indicating if the option is disabled */\n  isDisabled?: boolean;\n  /** Flag indicating if the option acts as a placeholder */\n  isPlaceholder?: boolean;\n  /** Flag indicating if the option acts as a \"no results\" indicator */\n  isNoResultsOption?: boolean;\n  /** @hide Internal flag indicating if the option is selected */\n  isSelected?: boolean;\n  /** @hide Internal flag indicating if the option is checked */\n  isChecked?: boolean;\n  /** Flag forcing the focused state */\n  isFocused?: boolean;\n  /** @hide Internal callback for ref tracking */\n  sendRef?: (\n    ref: React.ReactNode,\n    favoriteRef: React.ReactNode,\n    optionContainerRef: React.ReactNode,\n    index: number\n  ) => void;\n  /** @hide Internal callback for keyboard navigation */\n  keyHandler?: (index: number, innerIndex: number, position: string) => void;\n  /** Optional callback for click event */\n  onClick?: (event: React.MouseEvent | React.ChangeEvent) => void;\n  /** Id of the checkbox input */\n  inputId?: string;\n  /** @hide Internal Flag indicating if the option is favorited */\n  isFavorite?: boolean;\n  /** Aria label text for favoritable button when favorited */\n  ariaIsFavoriteLabel?: string;\n  /** Aria label text for favoritable button when not favorited */\n  ariaIsNotFavoriteLabel?: string;\n  /** ID of the item. Required for tracking favorites */\n  id?: string;\n  /** @hide Internal flag to apply the load styling to view more option */\n  isLoad?: boolean;\n  /** @hide Internal flag to apply the loading styling to spinner */\n  isLoading?: boolean;\n  /** @hide Internal callback for the setting the index of the next item to focus after view more is clicked */\n  setViewMoreNextIndex?: () => void;\n  /** @hide Flag indicating this is the last option when there is a footer */\n  isLastOptionBeforeFooter?: (index: number) => boolean;\n  /** @hide Flag indicating that the the option loading variant is in a grouped select */\n  isGrouped?: boolean;\n}\n\nexport class SelectOption extends React.Component<SelectOptionProps> {\n  static displayName = 'SelectOption';\n  private ref = React.createRef<any>();\n  private liRef = React.createRef<any>();\n  private favoriteRef = React.createRef<any>();\n  static defaultProps: SelectOptionProps = {\n    className: '',\n    value: '',\n    index: 0,\n    isDisabled: false,\n    isPlaceholder: false,\n    isSelected: false,\n    isChecked: false,\n    isNoResultsOption: false,\n    component: 'button',\n    onClick: () => {},\n    sendRef: () => {},\n    keyHandler: () => {},\n    inputId: '',\n    isFavorite: null,\n    isLoad: false,\n    isLoading: false,\n    setViewMoreNextIndex: () => {},\n    isLastOptionBeforeFooter: () => false\n  };\n\n  componentDidMount() {\n    this.props.sendRef(\n      this.props.isDisabled ? null : this.ref.current,\n      this.props.isDisabled ? null : this.favoriteRef.current,\n      this.props.isDisabled ? null : this.liRef.current,\n      this.props.index\n    );\n  }\n\n  componentDidUpdate() {\n    this.props.sendRef(\n      this.props.isDisabled ? null : this.ref.current,\n      this.props.isDisabled ? null : this.favoriteRef.current,\n      this.props.isDisabled ? null : this.liRef.current,\n      this.props.index\n    );\n  }\n\n  onKeyDown = (event: React.KeyboardEvent, innerIndex: number, onEnter?: any, isCheckbox?: boolean) => {\n    const { index, keyHandler, isLastOptionBeforeFooter } = this.props;\n    let isLastItemBeforeFooter = false;\n    if (isLastOptionBeforeFooter !== undefined) {\n      isLastItemBeforeFooter = isLastOptionBeforeFooter(index);\n    }\n\n    if (event.key === KeyTypes.Tab) {\n      // More modal-like experience for checkboxes\n      if (isCheckbox && !isLastItemBeforeFooter) {\n        if (event.shiftKey) {\n          keyHandler(index, innerIndex, 'up');\n        } else {\n          keyHandler(index, innerIndex, 'down');\n        }\n        event.stopPropagation();\n      } else {\n        if (event.shiftKey) {\n          keyHandler(index, innerIndex, 'up');\n        } else {\n          keyHandler(index, innerIndex, 'tab');\n        }\n      }\n    }\n    event.preventDefault();\n    if (event.key === KeyTypes.ArrowUp) {\n      keyHandler(index, innerIndex, 'up');\n    } else if (event.key === KeyTypes.ArrowDown) {\n      keyHandler(index, innerIndex, 'down');\n    } else if (event.key === KeyTypes.ArrowLeft) {\n      keyHandler(index, innerIndex, 'left');\n    } else if (event.key === KeyTypes.ArrowRight) {\n      keyHandler(index, innerIndex, 'right');\n    } else if (event.key === KeyTypes.Enter) {\n      if (onEnter !== undefined) {\n        onEnter();\n      } else {\n        this.ref.current.click();\n      }\n    }\n  };\n\n  render() {\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    const {\n      children,\n      className,\n      id,\n      description,\n      itemCount,\n      value,\n      onClick,\n      isDisabled,\n      isPlaceholder,\n      isNoResultsOption,\n      isSelected,\n      isChecked,\n      isFocused,\n      sendRef,\n      keyHandler,\n      index,\n      component,\n      inputId,\n      isFavorite,\n      ariaIsFavoriteLabel = 'starred',\n      ariaIsNotFavoriteLabel = 'not starred',\n      isLoad,\n      isLoading,\n      setViewMoreNextIndex,\n      // eslint-disable-next-line no-console\n      isLastOptionBeforeFooter,\n      isGrouped = false,\n      ...props\n    } = this.props;\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    const Component = component as any;\n\n    if (!id && isFavorite !== null) {\n      // eslint-disable-next-line no-console\n      console.error('Please provide an id to use the favorites feature.');\n    }\n\n    const generatedId = id || getUniqueId('select-option');\n    const favoriteButton = (onFavorite: any) => (\n      <button\n        className={css(styles.selectMenuItem, styles.modifiers.action, styles.modifiers.favoriteAction)}\n        aria-label={isFavorite ? ariaIsFavoriteLabel : ariaIsNotFavoriteLabel}\n        onClick={() => {\n          onFavorite(generatedId.replace('favorite-', ''), isFavorite);\n        }}\n        onKeyDown={event => {\n          this.onKeyDown(event, 1, () => onFavorite(generatedId.replace('favorite-', ''), isFavorite));\n        }}\n        ref={this.favoriteRef}\n      >\n        <span className={css(styles.selectMenuItemActionIcon)}>\n          <StarIcon />\n        </span>\n      </button>\n    );\n\n    const itemDisplay = itemCount ? (\n      <span className={css(styles.selectMenuItemRow)}>\n        <span className={css(styles.selectMenuItemText)}>\n          {children || (value && value.toString && value.toString())}\n        </span>\n        <span className={css(styles.selectMenuItemCount)}>{itemCount}</span>\n      </span>\n    ) : (\n      children || value.toString()\n    );\n\n    const onViewMoreClick = (event: any) => {\n      // Set the index for the next item to focus after view more clicked, then call view more callback\n      setViewMoreNextIndex();\n      onClick(event);\n    };\n\n    const renderOption = (\n      onSelect: (\n        event: React.MouseEvent<any, MouseEvent> | React.ChangeEvent<HTMLInputElement>,\n        value: string | SelectOptionObject,\n        isPlaceholder?: boolean\n      ) => void,\n      onClose: () => void,\n      variant: string,\n      inputIdPrefix: string,\n      onFavorite: (itemId: string, isFavorite: boolean) => void,\n      shouldResetOnSelect: boolean\n    ) => {\n      if (variant !== SelectVariant.checkbox && isLoading && isGrouped) {\n        return (\n          <div\n            role=\"presentation\"\n            className={css(styles.selectListItem, isLoading && styles.modifiers.loading, className)}\n          >\n            {children}\n          </div>\n        );\n      } else if (variant !== SelectVariant.checkbox && isLoad && isGrouped) {\n        return (\n          <div>\n            <button\n              {...props}\n              role=\"presentation\"\n              className={css(styles.selectMenuItem, styles.modifiers.load, className)}\n              onClick={(event: any) => {\n                onViewMoreClick(event);\n                event.stopPropagation();\n              }}\n              ref={this.ref}\n              type=\"button\"\n            >\n              {children || value.toString()}\n            </button>\n          </div>\n        );\n      } else if (variant !== SelectVariant.checkbox) {\n        return (\n          <li\n            id={generatedId}\n            role=\"presentation\"\n            className={css(\n              isLoading && styles.selectListItem,\n              !isLoading && styles.selectMenuWrapper,\n              isFavorite && styles.modifiers.favorite,\n              isFocused && styles.modifiers.focus,\n              isLoading && styles.modifiers.loading\n            )}\n            ref={this.liRef}\n          >\n            {isLoading && children}\n            {isLoad && !isGrouped && (\n              <button\n                {...props}\n                className={css(styles.selectMenuItem, styles.modifiers.load, className)}\n                onClick={(event: any) => {\n                  onViewMoreClick(event);\n                  event.stopPropagation();\n                }}\n                ref={this.ref}\n                onKeyDown={(event: React.KeyboardEvent) => {\n                  this.onKeyDown(event, 0);\n                }}\n                type=\"button\"\n              >\n                {itemDisplay}\n              </button>\n            )}\n            {!isLoading && !isLoad && (\n              <>\n                <Component\n                  {...props}\n                  className={css(\n                    styles.selectMenuItem,\n                    isLoad && styles.modifiers.load,\n                    isSelected && styles.modifiers.selected,\n                    isDisabled && styles.modifiers.disabled,\n                    description && styles.modifiers.description,\n                    isFavorite !== null && styles.modifiers.link,\n                    className\n                  )}\n                  onClick={(event: any) => {\n                    if (!isDisabled) {\n                      onClick(event);\n                      onSelect(event, value, isPlaceholder);\n                      shouldResetOnSelect && onClose();\n                    }\n                  }}\n                  role=\"option\"\n                  aria-selected={isSelected || null}\n                  ref={this.ref}\n                  onKeyDown={(event: React.KeyboardEvent) => {\n                    this.onKeyDown(event, 0);\n                  }}\n                  type=\"button\"\n                >\n                  {description && (\n                    <React.Fragment>\n                      <span className={css(styles.selectMenuItemMain)}>\n                        {itemDisplay}\n                        {isSelected && (\n                          <span className={css(styles.selectMenuItemIcon)}>\n                            <CheckIcon aria-hidden />\n                          </span>\n                        )}\n                      </span>\n                      <span className={css(styles.selectMenuItemDescription)}>{description}</span>\n                    </React.Fragment>\n                  )}\n                  {!description && (\n                    <React.Fragment>\n                      {itemDisplay}\n                      {isSelected && (\n                        <span className={css(styles.selectMenuItemIcon)}>\n                          <CheckIcon aria-hidden />\n                        </span>\n                      )}\n                    </React.Fragment>\n                  )}\n                </Component>\n                {isFavorite !== null && id && favoriteButton(onFavorite)}\n              </>\n            )}\n          </li>\n        );\n      } else if (variant === SelectVariant.checkbox && isLoad) {\n        return (\n          <button\n            className={css(\n              styles.selectMenuItem,\n              styles.modifiers.load,\n              isFocused && styles.modifiers.focus,\n              className\n            )}\n            onKeyDown={(event: React.KeyboardEvent) => {\n              this.onKeyDown(event, 0, undefined, true);\n            }}\n            onClick={(event: any) => {\n              onViewMoreClick(event);\n              event.stopPropagation();\n            }}\n            ref={this.ref}\n          >\n            {children || (value && value.toString && value.toString())}\n          </button>\n        );\n      } else if (variant === SelectVariant.checkbox && isLoading) {\n        return (\n          <div className={css(styles.selectListItem, isLoading && styles.modifiers.loading, className)}>{children}</div>\n        );\n      } else if (variant === SelectVariant.checkbox && !isNoResultsOption && !isLoading && !isLoad) {\n        return (\n          <label\n            {...props}\n            className={css(\n              checkStyles.check,\n              styles.selectMenuItem,\n              isDisabled && styles.modifiers.disabled,\n              description && styles.modifiers.description,\n              className\n            )}\n            onKeyDown={(event: React.KeyboardEvent) => {\n              this.onKeyDown(event, 0, undefined, true);\n            }}\n          >\n            <input\n              id={inputId || `${inputIdPrefix}-${value.toString()}`}\n              className={css(checkStyles.checkInput)}\n              type=\"checkbox\"\n              onChange={event => {\n                if (!isDisabled) {\n                  onClick(event);\n                  onSelect(event, value);\n                }\n              }}\n              ref={this.ref}\n              checked={isChecked || false}\n              disabled={isDisabled}\n            />\n            <span className={css(checkStyles.checkLabel, isDisabled && styles.modifiers.disabled)}>{itemDisplay}</span>\n            {description && <div className={css(checkStyles.checkDescription)}>{description}</div>}\n          </label>\n        );\n      } else if (variant === SelectVariant.checkbox && isNoResultsOption && !isLoading && !isLoad) {\n        return (\n          <div>\n            <Component\n              {...props}\n              className={css(\n                styles.selectMenuItem,\n                isSelected && styles.modifiers.selected,\n                isDisabled && styles.modifiers.disabled,\n                className\n              )}\n              role=\"option\"\n              aria-selected={isSelected || null}\n              ref={this.ref}\n              onKeyDown={(event: React.KeyboardEvent) => {\n                this.onKeyDown(event, 0, undefined, true);\n              }}\n              type=\"button\"\n            >\n              {itemDisplay}\n            </Component>\n          </div>\n        );\n      }\n    };\n\n    return (\n      <SelectConsumer>\n        {({ onSelect, onClose, variant, inputIdPrefix, onFavorite, shouldResetOnSelect }) => (\n          <React.Fragment>\n            {renderOption(onSelect, onClose, variant, inputIdPrefix, onFavorite, shouldResetOnSelect)}\n          </React.Fragment>\n        )}\n      </SelectConsumer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}