{"ast":null,"code":"import _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ContextSelector/context-selector';\nimport { css } from '@patternfly/react-styles';\nexport var ContextSelectorMenuList = /*#__PURE__*/function (_React$Component) {\n  _inherits(ContextSelectorMenuList, _React$Component);\n\n  var _super = _createSuper(ContextSelectorMenuList);\n\n  function ContextSelectorMenuList() {\n    var _this;\n\n    _classCallCheck(this, ContextSelectorMenuList);\n\n    _this = _super.apply(this, arguments);\n    _this.refsCollection = [];\n\n    _this.sendRef = function (index, ref) {\n      _this.refsCollection[index] = ref;\n    };\n\n    _this.render = function () {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      var _a = _this.props,\n          className = _a.className,\n          isOpen = _a.isOpen,\n          children = _a.children,\n          props = __rest(_a, [\"className\", \"isOpen\", \"children\"]);\n\n      return React.createElement(\"ul\", Object.assign({\n        className: css(styles.contextSelectorMenuList, className),\n        hidden: !isOpen,\n        role: \"menu\"\n      }, props), _this.extendChildren());\n    };\n\n    return _this;\n  }\n\n  _createClass(ContextSelectorMenuList, [{\n    key: \"extendChildren\",\n    value: function extendChildren() {\n      var _this2 = this;\n\n      return React.Children.map(this.props.children, function (child, index) {\n        return React.cloneElement(child, {\n          sendRef: _this2.sendRef,\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return ContextSelectorMenuList;\n}(React.Component);\nContextSelectorMenuList.displayName = 'ContextSelectorMenuList';\nContextSelectorMenuList.defaultProps = {\n  children: null,\n  className: '',\n  isOpen: true\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/ContextSelector/ContextSelectorMenuList.tsx"],"names":[],"mappings":";;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,0EAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AAWA,WAAa,uBAAb;AAAA;;AAAA;;AAAA,qCAAA;AAAA;;AAAA;;;AAQE,UAAA,cAAA,GAAiB,EAAjB;;AAEA,UAAA,OAAA,GAAU,UAAC,KAAD,EAAgB,GAAhB,EAA4B;AACpC,YAAK,cAAL,CAAoB,KAApB,IAA6B,GAA7B;AACD,KAFD;;AAaA,UAAA,MAAA,GAAS,YAAK;AACZ;AACM,UAAA,EAAA,GAA4C,MAA5C,KAAA;AAAA,UAAE,SAAF,GAA6B,EAA7B,CAAE,SAAF;AAAA,UAAa,MAAb,GAA6B,EAA7B,CAAa,MAAb;AAAA,UAAqB,QAArB,GAA6B,EAA7B,CAAqB,QAArB;AAAA,UAAkC,KAAlC,GAAuC,MAAA,CAAA,EAAA,EAAvC,CAAA,WAAA,EAAA,QAAA,EAAA,UAAA,CAAuC,CAAvC;;AACN,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AAAI,QAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,uBAAR,EAAiC,SAAjC,CAAlB;AAA+D,QAAA,MAAM,EAAE,CAAC,MAAxE;AAAgF,QAAA,IAAI,EAAC;AAArF,OAAA,EAAgG,KAAhG,CAAA,EACG,MAAK,cAAL,EADH,CADF;AAKD,KARD;;AAvBF;AAgCC;;AAhCD;AAAA;AAAA,WAcE,0BAAc;AAAA;;AACZ,aAAO,KAAK,CAAC,QAAN,CAAe,GAAf,CAAmB,KAAK,KAAL,CAAW,QAA9B,EAAwC,UAAC,KAAD,EAAQ,KAAR;AAAA,eAC7C,KAAK,CAAC,YAAN,CAAmB,KAAnB,EAAqD;AACnD,UAAA,OAAO,EAAE,MAAI,CAAC,OADqC;AAEnD,UAAA,KAAK,EAAL;AAFmD,SAArD,CAD6C;AAAA,OAAxC,CAAP;AAMD;AArBH;;AAAA;AAAA,EAA6C,KAAK,CAAC,SAAnD;AACS,uBAAA,CAAA,WAAA,GAAc,yBAAd;AACA,uBAAA,CAAA,YAAA,GAA6C;AAClD,EAAA,QAAQ,EAAE,IADwC;AAElD,EAAA,SAAS,EAAE,EAFuC;AAGlD,EAAA,MAAM,EAAE;AAH0C,CAA7C","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ContextSelector/context-selector';\nimport { css } from '@patternfly/react-styles';\n\nexport interface ContextSelectorMenuListProps {\n  /** Content rendered inside the Context Selector Menu */\n  children?: React.ReactNode;\n  /** Classess applied to root element of Context Selector menu */\n  className?: string;\n  /** Flag to indicate if Context Selector menu is opened */\n  isOpen?: boolean;\n}\n\nexport class ContextSelectorMenuList extends React.Component<ContextSelectorMenuListProps> {\n  static displayName = 'ContextSelectorMenuList';\n  static defaultProps: ContextSelectorMenuListProps = {\n    children: null as React.ReactNode,\n    className: '',\n    isOpen: true\n  };\n\n  refsCollection = [] as any;\n\n  sendRef = (index: number, ref: any) => {\n    this.refsCollection[index] = ref;\n  };\n\n  extendChildren() {\n    return React.Children.map(this.props.children, (child, index) =>\n      React.cloneElement(child as React.ReactElement<any>, {\n        sendRef: this.sendRef,\n        index\n      })\n    );\n  }\n\n  render = () => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { className, isOpen, children, ...props } = this.props;\n    return (\n      <ul className={css(styles.contextSelectorMenuList, className)} hidden={!isOpen} role=\"menu\" {...props}>\n        {this.extendChildren()}\n      </ul>\n    );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}