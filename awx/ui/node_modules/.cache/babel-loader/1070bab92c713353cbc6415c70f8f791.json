{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _excluded=[\"instance_groups\",\"organization\"];import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import React,{useCallback,useEffect}from'react';import{useHistory}from'react-router-dom';import{Inventory}from'types';import useRequest from'hooks/useRequest';import{InventoriesAPI}from'api';import{CardBody}from'components/Card';import ContentError from'components/ContentError';import ContentLoading from'components/ContentLoading';import SmartInventoryForm from'../shared/SmartInventoryForm';import parseHostFilter from'../shared/utils';import{jsx as _jsx}from\"react/jsx-runtime\";function SmartInventoryEdit(_ref){var inventory=_ref.inventory;var history=useHistory();var detailsUrl=\"/inventories/smart_inventory/\".concat(inventory.id,\"/details\");var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$InventoriesAPI,results;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return InventoriesAPI.readInstanceGroups(inventory.id);case 2:_yield$InventoriesAPI=_context.sent;results=_yield$InventoriesAPI.data.results;return _context.abrupt(\"return\",results);case 5:case\"end\":return _context.stop();}}},_callee);})),[inventory.id]),[]),contentError=_useRequest.error,hasContentLoading=_useRequest.isLoading,fetchInstanceGroups=_useRequest.request,initialInstanceGroups=_useRequest.result;useEffect(function(){fetchInstanceGroups();},[fetchInstanceGroups]);var _useRequest2=useRequest(useCallback(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values,groupsToAssociate,groupsToDisassociate){var _yield$InventoriesAPI2,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return InventoriesAPI.update(inventory.id,values);case 2:_yield$InventoriesAPI2=_context2.sent;data=_yield$InventoriesAPI2.data;_context2.next=6;return InventoriesAPI.orderInstanceGroups(inventory.id,groupsToAssociate,groupsToDisassociate);case 6:return _context2.abrupt(\"return\",data);case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x,_x2,_x3){return _ref3.apply(this,arguments);};}(),[inventory.id])),submitError=_useRequest2.error,submitRequest=_useRequest2.request,submitResult=_useRequest2.result;useEffect(function(){if(submitResult){history.push({pathname:detailsUrl,search:''});}},[submitResult,detailsUrl,history]);var handleSubmit=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(form){var modifiedForm,instance_groups,organization,remainingForm;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:modifiedForm=parseHostFilter(form);instance_groups=modifiedForm.instance_groups,organization=modifiedForm.organization,remainingForm=_objectWithoutProperties(modifiedForm,_excluded);_context3.next=4;return submitRequest(_objectSpread({organization:organization===null||organization===void 0?void 0:organization.id},remainingForm),instance_groups,initialInstanceGroups);case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function handleSubmit(_x4){return _ref4.apply(this,arguments);};}();var handleCancel=function handleCancel(){history.push({pathname:detailsUrl,search:''});};if(hasContentLoading){return/*#__PURE__*/_jsx(ContentLoading,{});}if(contentError){return/*#__PURE__*/_jsx(ContentError,{error:contentError});}return/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(SmartInventoryForm,{inventory:inventory,instanceGroups:initialInstanceGroups,onCancel:handleCancel,onSubmit:handleSubmit,submitError:submitError})});}export default SmartInventoryEdit;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Inventory/SmartInventoryEdit/SmartInventoryEdit.js"],"names":["React","useCallback","useEffect","useHistory","Inventory","useRequest","InventoriesAPI","CardBody","ContentError","ContentLoading","SmartInventoryForm","parseHostFilter","SmartInventoryEdit","inventory","history","detailsUrl","id","readInstanceGroups","results","data","contentError","error","hasContentLoading","isLoading","fetchInstanceGroups","request","initialInstanceGroups","result","values","groupsToAssociate","groupsToDisassociate","update","orderInstanceGroups","submitError","submitRequest","submitResult","push","pathname","search","handleSubmit","form","modifiedForm","instance_groups","organization","remainingForm","handleCancel"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Inventory } from 'types';\nimport useRequest from 'hooks/useRequest';\nimport { InventoriesAPI } from 'api';\nimport { CardBody } from 'components/Card';\nimport ContentError from 'components/ContentError';\nimport ContentLoading from 'components/ContentLoading';\nimport SmartInventoryForm from '../shared/SmartInventoryForm';\nimport parseHostFilter from '../shared/utils';\n\nfunction SmartInventoryEdit({ inventory }) {\n  const history = useHistory();\n  const detailsUrl = `/inventories/smart_inventory/${inventory.id}/details`;\n\n  const {\n    error: contentError,\n    isLoading: hasContentLoading,\n    request: fetchInstanceGroups,\n    result: initialInstanceGroups,\n  } = useRequest(\n    useCallback(async () => {\n      const {\n        data: { results },\n      } = await InventoriesAPI.readInstanceGroups(inventory.id);\n      return results;\n    }, [inventory.id]),\n    []\n  );\n\n  useEffect(() => {\n    fetchInstanceGroups();\n  }, [fetchInstanceGroups]);\n\n  const {\n    error: submitError,\n    request: submitRequest,\n    result: submitResult,\n  } = useRequest(\n    useCallback(\n      async (values, groupsToAssociate, groupsToDisassociate) => {\n        const { data } = await InventoriesAPI.update(inventory.id, values);\n        await InventoriesAPI.orderInstanceGroups(\n          inventory.id,\n          groupsToAssociate,\n          groupsToDisassociate\n        );\n        return data;\n      },\n      [inventory.id]\n    )\n  );\n\n  useEffect(() => {\n    if (submitResult) {\n      history.push({\n        pathname: detailsUrl,\n        search: '',\n      });\n    }\n  }, [submitResult, detailsUrl, history]);\n\n  const handleSubmit = async (form) => {\n    const modifiedForm = parseHostFilter(form);\n    const { instance_groups, organization, ...remainingForm } = modifiedForm;\n\n    await submitRequest(\n      {\n        organization: organization?.id,\n        ...remainingForm,\n      },\n      instance_groups,\n      initialInstanceGroups\n    );\n  };\n\n  const handleCancel = () => {\n    history.push({\n      pathname: detailsUrl,\n      search: '',\n    });\n  };\n\n  if (hasContentLoading) {\n    return <ContentLoading />;\n  }\n\n  if (contentError) {\n    return <ContentError error={contentError} />;\n  }\n\n  return (\n    <CardBody>\n      <SmartInventoryForm\n        inventory={inventory}\n        instanceGroups={initialInstanceGroups}\n        onCancel={handleCancel}\n        onSubmit={handleSubmit}\n        submitError={submitError}\n      />\n    </CardBody>\n  );\n}\n\nSmartInventoryEdit.propTypes = {\n  inventory: Inventory.isRequired,\n};\n\nexport default SmartInventoryEdit;\n"]},"metadata":{},"sourceType":"module"}