{"ast":null,"code":"export var WizardDrawerWrapper = function WizardDrawerWrapper(_ref) {\n  var hasDrawer = _ref.hasDrawer,\n      wrapper = _ref.wrapper,\n      children = _ref.children;\n  return hasDrawer ? wrapper(children) : children;\n};\nWizardDrawerWrapper.displayName = 'WizardDrawerWrapper';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Wizard/WizardDrawerWrapper.tsx"],"names":[],"mappings":"AAWA,OAAO,IAAM,mBAAmB,GAAsD,SAAzE,mBAAyE;AAAA,MACpF,SADoF,QACpF,SADoF;AAAA,MAEpF,OAFoF,QAEpF,OAFoF;AAAA,MAGpF,QAHoF,QAGpF,QAHoF;AAAA,SAI/E,SAAS,GAAG,OAAO,CAAC,QAAD,CAAV,GAAuB,QAJ+C;AAAA,CAA/E;AAMP,mBAAmB,CAAC,WAApB,GAAkC,qBAAlC","sourcesContent":["import * as React from 'react';\n\nexport interface WizardDrawerWrapperProps {\n  /** The wizard content  */\n  children: React.ReactElement;\n  /** Flag indicating the wizard has a drawer for at least one of the wizard steps */\n  hasDrawer: boolean;\n  /** The drawer component which wraps the wizard content */\n  wrapper: (children: React.ReactElement) => JSX.Element;\n}\n\nexport const WizardDrawerWrapper: React.FunctionComponent<WizardDrawerWrapperProps> = ({\n  hasDrawer,\n  wrapper,\n  children\n}) => (hasDrawer ? wrapper(children) : children);\n\nWizardDrawerWrapper.displayName = 'WizardDrawerWrapper';\n"]},"metadata":{},"sourceType":"module"}