{"ast":null,"code":"import _toConsumableArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useEffect,useCallback,useState,useRef}from'react';import{PageSection,Card,CardHeader,CardBody,Toolbar,ToolbarGroup,ToolbarContent,ToolbarItem,Select,SelectOption}from'@patternfly/react-core';import{MetricsAPI,InstancesAPI}from'api';import useRequest from'hooks/useRequest';import ContentEmpty from'components/ContentEmpty';import ScreenHeader from'components/ScreenHeader/ScreenHeader';import ContentError from'components/ContentError';import LineChart from'./LineChart';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var count=[0];// hook thats calls api every 3 seconds to get data\nfunction useInterval(callback,delay,instance,metric){var savedCallback=useRef();useEffect(function(){savedCallback.current=callback;},[callback]);useEffect(function(){function tick(){count.push(count.length);if(instance&&metric){savedCallback.current();}}var id=setInterval(tick,delay);return function(){clearInterval(id);};},[callback,delay,instance,metric]);return{count:count};}function Metrics(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),instanceIsOpen=_useState2[0],setInstanceIsOpen=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),instance=_useState4[0],setInstance=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),metric=_useState6[0],setMetric=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),metricIsOpen=_useState8[0],setMetricIsOpen=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),renderedData=_useState10[0],setRenderedData=_useState10[1];var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$Promise$all,_yield$Promise$all2,results,mets,metricOptions,instanceNames;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Promise.all([InstancesAPI.read(),MetricsAPI.read({subsystemonly:1,format:'json'})]);case 2:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);results=_yield$Promise$all2[0].data.results;mets=_yield$Promise$all2[1].data;metricOptions=Object.keys(mets);instanceNames=[];results.forEach(function(result){if(result.node_type!=='execution'){instanceNames.push(result.hostname);}});return _context.abrupt(\"return\",{instances:instanceNames.length>1?[].concat(instanceNames,[/*i18n*/i18n._(\"All\")]):instanceNames,metrics:metricOptions});case 10:case\"end\":return _context.stop();}}},_callee);})),[]),{instances:[],metrics:[]}),_useRequest$result=_useRequest.result,instances=_useRequest$result.instances,metrics=_useRequest$result.metrics,fetchInitialError=_useRequest.error,fetchInstances=_useRequest.request;var _useRequest2=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$MetricsAPI$rea,data,rendered,instanceData,countRestrictedData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return MetricsAPI.read({subsystemonly:1,format:'json',node:instance==='All'?null:instance,metric:metric});case 2:_yield$MetricsAPI$rea=_context2.sent;data=_yield$MetricsAPI$rea.data;rendered=renderedData;instanceData=Object.values(data);instanceData.forEach(function(value){value.samples.forEach(function(sample){instances.forEach(function(i){if(i===sample.labels.node){var _rendered$renderedInd;var renderedIndex=renderedData.findIndex(function(rd){return rd.name===i;});if(renderedIndex===-1){rendered.push({name:i,values:[{y:sample.value,x:count.length-1}]});}else if(((_rendered$renderedInd=rendered[renderedIndex].values)===null||_rendered$renderedInd===void 0?void 0:_rendered$renderedInd.length)===0||!rendered[renderedIndex].values){rendered[renderedIndex].values=[{y:sample.value,x:count.length-1}];}else{rendered[renderedIndex].values=[].concat(_toConsumableArray(rendered[renderedIndex].values),[{y:sample.value,x:count.length-1}]);}}});});});countRestrictedData=rendered;if(count.length>49){countRestrictedData=rendered.map(function(_ref3){var values=_ref3.values,name=_ref3.name;return{name:name,values:values.slice(-50)};});}setRenderedData(countRestrictedData);return _context2.abrupt(\"return\",data[metric].help_text);case 11:case\"end\":return _context2.stop();}}},_callee2);})),[instance,metric,instances]),''),helpText=_useRequest2.result,updateError=_useRequest2.error,fetchData=_useRequest2.request;useInterval(fetchData,3000,instance,metric);useEffect(function(){if(instance&&metric){fetchData();}},[fetchData,instance,metric]);useEffect(function(){fetchInstances();},[fetchInstances]);if(fetchInitialError||updateError){return/*#__PURE__*/_jsx(PageSection,{children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(ContentError,{error:fetchInitialError||updateError}),\";\"]})})});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ScreenHeader,{breadcrumbConfig:{'/metrics':/*i18n*/i18n._(\"Metrics\")}}),/*#__PURE__*/_jsx(PageSection,{children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(Toolbar,{ouiaId:\"metrics-toolbar\",children:/*#__PURE__*/_jsx(ToolbarContent,{children:/*#__PURE__*/_jsxs(ToolbarGroup,{children:[/*#__PURE__*/_jsx(ToolbarItem,{children:/*i18n*/i18n._(\"Instance\")}),/*#__PURE__*/_jsx(ToolbarItem,{children:/*#__PURE__*/_jsx(Select,{ouiaId:\"Instance-select\",onToggle:setInstanceIsOpen,isOpen:instanceIsOpen,onSelect:function onSelect(e,value){count=[0];setInstance(value);setInstanceIsOpen(false);setRenderedData([]);},selections:instance,placeholderText:/*i18n*/i18n._(\"Select an instance\"),children:instances.map(function(inst){return/*#__PURE__*/_jsx(SelectOption,{value:inst},inst);})})}),/*#__PURE__*/_jsx(ToolbarItem,{children:/*i18n*/i18n._(\"Metric\")}),/*#__PURE__*/_jsx(ToolbarItem,{children:/*#__PURE__*/_jsx(Select,{ouiaId:\"Metric-select\",placeholderText:/*i18n*/i18n._(\"Select a metric\"),isOpen:metricIsOpen,onSelect:function onSelect(e,value){count=[0];setMetric(value);setRenderedData([]);setMetricIsOpen(false);},onToggle:setMetricIsOpen,selections:metric,children:metrics.map(function(met){return/*#__PURE__*/_jsx(SelectOption,{value:met},met);})})})]})})})}),/*#__PURE__*/_jsx(CardBody,{children:instance&&metric?Object.keys(renderedData).length>0&&/*#__PURE__*/_jsx(LineChart,{data:renderedData,count:count,helpText:helpText}):/*#__PURE__*/_jsx(ContentEmpty,{title:/*i18n*/i18n._(\"Select an instance and a metric to show chart\")})})]})})]});}export default Metrics;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Metrics/Metrics.js"],"names":["React","useEffect","useCallback","useState","useRef","PageSection","Card","CardHeader","CardBody","Toolbar","ToolbarGroup","ToolbarContent","ToolbarItem","Select","SelectOption","MetricsAPI","InstancesAPI","useRequest","ContentEmpty","ScreenHeader","ContentError","LineChart","count","useInterval","callback","delay","instance","metric","savedCallback","current","tick","push","length","id","setInterval","clearInterval","Metrics","instanceIsOpen","setInstanceIsOpen","setInstance","setMetric","metricIsOpen","setMetricIsOpen","renderedData","setRenderedData","Promise","all","read","subsystemonly","format","results","data","mets","metricOptions","Object","keys","instanceNames","forEach","result","node_type","hostname","instances","metrics","fetchInitialError","error","fetchInstances","request","node","rendered","instanceData","values","value","samples","sample","i","labels","renderedIndex","findIndex","rd","name","y","x","countRestrictedData","map","slice","help_text","helpText","updateError","fetchData","e","inst","met"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useState, useRef } from 'react';\n\nimport { t } from '@lingui/macro';\nimport {\n  PageSection,\n  Card,\n  CardHeader,\n  CardBody,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarContent,\n  ToolbarItem,\n  Select,\n  SelectOption,\n} from '@patternfly/react-core';\n\nimport { MetricsAPI, InstancesAPI } from 'api';\nimport useRequest from 'hooks/useRequest';\nimport ContentEmpty from 'components/ContentEmpty';\nimport ScreenHeader from 'components/ScreenHeader/ScreenHeader';\nimport ContentError from 'components/ContentError';\nimport LineChart from './LineChart';\n\nlet count = [0];\n\n// hook thats calls api every 3 seconds to get data\nfunction useInterval(callback, delay, instance, metric) {\n  const savedCallback = useRef();\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n  useEffect(() => {\n    function tick() {\n      count.push(count.length);\n      if (instance && metric) {\n        savedCallback.current();\n      }\n    }\n\n    const id = setInterval(tick, delay);\n    return () => {\n      clearInterval(id);\n    };\n  }, [callback, delay, instance, metric]);\n  return { count };\n}\nfunction Metrics() {\n  const [instanceIsOpen, setInstanceIsOpen] = useState(false);\n  const [instance, setInstance] = useState(null);\n  const [metric, setMetric] = useState(null);\n  const [metricIsOpen, setMetricIsOpen] = useState(false);\n  const [renderedData, setRenderedData] = useState([]);\n  const {\n    result: { instances, metrics },\n    error: fetchInitialError,\n    request: fetchInstances,\n  } = useRequest(\n    useCallback(async () => {\n      const [\n        {\n          data: { results },\n        },\n        { data: mets },\n      ] = await Promise.all([\n        InstancesAPI.read(),\n        MetricsAPI.read({\n          subsystemonly: 1,\n          format: 'json',\n        }),\n      ]);\n\n      const metricOptions = Object.keys(mets);\n      const instanceNames = [];\n      results.forEach((result) => {\n        if (result.node_type !== 'execution') {\n          instanceNames.push(result.hostname);\n        }\n      });\n\n      return {\n        instances:\n          instanceNames.length > 1 ? [...instanceNames, t`All`] : instanceNames,\n        metrics: metricOptions,\n      };\n    }, []),\n    { instances: [], metrics: [] }\n  );\n\n  const {\n    result: helpText,\n    error: updateError,\n    request: fetchData,\n  } = useRequest(\n    useCallback(async () => {\n      const { data } = await MetricsAPI.read({\n        subsystemonly: 1,\n        format: 'json',\n        node: instance === 'All' ? null : instance,\n        metric,\n      });\n\n      const rendered = renderedData;\n      const instanceData = Object.values(data);\n      instanceData.forEach((value) => {\n        value.samples.forEach((sample) => {\n          instances.forEach((i) => {\n            if (i === sample.labels.node) {\n              const renderedIndex = renderedData.findIndex(\n                (rd) => rd.name === i\n              );\n\n              if (renderedIndex === -1) {\n                rendered.push({\n                  name: i,\n                  values: [\n                    {\n                      y: sample.value,\n                      x: count.length - 1,\n                    },\n                  ],\n                });\n              } else if (\n                rendered[renderedIndex].values?.length === 0 ||\n                !rendered[renderedIndex].values\n              ) {\n                rendered[renderedIndex].values = [\n                  { y: sample.value, x: count.length - 1 },\n                ];\n              } else {\n                rendered[renderedIndex].values = [\n                  ...rendered[renderedIndex].values,\n                  { y: sample.value, x: count.length - 1 },\n                ];\n              }\n            }\n          });\n        });\n      });\n      let countRestrictedData = rendered;\n      if (count.length > 49) {\n        countRestrictedData = rendered.map(({ values, name }) => ({\n          name,\n          values: values.slice(-50),\n        }));\n      }\n\n      setRenderedData(countRestrictedData);\n      return data[metric].help_text;\n\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [instance, metric, instances]),\n    ''\n  );\n\n  useInterval(fetchData, 3000, instance, metric);\n\n  useEffect(() => {\n    if (instance && metric) {\n      fetchData();\n    }\n  }, [fetchData, instance, metric]);\n\n  useEffect(() => {\n    fetchInstances();\n  }, [fetchInstances]);\n  if (fetchInitialError || updateError) {\n    return (\n      <PageSection>\n        <Card>\n          <CardBody>\n            <ContentError error={fetchInitialError || updateError} />;\n          </CardBody>\n        </Card>\n      </PageSection>\n    );\n  }\n  return (\n    <>\n      <ScreenHeader breadcrumbConfig={{ '/metrics': t`Metrics` }} />\n\n      <PageSection>\n        <Card>\n          <CardHeader>\n            <Toolbar ouiaId=\"metrics-toolbar\">\n              <ToolbarContent>\n                <ToolbarGroup>\n                  <ToolbarItem>{t`Instance`}</ToolbarItem>\n                  <ToolbarItem>\n                    <Select\n                      ouiaId=\"Instance-select\"\n                      onToggle={setInstanceIsOpen}\n                      isOpen={instanceIsOpen}\n                      onSelect={(e, value) => {\n                        count = [0];\n                        setInstance(value);\n                        setInstanceIsOpen(false);\n                        setRenderedData([]);\n                      }}\n                      selections={instance}\n                      placeholderText={t`Select an instance`}\n                    >\n                      {instances.map((inst) => (\n                        <SelectOption value={inst} key={inst} />\n                      ))}\n                    </Select>\n                  </ToolbarItem>\n                  <ToolbarItem>{t`Metric`}</ToolbarItem>\n                  <ToolbarItem>\n                    <Select\n                      ouiaId=\"Metric-select\"\n                      placeholderText={t`Select a metric`}\n                      isOpen={metricIsOpen}\n                      onSelect={(e, value) => {\n                        count = [0];\n                        setMetric(value);\n                        setRenderedData([]);\n                        setMetricIsOpen(false);\n                      }}\n                      onToggle={setMetricIsOpen}\n                      selections={metric}\n                    >\n                      {metrics.map((met) => (\n                        <SelectOption value={met} key={met} />\n                      ))}\n                    </Select>\n                  </ToolbarItem>\n                </ToolbarGroup>\n              </ToolbarContent>\n            </Toolbar>\n          </CardHeader>\n          <CardBody>\n            {instance && metric ? (\n              Object.keys(renderedData).length > 0 && (\n                <LineChart\n                  data={renderedData}\n                  count={count}\n                  helpText={helpText}\n                />\n              )\n            ) : (\n              <ContentEmpty\n                title={t`Select an instance and a metric to show chart`}\n              />\n            )}\n          </CardBody>\n        </Card>\n      </PageSection>\n    </>\n  );\n}\n\nexport default Metrics;\n"]},"metadata":{},"sourceType":"module"}