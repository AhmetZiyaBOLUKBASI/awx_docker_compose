{"ast":null,"code":"import _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\nimport { getDefaultOUIAId, getOUIAProps } from '../../helpers'; // tslint:disable-next-line:no-empty\n\nvar defaultOnChange = function defaultOnChange() {};\n\nexport var Checkbox = /*#__PURE__*/function (_React$Component) {\n  _inherits(Checkbox, _React$Component);\n\n  var _super = _createSuper(Checkbox);\n\n  function Checkbox(props) {\n    var _this;\n\n    _classCallCheck(this, Checkbox);\n\n    _this = _super.call(this, props);\n\n    _this.handleChange = function (event) {\n      _this.props.onChange(event.currentTarget.checked, event);\n    };\n\n    _this.state = {\n      ouiaStateId: getDefaultOUIAId(Checkbox.displayName)\n    };\n    return _this;\n  }\n\n  _createClass(Checkbox, [{\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          ariaLabel = _a['aria-label'],\n          className = _a.className,\n          onChange = _a.onChange,\n          isValid = _a.isValid,\n          isDisabled = _a.isDisabled,\n          isChecked = _a.isChecked,\n          label = _a.label,\n          checked = _a.checked,\n          defaultChecked = _a.defaultChecked,\n          description = _a.description,\n          body = _a.body,\n          ouiaId = _a.ouiaId,\n          ouiaSafe = _a.ouiaSafe,\n          Component = _a.component,\n          props = __rest(_a, ['aria-label', \"className\", \"onChange\", \"isValid\", \"isDisabled\", \"isChecked\", \"label\", \"checked\", \"defaultChecked\", \"description\", \"body\", \"ouiaId\", \"ouiaSafe\", \"component\"]);\n\n      if (!props.id) {\n        // eslint-disable-next-line no-console\n        console.error('Checkbox:', 'id is required to make input accessible');\n      }\n\n      var checkedProps = {};\n\n      if ([true, false].includes(checked) || isChecked === true) {\n        checkedProps.checked = checked || isChecked;\n      }\n\n      if (onChange !== defaultOnChange) {\n        checkedProps.checked = isChecked;\n      }\n\n      if ([false, true].includes(defaultChecked)) {\n        checkedProps.defaultChecked = defaultChecked;\n      }\n\n      checkedProps.checked = checkedProps.checked === null ? false : checkedProps.checked;\n      return React.createElement(Component, {\n        className: css(styles.check, !label && styles.modifiers.standalone, className)\n      }, React.createElement(\"input\", Object.assign({}, props, {\n        className: css(styles.checkInput),\n        type: \"checkbox\",\n        onChange: this.handleChange,\n        \"aria-invalid\": !isValid,\n        \"aria-label\": ariaLabel,\n        disabled: isDisabled,\n        ref: function ref(elem) {\n          return elem && (elem.indeterminate = isChecked === null);\n        }\n      }, checkedProps, getOUIAProps(Checkbox.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe))), label && React.createElement(\"label\", {\n        className: css(styles.checkLabel, isDisabled && styles.modifiers.disabled),\n        htmlFor: props.id\n      }, label), description && React.createElement(\"span\", {\n        className: css(styles.checkDescription)\n      }, description), body && React.createElement(\"span\", {\n        className: css(styles.checkBody)\n      }, body));\n    }\n  }]);\n\n  return Checkbox;\n}(React.Component);\nCheckbox.displayName = 'Checkbox';\nCheckbox.defaultProps = {\n  className: '',\n  isValid: true,\n  isDisabled: false,\n  isChecked: false,\n  onChange: defaultOnChange,\n  ouiaSafe: true,\n  component: 'div'\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Checkbox/Checkbox.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport { getDefaultOUIAId, getOUIAProps, OUIAProps } from '../../helpers';\n\nexport interface CheckboxProps\n  extends Omit<React.HTMLProps<HTMLInputElement>, 'type' | 'onChange' | 'disabled' | 'label'>,\n    OUIAProps {\n  /** Additional classes added to the Checkbox. */\n  className?: string;\n  /** Flag to show if the Checkbox selection is valid or invalid. */\n  isValid?: boolean;\n  /** Flag to show if the Checkbox is disabled. */\n  isDisabled?: boolean;\n  /** Flag to show if the Checkbox is checked. If null, the checkbox will be indeterminate (partially checked). */\n  isChecked?: boolean | null;\n  checked?: boolean;\n  /** A callback for when the Checkbox selection changes. */\n  onChange?: (checked: boolean, event: React.FormEvent<HTMLInputElement>) => void;\n  /** Label text of the checkbox. */\n  label?: React.ReactNode;\n  /** Id of the checkbox. */\n  id: string;\n  /** Aria-label of the checkbox. */\n  'aria-label'?: string;\n  /** Description text of the checkbox. */\n  description?: React.ReactNode;\n  /** Body text of the checkbox */\n  body?: React.ReactNode;\n  /** Sets the input wrapper component to render. Defaults to <div> */\n  component?: React.ElementType;\n}\n\n// tslint:disable-next-line:no-empty\nconst defaultOnChange = () => {};\n\ninterface CheckboxState {\n  ouiaStateId: string;\n}\n\nexport class Checkbox extends React.Component<CheckboxProps, CheckboxState> {\n  static displayName = 'Checkbox';\n  static defaultProps: PickOptional<CheckboxProps> = {\n    className: '',\n    isValid: true,\n    isDisabled: false,\n    isChecked: false,\n    onChange: defaultOnChange,\n    ouiaSafe: true,\n    component: 'div'\n  };\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(Checkbox.displayName)\n    };\n  }\n\n  private handleChange = (event: React.FormEvent<HTMLInputElement>): void => {\n    this.props.onChange(event.currentTarget.checked, event);\n  };\n\n  render() {\n    const {\n      'aria-label': ariaLabel,\n      className,\n      onChange,\n      isValid,\n      isDisabled,\n      isChecked,\n      label,\n      checked,\n      defaultChecked,\n      description,\n      body,\n      ouiaId,\n      ouiaSafe,\n      component: Component,\n      ...props\n    } = this.props;\n    if (!props.id) {\n      // eslint-disable-next-line no-console\n      console.error('Checkbox:', 'id is required to make input accessible');\n    }\n    const checkedProps: { checked?: boolean; defaultChecked?: boolean } = {};\n    if ([true, false].includes(checked) || isChecked === true) {\n      checkedProps.checked = checked || isChecked;\n    }\n    if (onChange !== defaultOnChange) {\n      checkedProps.checked = isChecked;\n    }\n    if ([false, true].includes(defaultChecked)) {\n      checkedProps.defaultChecked = defaultChecked;\n    }\n\n    checkedProps.checked = checkedProps.checked === null ? false : checkedProps.checked;\n    return (\n      <Component className={css(styles.check, !label && styles.modifiers.standalone, className)}>\n        <input\n          {...props}\n          className={css(styles.checkInput)}\n          type=\"checkbox\"\n          onChange={this.handleChange}\n          aria-invalid={!isValid}\n          aria-label={ariaLabel}\n          disabled={isDisabled}\n          ref={elem => elem && (elem.indeterminate = isChecked === null)}\n          {...checkedProps}\n          {...getOUIAProps(Checkbox.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n        />\n        {label && (\n          <label className={css(styles.checkLabel, isDisabled && styles.modifiers.disabled)} htmlFor={props.id}>\n            {label}\n          </label>\n        )}\n        {description && <span className={css(styles.checkDescription)}>{description}</span>}\n        {body && <span className={css(styles.checkBody)}>{body}</span>}\n      </Component>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}