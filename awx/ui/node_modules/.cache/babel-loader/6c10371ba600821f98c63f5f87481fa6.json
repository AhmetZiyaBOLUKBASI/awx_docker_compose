{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import React,{useState}from'react';import{Button}from'@patternfly/react-core';import{useHistory,useParams}from'react-router-dom';import{VariablesDetail}from'components/CodeEditor';import{CardBody,CardActionsRow}from'components/Card';import ErrorDetail from'components/ErrorDetail';import AlertModal from'components/AlertModal';import{DetailList,Detail,UserDateDetail}from'components/DetailList';import InventoryGroupsDeleteModal from'../shared/InventoryGroupsDeleteModal';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function InventoryGroupDetail(_ref){var inventoryGroup=_ref.inventoryGroup;var _inventoryGroup$summa=inventoryGroup.summary_fields,created_by=_inventoryGroup$summa.created_by,modified_by=_inventoryGroup$summa.modified_by,user_capabilities=_inventoryGroup$summa.user_capabilities,created=inventoryGroup.created,modified=inventoryGroup.modified,name=inventoryGroup.name,description=inventoryGroup.description,variables=inventoryGroup.variables;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var history=useHistory();var params=useParams();return/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsxs(DetailList,{gutter:\"sm\",children:[/*#__PURE__*/_jsx(Detail,{label:/*i18n*/i18n._(\"Name\"),value:name,dataCy:\"inventory-group-detail-name\"}),/*#__PURE__*/_jsx(Detail,{label:/*i18n*/i18n._(\"Description\"),value:description}),/*#__PURE__*/_jsx(VariablesDetail,{label:/*i18n*/i18n._(\"Variables\"),value:variables,rows:4,name:\"variables\",dataCy:\"inventory-group-detail-variables\"}),/*#__PURE__*/_jsx(UserDateDetail,{label:/*i18n*/i18n._(\"Created\"),date:created,user:created_by}),/*#__PURE__*/_jsx(UserDateDetail,{label:/*i18n*/i18n._(\"Last Modified\"),date:modified,user:modified_by})]}),/*#__PURE__*/_jsxs(CardActionsRow,{children:[(user_capabilities===null||user_capabilities===void 0?void 0:user_capabilities.edit)&&/*#__PURE__*/_jsx(Button,{ouiaId:\"inventory-group-detail-edit-button\",variant:\"primary\",\"aria-label\":/*i18n*/i18n._(\"Edit\"),onClick:function onClick(){return history.push(\"/inventories/inventory/\".concat(params.id,\"/groups/\").concat(params.groupId,\"/edit\"));},children:/*i18n*/i18n._(\"Edit\")}),(user_capabilities===null||user_capabilities===void 0?void 0:user_capabilities.delete)&&/*#__PURE__*/_jsx(InventoryGroupsDeleteModal,{groups:[inventoryGroup],isDisabled:false,onAfterDelete:function onAfterDelete(){return history.push(\"/inventories/inventory/\".concat(params.id,\"/groups\"));}})]}),error&&/*#__PURE__*/_jsxs(AlertModal,{variant:\"error\",title:/*i18n*/i18n._(\"Error!\"),isOpen:error,onClose:function onClose(){return setError(false);},children:[/*i18n*/i18n._(\"Failed to delete group {0}.\",{0:inventoryGroup.name}),/*#__PURE__*/_jsx(ErrorDetail,{error:error})]})]});}export default InventoryGroupDetail;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Inventory/InventoryGroupDetail/InventoryGroupDetail.js"],"names":["React","useState","Button","useHistory","useParams","VariablesDetail","CardBody","CardActionsRow","ErrorDetail","AlertModal","DetailList","Detail","UserDateDetail","InventoryGroupsDeleteModal","InventoryGroupDetail","inventoryGroup","summary_fields","created_by","modified_by","user_capabilities","created","modified","name","description","variables","error","setError","history","params","edit","push","id","groupId","delete"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { t } from '@lingui/macro';\n\nimport { Button } from '@patternfly/react-core';\n\nimport { useHistory, useParams } from 'react-router-dom';\nimport { VariablesDetail } from 'components/CodeEditor';\nimport { CardBody, CardActionsRow } from 'components/Card';\nimport ErrorDetail from 'components/ErrorDetail';\nimport AlertModal from 'components/AlertModal';\nimport { DetailList, Detail, UserDateDetail } from 'components/DetailList';\nimport InventoryGroupsDeleteModal from '../shared/InventoryGroupsDeleteModal';\n\nfunction InventoryGroupDetail({ inventoryGroup }) {\n  const {\n    summary_fields: { created_by, modified_by, user_capabilities },\n    created,\n    modified,\n    name,\n    description,\n    variables,\n  } = inventoryGroup;\n  const [error, setError] = useState(false);\n  const history = useHistory();\n  const params = useParams();\n\n  return (\n    <CardBody>\n      <DetailList gutter=\"sm\">\n        <Detail\n          label={t`Name`}\n          value={name}\n          dataCy=\"inventory-group-detail-name\"\n        />\n        <Detail label={t`Description`} value={description} />\n        <VariablesDetail\n          label={t`Variables`}\n          value={variables}\n          rows={4}\n          name=\"variables\"\n          dataCy=\"inventory-group-detail-variables\"\n        />\n        <UserDateDetail label={t`Created`} date={created} user={created_by} />\n        <UserDateDetail\n          label={t`Last Modified`}\n          date={modified}\n          user={modified_by}\n        />\n      </DetailList>\n      <CardActionsRow>\n        {user_capabilities?.edit && (\n          <Button\n            ouiaId=\"inventory-group-detail-edit-button\"\n            variant=\"primary\"\n            aria-label={t`Edit`}\n            onClick={() =>\n              history.push(\n                `/inventories/inventory/${params.id}/groups/${params.groupId}/edit`\n              )\n            }\n          >\n            {t`Edit`}\n          </Button>\n        )}\n        {user_capabilities?.delete && (\n          <InventoryGroupsDeleteModal\n            groups={[inventoryGroup]}\n            isDisabled={false}\n            onAfterDelete={() =>\n              history.push(`/inventories/inventory/${params.id}/groups`)\n            }\n          />\n        )}\n      </CardActionsRow>\n      {error && (\n        <AlertModal\n          variant=\"error\"\n          title={t`Error!`}\n          isOpen={error}\n          onClose={() => setError(false)}\n        >\n          {t`Failed to delete group ${inventoryGroup.name}.`}\n          <ErrorDetail error={error} />\n        </AlertModal>\n      )}\n    </CardBody>\n  );\n}\nexport default InventoryGroupDetail;\n"]},"metadata":{},"sourceType":"module"}