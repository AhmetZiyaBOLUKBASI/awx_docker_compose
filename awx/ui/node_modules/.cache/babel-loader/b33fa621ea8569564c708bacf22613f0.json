{"ast":null,"code":"import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useEffect,useCallback}from'react';import{Link,Redirect,Route,Switch,useLocation,useParams}from'react-router-dom';import{CaretLeftIcon}from'@patternfly/react-icons';import{Card,PageSection}from'@patternfly/react-core';import useRequest from'hooks/useRequest';import{InstanceGroupsAPI}from'api';import RoutedTabs from'components/RoutedTabs';import ContentError from'components/ContentError';import ContentLoading from'components/ContentLoading';import JobList from'components/JobList';import ContainerGroupDetails from'./ContainerGroupDetails';import ContainerGroupEdit from'./ContainerGroupEdit';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ContainerGroup(_ref){var setBreadcrumb=_ref.setBreadcrumb;var _useParams=useParams(),id=_useParams.id;var _useLocation=useLocation(),pathname=_useLocation.pathname;var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$InstanceGroups,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return InstanceGroupsAPI.readDetail(id);case 2:_yield$InstanceGroups=_context.sent;data=_yield$InstanceGroups.data;return _context.abrupt(\"return\",{instanceGroup:data});case 5:case\"end\":return _context.stop();}}},_callee);})),[id]),{instanceGroup:null}),isLoading=_useRequest.isLoading,contentError=_useRequest.error,fetchInstanceGroups=_useRequest.request,instanceGroup=_useRequest.result.instanceGroup;useEffect(function(){fetchInstanceGroups();},[fetchInstanceGroups,pathname]);useEffect(function(){if(instanceGroup){setBreadcrumb(instanceGroup);}},[instanceGroup,setBreadcrumb]);var tabsArray=[{name:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CaretLeftIcon,{}),/*i18n*/i18n._(\"Back to instance groups\")]}),link:'/instance_groups',id:99},{name:/*i18n*/i18n._(\"Details\"),link:\"/instance_groups/container_group/\".concat(id,\"/details\"),id:0},{name:/*i18n*/i18n._(\"Jobs\"),link:\"/instance_groups/container_group/\".concat(id,\"/jobs\"),id:1}];if(!isLoading&&contentError){var _contentError$respons;return/*#__PURE__*/_jsx(PageSection,{children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(ContentError,{error:contentError,children:((_contentError$respons=contentError.response)===null||_contentError$respons===void 0?void 0:_contentError$respons.status)===404&&/*#__PURE__*/_jsxs(\"span\",{children:[/*i18n*/i18n._(\"Container group not found.\"),/*#__PURE__*/_jsx(Link,{to:\"/instance_groups\",children:/*i18n*/i18n._(\"View all instance groups\")})]})})})});}var cardHeader=/*#__PURE__*/_jsx(RoutedTabs,{tabsArray:tabsArray});if(pathname.endsWith('edit')){cardHeader=null;}return/*#__PURE__*/_jsx(PageSection,{children:/*#__PURE__*/_jsxs(Card,{children:[cardHeader,isLoading&&/*#__PURE__*/_jsx(ContentLoading,{}),!isLoading&&instanceGroup&&/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Redirect,{from:\"/instance_groups/container_group/:id\",to:\"/instance_groups/container_group/:id/details\",exact:true}),instanceGroup&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Route,{path:\"/instance_groups/container_group/:id/edit\",children:/*#__PURE__*/_jsx(ContainerGroupEdit,{instanceGroup:instanceGroup})}),/*#__PURE__*/_jsx(Route,{path:\"/instance_groups/container_group/:id/details\",children:/*#__PURE__*/_jsx(ContainerGroupDetails,{instanceGroup:instanceGroup})}),/*#__PURE__*/_jsx(Route,{path:\"/instance_groups/container_group/:id/jobs\",children:/*#__PURE__*/_jsx(JobList,{showTypeColumn:true,defaultParams:{instance_group:instanceGroup.id}})})]})]})]})});}export default ContainerGroup;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/InstanceGroup/ContainerGroup.js"],"names":["React","useEffect","useCallback","Link","Redirect","Route","Switch","useLocation","useParams","CaretLeftIcon","Card","PageSection","useRequest","InstanceGroupsAPI","RoutedTabs","ContentError","ContentLoading","JobList","ContainerGroupDetails","ContainerGroupEdit","ContainerGroup","setBreadcrumb","id","pathname","readDetail","data","instanceGroup","isLoading","contentError","error","fetchInstanceGroups","request","result","tabsArray","name","link","response","status","cardHeader","endsWith","instance_group"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from 'react';\nimport {\n  Link,\n  Redirect,\n  Route,\n  Switch,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\n\nimport { t } from '@lingui/macro';\nimport { CaretLeftIcon } from '@patternfly/react-icons';\nimport { Card, PageSection } from '@patternfly/react-core';\n\nimport useRequest from 'hooks/useRequest';\nimport { InstanceGroupsAPI } from 'api';\nimport RoutedTabs from 'components/RoutedTabs';\nimport ContentError from 'components/ContentError';\nimport ContentLoading from 'components/ContentLoading';\nimport JobList from 'components/JobList';\n\nimport ContainerGroupDetails from './ContainerGroupDetails';\nimport ContainerGroupEdit from './ContainerGroupEdit';\n\nfunction ContainerGroup({ setBreadcrumb }) {\n  const { id } = useParams();\n  const { pathname } = useLocation();\n\n  const {\n    isLoading,\n    error: contentError,\n    request: fetchInstanceGroups,\n    result: { instanceGroup },\n  } = useRequest(\n    useCallback(async () => {\n      const { data } = await InstanceGroupsAPI.readDetail(id);\n      return {\n        instanceGroup: data,\n      };\n    }, [id]),\n    { instanceGroup: null }\n  );\n\n  useEffect(() => {\n    fetchInstanceGroups();\n  }, [fetchInstanceGroups, pathname]);\n\n  useEffect(() => {\n    if (instanceGroup) {\n      setBreadcrumb(instanceGroup);\n    }\n  }, [instanceGroup, setBreadcrumb]);\n\n  const tabsArray = [\n    {\n      name: (\n        <>\n          <CaretLeftIcon />\n          {t`Back to instance groups`}\n        </>\n      ),\n      link: '/instance_groups',\n      id: 99,\n    },\n    {\n      name: t`Details`,\n      link: `/instance_groups/container_group/${id}/details`,\n      id: 0,\n    },\n    {\n      name: t`Jobs`,\n      link: `/instance_groups/container_group/${id}/jobs`,\n      id: 1,\n    },\n  ];\n\n  if (!isLoading && contentError) {\n    return (\n      <PageSection>\n        <Card>\n          <ContentError error={contentError}>\n            {contentError.response?.status === 404 && (\n              <span>\n                {t`Container group not found.`}\n\n                <Link to=\"/instance_groups\">{t`View all instance groups`}</Link>\n              </span>\n            )}\n          </ContentError>\n        </Card>\n      </PageSection>\n    );\n  }\n\n  let cardHeader = <RoutedTabs tabsArray={tabsArray} />;\n  if (pathname.endsWith('edit')) {\n    cardHeader = null;\n  }\n\n  return (\n    <PageSection>\n      <Card>\n        {cardHeader}\n        {isLoading && <ContentLoading />}\n        {!isLoading && instanceGroup && (\n          <Switch>\n            <Redirect\n              from=\"/instance_groups/container_group/:id\"\n              to=\"/instance_groups/container_group/:id/details\"\n              exact\n            />\n            {instanceGroup && (\n              <>\n                <Route path=\"/instance_groups/container_group/:id/edit\">\n                  <ContainerGroupEdit instanceGroup={instanceGroup} />\n                </Route>\n                <Route path=\"/instance_groups/container_group/:id/details\">\n                  <ContainerGroupDetails instanceGroup={instanceGroup} />\n                </Route>\n                <Route path=\"/instance_groups/container_group/:id/jobs\">\n                  <JobList\n                    showTypeColumn\n                    defaultParams={{ instance_group: instanceGroup.id }}\n                  />\n                </Route>\n              </>\n            )}\n          </Switch>\n        )}\n      </Card>\n    </PageSection>\n  );\n}\n\nexport default ContainerGroup;\n"]},"metadata":{},"sourceType":"module"}