{"ast":null,"code":"import _defineProperty from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import React,{useState,useCallback}from'react';import{Route,Switch}from'react-router-dom';import{Config}from'contexts/Config';import ScreenHeader from'components/ScreenHeader';import PersistentFilters from'components/PersistentFilters';import Credential from'./Credential';import CredentialAdd from'./CredentialAdd';import{CredentialList}from'./CredentialList';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Credentials(){var _useState=useState({'/credentials':/*i18n*/i18n._(\"Credentials\"),'/credentials/add':/*i18n*/i18n._(\"Create New Credential\")}),_useState2=_slicedToArray(_useState,2),breadcrumbConfig=_useState2[0],setBreadcrumbConfig=_useState2[1];var buildBreadcrumbConfig=useCallback(function(credential){var _setBreadcrumbConfig;if(!credential){return;}setBreadcrumbConfig((_setBreadcrumbConfig={'/credentials':/*i18n*/i18n._(\"Credentials\"),'/credentials/add':/*i18n*/i18n._(\"Create New Credential\")},_defineProperty(_setBreadcrumbConfig,\"/credentials/\".concat(credential.id),\"\".concat(credential.name)),_defineProperty(_setBreadcrumbConfig,\"/credentials/\".concat(credential.id,\"/edit\"),/*i18n*/i18n._(\"Edit Details\")),_defineProperty(_setBreadcrumbConfig,\"/credentials/\".concat(credential.id,\"/details\"),/*i18n*/i18n._(\"Details\")),_defineProperty(_setBreadcrumbConfig,\"/credentials/\".concat(credential.id,\"/access\"),/*i18n*/i18n._(\"Access\")),_defineProperty(_setBreadcrumbConfig,\"/credentials/\".concat(credential.id,\"/job_templates\"),/*i18n*/i18n._(\"Job Templates\")),_setBreadcrumbConfig));},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ScreenHeader,{streamType:\"credential\",breadcrumbConfig:breadcrumbConfig}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/credentials/add\",children:/*#__PURE__*/_jsx(Config,{children:function children(_ref){var me=_ref.me;return/*#__PURE__*/_jsx(CredentialAdd,{me:me||{}});}})}),/*#__PURE__*/_jsx(Route,{path:\"/credentials/:id\",children:/*#__PURE__*/_jsx(Credential,{setBreadcrumb:buildBreadcrumbConfig})}),/*#__PURE__*/_jsx(Route,{path:\"/credentials\",children:/*#__PURE__*/_jsx(PersistentFilters,{pageKey:\"credentials\",children:/*#__PURE__*/_jsx(CredentialList,{})})})]})]});}export default Credentials;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Credential/Credentials.js"],"names":["React","useState","useCallback","Route","Switch","Config","ScreenHeader","PersistentFilters","Credential","CredentialAdd","CredentialList","Credentials","breadcrumbConfig","setBreadcrumbConfig","buildBreadcrumbConfig","credential","id","name","me"],"mappings":"+OAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,WAA1B,KAA6C,OAA7C,CACA,OAASC,KAAT,CAAgBC,MAAhB,KAA8B,kBAA9B,CAGA,OAASC,MAAT,KAAuB,iBAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,yBAAzB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,8BAA9B,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,OAASC,cAAT,KAA+B,kBAA/B,C,6IAEA,QAASC,CAAAA,WAAT,EAAuB,CACrB,cAAgDV,QAAQ,CAAC,CACvD,uBAAgB,qBADuC,CAEvD,2BAAoB,+BAFmC,CAAD,CAAxD,wCAAOW,gBAAP,eAAyBC,mBAAzB,eAKA,GAAMC,CAAAA,qBAAqB,CAAGZ,WAAW,CAAC,SAACa,UAAD,CAAgB,0BACxD,GAAI,CAACA,UAAL,CAAiB,CACf,OACD,CAEDF,mBAAmB,wBACjB,uBAAgB,qBADC,CAEjB,2BAAoB,+BAFH,8DAGAE,UAAU,CAACC,EAHX,YAGqBD,UAAU,CAACE,IAHhC,+DAIAF,UAAU,CAACC,EAJX,kBAIuB,sBAJvB,8DAKAD,UAAU,CAACC,EALX,qBAK0B,iBAL1B,8DAMAD,UAAU,CAACC,EANX,oBAMyB,gBANzB,8DAOAD,UAAU,CAACC,EAPX,2BAOgC,uBAPhC,wBAAnB,CASD,CAdwC,CActC,EAdsC,CAAzC,CAgBA,mBACE,wCACE,KAAC,YAAD,EACE,UAAU,CAAC,YADb,CAEE,gBAAgB,CAAEJ,gBAFpB,EADF,cAKE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,CAAC,kBAAZ,uBACE,KAAC,MAAD,WAAS,2BAAGM,CAAAA,EAAH,MAAGA,EAAH,oBAAY,KAAC,aAAD,EAAe,EAAE,CAAEA,EAAE,EAAI,EAAzB,EAAZ,EAAT,EADF,EADF,cAIE,KAAC,KAAD,EAAO,IAAI,CAAC,kBAAZ,uBACE,KAAC,UAAD,EAAY,aAAa,CAAEJ,qBAA3B,EADF,EAJF,cAOE,KAAC,KAAD,EAAO,IAAI,CAAC,cAAZ,uBACE,KAAC,iBAAD,EAAmB,OAAO,CAAC,aAA3B,uBACE,KAAC,cAAD,IADF,EADF,EAPF,GALF,GADF,CAqBD,CAED,cAAeH,CAAAA,WAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { t } from '@lingui/macro';\nimport { Config } from 'contexts/Config';\nimport ScreenHeader from 'components/ScreenHeader';\nimport PersistentFilters from 'components/PersistentFilters';\nimport Credential from './Credential';\nimport CredentialAdd from './CredentialAdd';\nimport { CredentialList } from './CredentialList';\n\nfunction Credentials() {\n  const [breadcrumbConfig, setBreadcrumbConfig] = useState({\n    '/credentials': t`Credentials`,\n    '/credentials/add': t`Create New Credential`,\n  });\n\n  const buildBreadcrumbConfig = useCallback((credential) => {\n    if (!credential) {\n      return;\n    }\n\n    setBreadcrumbConfig({\n      '/credentials': t`Credentials`,\n      '/credentials/add': t`Create New Credential`,\n      [`/credentials/${credential.id}`]: `${credential.name}`,\n      [`/credentials/${credential.id}/edit`]: t`Edit Details`,\n      [`/credentials/${credential.id}/details`]: t`Details`,\n      [`/credentials/${credential.id}/access`]: t`Access`,\n      [`/credentials/${credential.id}/job_templates`]: t`Job Templates`,\n    });\n  }, []);\n\n  return (\n    <>\n      <ScreenHeader\n        streamType=\"credential\"\n        breadcrumbConfig={breadcrumbConfig}\n      />\n      <Switch>\n        <Route path=\"/credentials/add\">\n          <Config>{({ me }) => <CredentialAdd me={me || {}} />}</Config>\n        </Route>\n        <Route path=\"/credentials/:id\">\n          <Credential setBreadcrumb={buildBreadcrumbConfig} />\n        </Route>\n        <Route path=\"/credentials\">\n          <PersistentFilters pageKey=\"credentials\">\n            <CredentialList />\n          </PersistentFilters>\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default Credentials;\n"]},"metadata":{},"sourceType":"module"}