{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3;import{i18n}from\"@lingui/core\";import React,{useContext,useRef,useState}from'react';import styled from'styled-components';import{PlusIcon}from'@patternfly/react-icons';import{WorkflowDispatchContext,WorkflowStateContext}from'contexts/Workflow';import WorkflowActionTooltip from'./WorkflowActionTooltip';import WorkflowActionTooltipItem from'./WorkflowActionTooltipItem';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StartG=styled.g(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  pointer-events: \",\";\\n\"])),function(props){return props.ignorePointerEvents?'none':'auto';});var StartForeignObject=styled.foreignObject(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  overflow: visible;\\n\"])));var StartDiv=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  background-color: #0279bc;\\n  color: white;\\n  width: max-content;\\n  min-width: 80px;\\n  height: 40px;\\n  border-radius: 0.35em;\\n  text-align: center;\\n  line-height: 40px;\\n  padding: 0px 10px;\\n\"])));function WorkflowStartNode(_ref){var onUpdateHelpText=_ref.onUpdateHelpText,showActionTooltip=_ref.showActionTooltip;var ref=useRef(null);var startNodeRef=useRef(null);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),hovering=_useState2[0],setHovering=_useState2[1];var dispatch=useContext(WorkflowDispatchContext);var _useContext=useContext(WorkflowStateContext),addingLink=_useContext.addingLink,nodePositions=_useContext.nodePositions;var handleNodeMouseEnter=function handleNodeMouseEnter(){ref.current.parentNode.appendChild(ref.current);setHovering(true);};return/*#__PURE__*/_jsxs(StartG,{id:\"node-1\",ignorePointerEvents:addingLink,onMouseEnter:handleNodeMouseEnter,onMouseLeave:function onMouseLeave(){return setHovering(false);},ref:ref,transform:\"translate(\".concat(nodePositions[1].x,\",0)\"),children:[/*#__PURE__*/_jsx(StartForeignObject,{height:\"1\",width:\"1\",y:\"10\",style:{overflow:'visible'},children:/*#__PURE__*/_jsx(StartDiv,{ref:startNodeRef,children:/*i18n*/i18n._(\"START\")})}),showActionTooltip&&hovering&&/*#__PURE__*/_jsx(WorkflowActionTooltip,{actions:[/*#__PURE__*/_jsx(WorkflowActionTooltipItem,{id:\"node-add\",onMouseEnter:function onMouseEnter(){return onUpdateHelpText(/*i18n*/i18n._(\"Add a new node\"));},onMouseLeave:function onMouseLeave(){return onUpdateHelpText(null);},onClick:function onClick(){onUpdateHelpText(null);setHovering(false);dispatch({type:'START_ADD_NODE',sourceNodeId:1});},children:/*#__PURE__*/_jsx(PlusIcon,{})},\"add\")],pointX:startNodeRef.current.offsetWidth,pointY:startNodeRef.current.offsetHeight/2+10})]});}WorkflowStartNode.defaultProps={onUpdateHelpText:function onUpdateHelpText(){}};export default WorkflowStartNode;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/Workflow/WorkflowStartNode.js"],"names":["React","useContext","useRef","useState","styled","PlusIcon","WorkflowDispatchContext","WorkflowStateContext","WorkflowActionTooltip","WorkflowActionTooltipItem","StartG","g","props","ignorePointerEvents","StartForeignObject","foreignObject","StartDiv","div","WorkflowStartNode","onUpdateHelpText","showActionTooltip","ref","startNodeRef","hovering","setHovering","dispatch","addingLink","nodePositions","handleNodeMouseEnter","current","parentNode","appendChild","x","overflow","type","sourceNodeId","offsetWidth","offsetHeight","defaultProps"],"mappings":"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","sourcesContent":["import React, { useContext, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { t } from '@lingui/macro';\nimport { bool, func } from 'prop-types';\nimport { PlusIcon } from '@patternfly/react-icons';\nimport {\n  WorkflowDispatchContext,\n  WorkflowStateContext,\n} from 'contexts/Workflow';\nimport WorkflowActionTooltip from './WorkflowActionTooltip';\nimport WorkflowActionTooltipItem from './WorkflowActionTooltipItem';\n\nconst StartG = styled.g`\n  pointer-events: ${(props) => (props.ignorePointerEvents ? 'none' : 'auto')};\n`;\n\nconst StartForeignObject = styled.foreignObject`\n  overflow: visible;\n`;\n\nconst StartDiv = styled.div`\n  background-color: #0279bc;\n  color: white;\n  width: max-content;\n  min-width: 80px;\n  height: 40px;\n  border-radius: 0.35em;\n  text-align: center;\n  line-height: 40px;\n  padding: 0px 10px;\n`;\n\nfunction WorkflowStartNode({ onUpdateHelpText, showActionTooltip }) {\n  const ref = useRef(null);\n  const startNodeRef = useRef(null);\n  const [hovering, setHovering] = useState(false);\n  const dispatch = useContext(WorkflowDispatchContext);\n  const { addingLink, nodePositions } = useContext(WorkflowStateContext);\n\n  const handleNodeMouseEnter = () => {\n    ref.current.parentNode.appendChild(ref.current);\n    setHovering(true);\n  };\n\n  return (\n    <StartG\n      id=\"node-1\"\n      ignorePointerEvents={addingLink}\n      onMouseEnter={handleNodeMouseEnter}\n      onMouseLeave={() => setHovering(false)}\n      ref={ref}\n      transform={`translate(${nodePositions[1].x},0)`}\n    >\n      <StartForeignObject\n        height=\"1\"\n        width=\"1\"\n        y=\"10\"\n        style={{ overflow: 'visible' }}\n      >\n        <StartDiv ref={startNodeRef}>{t`START`}</StartDiv>\n      </StartForeignObject>\n      {showActionTooltip && hovering && (\n        <WorkflowActionTooltip\n          actions={[\n            <WorkflowActionTooltipItem\n              id=\"node-add\"\n              key=\"add\"\n              onMouseEnter={() => onUpdateHelpText(t`Add a new node`)}\n              onMouseLeave={() => onUpdateHelpText(null)}\n              onClick={() => {\n                onUpdateHelpText(null);\n                setHovering(false);\n                dispatch({ type: 'START_ADD_NODE', sourceNodeId: 1 });\n              }}\n            >\n              <PlusIcon />\n            </WorkflowActionTooltipItem>,\n          ]}\n          pointX={startNodeRef.current.offsetWidth}\n          pointY={startNodeRef.current.offsetHeight / 2 + 10}\n        />\n      )}\n    </StartG>\n  );\n}\n\nWorkflowStartNode.propTypes = {\n  showActionTooltip: bool.isRequired,\n  onUpdateHelpText: func,\n};\n\nWorkflowStartNode.defaultProps = {\n  onUpdateHelpText: () => {},\n};\n\nexport default WorkflowStartNode;\n"]},"metadata":{},"sourceType":"module"}