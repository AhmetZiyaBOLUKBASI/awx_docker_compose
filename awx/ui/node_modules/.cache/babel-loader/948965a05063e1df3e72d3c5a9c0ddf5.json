{"ast":null,"code":"import{i18n}from\"@lingui/core\";import React from'react';import{Button}from'@patternfly/react-core';import{Tr,Td}from'@patternfly/react-table';import{Link}from'react-router-dom';import{PencilAltIcon}from'@patternfly/react-icons';import{ActionsTd,ActionItem,TdBreakWord}from'components/PaginatedTable';import{Team}from'types';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TeamListItem(_ref){var team=_ref.team,isSelected=_ref.isSelected,onSelect=_ref.onSelect,detailUrl=_ref.detailUrl,rowIndex=_ref.rowIndex;var labelId=\"check-action-\".concat(team.id);return/*#__PURE__*/_jsxs(Tr,{id:\"team-row-\".concat(team.id),ouiaId:\"team-row-\".concat(team.id),children:[/*#__PURE__*/_jsx(Td,{select:{rowIndex:rowIndex,isSelected:isSelected,onSelect:onSelect},dataLabel:/*i18n*/i18n._(\"Selected\")}),/*#__PURE__*/_jsx(TdBreakWord,{id:labelId,dataLabel:/*i18n*/i18n._(\"Name\"),children:/*#__PURE__*/_jsx(Link,{to:\"\".concat(detailUrl),children:/*#__PURE__*/_jsx(\"b\",{children:team.name})})}),/*#__PURE__*/_jsx(TdBreakWord,{dataLabel:/*i18n*/i18n._(\"Organization\"),children:team.summary_fields.organization&&/*#__PURE__*/_jsx(Link,{to:\"/organizations/\".concat(team.summary_fields.organization.id,\"/details\"),children:/*#__PURE__*/_jsx(\"b\",{children:team.summary_fields.organization.name})})}),/*#__PURE__*/_jsx(ActionsTd,{dataLabel:/*i18n*/i18n._(\"Actions\"),children:/*#__PURE__*/_jsx(ActionItem,{visible:team.summary_fields.user_capabilities.edit,tooltip:/*i18n*/i18n._(\"Edit Team\"),children:/*#__PURE__*/_jsx(Button,{ouiaId:\"\".concat(team.id,\"-edit-button\"),\"aria-label\":/*i18n*/i18n._(\"Edit Team\"),variant:\"plain\",component:Link,to:\"/teams/\".concat(team.id,\"/edit\"),children:/*#__PURE__*/_jsx(PencilAltIcon,{})})})})]});}export default TeamListItem;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Team/TeamList/TeamListItem.js"],"names":["React","Button","Tr","Td","Link","PencilAltIcon","ActionsTd","ActionItem","TdBreakWord","Team","TeamListItem","team","isSelected","onSelect","detailUrl","rowIndex","labelId","id","name","summary_fields","organization","user_capabilities","edit"],"mappings":"+BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAKA,OAASC,MAAT,KAAuB,wBAAvB,CACA,OAASC,EAAT,CAAaC,EAAb,KAAuB,yBAAvB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,aAAT,KAA8B,yBAA9B,CACA,OAASC,SAAT,CAAoBC,UAApB,CAAgCC,WAAhC,KAAmD,2BAAnD,CACA,OAASC,IAAT,KAAqB,OAArB,C,wFAEA,QAASC,CAAAA,YAAT,MAA2E,IAAnDC,CAAAA,IAAmD,MAAnDA,IAAmD,CAA7CC,UAA6C,MAA7CA,UAA6C,CAAjCC,QAAiC,MAAjCA,QAAiC,CAAvBC,SAAuB,MAAvBA,SAAuB,CAAZC,QAAY,MAAZA,QAAY,CAQzE,GAAMC,CAAAA,OAAO,wBAAmBL,IAAI,CAACM,EAAxB,CAAb,CAEA,mBACE,MAAC,EAAD,EAAI,EAAE,oBAAcN,IAAI,CAACM,EAAnB,CAAN,CAA+B,MAAM,oBAAcN,IAAI,CAACM,EAAnB,CAArC,wBACE,KAAC,EAAD,EACE,MAAM,CAAE,CACNF,QAAQ,CAARA,QADM,CAENH,UAAU,CAAVA,UAFM,CAGNC,QAAQ,CAARA,QAHM,CADV,CAME,SAAS,SAAE,kBANb,EADF,cASE,KAAC,WAAD,EAAa,EAAE,CAAEG,OAAjB,CAA0B,SAAS,SAAE,cAArC,uBACE,KAAC,IAAD,EAAM,EAAE,WAAKF,SAAL,CAAR,uBACE,mBAAIH,IAAI,CAACO,IAAT,EADF,EADF,EATF,cAcE,KAAC,WAAD,EAAa,SAAS,SAAE,sBAAxB,UACGP,IAAI,CAACQ,cAAL,CAAoBC,YAApB,eACC,KAAC,IAAD,EACE,EAAE,0BAAoBT,IAAI,CAACQ,cAAL,CAAoBC,YAApB,CAAiCH,EAArD,YADJ,uBAGE,mBAAIN,IAAI,CAACQ,cAAL,CAAoBC,YAApB,CAAiCF,IAArC,EAHF,EAFJ,EAdF,cAuBE,KAAC,SAAD,EAAW,SAAS,SAAE,iBAAtB,uBACE,KAAC,UAAD,EACE,OAAO,CAAEP,IAAI,CAACQ,cAAL,CAAoBE,iBAApB,CAAsCC,IADjD,CAEE,OAAO,SAAE,mBAFX,uBAIE,KAAC,MAAD,EACE,MAAM,WAAKX,IAAI,CAACM,EAAV,gBADR,CAEE,qBAAY,mBAFd,CAGE,OAAO,CAAC,OAHV,CAIE,SAAS,CAAEb,IAJb,CAKE,EAAE,kBAAYO,IAAI,CAACM,EAAjB,SALJ,uBAOE,KAAC,aAAD,IAPF,EAJF,EADF,EAvBF,GADF,CA0CD,CACD,cAAeP,CAAAA,YAAf","sourcesContent":["import React from 'react';\nimport 'styled-components/macro';\nimport { string, bool, func } from 'prop-types';\n\nimport { t } from '@lingui/macro';\nimport { Button } from '@patternfly/react-core';\nimport { Tr, Td } from '@patternfly/react-table';\nimport { Link } from 'react-router-dom';\nimport { PencilAltIcon } from '@patternfly/react-icons';\nimport { ActionsTd, ActionItem, TdBreakWord } from 'components/PaginatedTable';\nimport { Team } from 'types';\n\nfunction TeamListItem({ team, isSelected, onSelect, detailUrl, rowIndex }) {\n  TeamListItem.propTypes = {\n    team: Team.isRequired,\n    detailUrl: string.isRequired,\n    isSelected: bool.isRequired,\n    onSelect: func.isRequired,\n  };\n\n  const labelId = `check-action-${team.id}`;\n\n  return (\n    <Tr id={`team-row-${team.id}`} ouiaId={`team-row-${team.id}`}>\n      <Td\n        select={{\n          rowIndex,\n          isSelected,\n          onSelect,\n        }}\n        dataLabel={t`Selected`}\n      />\n      <TdBreakWord id={labelId} dataLabel={t`Name`}>\n        <Link to={`${detailUrl}`}>\n          <b>{team.name}</b>\n        </Link>\n      </TdBreakWord>\n      <TdBreakWord dataLabel={t`Organization`}>\n        {team.summary_fields.organization && (\n          <Link\n            to={`/organizations/${team.summary_fields.organization.id}/details`}\n          >\n            <b>{team.summary_fields.organization.name}</b>\n          </Link>\n        )}\n      </TdBreakWord>\n      <ActionsTd dataLabel={t`Actions`}>\n        <ActionItem\n          visible={team.summary_fields.user_capabilities.edit}\n          tooltip={t`Edit Team`}\n        >\n          <Button\n            ouiaId={`${team.id}-edit-button`}\n            aria-label={t`Edit Team`}\n            variant=\"plain\"\n            component={Link}\n            to={`/teams/${team.id}/edit`}\n          >\n            <PencilAltIcon />\n          </Button>\n        </ActionItem>\n      </ActionsTd>\n    </Tr>\n  );\n}\nexport default TeamListItem;\n"]},"metadata":{},"sourceType":"module"}