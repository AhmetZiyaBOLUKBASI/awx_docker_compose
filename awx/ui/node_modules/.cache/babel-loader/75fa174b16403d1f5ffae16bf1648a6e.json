{"ast":null,"code":"import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/AppLauncher/app-launcher';\nimport accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { ApplicationLauncherIcon } from './ApplicationLauncherIcon';\nimport { ApplicationLauncherText } from './ApplicationLauncherText';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport { ApplicationLauncherItemContext } from './ApplicationLauncherItemContext';\nexport var ApplicationLauncherContent = function ApplicationLauncherContent(_ref) {\n  var children = _ref.children;\n  return React.createElement(ApplicationLauncherItemContext.Consumer, null, function (_ref2) {\n    var isExternal = _ref2.isExternal,\n        icon = _ref2.icon;\n    return React.createElement(React.Fragment, null, icon && React.createElement(ApplicationLauncherIcon, null, icon), icon ? React.createElement(ApplicationLauncherText, null, children) : children, isExternal && React.createElement(React.Fragment, null, React.createElement(\"span\", {\n      className: css(styles.appLauncherMenuItemExternalIcon)\n    }, React.createElement(ExternalLinkAltIcon, null)), React.createElement(\"span\", {\n      className: css(accessibleStyles.screenReader)\n    }, \"(opens new window)\")));\n  });\n};\nApplicationLauncherContent.displayName = 'ApplicationLauncherContent';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/ApplicationLauncher/ApplicationLauncherContent.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,kEAAnB;AACA,OAAO,gBAAP,MAA6B,oEAA7B;AACA,SAAS,uBAAT,QAAwC,2BAAxC;AACA,SAAS,uBAAT,QAAwC,2BAAxC;AACA,OAAO,mBAAP,MAAgC,+DAAhC;AACA,SAAS,8BAAT,QAA+C,kCAA/C;AAOA,OAAO,IAAM,0BAA0B,GAA6D,SAAvF,0BAAuF;AAAA,MAClG,QADkG,QAClG,QADkG;AAAA,SAGlG,KAAA,CAAA,aAAA,CAAC,8BAA8B,CAAC,QAAhC,EAAwC,IAAxC,EACG;AAAA,QAAG,UAAH,SAAG,UAAH;AAAA,QAAe,IAAf,SAAe,IAAf;AAAA,WACC,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACG,IAAI,IAAI,KAAA,CAAA,aAAA,CAAC,uBAAD,EAAwB,IAAxB,EAA0B,IAA1B,CADX,EAEG,IAAI,GAAG,KAAA,CAAA,aAAA,CAAC,uBAAD,EAAwB,IAAxB,EAA0B,QAA1B,CAAH,GAAmE,QAF1E,EAGG,UAAU,IACT,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,+BAAR;AAApB,KAAA,EACE,KAAA,CAAA,aAAA,CAAC,mBAAD,EAAoB,IAApB,CADF,CADF,EAIE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,SAAS,EAAE,GAAG,CAAC,gBAAgB,CAAC,YAAlB;AAApB,KAAA,EAAmD,oBAAnD,CAJF,CAJJ,CADD;AAAA,GADH,CAHkG;AAAA,CAA7F;AAoBP,0BAA0B,CAAC,WAA3B,GAAyC,4BAAzC","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/AppLauncher/app-launcher';\nimport accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { ApplicationLauncherIcon } from './ApplicationLauncherIcon';\nimport { ApplicationLauncherText } from './ApplicationLauncherText';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport { ApplicationLauncherItemContext } from './ApplicationLauncherItemContext';\n\nexport interface ApplicationLauncherContentProps {\n  /** Main content to be rendered */\n  children: React.ReactNode;\n}\n\nexport const ApplicationLauncherContent: React.FunctionComponent<ApplicationLauncherContentProps> = ({\n  children\n}: ApplicationLauncherContentProps) => (\n  <ApplicationLauncherItemContext.Consumer>\n    {({ isExternal, icon }) => (\n      <>\n        {icon && <ApplicationLauncherIcon>{icon}</ApplicationLauncherIcon>}\n        {icon ? <ApplicationLauncherText>{children}</ApplicationLauncherText> : children}\n        {isExternal && (\n          <>\n            <span className={css(styles.appLauncherMenuItemExternalIcon)}>\n              <ExternalLinkAltIcon />\n            </span>\n            <span className={css(accessibleStyles.screenReader)}>(opens new window)</span>\n          </>\n        )}\n      </>\n    )}\n  </ApplicationLauncherItemContext.Consumer>\n);\nApplicationLauncherContent.displayName = 'ApplicationLauncherContent';\n"]},"metadata":{},"sourceType":"module"}