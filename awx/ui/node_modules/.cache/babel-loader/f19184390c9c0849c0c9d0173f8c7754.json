{"ast":null,"code":"import _toConsumableArray from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n\n/**\n * evaluate-transforms.ts\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport { mergeProps } from './merge-props';\n/**\n * @param {transformsType} transforms - transforms type\n * @param {string | object} value - value\n * @param {ExtraParamsType} extraParameters - extra params type\n */\n\nexport function evaluateTransforms() {\n  var transforms = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var value = arguments.length > 1 ? arguments[1] : undefined;\n  var extraParameters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!transforms.every(function (f) {\n      return typeof f === 'function';\n    })) {\n      throw new Error(\"All transforms weren't functions!\");\n    }\n  }\n\n  if (transforms.length === 0) {\n    return {};\n  }\n\n  return mergeProps.apply(void 0, _toConsumableArray(transforms.map(function (transform) {\n    return transform(value, extraParameters);\n  })));\n}","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/Table/base/evaluate-transforms.ts"],"names":[],"mappings":";;AAAA;;;;;AAKG;AACH,SAAS,UAAT,QAA2B,eAA3B;AAGA;;;;AAIG;;AACH,OAAM,SAAU,kBAAV,GAGiC;AAAA,MAFrC,UAEqC,uEAFR,EAEQ;AAAA,MADrC,KACqC;AAAA,MAArC,eAAqC,uEAAF,EAAE;;AAErC,MAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,QAAI,CAAC,UAAU,CAAC,KAAX,CAAiB,UAAA,CAAC;AAAA,aAAI,OAAO,CAAP,KAAa,UAAjB;AAAA,KAAlB,CAAL,EAAqD;AACnD,YAAM,IAAI,KAAJ,CAAU,mCAAV,CAAN;AACD;AACF;;AAED,MAAI,UAAU,CAAC,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,WAAO,EAAP;AACD;;AAED,SAAO,UAAU,MAAV,4BAAc,UAAU,CAAC,GAAX,CAAe,UAAA,SAAS;AAAA,WAAI,SAAS,CAAC,KAAD,EAAQ,eAAR,CAAb;AAAA,GAAxB,CAAd,EAAP;AACD","sourcesContent":["/**\n * evaluate-transforms.ts\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport { mergeProps } from './merge-props';\nimport { transformsType, ExtraParamsType } from './types';\n\n/**\n * @param {transformsType} transforms - transforms type\n * @param {string | object} value - value\n * @param {ExtraParamsType} extraParameters - extra params type\n */\nexport function evaluateTransforms(\n  transforms: transformsType = [],\n  value: string | object,\n  extraParameters: ExtraParamsType = {}\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!transforms.every(f => typeof f === 'function')) {\n      throw new Error(\"All transforms weren't functions!\");\n    }\n  }\n\n  if (transforms.length === 0) {\n    return {};\n  }\n\n  return mergeProps(...transforms.map(transform => transform(value, extraParameters)));\n}\n"]},"metadata":{},"sourceType":"module"}