{"ast":null,"code":"import _taggedTemplateLiteral from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import{i18n}from\"@lingui/core\";import React from'react';import styled from'styled-components';import{Button as PFButton,DescriptionList as PFDescriptionList,DescriptionListTerm,DescriptionListGroup as PFDescriptionListGroup,DescriptionListDescription,Divider,TextContent,Text as PFText,TextVariants}from'@patternfly/react-core';import StatusLabel from'components/StatusLabel';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Wrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: -20px;\\n  right: 0;\\n  padding: 10px;\\n  width: 20%;\\n  background-color: rgba(255, 255, 255, 0.85);\\n\"])));var Button=styled(PFButton)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  width: 20px;\\n  height: 20px;\\n  border-radius: 10px;\\n  padding: 0;\\n  font-size: 11px;\\n\"])));var DescriptionList=styled(PFDescriptionList)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  gap: 0;\\n\"])));var DescriptionListGroup=styled(PFDescriptionListGroup)(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  margin-top: 10px;\\n\"])));var Text=styled(PFText)(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  margin: 10px 0 5px;\\n\"])));function Tooltip(_ref){var isNodeSelected=_ref.isNodeSelected,renderNodeIcon=_ref.renderNodeIcon,nodeDetail=_ref.nodeDetail,redirectToDetailsPage=_ref.redirectToDetailsPage;return/*#__PURE__*/_jsx(Wrapper,{className:\"tooltip\",\"data-cy\":\"tooltip\",children:isNodeSelected===false?/*#__PURE__*/_jsxs(TextContent,{children:[/*#__PURE__*/_jsx(Text,{component:TextVariants.small,style:{fontWeight:'bold',color:'black'},children:/*i18n*/i18n._(\"Details\")}),/*#__PURE__*/_jsx(Divider,{component:\"div\"}),/*#__PURE__*/_jsx(Text,{component:TextVariants.small,children:/*i18n*/i18n._(\"Click on a node icon to display the details.\")})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(TextContent,{children:[/*#__PURE__*/_jsx(Text,{component:TextVariants.small,style:{fontWeight:'bold',color:'black'},children:/*i18n*/i18n._(\"Details\")}),/*#__PURE__*/_jsx(Divider,{component:\"div\"})]}),/*#__PURE__*/_jsxs(DescriptionList,{isHorizontal:true,isFluid:true,children:[/*#__PURE__*/_jsxs(DescriptionListGroup,{children:[/*#__PURE__*/_jsx(DescriptionListTerm,{children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",isSmall:true,children:renderNodeIcon})}),/*#__PURE__*/_jsx(DescriptionListDescription,{children:/*#__PURE__*/_jsx(PFButton,{variant:\"link\",isInline:true,onClick:redirectToDetailsPage,children:nodeDetail.hostname})})]}),/*#__PURE__*/_jsxs(DescriptionListGroup,{children:[/*#__PURE__*/_jsx(DescriptionListTerm,{children:/*i18n*/i18n._(\"Type\")}),/*#__PURE__*/_jsxs(DescriptionListDescription,{children:[nodeDetail.node_type,\" \",/*i18n*/i18n._(\"node\")]})]}),/*#__PURE__*/_jsxs(DescriptionListGroup,{children:[/*#__PURE__*/_jsx(DescriptionListTerm,{children:/*i18n*/i18n._(\"Status\")}),/*#__PURE__*/_jsx(DescriptionListDescription,{children:/*#__PURE__*/_jsx(StatusLabel,{status:nodeDetail.node_state})})]})]})]})});}export default Tooltip;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/TopologyView/Tooltip.js"],"names":["React","styled","Button","PFButton","DescriptionList","PFDescriptionList","DescriptionListTerm","DescriptionListGroup","PFDescriptionListGroup","DescriptionListDescription","Divider","TextContent","Text","PFText","TextVariants","StatusLabel","Wrapper","div","Tooltip","isNodeSelected","renderNodeIcon","nodeDetail","redirectToDetailsPage","small","fontWeight","color","hostname","node_type","node_state"],"mappings":"8OAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OACEC,MAAM,GAAIC,CAAAA,QADZ,CAEEC,eAAe,GAAIC,CAAAA,iBAFrB,CAGEC,mBAHF,CAIEC,oBAAoB,GAAIC,CAAAA,sBAJ1B,CAKEC,0BALF,CAMEC,OANF,CAOEC,WAPF,CAQEC,IAAI,GAAIC,CAAAA,MARV,CASEC,YATF,KAUO,wBAVP,CAWA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,C,6IAEA,GAAMC,CAAAA,OAAO,CAAGf,MAAM,CAACgB,GAAV,uMAAb,CAQA,GAAMf,CAAAA,MAAM,CAAGD,MAAM,CAACE,QAAD,CAAT,iKAAZ,CAOA,GAAMC,CAAAA,eAAe,CAAGH,MAAM,CAACI,iBAAD,CAAT,gFAArB,CAGA,GAAME,CAAAA,oBAAoB,CAAGN,MAAM,CAACO,sBAAD,CAAT,kHAA1B,CAIA,GAAMI,CAAAA,IAAI,CAAGX,MAAM,CAACY,MAAD,CAAT,4FAAV,CAGA,QAASK,CAAAA,OAAT,MAKG,IAJDC,CAAAA,cAIC,MAJDA,cAIC,CAHDC,cAGC,MAHDA,cAGC,CAFDC,UAEC,MAFDA,UAEC,CADDC,qBACC,MADDA,qBACC,CACD,mBACE,KAAC,OAAD,EAAS,SAAS,CAAC,SAAnB,CAA6B,UAAQ,SAArC,UACGH,cAAc,GAAK,KAAnB,cACC,MAAC,WAAD,yBACE,KAAC,IAAD,EACE,SAAS,CAAEL,YAAY,CAACS,KAD1B,CAEE,KAAK,CAAE,CAAEC,UAAU,CAAE,MAAd,CAAsBC,KAAK,CAAE,OAA7B,CAFT,kBAIG,iBAJH,EADF,cAOE,KAAC,OAAD,EAAS,SAAS,CAAC,KAAnB,EAPF,cAQE,KAAC,IAAD,EAAM,SAAS,CAAEX,YAAY,CAACS,KAA9B,kBACG,sDADH,EARF,GADD,cAcC,wCACE,MAAC,WAAD,yBACE,KAAC,IAAD,EACE,SAAS,CAAET,YAAY,CAACS,KAD1B,CAEE,KAAK,CAAE,CAAEC,UAAU,CAAE,MAAd,CAAsBC,KAAK,CAAE,OAA7B,CAFT,kBAIG,iBAJH,EADF,cAOE,KAAC,OAAD,EAAS,SAAS,CAAC,KAAnB,EAPF,GADF,cAUE,MAAC,eAAD,EAAiB,YAAY,KAA7B,CAA8B,OAAO,KAArC,wBACE,MAAC,oBAAD,yBACE,KAAC,mBAAD,wBACE,KAAC,MAAD,EAAQ,OAAO,CAAC,SAAhB,CAA0B,OAAO,KAAjC,UACGL,cADH,EADF,EADF,cAME,KAAC,0BAAD,wBACE,KAAC,QAAD,EACE,OAAO,CAAC,MADV,CAEE,QAAQ,KAFV,CAGE,OAAO,CAAEE,qBAHX,UAKGD,UAAU,CAACK,QALd,EADF,EANF,GADF,cAiBE,MAAC,oBAAD,yBACE,KAAC,mBAAD,mBAAsB,cAAtB,EADF,cAEE,MAAC,0BAAD,YACGL,UAAU,CAACM,SADd,aAC0B,cAD1B,GAFF,GAjBF,cAuBE,MAAC,oBAAD,yBACE,KAAC,mBAAD,mBAAsB,gBAAtB,EADF,cAEE,KAAC,0BAAD,wBACE,KAAC,WAAD,EAAa,MAAM,CAAEN,UAAU,CAACO,UAAhC,EADF,EAFF,GAvBF,GAVF,GAfJ,EADF,CA4DD,CAED,cAAeV,CAAAA,OAAf","sourcesContent":["import React from 'react';\nimport { t } from '@lingui/macro';\nimport styled from 'styled-components';\nimport {\n  Button as PFButton,\n  DescriptionList as PFDescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup as PFDescriptionListGroup,\n  DescriptionListDescription,\n  Divider,\n  TextContent,\n  Text as PFText,\n  TextVariants,\n} from '@patternfly/react-core';\nimport StatusLabel from 'components/StatusLabel';\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: -20px;\n  right: 0;\n  padding: 10px;\n  width: 20%;\n  background-color: rgba(255, 255, 255, 0.85);\n`;\nconst Button = styled(PFButton)`\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  padding: 0;\n  font-size: 11px;\n`;\nconst DescriptionList = styled(PFDescriptionList)`\n  gap: 0;\n`;\nconst DescriptionListGroup = styled(PFDescriptionListGroup)`\n  align-items: center;\n  margin-top: 10px;\n`;\nconst Text = styled(PFText)`\n  margin: 10px 0 5px;\n`;\nfunction Tooltip({\n  isNodeSelected,\n  renderNodeIcon,\n  nodeDetail,\n  redirectToDetailsPage,\n}) {\n  return (\n    <Wrapper className=\"tooltip\" data-cy=\"tooltip\">\n      {isNodeSelected === false ? (\n        <TextContent>\n          <Text\n            component={TextVariants.small}\n            style={{ fontWeight: 'bold', color: 'black' }}\n          >\n            {t`Details`}\n          </Text>\n          <Divider component=\"div\" />\n          <Text component={TextVariants.small}>\n            {t`Click on a node icon to display the details.`}\n          </Text>\n        </TextContent>\n      ) : (\n        <>\n          <TextContent>\n            <Text\n              component={TextVariants.small}\n              style={{ fontWeight: 'bold', color: 'black' }}\n            >\n              {t`Details`}\n            </Text>\n            <Divider component=\"div\" />\n          </TextContent>\n          <DescriptionList isHorizontal isFluid>\n            <DescriptionListGroup>\n              <DescriptionListTerm>\n                <Button variant=\"primary\" isSmall>\n                  {renderNodeIcon}\n                </Button>\n              </DescriptionListTerm>\n              <DescriptionListDescription>\n                <PFButton\n                  variant=\"link\"\n                  isInline\n                  onClick={redirectToDetailsPage}\n                >\n                  {nodeDetail.hostname}\n                </PFButton>\n              </DescriptionListDescription>\n            </DescriptionListGroup>\n            <DescriptionListGroup>\n              <DescriptionListTerm>{t`Type`}</DescriptionListTerm>\n              <DescriptionListDescription>\n                {nodeDetail.node_type} {t`node`}\n              </DescriptionListDescription>\n            </DescriptionListGroup>\n            <DescriptionListGroup>\n              <DescriptionListTerm>{t`Status`}</DescriptionListTerm>\n              <DescriptionListDescription>\n                <StatusLabel status={nodeDetail.node_state} />\n              </DescriptionListDescription>\n            </DescriptionListGroup>\n          </DescriptionList>\n        </>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default Tooltip;\n"]},"metadata":{},"sourceType":"module"}