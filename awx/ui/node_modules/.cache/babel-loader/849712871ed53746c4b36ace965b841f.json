{"ast":null,"code":"import _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Progress/progress';\nimport { css } from '@patternfly/react-styles';\nimport { ProgressContainer, ProgressMeasureLocation } from './ProgressContainer';\nimport { getUniqueId } from '../../helpers/util';\nexport var ProgressSize;\n\n(function (ProgressSize) {\n  ProgressSize[\"sm\"] = \"sm\";\n  ProgressSize[\"md\"] = \"md\";\n  ProgressSize[\"lg\"] = \"lg\";\n})(ProgressSize || (ProgressSize = {}));\n\nexport var Progress = /*#__PURE__*/function (_React$Component) {\n  _inherits(Progress, _React$Component);\n\n  var _super = _createSuper(Progress);\n\n  function Progress() {\n    var _this;\n\n    _classCallCheck(this, Progress);\n\n    _this = _super.apply(this, arguments);\n    _this.id = _this.props.id || getUniqueId();\n    return _this;\n  }\n\n  _createClass(Progress, [{\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          id = _a.id,\n          size = _a.size,\n          className = _a.className,\n          value = _a.value,\n          title = _a.title,\n          label = _a.label,\n          variant = _a.variant,\n          measureLocation = _a.measureLocation,\n          min = _a.min,\n          max = _a.max,\n          valueText = _a.valueText,\n          isTitleTruncated = _a.isTitleTruncated,\n          tooltipPosition = _a.tooltipPosition,\n          ariaLabel = _a['aria-label'],\n          ariaLabelledBy = _a['aria-labelledby'],\n          props = __rest(_a, [\"id\", \"size\", \"className\", \"value\", \"title\", \"label\", \"variant\", \"measureLocation\", \"min\", \"max\", \"valueText\", \"isTitleTruncated\", \"tooltipPosition\", 'aria-label', 'aria-labelledby']);\n\n      var progressBarAriaProps = {\n        'aria-valuemin': min,\n        'aria-valuenow': value,\n        'aria-valuemax': max\n      };\n\n      if (title || ariaLabelledBy) {\n        progressBarAriaProps['aria-labelledby'] = title ? \"\".concat(this.id, \"-description\") : ariaLabelledBy;\n      }\n\n      if (ariaLabel) {\n        progressBarAriaProps['aria-label'] = ariaLabel;\n      }\n\n      if (valueText) {\n        progressBarAriaProps['aria-valuetext'] = valueText;\n      }\n\n      if (!title && !ariaLabelledBy && !ariaLabel) {\n        /* eslint-disable no-console */\n        console.warn('One of aria-label or aria-labelledby properties should be passed when using the progress component without a title.');\n      }\n\n      var scaledValue = Math.min(100, Math.max(0, Math.floor((value - min) / (max - min) * 100))) || 0;\n      return React.createElement(\"div\", Object.assign({}, props, {\n        className: css(styles.progress, styles.modifiers[variant], ['inside', 'outside'].includes(measureLocation) && styles.modifiers[measureLocation], measureLocation === 'inside' ? styles.modifiers[ProgressSize.lg] : styles.modifiers[size], !title && styles.modifiers.singleline, className),\n        id: this.id\n      }), React.createElement(ProgressContainer, {\n        parentId: this.id,\n        value: scaledValue,\n        title: title,\n        label: label,\n        variant: variant,\n        measureLocation: measureLocation,\n        progressBarAriaProps: progressBarAriaProps,\n        isTitleTruncated: isTitleTruncated,\n        tooltipPosition: tooltipPosition\n      }));\n    }\n  }]);\n\n  return Progress;\n}(React.Component);\nProgress.displayName = 'Progress';\nProgress.defaultProps = {\n  className: '',\n  measureLocation: ProgressMeasureLocation.top,\n  variant: null,\n  id: '',\n  title: '',\n  min: 0,\n  max: 100,\n  size: null,\n  label: null,\n  value: 0,\n  valueText: null,\n  isTitleTruncated: false,\n  tooltipPosition: 'top',\n  'aria-label': null,\n  'aria-labelledby': null\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Progress/Progress.tsx"],"names":[],"mappings":";;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,2DAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,SAAS,iBAAT,EAA4B,uBAA5B,QAA2D,qBAA3D;AAEA,SAAS,WAAT,QAA4B,oBAA5B;AAEA,OAAA,IAAY,YAAZ;;AAAA,CAAA,UAAY,YAAZ,EAAwB;AACtB,EAAA,YAAA,CAAA,IAAA,CAAA,GAAA,IAAA;AACA,EAAA,YAAA,CAAA,IAAA,CAAA,GAAA,IAAA;AACA,EAAA,YAAA,CAAA,IAAA,CAAA,GAAA,IAAA;AACD,CAJD,EAAY,YAAY,KAAZ,YAAY,GAAA,EAAA,CAAxB;;AAuCA,WAAa,QAAb;AAAA;;AAAA;;AAAA,sBAAA;AAAA;;AAAA;;;AAoBE,UAAA,EAAA,GAAK,MAAK,KAAL,CAAW,EAAX,IAAiB,WAAW,EAAjC;AApBF;AAiGC;;AAjGD;AAAA;AAAA,WAsBE,kBAAM;AACE,UAAA,EAAA,GAmBF,KAnBE,KAAA;AAAA,UAEJ,EAFI,GAiB6B,EAjB7B,CAEJ,EAFI;AAAA,UAGJ,IAHI,GAiB6B,EAjB7B,CAGJ,IAHI;AAAA,UAKJ,SALI,GAiB6B,EAjB7B,CAKJ,SALI;AAAA,UAMJ,KANI,GAiB6B,EAjB7B,CAMJ,KANI;AAAA,UAOJ,KAPI,GAiB6B,EAjB7B,CAOJ,KAPI;AAAA,UAQJ,KARI,GAiB6B,EAjB7B,CAQJ,KARI;AAAA,UASJ,OATI,GAiB6B,EAjB7B,CASJ,OATI;AAAA,UAUJ,eAVI,GAiB6B,EAjB7B,CAUJ,eAVI;AAAA,UAWJ,GAXI,GAiB6B,EAjB7B,CAWJ,GAXI;AAAA,UAYJ,GAZI,GAiB6B,EAjB7B,CAYJ,GAZI;AAAA,UAaJ,SAbI,GAiB6B,EAjB7B,CAaJ,SAbI;AAAA,UAcJ,gBAdI,GAiB6B,EAjB7B,CAcJ,gBAdI;AAAA,UAeJ,eAfI,GAiB6B,EAjB7B,CAeJ,eAfI;AAAA,UAgBU,SAhBV,GAiB6B,EAjB7B,CAgBJ,YAhBI;AAAA,UAiBe,cAjBf,GAiB6B,EAjB7B,CAiBJ,iBAjBI;AAAA,UAkBD,KAlBC,GAkBI,MAAA,CAAA,EAAA,EAlBJ,CAAA,IAAA,EAAA,MAAA,EAAA,WAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,SAAA,EAAA,iBAAA,EAAA,KAAA,EAAA,KAAA,EAAA,WAAA,EAAA,kBAAA,EAAA,iBAAA,EAAA,YAAA,EAAA,iBAAA,CAkBI,CAlBJ;;AAqBN,UAAM,oBAAoB,GAAc;AACtC,yBAAiB,GADqB;AAEtC,yBAAiB,KAFqB;AAGtC,yBAAiB;AAHqB,OAAxC;;AAMA,UAAI,KAAK,IAAI,cAAb,EAA6B;AAC3B,QAAA,oBAAoB,CAAC,iBAAD,CAApB,GAA0C,KAAK,aAAM,KAAK,EAAX,oBAA8B,cAA7E;AACD;;AAED,UAAI,SAAJ,EAAe;AACb,QAAA,oBAAoB,CAAC,YAAD,CAApB,GAAqC,SAArC;AACD;;AAED,UAAI,SAAJ,EAAe;AACb,QAAA,oBAAoB,CAAC,gBAAD,CAApB,GAAyC,SAAzC;AACD;;AAED,UAAI,CAAC,KAAD,IAAU,CAAC,cAAX,IAA6B,CAAC,SAAlC,EAA6C;AAC3C;AACA,QAAA,OAAO,CAAC,IAAR,CACE,qHADF;AAGD;;AAED,UAAM,WAAW,GAAG,IAAI,CAAC,GAAL,CAAS,GAAT,EAAc,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,IAAI,CAAC,KAAL,CAAY,CAAC,KAAK,GAAG,GAAT,KAAiB,GAAG,GAAG,GAAvB,CAAD,GAAgC,GAA3C,CAAZ,CAAd,KAA+E,CAAnG;AACA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACM,KADN,EACW;AACT,QAAA,SAAS,EAAE,GAAG,CACZ,MAAM,CAAC,QADK,EAEZ,MAAM,CAAC,SAAP,CAAiB,OAAjB,CAFY,EAGZ,CAAC,QAAD,EAAW,SAAX,EAAsB,QAAtB,CAA+B,eAA/B,KAAmD,MAAM,CAAC,SAAP,CAAiB,eAAjB,CAHvC,EAIZ,eAAe,KAAK,QAApB,GAA+B,MAAM,CAAC,SAAP,CAAiB,YAAY,CAAC,EAA9B,CAA/B,GAAmE,MAAM,CAAC,SAAP,CAAiB,IAAjB,CAJvD,EAKZ,CAAC,KAAD,IAAU,MAAM,CAAC,SAAP,CAAiB,UALf,EAMZ,SANY,CADL;AAST,QAAA,EAAE,EAAE,KAAK;AATA,OADX,CAAA,EAYE,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAkB;AAChB,QAAA,QAAQ,EAAE,KAAK,EADC;AAEhB,QAAA,KAAK,EAAE,WAFS;AAGhB,QAAA,KAAK,EAAE,KAHS;AAIhB,QAAA,KAAK,EAAE,KAJS;AAKhB,QAAA,OAAO,EAAE,OALO;AAMhB,QAAA,eAAe,EAAE,eAND;AAOhB,QAAA,oBAAoB,EAAE,oBAPN;AAQhB,QAAA,gBAAgB,EAAE,gBARF;AAShB,QAAA,eAAe,EAAE;AATD,OAAlB,CAZF,CADF;AA0BD;AAhGH;;AAAA;AAAA,EAA8B,KAAK,CAAC,SAApC;AACS,QAAA,CAAA,WAAA,GAAc,UAAd;AACA,QAAA,CAAA,YAAA,GAA8B;AACnC,EAAA,SAAS,EAAE,EADwB;AAEnC,EAAA,eAAe,EAAE,uBAAuB,CAAC,GAFN;AAGnC,EAAA,OAAO,EAAE,IAH0B;AAInC,EAAA,EAAE,EAAE,EAJ+B;AAKnC,EAAA,KAAK,EAAE,EAL4B;AAMnC,EAAA,GAAG,EAAE,CAN8B;AAOnC,EAAA,GAAG,EAAE,GAP8B;AAQnC,EAAA,IAAI,EAAE,IAR6B;AASnC,EAAA,KAAK,EAAE,IAT4B;AAUnC,EAAA,KAAK,EAAE,CAV4B;AAWnC,EAAA,SAAS,EAAE,IAXwB;AAYnC,EAAA,gBAAgB,EAAE,KAZiB;AAanC,EAAA,eAAe,EAAE,KAbkB;AAcnC,gBAAc,IAdqB;AAenC,qBAAmB;AAfgB,CAA9B","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Progress/progress';\nimport { css } from '@patternfly/react-styles';\nimport { ProgressContainer, ProgressMeasureLocation } from './ProgressContainer';\nimport { AriaProps } from './ProgressBar';\nimport { getUniqueId } from '../../helpers/util';\n\nexport enum ProgressSize {\n  sm = 'sm',\n  md = 'md',\n  lg = 'lg'\n}\n\nexport interface ProgressProps extends Omit<React.HTMLProps<HTMLDivElement>, 'size' | 'label' | 'title'> {\n  /** Classname for progress component. */\n  className?: string;\n  /** Size variant of progress. */\n  size?: 'sm' | 'md' | 'lg';\n  /** Where the measure percent will be located. */\n  measureLocation?: 'outside' | 'inside' | 'top' | 'none';\n  /** Status variant of progress. */\n  variant?: 'danger' | 'success' | 'warning';\n  /** Title above progress. The isTitleTruncated property will only affect string titles. Node title truncation must be handled manually. */\n  title?: React.ReactNode;\n  /** Text description of current progress value to display instead of percentage. */\n  label?: React.ReactNode;\n  /** Actual value of progress. */\n  value?: number;\n  /** DOM id for progress component. */\n  id?: string;\n  /** Minimal value of progress. */\n  min?: number;\n  /** Maximum value of progress. */\n  max?: number;\n  /** Accessible text description of current progress value, for when value is not a percentage. Use with label. */\n  valueText?: string;\n  /** Indicate whether to truncate the string title */\n  isTitleTruncated?: boolean;\n  /** Position of the tooltip which is displayed if title is truncated */\n  tooltipPosition?: 'auto' | 'top' | 'bottom' | 'left' | 'right';\n  /** Adds accessible text to the ProgressBar. Required when title not used and there is not any label associated with the progress bar */\n  'aria-label'?: string;\n  /** Associates the ProgressBar with it's label for accessibility purposes. Required when title not used */\n  'aria-labelledby'?: string;\n}\n\nexport class Progress extends React.Component<ProgressProps> {\n  static displayName = 'Progress';\n  static defaultProps: ProgressProps = {\n    className: '',\n    measureLocation: ProgressMeasureLocation.top,\n    variant: null,\n    id: '',\n    title: '',\n    min: 0,\n    max: 100,\n    size: null as ProgressSize,\n    label: null as React.ReactNode,\n    value: 0,\n    valueText: null as string,\n    isTitleTruncated: false,\n    tooltipPosition: 'top' as 'auto' | 'top' | 'bottom' | 'left' | 'right',\n    'aria-label': null as string,\n    'aria-labelledby': null as string\n  };\n\n  id = this.props.id || getUniqueId();\n\n  render() {\n    const {\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      id,\n      size,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      className,\n      value,\n      title,\n      label,\n      variant,\n      measureLocation,\n      min,\n      max,\n      valueText,\n      isTitleTruncated,\n      tooltipPosition,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      ...props\n    } = this.props;\n\n    const progressBarAriaProps: AriaProps = {\n      'aria-valuemin': min,\n      'aria-valuenow': value,\n      'aria-valuemax': max\n    };\n\n    if (title || ariaLabelledBy) {\n      progressBarAriaProps['aria-labelledby'] = title ? `${this.id}-description` : ariaLabelledBy;\n    }\n\n    if (ariaLabel) {\n      progressBarAriaProps['aria-label'] = ariaLabel;\n    }\n\n    if (valueText) {\n      progressBarAriaProps['aria-valuetext'] = valueText;\n    }\n\n    if (!title && !ariaLabelledBy && !ariaLabel) {\n      /* eslint-disable no-console */\n      console.warn(\n        'One of aria-label or aria-labelledby properties should be passed when using the progress component without a title.'\n      );\n    }\n\n    const scaledValue = Math.min(100, Math.max(0, Math.floor(((value - min) / (max - min)) * 100))) || 0;\n    return (\n      <div\n        {...props}\n        className={css(\n          styles.progress,\n          styles.modifiers[variant],\n          ['inside', 'outside'].includes(measureLocation) && styles.modifiers[measureLocation as 'inside' | 'outside'],\n          measureLocation === 'inside' ? styles.modifiers[ProgressSize.lg] : styles.modifiers[size as 'sm' | 'lg'],\n          !title && styles.modifiers.singleline,\n          className\n        )}\n        id={this.id}\n      >\n        <ProgressContainer\n          parentId={this.id}\n          value={scaledValue}\n          title={title}\n          label={label}\n          variant={variant}\n          measureLocation={measureLocation}\n          progressBarAriaProps={progressBarAriaProps}\n          isTitleTruncated={isTitleTruncated}\n          tooltipPosition={tooltipPosition}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}