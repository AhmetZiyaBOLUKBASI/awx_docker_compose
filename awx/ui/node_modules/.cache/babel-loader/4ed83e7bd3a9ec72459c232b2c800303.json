{"ast":null,"code":"export var toTitleCase=function toTitleCase(string){if(!string){return'';}return string.toLowerCase().split('_').map(function(word){return word.charAt(0).toUpperCase()+word.slice(1);}).join(' ');};export var arrayToString=function arrayToString(value){return value.join(',');};export var stringToArray=function stringToArray(value){return value.split(',').filter(function(val){return!!val;});};export var stringIsUUID=function stringIsUUID(value){return /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/gi.test(value);};export var truncateString=function truncateString(str,num){if(str.length<=num){return str;}return\"\".concat(str.slice(0,num),\"...\");};","map":{"version":3,"sources":["/awx_devel/awx/ui/src/util/strings.js"],"names":["toTitleCase","string","toLowerCase","split","map","word","charAt","toUpperCase","slice","join","arrayToString","value","stringToArray","filter","val","stringIsUUID","test","truncateString","str","num","length"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,MAAD,CAAY,CACrC,GAAI,CAACA,MAAL,CAAa,CACX,MAAO,EAAP,CACD,CACD,MAAOA,CAAAA,MAAM,CACVC,WADI,GAEJC,KAFI,CAEE,GAFF,EAGJC,GAHI,CAGA,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,MAAL,CAAY,CAAZ,EAAeC,WAAf,GAA+BF,IAAI,CAACG,KAAL,CAAW,CAAX,CAAzC,EAHA,EAIJC,IAJI,CAIC,GAJD,CAAP,CAKD,CATM,CAWP,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,QAAWA,CAAAA,KAAK,CAACF,IAAN,CAAW,GAAX,CAAX,EAAtB,CAEP,MAAO,IAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACD,KAAD,QAAWA,CAAAA,KAAK,CAACR,KAAN,CAAY,GAAZ,EAAiBU,MAAjB,CAAwB,SAACC,GAAD,QAAS,CAAC,CAACA,GAAX,EAAxB,CAAX,EAAtB,CAEP,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACJ,KAAD,QAC1B,2FAA0FK,IAA1F,CACEL,KADF,CAD0B,EAArB,CAKP,MAAO,IAAMM,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,GAAD,CAAMC,GAAN,CAAc,CAC1C,GAAID,GAAG,CAACE,MAAJ,EAAcD,GAAlB,CAAuB,CACrB,MAAOD,CAAAA,GAAP,CACD,CACD,gBAAUA,GAAG,CAACV,KAAJ,CAAU,CAAV,CAAaW,GAAb,CAAV,QACD,CALM","sourcesContent":["export const toTitleCase = (string) => {\n  if (!string) {\n    return '';\n  }\n  return string\n    .toLowerCase()\n    .split('_')\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n};\n\nexport const arrayToString = (value) => value.join(',');\n\nexport const stringToArray = (value) => value.split(',').filter((val) => !!val);\n\nexport const stringIsUUID = (value) =>\n  /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/gi.test(\n    value\n  );\n\nexport const truncateString = (str, num) => {\n  if (str.length <= num) {\n    return str;\n  }\n  return `${str.slice(0, num)}...`;\n};\n"]},"metadata":{},"sourceType":"module"}