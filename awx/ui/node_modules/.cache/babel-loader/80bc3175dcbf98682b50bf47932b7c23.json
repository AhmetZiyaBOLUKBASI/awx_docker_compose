{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\nexport var DataListContent = function DataListContent(_a) {\n  var _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      _a$id = _a.id,\n      id = _a$id === void 0 ? '' : _a$id,\n      _a$isHidden = _a.isHidden,\n      isHidden = _a$isHidden === void 0 ? false : _a$isHidden,\n      ariaLabel = _a['aria-label'],\n      _a$hasNoPadding = _a.hasNoPadding,\n      hasNoPadding = _a$hasNoPadding === void 0 ? false : _a$hasNoPadding,\n      _a$rowid = _a.rowid,\n      rowid = _a$rowid === void 0 ? '' : _a$rowid,\n      props = __rest(_a, [\"className\", \"children\", \"id\", \"isHidden\", 'aria-label', \"hasNoPadding\", \"rowid\"]);\n\n  return React.createElement(\"section\", Object.assign({\n    id: id,\n    className: css(styles.dataListExpandableContent, className),\n    hidden: isHidden,\n    \"aria-label\": ariaLabel\n  }, props), React.createElement(\"div\", {\n    className: css(styles.dataListExpandableContentBody, hasNoPadding && styles.modifiers.noPadding)\n  }, children));\n};\nDataListContent.displayName = 'DataListContent';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/DataList/DataListContent.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,4DAAnB;AAmBA,OAAO,IAAM,eAAe,GAAkD,SAAjE,eAAiE,CAAC,EAAD,EAUnD;AAVoD,qBAQnE,EARmE,CAC7E,SAD6E;AAAA,MAC7E,SAD6E,6BACjE,EADiE;AAAA,oBAQnE,EARmE,CAE7E,QAF6E;AAAA,MAE7E,QAF6E,4BAElE,IAFkE;AAAA,cAQnE,EARmE,CAG7E,EAH6E;AAAA,MAG7E,EAH6E,sBAGxE,EAHwE;AAAA,oBAQnE,EARmE,CAI7E,QAJ6E;AAAA,MAI7E,QAJ6E,4BAIlE,KAJkE;AAAA,MAK/D,SAL+D,GAQnE,EARmE,CAK7E,YAL6E;AAAA,wBAQnE,EARmE,CAM7E,YAN6E;AAAA,MAM7E,YAN6E,gCAM9D,KAN8D;AAAA,iBAQnE,EARmE,CAQ7E,KAR6E;AAAA,MAQ7E,KAR6E,yBAQrE,EARqE;AAAA,MAS1E,KAT0E,GASrE,MAAA,CAAA,EAAA,EATqE,CAAA,WAAA,EAAA,UAAA,EAAA,IAAA,EAAA,UAAA,EAAA,YAAA,EAAA,cAAA,EAAA,OAAA,CASrE,CATqE;;AAUnD,SAC1B,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACE,IAAA,EAAE,EAAE,EADN;AAEE,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,yBAAR,EAAmC,SAAnC,CAFhB;AAGE,IAAA,MAAM,EAAE,QAHV;AAGkB,kBACJ;AAJd,GAAA,EAKM,KALN,CAAA,EAOE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,6BAAR,EAAuC,YAAY,IAAI,MAAM,CAAC,SAAP,CAAiB,SAAxE;AAAnB,GAAA,EACG,QADH,CAPF,CAD0B;AAY3B,CAtBM;AAuBP,eAAe,CAAC,WAAhB,GAA8B,iBAA9B","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\n\nexport interface DataListContentProps extends React.HTMLProps<HTMLElement> {\n  /** Content rendered inside the DataList item */\n  children?: React.ReactNode;\n  /** Additional classes added to the DataList cell */\n  className?: string;\n  /** Identify the DataListContent item */\n  id?: string;\n  /** Id for the row */\n  rowid?: string;\n  /** Flag to show if the expanded content of the DataList item is visible */\n  isHidden?: boolean;\n  /** Flag to remove padding from the expandable content */\n  hasNoPadding?: boolean;\n  /** Adds accessible text to the DataList toggle */\n  'aria-label': string;\n}\n\nexport const DataListContent: React.FunctionComponent<DataListContentProps> = ({\n  className = '',\n  children = null,\n  id = '',\n  isHidden = false,\n  'aria-label': ariaLabel,\n  hasNoPadding = false,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  rowid = '',\n  ...props\n}: DataListContentProps) => (\n  <section\n    id={id}\n    className={css(styles.dataListExpandableContent, className)}\n    hidden={isHidden}\n    aria-label={ariaLabel}\n    {...props}\n  >\n    <div className={css(styles.dataListExpandableContentBody, hasNoPadding && styles.modifiers.noPadding)}>\n      {children}\n    </div>\n  </section>\n);\nDataListContent.displayName = 'DataListContent';\n"]},"metadata":{},"sourceType":"module"}