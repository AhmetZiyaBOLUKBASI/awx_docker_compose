{"ast":null,"code":"import*as d3 from'd3';import{truncateString}from'../../../util/strings';import{NODE_STATE_COLOR_KEY,NODE_STATE_HTML_ENTITY_KEY,NODE_TYPE_SYMBOL_KEY,LABEL_TEXT_MAX_LENGTH}from'../constants';export function getWidth(selector){return selector?d3.select(selector).node().clientWidth:700;}export function getHeight(selector){return selector?d3.select(selector).node().clientHeight:600;}export function renderStateColor(nodeState){return NODE_STATE_COLOR_KEY[nodeState]?NODE_STATE_COLOR_KEY[nodeState]:'';}export function renderLabelText(nodeState,name){if(typeof nodeState==='string'&&typeof name==='string'){return NODE_STATE_HTML_ENTITY_KEY[nodeState]?\"\".concat(NODE_STATE_HTML_ENTITY_KEY[nodeState],\" \").concat(truncateString(name,LABEL_TEXT_MAX_LENGTH)):\" \".concat(truncateString(name,LABEL_TEXT_MAX_LENGTH));}return\"\";}export function renderNodeType(nodeType){return NODE_TYPE_SYMBOL_KEY[nodeType]?NODE_TYPE_SYMBOL_KEY[nodeType]:\"\";}export function renderNodeIcon(selectedNode){if(selectedNode){var nodeType=selectedNode.node_type;return NODE_TYPE_SYMBOL_KEY[nodeType]?NODE_TYPE_SYMBOL_KEY[nodeType]:\"\";}return false;}export function redirectToDetailsPage(selectedNode,history){if(selectedNode&&history){var nodeId=selectedNode.id;var constructedURL=\"/instances/\".concat(nodeId,\"/details\");history.push(constructedURL);}return false;}// DEBUG TOOLS\nexport function getRandomInt(min,max){min=Math.ceil(min);max=Math.floor(max);return Math.floor(Math.random()*(max-min+1))+min;}var generateRandomLinks=function generateRandomLinks(n,r){var links=[];for(var i=0;i<r;i++){var link={source:n[getRandomInt(0,n.length-1)].hostname,target:n[getRandomInt(0,n.length-1)].hostname};links.push(link);}return{nodes:n,links:links};};export var generateRandomNodes=function generateRandomNodes(n){var nodes=[];function getRandomType(){return['hybrid','execution','control','hop'][getRandomInt(0,3)];}function getRandomState(){return['healthy','error','disabled'][getRandomInt(0,2)];}for(var i=0;i<n;i++){var id=i+1;var randomType=getRandomType();var randomState=getRandomState();var node={id:id,hostname:\"node-\".concat(id),node_type:randomType,node_state:randomState};nodes.push(node);}return generateRandomLinks(nodes,getRandomInt(1,n-1));};","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/TopologyView/utils/helpers.js"],"names":["d3","truncateString","NODE_STATE_COLOR_KEY","NODE_STATE_HTML_ENTITY_KEY","NODE_TYPE_SYMBOL_KEY","LABEL_TEXT_MAX_LENGTH","getWidth","selector","select","node","clientWidth","getHeight","clientHeight","renderStateColor","nodeState","renderLabelText","name","renderNodeType","nodeType","renderNodeIcon","selectedNode","node_type","redirectToDetailsPage","history","nodeId","id","constructedURL","push","getRandomInt","min","max","Math","ceil","floor","random","generateRandomLinks","n","r","links","i","link","source","length","hostname","target","nodes","generateRandomNodes","getRandomType","getRandomState","randomType","randomState","node_state"],"mappings":"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","sourcesContent":["import * as d3 from 'd3';\nimport { truncateString } from '../../../util/strings';\n\nimport {\n  NODE_STATE_COLOR_KEY,\n  NODE_STATE_HTML_ENTITY_KEY,\n  NODE_TYPE_SYMBOL_KEY,\n  LABEL_TEXT_MAX_LENGTH,\n} from '../constants';\n\nexport function getWidth(selector) {\n  return selector ? d3.select(selector).node().clientWidth : 700;\n}\n\nexport function getHeight(selector) {\n  return selector ? d3.select(selector).node().clientHeight : 600;\n}\n\nexport function renderStateColor(nodeState) {\n  return NODE_STATE_COLOR_KEY[nodeState] ? NODE_STATE_COLOR_KEY[nodeState] : '';\n}\n\nexport function renderLabelText(nodeState, name) {\n  if (typeof nodeState === 'string' && typeof name === 'string') {\n    return NODE_STATE_HTML_ENTITY_KEY[nodeState]\n      ? `${NODE_STATE_HTML_ENTITY_KEY[nodeState]} ${truncateString(\n          name,\n          LABEL_TEXT_MAX_LENGTH\n        )}`\n      : ` ${truncateString(name, LABEL_TEXT_MAX_LENGTH)}`;\n  }\n  return ``;\n}\n\nexport function renderNodeType(nodeType) {\n  return NODE_TYPE_SYMBOL_KEY[nodeType] ? NODE_TYPE_SYMBOL_KEY[nodeType] : ``;\n}\n\nexport function renderNodeIcon(selectedNode) {\n  if (selectedNode) {\n    const { node_type: nodeType } = selectedNode;\n    return NODE_TYPE_SYMBOL_KEY[nodeType] ? NODE_TYPE_SYMBOL_KEY[nodeType] : ``;\n  }\n  return false;\n}\n\nexport function redirectToDetailsPage(selectedNode, history) {\n  if (selectedNode && history) {\n    const { id: nodeId } = selectedNode;\n    const constructedURL = `/instances/${nodeId}/details`;\n    history.push(constructedURL);\n  }\n  return false;\n}\n\n// DEBUG TOOLS\nexport function getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst generateRandomLinks = (n, r) => {\n  const links = [];\n  for (let i = 0; i < r; i++) {\n    const link = {\n      source: n[getRandomInt(0, n.length - 1)].hostname,\n      target: n[getRandomInt(0, n.length - 1)].hostname,\n    };\n    links.push(link);\n  }\n  return { nodes: n, links };\n};\n\nexport const generateRandomNodes = (n) => {\n  const nodes = [];\n  function getRandomType() {\n    return ['hybrid', 'execution', 'control', 'hop'][getRandomInt(0, 3)];\n  }\n  function getRandomState() {\n    return ['healthy', 'error', 'disabled'][getRandomInt(0, 2)];\n  }\n  for (let i = 0; i < n; i++) {\n    const id = i + 1;\n    const randomType = getRandomType();\n    const randomState = getRandomState();\n    const node = {\n      id,\n      hostname: `node-${id}`,\n      node_type: randomType,\n      node_state: randomState,\n    };\n    nodes.push(node);\n  }\n  return generateRandomLinks(nodes, getRandomInt(1, n - 1));\n};\n"]},"metadata":{},"sourceType":"module"}