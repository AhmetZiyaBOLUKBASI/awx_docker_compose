{"ast":null,"code":"import * as React from 'react';\n/** This is a custom React hook in a format suggest by Dan Abramov in a blog post here:\n * https://overreacted.io/making-setinterval-declarative-with-react-hooks/. It allows setInterval to be used\n * declaratively in functional React components.\n */\n\nexport function useInterval(callback, delay) {\n  var savedCallback = React.useRef(function () {});\n  React.useEffect(function () {\n    savedCallback.current = callback;\n  }, [callback]);\n  React.useEffect(function () {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      var id = setInterval(tick, delay);\n      return function () {\n        return clearInterval(id);\n      };\n    }\n  }, [delay]);\n}","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/helpers/useInterval.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA;;;AAGG;;AAEH,OAAM,SAAU,WAAV,CAAsB,QAAtB,EAA4C,KAA5C,EAAgE;AACpE,MAAM,aAAa,GAAG,KAAK,CAAC,MAAN,CAAa,YAAK,CAAG,CAArB,CAAtB;AAEA,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAK;AACnB,IAAA,aAAa,CAAC,OAAd,GAAwB,QAAxB;AACD,GAFD,EAEG,CAAC,QAAD,CAFH;AAIA,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAK;AACnB,aAAS,IAAT,GAAa;AACX,MAAA,aAAa,CAAC,OAAd;AACD;;AAED,QAAI,KAAK,KAAK,IAAd,EAAoB;AAClB,UAAM,EAAE,GAAG,WAAW,CAAC,IAAD,EAAO,KAAP,CAAtB;AACA,aAAO;AAAA,eAAM,aAAa,CAAC,EAAD,CAAnB;AAAA,OAAP;AACD;AACF,GATD,EASG,CAAC,KAAD,CATH;AAUD","sourcesContent":["import * as React from 'react';\n\n/** This is a custom React hook in a format suggest by Dan Abramov in a blog post here:\n * https://overreacted.io/making-setinterval-declarative-with-react-hooks/. It allows setInterval to be used\n * declaratively in functional React components.\n */\n\nexport function useInterval(callback: () => void, delay: number | null) {\n  const savedCallback = React.useRef(() => {});\n\n  React.useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  React.useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n"]},"metadata":{},"sourceType":"module"}