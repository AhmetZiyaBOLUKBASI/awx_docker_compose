{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{Trans}from\"@lingui/react\";import{i18n}from\"@lingui/core\";import React from'react';import{Link}from'react-router-dom';import styled from'styled-components';import{Chip,Divider,Title}from'@patternfly/react-core';import{toTitleCase}from'util/strings';import CredentialChip from'../CredentialChip';import ChipGroup from'../ChipGroup';import{DetailList,Detail,UserDateDetail}from'../DetailList';import{VariablesDetail}from'../CodeEditor';import PromptProjectDetail from'./PromptProjectDetail';import PromptInventorySourceDetail from'./PromptInventorySourceDetail';import PromptJobTemplateDetail from'./PromptJobTemplateDetail';import PromptWFJobTemplateDetail from'./PromptWFJobTemplateDetail';import{VERBOSITY}from'../VerbositySelectField';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var PromptTitle=styled(Title).withConfig({displayName:\"PromptDetail__PromptTitle\",componentId:\"sc-1m5fsml-0\"})([\"margin-top:var(--pf-global--spacer--xl);--pf-c-title--m-md--FontWeight:700;grid-column:1 / -1;\"]);var PromptDivider=styled(Divider).withConfig({displayName:\"PromptDetail__PromptDivider\",componentId:\"sc-1m5fsml-1\"})([\"margin-top:var(--pf-global--spacer--lg);margin-bottom:var(--pf-global--spacer--lg);\"]);var PromptDetailList=styled(DetailList).withConfig({displayName:\"PromptDetail__PromptDetailList\",componentId:\"sc-1m5fsml-2\"})([\"padding:0px var(--pf-global--spacer--lg);\"]);function formatTimeout(timeout){if(typeof timeout==='undefined'||timeout===null){return null;}var minutes=Math.floor(timeout/60);var seconds=timeout-Math.floor(timeout/60)*60;return/*#__PURE__*/_jsx(Trans,{id:\"{minutes} min {seconds} sec\",values:{minutes:minutes,seconds:seconds}});}function buildResourceLink(resource){var link={job_template:\"/templates/job_template/\".concat(resource.id,\"/details\"),project:\"/projects/\".concat(resource.id,\"/details\"),inventory_source:\"/inventories/inventory/\".concat(resource.inventory,\"/sources/\").concat(resource.id,\"/details\"),workflow_job_template:\"/templates/workflow_job_template/\".concat(resource.id,\"/details\")};return link[resource===null||resource===void 0?void 0:resource.type]?/*#__PURE__*/_jsx(Link,{to:link[resource.type],children:resource.name}):resource.name;}function hasPromptData(launchData){return launchData.survey_enabled||launchData.ask_credential_on_launch||launchData.ask_diff_mode_on_launch||launchData.ask_inventory_on_launch||launchData.ask_job_type_on_launch||launchData.ask_limit_on_launch||launchData.ask_scm_branch_on_launch||launchData.ask_skip_tags_on_launch||launchData.ask_tags_on_launch||launchData.ask_variables_on_launch||launchData.ask_verbosity_on_launch;}function omitOverrides(resource,overrides,defaultConfig){var clonedResource=_objectSpread(_objectSpread({},resource),{},{summary_fields:_objectSpread({},resource.summary_fields)},defaultConfig);Object.keys(overrides).forEach(function(keyToOmit){delete clonedResource[keyToOmit];clonedResource===null||clonedResource===void 0?true:delete clonedResource.summary_fields[keyToOmit];});return clonedResource;}function PromptDetail(_ref){var _details$summary_fiel,_details$summary_fiel2,_overrides$inventory;var resource=_ref.resource,_ref$launchConfig=_ref.launchConfig,launchConfig=_ref$launchConfig===void 0?{}:_ref$launchConfig,_ref$overrides=_ref.overrides,overrides=_ref$overrides===void 0?{}:_ref$overrides,_ref$workflowNode=_ref.workflowNode,workflowNode=_ref$workflowNode===void 0?false:_ref$workflowNode;var details=omitOverrides(resource,overrides,launchConfig.defaults);details.type=(overrides===null||overrides===void 0?void 0:overrides.nodeType)||details.type;var hasOverrides=Object.keys(overrides).length>0;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(DetailList,{gutter:\"sm\",children:[/*#__PURE__*/_jsx(Detail,{label:/*i18n*/i18n._(\"Name\"),dataCy:\"prompt-detail-name\",value:buildResourceLink(resource)}),/*#__PURE__*/_jsx(Detail,{label:/*i18n*/i18n._(\"Description\"),dataCy:\"prompt-detail-description\",value:details.description}),/*#__PURE__*/_jsx(Detail,{label:/*i18n*/i18n._(\"Type\"),dataCy:\"prompt-detail-type\",value:toTitleCase(details.unified_job_type||details.type)}),workflowNode&&/*#__PURE__*/_jsx(Detail,{label:/*i18n*/i18n._(\"Convergence\"),dataCy:\"prompt-detail-convergence\",value:workflowNode!==null&&workflowNode!==void 0&&workflowNode.all_parents_must_converge?/*i18n*/i18n._(\"All\"):/*i18n*/i18n._(\"Any\")}),/*#__PURE__*/_jsx(Detail,{label:/*i18n*/i18n._(\"Timeout\"),dataCy:\"prompt-detail-timeout\",value:formatTimeout(details===null||details===void 0?void 0:details.timeout)}),(details===null||details===void 0?void 0:details.type)==='project'&&/*#__PURE__*/_jsx(PromptProjectDetail,{resource:details}),(details===null||details===void 0?void 0:details.type)==='inventory_source'&&/*#__PURE__*/_jsx(PromptInventorySourceDetail,{resource:details}),(details===null||details===void 0?void 0:details.type)==='job_template'&&/*#__PURE__*/_jsx(PromptJobTemplateDetail,{resource:details}),(details===null||details===void 0?void 0:details.type)==='workflow_job_template'&&/*#__PURE__*/_jsx(PromptWFJobTemplateDetail,{resource:details}),(details===null||details===void 0?void 0:details.created)&&/*#__PURE__*/_jsx(UserDateDetail,{label:/*i18n*/i18n._(\"Created\"),date:details.created,user:details===null||details===void 0?void 0:(_details$summary_fiel=details.summary_fields)===null||_details$summary_fiel===void 0?void 0:_details$summary_fiel.created_by}),(details===null||details===void 0?void 0:details.modified)&&/*#__PURE__*/_jsx(UserDateDetail,{label:/*i18n*/i18n._(\"Last Modified\"),date:details===null||details===void 0?void 0:details.modified,user:details===null||details===void 0?void 0:(_details$summary_fiel2=details.summary_fields)===null||_details$summary_fiel2===void 0?void 0:_details$summary_fiel2.modified_by}),(details===null||details===void 0?void 0:details.type)==='system_job_template'&&/*#__PURE__*/_jsx(VariablesDetail,{label:/*i18n*/i18n._(\"Variables\"),rows:4,value:overrides.extra_vars,name:\"extra_vars\",dataCy:\"prompt-detail-variables\"})]}),(details===null||details===void 0?void 0:details.type)!=='system_job_template'&&hasPromptData(launchConfig)&&hasOverrides&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(PromptTitle,{headingLevel:\"h2\",children:/*i18n*/i18n._(\"Prompted Values\")}),/*#__PURE__*/_jsx(PromptDivider,{}),/*#__PURE__*/_jsxs(PromptDetailList,{\"aria-label\":/*i18n*/i18n._(\"Prompt Overrides\"),children:[launchConfig.ask_job_type_on_launch&&/*#__PURE__*/_jsx(Detail,{label:/*i18n*/i18n._(\"Job Type\"),value:toTitleCase(overrides.job_type)}),launchConfig.ask_credential_on_launch&&/*#__PURE__*/_jsx(Detail,{fullWidth:true,label:/*i18n*/i18n._(\"Credentials\"),rows:4,value:/*#__PURE__*/_jsx(ChipGroup,{numChips:5,totalChips:overrides.credentials.length,ouiaId:\"prompt-credential-chips\",children:overrides.credentials.map(function(cred){return/*#__PURE__*/_jsx(CredentialChip,{credential:cred,isReadOnly:true,ouiaId:\"credential-\".concat(cred.id,\"-chip\")},cred.id);})})}),launchConfig.ask_inventory_on_launch&&/*#__PURE__*/_jsx(Detail,{label:/*i18n*/i18n._(\"Inventory\"),value:(_overrides$inventory=overrides.inventory)===null||_overrides$inventory===void 0?void 0:_overrides$inventory.name}),launchConfig.ask_scm_branch_on_launch&&/*#__PURE__*/_jsx(Detail,{label:/*i18n*/i18n._(\"Source Control Branch\"),value:overrides.scm_branch}),launchConfig.ask_limit_on_launch&&/*#__PURE__*/_jsx(Detail,{label:/*i18n*/i18n._(\"Limit\"),value:overrides.limit}),Object.prototype.hasOwnProperty.call(overrides,'verbosity')&&launchConfig.ask_verbosity_on_launch?/*#__PURE__*/_jsx(Detail,{label:/*i18n*/i18n._(\"Verbosity\"),value:VERBOSITY()[overrides.verbosity]}):null,launchConfig.ask_tags_on_launch&&/*#__PURE__*/_jsx(Detail,{fullWidth:true,label:/*i18n*/i18n._(\"Job Tags\"),value:/*#__PURE__*/_jsx(ChipGroup,{numChips:5,ouiaId:\"prompt-job-tag-chips\",totalChips:!overrides.job_tags||overrides.job_tags===''?0:overrides.job_tags.split(',').length,children:overrides.job_tags.length>0&&overrides.job_tags.split(',').map(function(jobTag){return/*#__PURE__*/_jsx(Chip,{isReadOnly:true,ouiaId:\"job-tag-\".concat(jobTag,\"-chip\"),children:jobTag},jobTag);})})}),launchConfig.ask_skip_tags_on_launch&&/*#__PURE__*/_jsx(Detail,{fullWidth:true,label:/*i18n*/i18n._(\"Skip Tags\"),value:/*#__PURE__*/_jsx(ChipGroup,{numChips:5,totalChips:!overrides.skip_tags||overrides.skip_tags===''?0:overrides.skip_tags.split(',').length,ouiaId:\"prompt-skip-tag-chips\",children:overrides.skip_tags.length>0&&overrides.skip_tags.split(',').map(function(skipTag){return/*#__PURE__*/_jsx(Chip,{isReadOnly:true,ouiaId:\"skip-tag-\".concat(skipTag,\"-chip\"),children:skipTag},skipTag);})})}),launchConfig.ask_diff_mode_on_launch&&/*#__PURE__*/_jsx(Detail,{label:/*i18n*/i18n._(\"Show Changes\"),value:overrides.diff_mode===true?/*i18n*/i18n._(\"On\"):/*i18n*/i18n._(\"Off\")}),(launchConfig.survey_enabled||launchConfig.ask_variables_on_launch)&&/*#__PURE__*/_jsx(VariablesDetail,{dataCy:\"prompt-detail-variables\",label:/*i18n*/i18n._(\"Variables\"),rows:4,value:overrides.extra_vars,name:\"extra_vars\"})]})]})]});}PromptDetail.defaultProps={launchConfig:{defaults:{}}};export default PromptDetail;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/PromptDetail/PromptDetail.js"],"names":["React","Link","styled","Chip","Divider","Title","toTitleCase","CredentialChip","ChipGroup","DetailList","Detail","UserDateDetail","VariablesDetail","PromptProjectDetail","PromptInventorySourceDetail","PromptJobTemplateDetail","PromptWFJobTemplateDetail","VERBOSITY","PromptTitle","PromptDivider","PromptDetailList","formatTimeout","timeout","minutes","Math","floor","seconds","buildResourceLink","resource","link","job_template","id","project","inventory_source","inventory","workflow_job_template","type","name","hasPromptData","launchData","survey_enabled","ask_credential_on_launch","ask_diff_mode_on_launch","ask_inventory_on_launch","ask_job_type_on_launch","ask_limit_on_launch","ask_scm_branch_on_launch","ask_skip_tags_on_launch","ask_tags_on_launch","ask_variables_on_launch","ask_verbosity_on_launch","omitOverrides","overrides","defaultConfig","clonedResource","summary_fields","Object","keys","forEach","keyToOmit","PromptDetail","launchConfig","workflowNode","details","defaults","nodeType","hasOverrides","length","description","unified_job_type","all_parents_must_converge","created","created_by","modified","modified_by","extra_vars","job_type","credentials","map","cred","scm_branch","limit","prototype","hasOwnProperty","call","verbosity","job_tags","split","jobTag","skip_tags","skipTag","diff_mode","defaultProps"],"mappings":"sKACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,IAAT,CAAeC,OAAf,CAAwBC,KAAxB,KAAqC,wBAArC,CACA,OAASC,WAAT,KAA4B,cAA5B,CACA,MAAOC,CAAAA,cAAP,KAA2B,mBAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CACA,OAASC,UAAT,CAAqBC,MAArB,CAA6BC,cAA7B,KAAmD,eAAnD,CACA,OAASC,eAAT,KAAgC,eAAhC,CACA,MAAOC,CAAAA,mBAAP,KAAgC,uBAAhC,CACA,MAAOC,CAAAA,2BAAP,KAAwC,+BAAxC,CACA,MAAOC,CAAAA,uBAAP,KAAoC,2BAApC,CACA,MAAOC,CAAAA,yBAAP,KAAsC,6BAAtC,CACA,OAASC,SAAT,KAA0B,yBAA1B,C,6IAEA,GAAMC,CAAAA,WAAW,CAAGhB,MAAM,CAACG,KAAD,CAAT,qLAAjB,CAMA,GAAMc,CAAAA,aAAa,CAAGjB,MAAM,CAACE,OAAD,CAAT,4KAAnB,CAKA,GAAMgB,CAAAA,gBAAgB,CAAGlB,MAAM,CAACO,UAAD,CAAT,qIAAtB,CAIA,QAASY,CAAAA,aAAT,CAAuBC,OAAvB,CAAgC,CAC9B,GAAI,MAAOA,CAAAA,OAAP,GAAmB,WAAnB,EAAkCA,OAAO,GAAK,IAAlD,CAAwD,CACtD,MAAO,KAAP,CACD,CACD,GAAMC,CAAAA,OAAO,CAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,CAAG,EAArB,CAAhB,CACA,GAAMI,CAAAA,OAAO,CAAGJ,OAAO,CAAGE,IAAI,CAACC,KAAL,CAAWH,OAAO,CAAG,EAArB,EAA2B,EAArD,CACA,mBACE,6DACGC,OADH,SACiBG,OADjB,GADF,CAKD,CAED,QAASC,CAAAA,iBAAT,CAA2BC,QAA3B,CAAqC,CACnC,GAAMC,CAAAA,IAAI,CAAG,CACXC,YAAY,mCAA6BF,QAAQ,CAACG,EAAtC,YADD,CAEXC,OAAO,qBAAeJ,QAAQ,CAACG,EAAxB,YAFI,CAGXE,gBAAgB,kCAA4BL,QAAQ,CAACM,SAArC,qBAA0DN,QAAQ,CAACG,EAAnE,YAHL,CAIXI,qBAAqB,4CAAsCP,QAAQ,CAACG,EAA/C,YAJV,CAAb,CAOA,MAAOF,CAAAA,IAAI,CAACD,QAAD,SAACA,QAAD,iBAACA,QAAQ,CAAEQ,IAAX,CAAJ,cACL,KAAC,IAAD,EAAM,EAAE,CAAEP,IAAI,CAACD,QAAQ,CAACQ,IAAV,CAAd,UAAgCR,QAAQ,CAACS,IAAzC,EADK,CAGLT,QAAQ,CAACS,IAHX,CAKD,CAED,QAASC,CAAAA,aAAT,CAAuBC,UAAvB,CAAmC,CACjC,MACEA,CAAAA,UAAU,CAACC,cAAX,EACAD,UAAU,CAACE,wBADX,EAEAF,UAAU,CAACG,uBAFX,EAGAH,UAAU,CAACI,uBAHX,EAIAJ,UAAU,CAACK,sBAJX,EAKAL,UAAU,CAACM,mBALX,EAMAN,UAAU,CAACO,wBANX,EAOAP,UAAU,CAACQ,uBAPX,EAQAR,UAAU,CAACS,kBARX,EASAT,UAAU,CAACU,uBATX,EAUAV,UAAU,CAACW,uBAXb,CAaD,CAED,QAASC,CAAAA,aAAT,CAAuBvB,QAAvB,CAAiCwB,SAAjC,CAA4CC,aAA5C,CAA2D,CACzD,GAAMC,CAAAA,cAAc,gCACf1B,QADe,MAElB2B,cAAc,kBAAO3B,QAAQ,CAAC2B,cAAhB,CAFI,EAGfF,aAHe,CAApB,CAKAG,MAAM,CAACC,IAAP,CAAYL,SAAZ,EAAuBM,OAAvB,CAA+B,SAACC,SAAD,CAAe,CAC5C,MAAOL,CAAAA,cAAc,CAACK,SAAD,CAArB,CACOL,cAAP,SAAOA,cAAP,qBAAOA,CAAAA,cAAc,CAAEC,cAAhB,CAA+BI,SAA/B,CAAP,CACD,CAHD,EAIA,MAAOL,CAAAA,cAAP,CACD,CAED,QAASM,CAAAA,YAAT,MAKG,0EAJDhC,CAAAA,QAIC,MAJDA,QAIC,wBAHDiC,YAGC,CAHDA,YAGC,4BAHc,EAGd,uCAFDT,SAEC,CAFDA,SAEC,yBAFW,EAEX,uCADDU,YACC,CADDA,YACC,4BADc,KACd,mBACD,GAAMC,CAAAA,OAAO,CAAGZ,aAAa,CAACvB,QAAD,CAAWwB,SAAX,CAAsBS,YAAY,CAACG,QAAnC,CAA7B,CACAD,OAAO,CAAC3B,IAAR,CAAe,CAAAgB,SAAS,OAAT,EAAAA,SAAS,SAAT,QAAAA,SAAS,CAAEa,QAAX,GAAuBF,OAAO,CAAC3B,IAA9C,CACA,GAAM8B,CAAAA,YAAY,CAAGV,MAAM,CAACC,IAAP,CAAYL,SAAZ,EAAuBe,MAAvB,CAAgC,CAArD,CAEA,mBACE,wCACE,MAAC,UAAD,EAAY,MAAM,CAAC,IAAnB,wBACE,KAAC,MAAD,EACE,KAAK,SAAE,cADT,CAEE,MAAM,CAAC,oBAFT,CAGE,KAAK,CAAExC,iBAAiB,CAACC,QAAD,CAH1B,EADF,cAME,KAAC,MAAD,EACE,KAAK,SAAE,qBADT,CAEE,MAAM,CAAC,2BAFT,CAGE,KAAK,CAAEmC,OAAO,CAACK,WAHjB,EANF,cAWE,KAAC,MAAD,EACE,KAAK,SAAE,cADT,CAEE,MAAM,CAAC,oBAFT,CAGE,KAAK,CAAE9D,WAAW,CAACyD,OAAO,CAACM,gBAAR,EAA4BN,OAAO,CAAC3B,IAArC,CAHpB,EAXF,CAgBG0B,YAAY,eACX,KAAC,MAAD,EACE,KAAK,SAAE,qBADT,CAEE,MAAM,CAAC,2BAFT,CAGE,KAAK,CAAEA,YAAY,OAAZ,EAAAA,YAAY,SAAZ,EAAAA,YAAY,CAAEQ,yBAAd,SAA0C,aAA1C,SAAmD,aAH5D,EAjBJ,cAuBE,KAAC,MAAD,EACE,KAAK,SAAE,iBADT,CAEE,MAAM,CAAC,uBAFT,CAGE,KAAK,CAAEjD,aAAa,CAAC0C,OAAD,SAACA,OAAD,iBAACA,OAAO,CAAEzC,OAAV,CAHtB,EAvBF,CA4BG,CAAAyC,OAAO,OAAP,EAAAA,OAAO,SAAP,QAAAA,OAAO,CAAE3B,IAAT,IAAkB,SAAlB,eACC,KAAC,mBAAD,EAAqB,QAAQ,CAAE2B,OAA/B,EA7BJ,CA+BG,CAAAA,OAAO,OAAP,EAAAA,OAAO,SAAP,QAAAA,OAAO,CAAE3B,IAAT,IAAkB,kBAAlB,eACC,KAAC,2BAAD,EAA6B,QAAQ,CAAE2B,OAAvC,EAhCJ,CAkCG,CAAAA,OAAO,OAAP,EAAAA,OAAO,SAAP,QAAAA,OAAO,CAAE3B,IAAT,IAAkB,cAAlB,eACC,KAAC,uBAAD,EAAyB,QAAQ,CAAE2B,OAAnC,EAnCJ,CAqCG,CAAAA,OAAO,OAAP,EAAAA,OAAO,SAAP,QAAAA,OAAO,CAAE3B,IAAT,IAAkB,uBAAlB,eACC,KAAC,yBAAD,EAA2B,QAAQ,CAAE2B,OAArC,EAtCJ,CAwCG,CAAAA,OAAO,OAAP,EAAAA,OAAO,SAAP,QAAAA,OAAO,CAAEQ,OAAT,gBACC,KAAC,cAAD,EACE,KAAK,SAAE,iBADT,CAEE,IAAI,CAAER,OAAO,CAACQ,OAFhB,CAGE,IAAI,CAAER,OAAF,SAAEA,OAAF,wCAAEA,OAAO,CAAER,cAAX,gDAAE,sBAAyBiB,UAHjC,EAzCJ,CA+CG,CAAAT,OAAO,OAAP,EAAAA,OAAO,SAAP,QAAAA,OAAO,CAAEU,QAAT,gBACC,KAAC,cAAD,EACE,KAAK,SAAE,uBADT,CAEE,IAAI,CAAEV,OAAF,SAAEA,OAAF,iBAAEA,OAAO,CAAEU,QAFjB,CAGE,IAAI,CAAEV,OAAF,SAAEA,OAAF,yCAAEA,OAAO,CAAER,cAAX,iDAAE,uBAAyBmB,WAHjC,EAhDJ,CAsDG,CAAAX,OAAO,OAAP,EAAAA,OAAO,SAAP,QAAAA,OAAO,CAAE3B,IAAT,IAAkB,qBAAlB,eACC,KAAC,eAAD,EACE,KAAK,SAAE,mBADT,CAEE,IAAI,CAAE,CAFR,CAGE,KAAK,CAAEgB,SAAS,CAACuB,UAHnB,CAIE,IAAI,CAAC,YAJP,CAKE,MAAM,CAAC,yBALT,EAvDJ,GADF,CAiEG,CAAAZ,OAAO,OAAP,EAAAA,OAAO,SAAP,QAAAA,OAAO,CAAE3B,IAAT,IAAkB,qBAAlB,EACCE,aAAa,CAACuB,YAAD,CADd,EAECK,YAFD,eAGG,wCACE,KAAC,WAAD,EAAa,YAAY,CAAC,IAA1B,kBAAgC,yBAAhC,EADF,cAEE,KAAC,aAAD,IAFF,cAGE,MAAC,gBAAD,EAAkB,qBAAY,0BAA9B,WACGL,YAAY,CAACjB,sBAAb,eACC,KAAC,MAAD,EACE,KAAK,SAAE,kBADT,CAEE,KAAK,CAAEtC,WAAW,CAAC8C,SAAS,CAACwB,QAAX,CAFpB,EAFJ,CAOGf,YAAY,CAACpB,wBAAb,eACC,KAAC,MAAD,EACE,SAAS,KADX,CAEE,KAAK,SAAE,qBAFT,CAGE,IAAI,CAAE,CAHR,CAIE,KAAK,cACH,KAAC,SAAD,EACE,QAAQ,CAAE,CADZ,CAEE,UAAU,CAAEW,SAAS,CAACyB,WAAV,CAAsBV,MAFpC,CAGE,MAAM,CAAC,yBAHT,UAKGf,SAAS,CAACyB,WAAV,CAAsBC,GAAtB,CAA0B,SAACC,IAAD,qBACzB,KAAC,cAAD,EAEE,UAAU,CAAEA,IAFd,CAGE,UAAU,KAHZ,CAIE,MAAM,sBAAgBA,IAAI,CAAChD,EAArB,SAJR,EACOgD,IAAI,CAAChD,EADZ,CADyB,EAA1B,CALH,EALJ,EARJ,CA8BG8B,YAAY,CAAClB,uBAAb,eACC,KAAC,MAAD,EACE,KAAK,SAAE,mBADT,CAEE,KAAK,uBAAES,SAAS,CAAClB,SAAZ,+CAAE,qBAAqBG,IAF9B,EA/BJ,CAoCGwB,YAAY,CAACf,wBAAb,eACC,KAAC,MAAD,EACE,KAAK,SAAE,+BADT,CAEE,KAAK,CAAEM,SAAS,CAAC4B,UAFnB,EArCJ,CA0CGnB,YAAY,CAAChB,mBAAb,eACC,KAAC,MAAD,EAAQ,KAAK,SAAE,eAAf,CAAyB,KAAK,CAAEO,SAAS,CAAC6B,KAA1C,EA3CJ,CA6CGzB,MAAM,CAAC0B,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqChC,SAArC,CAAgD,WAAhD,GACDS,YAAY,CAACX,uBADZ,cAEC,KAAC,MAAD,EACE,KAAK,SAAE,mBADT,CAEE,KAAK,CAAEjC,SAAS,GAAGmC,SAAS,CAACiC,SAAb,CAFlB,EAFD,CAMG,IAnDN,CAoDGxB,YAAY,CAACb,kBAAb,eACC,KAAC,MAAD,EACE,SAAS,KADX,CAEE,KAAK,SAAE,kBAFT,CAGE,KAAK,cACH,KAAC,SAAD,EACE,QAAQ,CAAE,CADZ,CAEE,MAAM,CAAC,sBAFT,CAGE,UAAU,CACR,CAACI,SAAS,CAACkC,QAAX,EAAuBlC,SAAS,CAACkC,QAAV,GAAuB,EAA9C,CACI,CADJ,CAEIlC,SAAS,CAACkC,QAAV,CAAmBC,KAAnB,CAAyB,GAAzB,EAA8BpB,MANtC,UASGf,SAAS,CAACkC,QAAV,CAAmBnB,MAAnB,CAA4B,CAA5B,EACCf,SAAS,CAACkC,QAAV,CAAmBC,KAAnB,CAAyB,GAAzB,EAA8BT,GAA9B,CAAkC,SAACU,MAAD,qBAChC,KAAC,IAAD,EAEE,UAAU,KAFZ,CAGE,MAAM,mBAAaA,MAAb,SAHR,UAKGA,MALH,EACOA,MADP,CADgC,EAAlC,CAVJ,EAJJ,EArDJ,CAgFG3B,YAAY,CAACd,uBAAb,eACC,KAAC,MAAD,EACE,SAAS,KADX,CAEE,KAAK,SAAE,mBAFT,CAGE,KAAK,cACH,KAAC,SAAD,EACE,QAAQ,CAAE,CADZ,CAEE,UAAU,CACR,CAACK,SAAS,CAACqC,SAAX,EAAwBrC,SAAS,CAACqC,SAAV,GAAwB,EAAhD,CACI,CADJ,CAEIrC,SAAS,CAACqC,SAAV,CAAoBF,KAApB,CAA0B,GAA1B,EAA+BpB,MALvC,CAOE,MAAM,CAAC,uBAPT,UASGf,SAAS,CAACqC,SAAV,CAAoBtB,MAApB,CAA6B,CAA7B,EACCf,SAAS,CAACqC,SAAV,CAAoBF,KAApB,CAA0B,GAA1B,EAA+BT,GAA/B,CAAmC,SAACY,OAAD,qBACjC,KAAC,IAAD,EAEE,UAAU,KAFZ,CAGE,MAAM,oBAAcA,OAAd,SAHR,UAKGA,OALH,EACOA,OADP,CADiC,EAAnC,CAVJ,EAJJ,EAjFJ,CA4GG7B,YAAY,CAACnB,uBAAb,eACC,KAAC,MAAD,EACE,KAAK,SAAE,sBADT,CAEE,KAAK,CAAEU,SAAS,CAACuC,SAAV,GAAwB,IAAxB,SAA+B,YAA/B,SAAuC,aAFhD,EA7GJ,CAkHG,CAAC9B,YAAY,CAACrB,cAAb,EACAqB,YAAY,CAACZ,uBADd,gBAEC,KAAC,eAAD,EACE,MAAM,CAAC,yBADT,CAEE,KAAK,SAAE,mBAFT,CAGE,IAAI,CAAE,CAHR,CAIE,KAAK,CAAEG,SAAS,CAACuB,UAJnB,CAKE,IAAI,CAAC,YALP,EApHJ,GAHF,GApEN,GADF,CAyMD,CAEDf,YAAY,CAACgC,YAAb,CAA4B,CAC1B/B,YAAY,CAAE,CAAEG,QAAQ,CAAE,EAAZ,CADY,CAA5B,CASA,cAAeJ,CAAAA,YAAf","sourcesContent":["import 'styled-components/macro';\nimport React from 'react';\nimport { shape } from 'prop-types';\nimport { t, Trans } from '@lingui/macro';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Chip, Divider, Title } from '@patternfly/react-core';\nimport { toTitleCase } from 'util/strings';\nimport CredentialChip from '../CredentialChip';\nimport ChipGroup from '../ChipGroup';\nimport { DetailList, Detail, UserDateDetail } from '../DetailList';\nimport { VariablesDetail } from '../CodeEditor';\nimport PromptProjectDetail from './PromptProjectDetail';\nimport PromptInventorySourceDetail from './PromptInventorySourceDetail';\nimport PromptJobTemplateDetail from './PromptJobTemplateDetail';\nimport PromptWFJobTemplateDetail from './PromptWFJobTemplateDetail';\nimport { VERBOSITY } from '../VerbositySelectField';\n\nconst PromptTitle = styled(Title)`\n  margin-top: var(--pf-global--spacer--xl);\n  --pf-c-title--m-md--FontWeight: 700;\n  grid-column: 1 / -1;\n`;\n\nconst PromptDivider = styled(Divider)`\n  margin-top: var(--pf-global--spacer--lg);\n  margin-bottom: var(--pf-global--spacer--lg);\n`;\n\nconst PromptDetailList = styled(DetailList)`\n  padding: 0px var(--pf-global--spacer--lg);\n`;\n\nfunction formatTimeout(timeout) {\n  if (typeof timeout === 'undefined' || timeout === null) {\n    return null;\n  }\n  const minutes = Math.floor(timeout / 60);\n  const seconds = timeout - Math.floor(timeout / 60) * 60;\n  return (\n    <Trans>\n      {minutes} min {seconds} sec\n    </Trans>\n  );\n}\n\nfunction buildResourceLink(resource) {\n  const link = {\n    job_template: `/templates/job_template/${resource.id}/details`,\n    project: `/projects/${resource.id}/details`,\n    inventory_source: `/inventories/inventory/${resource.inventory}/sources/${resource.id}/details`,\n    workflow_job_template: `/templates/workflow_job_template/${resource.id}/details`,\n  };\n\n  return link[resource?.type] ? (\n    <Link to={link[resource.type]}>{resource.name}</Link>\n  ) : (\n    resource.name\n  );\n}\n\nfunction hasPromptData(launchData) {\n  return (\n    launchData.survey_enabled ||\n    launchData.ask_credential_on_launch ||\n    launchData.ask_diff_mode_on_launch ||\n    launchData.ask_inventory_on_launch ||\n    launchData.ask_job_type_on_launch ||\n    launchData.ask_limit_on_launch ||\n    launchData.ask_scm_branch_on_launch ||\n    launchData.ask_skip_tags_on_launch ||\n    launchData.ask_tags_on_launch ||\n    launchData.ask_variables_on_launch ||\n    launchData.ask_verbosity_on_launch\n  );\n}\n\nfunction omitOverrides(resource, overrides, defaultConfig) {\n  const clonedResource = {\n    ...resource,\n    summary_fields: { ...resource.summary_fields },\n    ...defaultConfig,\n  };\n  Object.keys(overrides).forEach((keyToOmit) => {\n    delete clonedResource[keyToOmit];\n    delete clonedResource?.summary_fields[keyToOmit];\n  });\n  return clonedResource;\n}\n\nfunction PromptDetail({\n  resource,\n  launchConfig = {},\n  overrides = {},\n  workflowNode = false,\n}) {\n  const details = omitOverrides(resource, overrides, launchConfig.defaults);\n  details.type = overrides?.nodeType || details.type;\n  const hasOverrides = Object.keys(overrides).length > 0;\n\n  return (\n    <>\n      <DetailList gutter=\"sm\">\n        <Detail\n          label={t`Name`}\n          dataCy=\"prompt-detail-name\"\n          value={buildResourceLink(resource)}\n        />\n        <Detail\n          label={t`Description`}\n          dataCy=\"prompt-detail-description\"\n          value={details.description}\n        />\n        <Detail\n          label={t`Type`}\n          dataCy=\"prompt-detail-type\"\n          value={toTitleCase(details.unified_job_type || details.type)}\n        />\n        {workflowNode && (\n          <Detail\n            label={t`Convergence`}\n            dataCy=\"prompt-detail-convergence\"\n            value={workflowNode?.all_parents_must_converge ? t`All` : t`Any`}\n          />\n        )}\n        <Detail\n          label={t`Timeout`}\n          dataCy=\"prompt-detail-timeout\"\n          value={formatTimeout(details?.timeout)}\n        />\n        {details?.type === 'project' && (\n          <PromptProjectDetail resource={details} />\n        )}\n        {details?.type === 'inventory_source' && (\n          <PromptInventorySourceDetail resource={details} />\n        )}\n        {details?.type === 'job_template' && (\n          <PromptJobTemplateDetail resource={details} />\n        )}\n        {details?.type === 'workflow_job_template' && (\n          <PromptWFJobTemplateDetail resource={details} />\n        )}\n        {details?.created && (\n          <UserDateDetail\n            label={t`Created`}\n            date={details.created}\n            user={details?.summary_fields?.created_by}\n          />\n        )}\n        {details?.modified && (\n          <UserDateDetail\n            label={t`Last Modified`}\n            date={details?.modified}\n            user={details?.summary_fields?.modified_by}\n          />\n        )}\n        {details?.type === 'system_job_template' && (\n          <VariablesDetail\n            label={t`Variables`}\n            rows={4}\n            value={overrides.extra_vars}\n            name=\"extra_vars\"\n            dataCy=\"prompt-detail-variables\"\n          />\n        )}\n      </DetailList>\n      {details?.type !== 'system_job_template' &&\n        hasPromptData(launchConfig) &&\n        hasOverrides && (\n          <>\n            <PromptTitle headingLevel=\"h2\">{t`Prompted Values`}</PromptTitle>\n            <PromptDivider />\n            <PromptDetailList aria-label={t`Prompt Overrides`}>\n              {launchConfig.ask_job_type_on_launch && (\n                <Detail\n                  label={t`Job Type`}\n                  value={toTitleCase(overrides.job_type)}\n                />\n              )}\n              {launchConfig.ask_credential_on_launch && (\n                <Detail\n                  fullWidth\n                  label={t`Credentials`}\n                  rows={4}\n                  value={\n                    <ChipGroup\n                      numChips={5}\n                      totalChips={overrides.credentials.length}\n                      ouiaId=\"prompt-credential-chips\"\n                    >\n                      {overrides.credentials.map((cred) => (\n                        <CredentialChip\n                          key={cred.id}\n                          credential={cred}\n                          isReadOnly\n                          ouiaId={`credential-${cred.id}-chip`}\n                        />\n                      ))}\n                    </ChipGroup>\n                  }\n                />\n              )}\n              {launchConfig.ask_inventory_on_launch && (\n                <Detail\n                  label={t`Inventory`}\n                  value={overrides.inventory?.name}\n                />\n              )}\n              {launchConfig.ask_scm_branch_on_launch && (\n                <Detail\n                  label={t`Source Control Branch`}\n                  value={overrides.scm_branch}\n                />\n              )}\n              {launchConfig.ask_limit_on_launch && (\n                <Detail label={t`Limit`} value={overrides.limit} />\n              )}\n              {Object.prototype.hasOwnProperty.call(overrides, 'verbosity') &&\n              launchConfig.ask_verbosity_on_launch ? (\n                <Detail\n                  label={t`Verbosity`}\n                  value={VERBOSITY()[overrides.verbosity]}\n                />\n              ) : null}\n              {launchConfig.ask_tags_on_launch && (\n                <Detail\n                  fullWidth\n                  label={t`Job Tags`}\n                  value={\n                    <ChipGroup\n                      numChips={5}\n                      ouiaId=\"prompt-job-tag-chips\"\n                      totalChips={\n                        !overrides.job_tags || overrides.job_tags === ''\n                          ? 0\n                          : overrides.job_tags.split(',').length\n                      }\n                    >\n                      {overrides.job_tags.length > 0 &&\n                        overrides.job_tags.split(',').map((jobTag) => (\n                          <Chip\n                            key={jobTag}\n                            isReadOnly\n                            ouiaId={`job-tag-${jobTag}-chip`}\n                          >\n                            {jobTag}\n                          </Chip>\n                        ))}\n                    </ChipGroup>\n                  }\n                />\n              )}\n              {launchConfig.ask_skip_tags_on_launch && (\n                <Detail\n                  fullWidth\n                  label={t`Skip Tags`}\n                  value={\n                    <ChipGroup\n                      numChips={5}\n                      totalChips={\n                        !overrides.skip_tags || overrides.skip_tags === ''\n                          ? 0\n                          : overrides.skip_tags.split(',').length\n                      }\n                      ouiaId=\"prompt-skip-tag-chips\"\n                    >\n                      {overrides.skip_tags.length > 0 &&\n                        overrides.skip_tags.split(',').map((skipTag) => (\n                          <Chip\n                            key={skipTag}\n                            isReadOnly\n                            ouiaId={`skip-tag-${skipTag}-chip`}\n                          >\n                            {skipTag}\n                          </Chip>\n                        ))}\n                    </ChipGroup>\n                  }\n                />\n              )}\n              {launchConfig.ask_diff_mode_on_launch && (\n                <Detail\n                  label={t`Show Changes`}\n                  value={overrides.diff_mode === true ? t`On` : t`Off`}\n                />\n              )}\n              {(launchConfig.survey_enabled ||\n                launchConfig.ask_variables_on_launch) && (\n                <VariablesDetail\n                  dataCy=\"prompt-detail-variables\"\n                  label={t`Variables`}\n                  rows={4}\n                  value={overrides.extra_vars}\n                  name=\"extra_vars\"\n                />\n              )}\n            </PromptDetailList>\n          </>\n        )}\n    </>\n  );\n}\n\nPromptDetail.defaultProps = {\n  launchConfig: { defaults: {} },\n};\n\nPromptDetail.propTypes = {\n  resource: shape({}).isRequired,\n  launchConfig: shape({}),\n};\n\nexport default PromptDetail;\n"]},"metadata":{},"sourceType":"module"}