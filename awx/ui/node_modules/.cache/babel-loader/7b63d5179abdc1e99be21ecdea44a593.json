{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/NumberInput/number-input';\nimport { css } from '@patternfly/react-styles';\nimport MinusIcon from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport PlusIcon from '@patternfly/react-icons/dist/esm/icons/plus-icon';\nimport { InputGroup } from '../InputGroup';\nimport { Button } from '../Button';\nimport { KEY_CODES } from '../../helpers';\n\nvar defaultKeyDownHandler = function defaultKeyDownHandler(args) {\n  return function (event) {\n    if (KEY_CODES.ARROW_UP === event.keyCode && args.onPlus) {\n      event.preventDefault();\n      args.onPlus(null, args.inputName);\n    }\n\n    if (KEY_CODES.ARROW_DOWN === event.keyCode && args.onMinus) {\n      event.preventDefault();\n      args.onMinus(null, args.inputName);\n    }\n  };\n};\n\nexport var NumberInput = function NumberInput(_a) {\n  var _a$value = _a.value,\n      value = _a$value === void 0 ? 0 : _a$value,\n      className = _a.className,\n      widthChars = _a.widthChars,\n      _a$isDisabled = _a.isDisabled,\n      isDisabled = _a$isDisabled === void 0 ? false : _a$isDisabled,\n      _a$onMinus = _a.onMinus,\n      onMinus = _a$onMinus === void 0 ? function () {} : _a$onMinus,\n      onChange = _a.onChange,\n      onBlur = _a.onBlur,\n      _a$onPlus = _a.onPlus,\n      onPlus = _a$onPlus === void 0 ? function () {} : _a$onPlus,\n      unit = _a.unit,\n      _a$unitPosition = _a.unitPosition,\n      unitPosition = _a$unitPosition === void 0 ? 'after' : _a$unitPosition,\n      min = _a.min,\n      max = _a.max,\n      inputName = _a.inputName,\n      _a$inputAriaLabel = _a.inputAriaLabel,\n      inputAriaLabel = _a$inputAriaLabel === void 0 ? 'Input' : _a$inputAriaLabel,\n      _a$minusBtnAriaLabel = _a.minusBtnAriaLabel,\n      minusBtnAriaLabel = _a$minusBtnAriaLabel === void 0 ? 'Minus' : _a$minusBtnAriaLabel,\n      _a$plusBtnAriaLabel = _a.plusBtnAriaLabel,\n      plusBtnAriaLabel = _a$plusBtnAriaLabel === void 0 ? 'Plus' : _a$plusBtnAriaLabel,\n      inputProps = _a.inputProps,\n      minusBtnProps = _a.minusBtnProps,\n      plusBtnProps = _a.plusBtnProps,\n      props = __rest(_a, [\"value\", \"className\", \"widthChars\", \"isDisabled\", \"onMinus\", \"onChange\", \"onBlur\", \"onPlus\", \"unit\", \"unitPosition\", \"min\", \"max\", \"inputName\", \"inputAriaLabel\", \"minusBtnAriaLabel\", \"plusBtnAriaLabel\", \"inputProps\", \"minusBtnProps\", \"plusBtnProps\"]);\n\n  var numberInputUnit = React.createElement(\"div\", {\n    className: css(styles.numberInputUnit)\n  }, unit);\n  var keyDownHandler = inputProps && inputProps.onKeyDown ? inputProps.onKeyDown : defaultKeyDownHandler({\n    inputName: inputName,\n    onMinus: onMinus,\n    onPlus: onPlus\n  });\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.numberInput, className)\n  }, widthChars && {\n    style: Object.assign({\n      '--pf-c-number-input--c-form-control--width-chars': widthChars\n    }, props.style)\n  }, props), unit && unitPosition === 'before' && numberInputUnit, React.createElement(InputGroup, null, React.createElement(Button, Object.assign({\n    variant: \"control\",\n    \"aria-label\": minusBtnAriaLabel,\n    isDisabled: isDisabled || value <= min,\n    onClick: function onClick(evt) {\n      return onMinus(evt, inputName);\n    }\n  }, minusBtnProps), React.createElement(\"span\", {\n    className: css(styles.numberInputIcon)\n  }, React.createElement(MinusIcon, {\n    \"aria-hidden\": \"true\"\n  }))), React.createElement(\"input\", Object.assign({\n    className: css(styles.formControl),\n    type: \"number\",\n    value: value,\n    name: inputName,\n    \"aria-label\": inputAriaLabel\n  }, isDisabled && {\n    disabled: isDisabled\n  }, onChange && {\n    onChange: onChange\n  }, onBlur && {\n    onBlur: onBlur\n  }, !onChange && {\n    readOnly: true\n  }, inputProps, {\n    onKeyDown: keyDownHandler\n  })), React.createElement(Button, Object.assign({\n    variant: \"control\",\n    \"aria-label\": plusBtnAriaLabel,\n    isDisabled: isDisabled || value >= max,\n    onClick: function onClick(evt) {\n      return onPlus(evt, inputName);\n    }\n  }, plusBtnProps), React.createElement(\"span\", {\n    className: css(styles.numberInputIcon)\n  }, React.createElement(PlusIcon, {\n    \"aria-hidden\": \"true\"\n  })))), unit && unitPosition === 'after' && numberInputUnit);\n};\nNumberInput.displayName = 'NumberInput';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/NumberInput/NumberInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/NumberInput/number-input';\nimport { css } from '@patternfly/react-styles';\nimport MinusIcon from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport PlusIcon from '@patternfly/react-icons/dist/esm/icons/plus-icon';\nimport { InputGroup } from '../InputGroup';\nimport { Button, ButtonProps } from '../Button';\nimport { KEY_CODES } from '../../helpers';\n\nexport interface NumberInputProps extends React.HTMLProps<HTMLDivElement> {\n  /** Value of the number input */\n  value?: number;\n  /** Additional classes added to the number input */\n  className?: string;\n  /** Sets the width of the number input to a number of characters */\n  widthChars?: number;\n  /** Indicates the whole number input should be disabled */\n  isDisabled?: boolean;\n  /** Callback for the minus button */\n  onMinus?: (event: React.MouseEvent, name?: string) => void;\n  /** Callback for the text input changing */\n  onChange?: (event: React.FormEvent<HTMLInputElement>) => void;\n  /** Callback function when text input is blurred (focus leaves) */\n  onBlur?: (event?: any) => void;\n  /** Callback for the plus button */\n  onPlus?: (event: React.MouseEvent, name?: string) => void;\n  /** Adds the given unit to the number input */\n  unit?: React.ReactNode;\n  /** Position of the number input unit in relation to the number input */\n  unitPosition?: 'before' | 'after';\n  /** Minimum value of the number input, disabling the minus button when reached */\n  min?: number;\n  /** Maximum value of the number input, disabling the plus button when reached */\n  max?: number;\n  /** Name of the input */\n  inputName?: string;\n  /** Aria label of the input */\n  inputAriaLabel?: string;\n  /** Aria label of the minus button */\n  minusBtnAriaLabel?: string;\n  /** Aria label of the plus button */\n  plusBtnAriaLabel?: string;\n  /** Additional properties added to the text input */\n  inputProps?: any;\n  /** Additional properties added to the minus button */\n  minusBtnProps?: ButtonProps;\n  /** Additional properties added to the plus button */\n  plusBtnProps?: ButtonProps;\n}\n\ntype DefaultKeyDownHandlerArgs = Pick<NumberInputProps, 'inputName' | 'onMinus' | 'onPlus'>;\n\nconst defaultKeyDownHandler = (args: DefaultKeyDownHandlerArgs) => (event: React.KeyboardEvent<HTMLInputElement>) => {\n  if (KEY_CODES.ARROW_UP === event.keyCode && args.onPlus) {\n    event.preventDefault();\n    args.onPlus(null, args.inputName);\n  }\n  if (KEY_CODES.ARROW_DOWN === event.keyCode && args.onMinus) {\n    event.preventDefault();\n    args.onMinus(null, args.inputName);\n  }\n};\n\nexport const NumberInput: React.FunctionComponent<NumberInputProps> = ({\n  value = 0,\n  className,\n  widthChars,\n  isDisabled = false,\n  onMinus = () => {},\n  onChange,\n  onBlur,\n  onPlus = () => {},\n  unit,\n  unitPosition = 'after',\n  min,\n  max,\n  inputName,\n  inputAriaLabel = 'Input',\n  minusBtnAriaLabel = 'Minus',\n  plusBtnAriaLabel = 'Plus',\n  inputProps,\n  minusBtnProps,\n  plusBtnProps,\n  ...props\n}: NumberInputProps) => {\n  const numberInputUnit = <div className={css(styles.numberInputUnit)}>{unit}</div>;\n  const keyDownHandler =\n    inputProps && inputProps.onKeyDown ? inputProps.onKeyDown : defaultKeyDownHandler({ inputName, onMinus, onPlus });\n\n  return (\n    <div\n      className={css(styles.numberInput, className)}\n      {...(widthChars && {\n        style: {\n          '--pf-c-number-input--c-form-control--width-chars': widthChars,\n          ...props.style\n        } as React.CSSProperties\n      })}\n      {...props}\n    >\n      {unit && unitPosition === 'before' && numberInputUnit}\n      <InputGroup>\n        <Button\n          variant=\"control\"\n          aria-label={minusBtnAriaLabel}\n          isDisabled={isDisabled || value <= min}\n          onClick={evt => onMinus(evt, inputName)}\n          {...minusBtnProps}\n        >\n          <span className={css(styles.numberInputIcon)}>\n            <MinusIcon aria-hidden=\"true\" />\n          </span>\n        </Button>\n        <input\n          className={css(styles.formControl)}\n          type=\"number\"\n          value={value}\n          name={inputName}\n          aria-label={inputAriaLabel}\n          {...(isDisabled && { disabled: isDisabled })}\n          {...(onChange && { onChange })}\n          {...(onBlur && { onBlur })}\n          {...(!onChange && { readOnly: true })}\n          {...inputProps}\n          onKeyDown={keyDownHandler}\n        />\n        <Button\n          variant=\"control\"\n          aria-label={plusBtnAriaLabel}\n          isDisabled={isDisabled || value >= max}\n          onClick={evt => onPlus(evt, inputName)}\n          {...plusBtnProps}\n        >\n          <span className={css(styles.numberInputIcon)}>\n            <PlusIcon aria-hidden=\"true\" />\n          </span>\n        </Button>\n      </InputGroup>\n      {unit && unitPosition === 'after' && numberInputUnit}\n    </div>\n  );\n};\nNumberInput.displayName = 'NumberInput';\n"]},"metadata":{},"sourceType":"module"}