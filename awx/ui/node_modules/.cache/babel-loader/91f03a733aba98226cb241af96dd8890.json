{"ast":null,"code":"import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { TableText } from '../../TableText';\nexport var compoundExpand = function compoundExpand(value, _ref) {\n  var rowIndex = _ref.rowIndex,\n      columnIndex = _ref.columnIndex,\n      rowData = _ref.rowData,\n      column = _ref.column,\n      property = _ref.property;\n\n  if (!value) {\n    return null;\n  }\n\n  var title = value.title,\n      props = value.props;\n  var onExpand = column.extraParams.onExpand;\n  var extraData = {\n    rowIndex: rowIndex,\n    columnIndex: columnIndex,\n    column: column,\n    property: property\n  };\n  /**\n   * @param {React.MouseEvent} event - Mouse event\n   */\n\n  function onToggle(event) {\n    // tslint:disable-next-line:no-unused-expression\n    onExpand && onExpand(event, rowIndex, columnIndex, props.isOpen, rowData, extraData);\n  }\n\n  return {\n    className: css(styles.tableCompoundExpansionToggle, props.isOpen && styles.modifiers.expanded),\n    children: props.isOpen !== undefined && React.createElement(\"button\", {\n      type: \"button\",\n      className: css(styles.tableButton),\n      onClick: onToggle,\n      \"aria-expanded\": props.isOpen,\n      \"aria-controls\": props.ariaControls\n    }, React.createElement(TableText, null, title))\n  };\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/Table/utils/decorators/compoundExpand.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,qDAAnB;AAEA,SAAS,SAAT,QAA0B,iBAA1B;AAEA,OAAO,IAAM,cAAc,GAAe,SAA7B,cAA6B,CACxC,KADwC,QAGtC;AAAA,MADA,QACA,QADA,QACA;AAAA,MADU,WACV,QADU,WACV;AAAA,MADuB,OACvB,QADuB,OACvB;AAAA,MADgC,MAChC,QADgC,MAChC;AAAA,MADwC,QACxC,QADwC,QACxC;;AACF,MAAI,CAAC,KAAL,EAAY;AACV,WAAO,IAAP;AACD;;AACD,MAAQ,KAAR,GAAyB,KAAzB,CAAQ,KAAR;AAAA,MAAe,KAAf,GAAyB,KAAzB,CAAe,KAAf;AACA,MACiB,QADjB,GAEI,MAFJ,CACE,WADF,CACiB,QADjB;AAGA,MAAM,SAAS,GAAG;AAChB,IAAA,QAAQ,EAAR,QADgB;AAEhB,IAAA,WAAW,EAAX,WAFgB;AAGhB,IAAA,MAAM,EAAN,MAHgB;AAIhB,IAAA,QAAQ,EAAR;AAJgB,GAAlB;AAOA;;AAEG;;AACH,WAAS,QAAT,CAAkB,KAAlB,EAAyC;AACvC;AACA,IAAA,QAAQ,IAAI,QAAQ,CAAC,KAAD,EAAQ,QAAR,EAAkB,WAAlB,EAA+B,KAAK,CAAC,MAArC,EAA6C,OAA7C,EAAsD,SAAtD,CAApB;AACD;;AACD,SAAO;AACL,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,4BAAR,EAAsC,KAAK,CAAC,MAAN,IAAgB,MAAM,CAAC,SAAP,CAAiB,QAAvE,CADT;AAEL,IAAA,QAAQ,EAAE,KAAK,CAAC,MAAN,KAAiB,SAAjB,IACR,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,WAAR,CAFhB;AAGE,MAAA,OAAO,EAAE,QAHX;AAGmB,uBACF,KAAK,CAAC,MAJvB;AAI6B,uBACZ,KAAK,CAAC;AALvB,KAAA,EAOE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,IAAV,EAAY,KAAZ,CAPF;AAHG,GAAP;AAcD,CAvCM","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { IExtra, IFormatterValueType, ITransform } from '../../TableTypes';\nimport { TableText } from '../../TableText';\n\nexport const compoundExpand: ITransform = (\n  value: IFormatterValueType,\n  { rowIndex, columnIndex, rowData, column, property }: IExtra\n) => {\n  if (!value) {\n    return null;\n  }\n  const { title, props } = value;\n  const {\n    extraParams: { onExpand }\n  } = column;\n  const extraData = {\n    rowIndex,\n    columnIndex,\n    column,\n    property\n  };\n\n  /**\n   * @param {React.MouseEvent} event - Mouse event\n   */\n  function onToggle(event: React.MouseEvent) {\n    // tslint:disable-next-line:no-unused-expression\n    onExpand && onExpand(event, rowIndex, columnIndex, props.isOpen, rowData, extraData);\n  }\n  return {\n    className: css(styles.tableCompoundExpansionToggle, props.isOpen && styles.modifiers.expanded),\n    children: props.isOpen !== undefined && (\n      <button\n        type=\"button\"\n        className={css(styles.tableButton)}\n        onClick={onToggle}\n        aria-expanded={props.isOpen}\n        aria-controls={props.ariaControls}\n      >\n        <TableText>{title}</TableText>\n      </button>\n    )\n  };\n};\n"]},"metadata":{},"sourceType":"module"}