{"ast":null,"code":"import _defineProperty from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import React,{useState,useCallback}from'react';import{Route,Switch,useRouteMatch}from'react-router-dom';import ScreenHeader from'components/ScreenHeader/ScreenHeader';import PersistentFilters from'components/PersistentFilters';import NotificationTemplateList from'./NotificationTemplateList';import NotificationTemplateAdd from'./NotificationTemplateAdd';import NotificationTemplate from'./NotificationTemplate';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function NotificationTemplates(){var match=useRouteMatch();var _useState=useState({'/notification_templates':/*i18n*/i18n._(\"Notification Templates\"),'/notification_templates/add':/*i18n*/i18n._(\"Create New Notification Template\")}),_useState2=_slicedToArray(_useState,2),breadcrumbConfig=_useState2[0],setBreadcrumbConfig=_useState2[1];var updateBreadcrumbConfig=useCallback(function(notification){var _setBreadcrumbConfig;var id=notification.id;setBreadcrumbConfig((_setBreadcrumbConfig={'/notification_templates':/*i18n*/i18n._(\"Notification Templates\"),'/notification_templates/add':/*i18n*/i18n._(\"Create New Notification Template\")},_defineProperty(_setBreadcrumbConfig,\"/notification_templates/\".concat(id),notification.name),_defineProperty(_setBreadcrumbConfig,\"/notification_templates/\".concat(id,\"/edit\"),/*i18n*/i18n._(\"Edit Details\")),_defineProperty(_setBreadcrumbConfig,\"/notification_templates/\".concat(id,\"/details\"),/*i18n*/i18n._(\"Details\")),_setBreadcrumbConfig));},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ScreenHeader,{streamType:\"notification_template\",breadcrumbConfig:breadcrumbConfig}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"\".concat(match.url,\"/add\"),children:/*#__PURE__*/_jsx(NotificationTemplateAdd,{})}),/*#__PURE__*/_jsx(Route,{path:\"\".concat(match.url,\"/:id\"),children:/*#__PURE__*/_jsx(NotificationTemplate,{setBreadcrumb:updateBreadcrumbConfig})}),/*#__PURE__*/_jsx(Route,{path:\"\".concat(match.url),children:/*#__PURE__*/_jsx(PersistentFilters,{pageKey:\"notificationTemplates\",children:/*#__PURE__*/_jsx(NotificationTemplateList,{})})})]})]});}export default NotificationTemplates;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/NotificationTemplate/NotificationTemplates.js"],"names":["React","useState","useCallback","Route","Switch","useRouteMatch","ScreenHeader","PersistentFilters","NotificationTemplateList","NotificationTemplateAdd","NotificationTemplate","NotificationTemplates","match","breadcrumbConfig","setBreadcrumbConfig","updateBreadcrumbConfig","notification","id","name","url"],"mappings":"+OAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,WAA1B,KAA6C,OAA7C,CACA,OAASC,KAAT,CAAgBC,MAAhB,CAAwBC,aAAxB,KAA6C,kBAA7C,CAGA,MAAOC,CAAAA,YAAP,KAAyB,sCAAzB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,8BAA9B,CACA,MAAOC,CAAAA,wBAAP,KAAqC,4BAArC,CACA,MAAOC,CAAAA,uBAAP,KAAoC,2BAApC,CACA,MAAOC,CAAAA,oBAAP,KAAiC,wBAAjC,C,6IAEA,QAASC,CAAAA,qBAAT,EAAiC,CAC/B,GAAMC,CAAAA,KAAK,CAAGP,aAAa,EAA3B,CACA,cAAgDJ,QAAQ,CAAC,CACvD,kCAA2B,gCAD4B,CAEvD,sCAA+B,0CAFwB,CAAD,CAAxD,wCAAOY,gBAAP,eAAyBC,mBAAzB,eAKA,GAAMC,CAAAA,sBAAsB,CAAGb,WAAW,CAAC,SAACc,YAAD,CAAkB,0BAC3D,GAAQC,CAAAA,EAAR,CAAeD,YAAf,CAAQC,EAAR,CACAH,mBAAmB,wBACjB,kCAA2B,gCADV,CAEjB,sCAA+B,0CAFd,yEAGWG,EAHX,EAGkBD,YAAY,CAACE,IAH/B,yEAIWD,EAJX,kBAIuB,sBAJvB,yEAKWA,EALX,qBAK0B,iBAL1B,wBAAnB,CAOD,CATyC,CASvC,EATuC,CAA1C,CAWA,mBACE,wCACE,KAAC,YAAD,EACE,UAAU,CAAC,uBADb,CAEE,gBAAgB,CAAEJ,gBAFpB,EADF,cAKE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,WAAKD,KAAK,CAACO,GAAX,QAAX,uBACE,KAAC,uBAAD,IADF,EADF,cAIE,KAAC,KAAD,EAAO,IAAI,WAAKP,KAAK,CAACO,GAAX,QAAX,uBACE,KAAC,oBAAD,EAAsB,aAAa,CAAEJ,sBAArC,EADF,EAJF,cAOE,KAAC,KAAD,EAAO,IAAI,WAAKH,KAAK,CAACO,GAAX,CAAX,uBACE,KAAC,iBAAD,EAAmB,OAAO,CAAC,uBAA3B,uBACE,KAAC,wBAAD,IADF,EADF,EAPF,GALF,GADF,CAqBD,CAED,cAAeR,CAAAA,qBAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\n\nimport { t } from '@lingui/macro';\nimport ScreenHeader from 'components/ScreenHeader/ScreenHeader';\nimport PersistentFilters from 'components/PersistentFilters';\nimport NotificationTemplateList from './NotificationTemplateList';\nimport NotificationTemplateAdd from './NotificationTemplateAdd';\nimport NotificationTemplate from './NotificationTemplate';\n\nfunction NotificationTemplates() {\n  const match = useRouteMatch();\n  const [breadcrumbConfig, setBreadcrumbConfig] = useState({\n    '/notification_templates': t`Notification Templates`,\n    '/notification_templates/add': t`Create New Notification Template`,\n  });\n\n  const updateBreadcrumbConfig = useCallback((notification) => {\n    const { id } = notification;\n    setBreadcrumbConfig({\n      '/notification_templates': t`Notification Templates`,\n      '/notification_templates/add': t`Create New Notification Template`,\n      [`/notification_templates/${id}`]: notification.name,\n      [`/notification_templates/${id}/edit`]: t`Edit Details`,\n      [`/notification_templates/${id}/details`]: t`Details`,\n    });\n  }, []);\n\n  return (\n    <>\n      <ScreenHeader\n        streamType=\"notification_template\"\n        breadcrumbConfig={breadcrumbConfig}\n      />\n      <Switch>\n        <Route path={`${match.url}/add`}>\n          <NotificationTemplateAdd />\n        </Route>\n        <Route path={`${match.url}/:id`}>\n          <NotificationTemplate setBreadcrumb={updateBreadcrumbConfig} />\n        </Route>\n        <Route path={`${match.url}`}>\n          <PersistentFilters pageKey=\"notificationTemplates\">\n            <NotificationTemplateList />\n          </PersistentFilters>\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default NotificationTemplates;\n"]},"metadata":{},"sourceType":"module"}