{"ast":null,"code":"import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import Base from'../Base';var Root=/*#__PURE__*/function(_Base){_inherits(Root,_Base);var _super=_createSuper(Root);function Root(http){var _this;_classCallCheck(this,Root);_this=_super.call(this,http);_this.baseUrl='api/';_this.redirectURL='/api/v2/config/';return _this;}_createClass(Root,[{key:\"login\",value:function(){var _login=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(username,password){var redirect,loginUrl,un,pw,next,data,headers,response,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:redirect=_args.length>2&&_args[2]!==undefined?_args[2]:this.redirectURL;loginUrl=\"\".concat(this.baseUrl,\"login/\");un=encodeURIComponent(username);pw=encodeURIComponent(password);next=encodeURIComponent(redirect);data=\"username=\".concat(un,\"&password=\").concat(pw,\"&next=\").concat(next);headers={'Content-Type':'application/x-www-form-urlencoded'};_context.next=9;return this.http.get(loginUrl,{headers:headers});case 9:_context.next=11;return this.http.post(loginUrl,data,{headers:headers});case 11:response=_context.sent;return _context.abrupt(\"return\",response);case 13:case\"end\":return _context.stop();}}},_callee,this);}));function login(_x,_x2){return _login.apply(this,arguments);}return login;}()},{key:\"logout\",value:function logout(){return this.http.get(\"\".concat(this.baseUrl,\"logout/\"));}},{key:\"readAssetVariables\",value:function readAssetVariables(){// TODO: There's better ways of doing this. Build tools, scripts,\n// automation etc. should relocate this variable file to an importable\n// location in src prior to building. That said, a raw http call\n// works for now.\nreturn this.http.get('static/media/default.strings.json');}}]);return Root;}(Base);export default Root;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/api/models/Root.js"],"names":["Base","Root","http","baseUrl","redirectURL","username","password","redirect","loginUrl","un","encodeURIComponent","pw","next","data","headers","get","post","response"],"mappings":"6lBAAA,MAAOA,CAAAA,IAAP,KAAiB,SAAjB,C,GAEMC,CAAAA,I,kFACJ,cAAYC,IAAZ,CAAkB,sCAChB,uBAAMA,IAAN,EACA,MAAKC,OAAL,CAAe,MAAf,CACA,MAAKC,WAAL,CAAmB,iBAAnB,CAHgB,aAIjB,C,oHAED,iBAAYC,QAAZ,CAAsBC,QAAtB,yLAAgCC,QAAhC,+CAA2C,KAAKH,WAAhD,CACQI,QADR,WACsB,KAAKL,OAD3B,WAEQM,EAFR,CAEaC,kBAAkB,CAACL,QAAD,CAF/B,CAGQM,EAHR,CAGaD,kBAAkB,CAACJ,QAAD,CAH/B,CAIQM,IAJR,CAIeF,kBAAkB,CAACH,QAAD,CAJjC,CAMQM,IANR,oBAM2BJ,EAN3B,sBAM0CE,EAN1C,kBAMqDC,IANrD,EAOQE,OAPR,CAOkB,CAAE,eAAgB,mCAAlB,CAPlB,uBASQ,MAAKZ,IAAL,CAAUa,GAAV,CAAcP,QAAd,CAAwB,CAAEM,OAAO,CAAPA,OAAF,CAAxB,CATR,+BAUyB,MAAKZ,IAAL,CAAUc,IAAV,CAAeR,QAAf,CAAyBK,IAAzB,CAA+B,CAAEC,OAAO,CAAPA,OAAF,CAA/B,CAVzB,SAUQG,QAVR,+CAYSA,QAZT,8D,qGAeA,iBAAS,CACP,MAAO,MAAKf,IAAL,CAAUa,GAAV,WAAiB,KAAKZ,OAAtB,YAAP,CACD,C,kCAED,6BAAqB,CACnB;AACA;AACA;AACA;AACA,MAAO,MAAKD,IAAL,CAAUa,GAAV,CAAc,mCAAd,CAAP,CACD,C,kBAhCgBf,I,EAmCnB,cAAeC,CAAAA,IAAf","sourcesContent":["import Base from '../Base';\n\nclass Root extends Base {\n  constructor(http) {\n    super(http);\n    this.baseUrl = 'api/';\n    this.redirectURL = '/api/v2/config/';\n  }\n\n  async login(username, password, redirect = this.redirectURL) {\n    const loginUrl = `${this.baseUrl}login/`;\n    const un = encodeURIComponent(username);\n    const pw = encodeURIComponent(password);\n    const next = encodeURIComponent(redirect);\n\n    const data = `username=${un}&password=${pw}&next=${next}`;\n    const headers = { 'Content-Type': 'application/x-www-form-urlencoded' };\n\n    await this.http.get(loginUrl, { headers });\n    const response = await this.http.post(loginUrl, data, { headers });\n\n    return response;\n  }\n\n  logout() {\n    return this.http.get(`${this.baseUrl}logout/`);\n  }\n\n  readAssetVariables() {\n    // TODO: There's better ways of doing this. Build tools, scripts,\n    // automation etc. should relocate this variable file to an importable\n    // location in src prior to building. That said, a raw http call\n    // works for now.\n    return this.http.get('static/media/default.strings.json');\n  }\n}\n\nexport default Root;\n"]},"metadata":{},"sourceType":"module"}