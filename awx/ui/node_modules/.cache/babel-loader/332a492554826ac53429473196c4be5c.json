{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport { css } from '@patternfly/react-styles';\nimport { getUniqueId } from '../../helpers/util';\nexport var NavGroup = function NavGroup(_a) {\n  var title = _a.title,\n      _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      _a$id = _a.id,\n      id = _a$id === void 0 ? getUniqueId() : _a$id,\n      props = __rest(_a, [\"title\", \"children\", \"className\", \"id\"]);\n\n  if (!title && !props['aria-label']) {\n    // eslint-disable-next-line no-console\n    console.warn(\"For accessibility reasons an aria-label should be specified on nav groups if a title isn't\");\n  }\n\n  var labelledBy = title ? id : undefined;\n  return React.createElement(\"section\", Object.assign({\n    className: css(styles.navSection, className),\n    \"aria-labelledby\": labelledBy\n  }, props), title && React.createElement(\"h2\", {\n    className: css(styles.navSectionTitle),\n    id: id\n  }, title), React.createElement(\"ul\", {\n    className: css(styles.navList, className)\n  }, children));\n};\nNavGroup.displayName = 'NavGroup';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Nav/NavGroup.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,iDAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,SAAS,WAAT,QAA4B,oBAA5B;AAaA,OAAO,IAAM,QAAQ,GAA2C,SAAnD,QAAmD,CAAC,EAAD,EAM5C;AAN6C,MAC/D,KAD+D,GAI7C,EAJ6C,CAC/D,KAD+D;AAAA,oBAI7C,EAJ6C,CAE/D,QAF+D;AAAA,MAE/D,QAF+D,4BAEpD,IAFoD;AAAA,qBAI7C,EAJ6C,CAG/D,SAH+D;AAAA,MAG/D,SAH+D,6BAGnD,EAHmD;AAAA,cAI7C,EAJ6C,CAI/D,EAJ+D;AAAA,MAI/D,EAJ+D,sBAI1D,WAAW,EAJ+C;AAAA,MAK5D,KAL4D,GAKvD,MAAA,CAAA,EAAA,EALuD,CAAA,OAAA,EAAA,UAAA,EAAA,WAAA,EAAA,IAAA,CAKvD,CALuD;;AAO/D,MAAI,CAAC,KAAD,IAAU,CAAC,KAAK,CAAC,YAAD,CAApB,EAAoC;AAClC;AACA,IAAA,OAAO,CAAC,IAAR,CAAa,4FAAb;AACD;;AAED,MAAM,UAAU,GAAG,KAAK,GAAG,EAAH,GAAQ,SAAhC;AAEA,SACE,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AAAS,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,UAAR,EAAoB,SAApB,CAAvB;AAAqD,uBAAmB;AAAxE,GAAA,EAAwF,KAAxF,CAAA,EACG,KAAK,IACJ,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAI,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,eAAR,CAAlB;AAA4C,IAAA,EAAE,EAAE;AAAhD,GAAA,EACG,KADH,CAFJ,EAME,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAI,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,OAAR,EAAiB,SAAjB;AAAlB,GAAA,EAAgD,QAAhD,CANF,CADF;AAUD,CAxBM;AAyBP,QAAQ,CAAC,WAAT,GAAuB,UAAvB","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport { css } from '@patternfly/react-styles';\nimport { getUniqueId } from '../../helpers/util';\n\nexport interface NavGroupProps extends React.HTMLProps<HTMLDivElement> {\n  /** Title shown for the group */\n  title?: string;\n  /** Anything that can be rendered inside of the group */\n  children?: React.ReactNode;\n  /** Additional classes added to the container */\n  className?: string;\n  /** Identifier to use for the section aria label */\n  id?: string;\n}\n\nexport const NavGroup: React.FunctionComponent<NavGroupProps> = ({\n  title,\n  children = null,\n  className = '',\n  id = getUniqueId(),\n  ...props\n}: NavGroupProps) => {\n  if (!title && !props['aria-label']) {\n    // eslint-disable-next-line no-console\n    console.warn(\"For accessibility reasons an aria-label should be specified on nav groups if a title isn't\");\n  }\n\n  const labelledBy = title ? id : undefined;\n\n  return (\n    <section className={css(styles.navSection, className)} aria-labelledby={labelledBy} {...props}>\n      {title && (\n        <h2 className={css(styles.navSectionTitle)} id={id}>\n          {title}\n        </h2>\n      )}\n      <ul className={css(styles.navList, className)}>{children}</ul>\n    </section>\n  );\n};\nNavGroup.displayName = 'NavGroup';\n"]},"metadata":{},"sourceType":"module"}