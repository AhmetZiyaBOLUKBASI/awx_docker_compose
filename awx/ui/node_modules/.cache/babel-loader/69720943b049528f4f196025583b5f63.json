{"ast":null,"code":"import _defineProperty from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import React,{useState,useCallback}from'react';import{Route,Switch}from'react-router-dom';import PersistentFilters from'components/PersistentFilters';import ScreenHeader from'components/ScreenHeader';import CredentialTypeAdd from'./CredentialTypeAdd';import CredentialTypeList from'./CredentialTypeList';import CredentialType from'./CredentialType';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function CredentialTypes(){var _useState=useState({'/credential_types':/*i18n*/i18n._(\"Credential Types\"),'/credential_types/add':/*i18n*/i18n._(\"Create new credential type\")}),_useState2=_slicedToArray(_useState,2),breadcrumbConfig=_useState2[0],setBreadcrumbConfig=_useState2[1];var buildBreadcrumbConfig=useCallback(function(credentialTypes){var _setBreadcrumbConfig;if(!credentialTypes){return;}setBreadcrumbConfig((_setBreadcrumbConfig={'/credential_types':/*i18n*/i18n._(\"Credential Types\"),'/credential_types/add':/*i18n*/i18n._(\"Create new credential Type\")},_defineProperty(_setBreadcrumbConfig,\"/credential_types/\".concat(credentialTypes.id),\"\".concat(credentialTypes.name)),_defineProperty(_setBreadcrumbConfig,\"/credential_types/\".concat(credentialTypes.id,\"/edit\"),/*i18n*/i18n._(\"Edit details\")),_defineProperty(_setBreadcrumbConfig,\"/credential_types/\".concat(credentialTypes.id,\"/details\"),/*i18n*/i18n._(\"Details\")),_setBreadcrumbConfig));},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ScreenHeader,{streamType:\"credential_type\",breadcrumbConfig:breadcrumbConfig}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/credential_types/add\",children:/*#__PURE__*/_jsx(CredentialTypeAdd,{})}),/*#__PURE__*/_jsx(Route,{path:\"/credential_types/:id\",children:/*#__PURE__*/_jsx(CredentialType,{setBreadcrumb:buildBreadcrumbConfig})}),/*#__PURE__*/_jsx(Route,{path:\"/credential_types\",children:/*#__PURE__*/_jsx(PersistentFilters,{pageKey:\"credentialTypes\",children:/*#__PURE__*/_jsx(CredentialTypeList,{})})})]})]});}export default CredentialTypes;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/CredentialType/CredentialTypes.js"],"names":["React","useState","useCallback","Route","Switch","PersistentFilters","ScreenHeader","CredentialTypeAdd","CredentialTypeList","CredentialType","CredentialTypes","breadcrumbConfig","setBreadcrumbConfig","buildBreadcrumbConfig","credentialTypes","id","name"],"mappings":"+OAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,WAA1B,KAA6C,OAA7C,CAGA,OAASC,KAAT,CAAgBC,MAAhB,KAA8B,kBAA9B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,8BAA9B,CACA,MAAOC,CAAAA,YAAP,KAAyB,yBAAzB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,sBAA/B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,C,6IAEA,QAASC,CAAAA,eAAT,EAA2B,CACzB,cAAgDT,QAAQ,CAAC,CACvD,4BAAqB,0BADkC,CAEvD,gCAAyB,oCAF8B,CAAD,CAAxD,wCAAOU,gBAAP,eAAyBC,mBAAzB,eAKA,GAAMC,CAAAA,qBAAqB,CAAGX,WAAW,CAAC,SAACY,eAAD,CAAqB,0BAC7D,GAAI,CAACA,eAAL,CAAsB,CACpB,OACD,CACDF,mBAAmB,wBACjB,4BAAqB,0BADJ,CAEjB,gCAAyB,oCAFR,mEAGKE,eAAe,CAACC,EAHrB,YAG+BD,eAAe,CAACE,IAH/C,oEAIKF,eAAe,CAACC,EAJrB,kBAIiC,sBAJjC,mEAKKD,eAAe,CAACC,EALrB,qBAKoC,iBALpC,wBAAnB,CAOD,CAXwC,CAWtC,EAXsC,CAAzC,CAYA,mBACE,wCACE,KAAC,YAAD,EACE,UAAU,CAAC,iBADb,CAEE,gBAAgB,CAAEJ,gBAFpB,EADF,cAKE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,CAAC,uBAAZ,uBACE,KAAC,iBAAD,IADF,EADF,cAIE,KAAC,KAAD,EAAO,IAAI,CAAC,uBAAZ,uBACE,KAAC,cAAD,EAAgB,aAAa,CAAEE,qBAA/B,EADF,EAJF,cAOE,KAAC,KAAD,EAAO,IAAI,CAAC,mBAAZ,uBACE,KAAC,iBAAD,EAAmB,OAAO,CAAC,iBAA3B,uBACE,KAAC,kBAAD,IADF,EADF,EAPF,GALF,GADF,CAqBD,CAED,cAAeH,CAAAA,eAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\n\nimport { t } from '@lingui/macro';\nimport { Route, Switch } from 'react-router-dom';\nimport PersistentFilters from 'components/PersistentFilters';\nimport ScreenHeader from 'components/ScreenHeader';\nimport CredentialTypeAdd from './CredentialTypeAdd';\nimport CredentialTypeList from './CredentialTypeList';\nimport CredentialType from './CredentialType';\n\nfunction CredentialTypes() {\n  const [breadcrumbConfig, setBreadcrumbConfig] = useState({\n    '/credential_types': t`Credential Types`,\n    '/credential_types/add': t`Create new credential type`,\n  });\n\n  const buildBreadcrumbConfig = useCallback((credentialTypes) => {\n    if (!credentialTypes) {\n      return;\n    }\n    setBreadcrumbConfig({\n      '/credential_types': t`Credential Types`,\n      '/credential_types/add': t`Create new credential Type`,\n      [`/credential_types/${credentialTypes.id}`]: `${credentialTypes.name}`,\n      [`/credential_types/${credentialTypes.id}/edit`]: t`Edit details`,\n      [`/credential_types/${credentialTypes.id}/details`]: t`Details`,\n    });\n  }, []);\n  return (\n    <>\n      <ScreenHeader\n        streamType=\"credential_type\"\n        breadcrumbConfig={breadcrumbConfig}\n      />\n      <Switch>\n        <Route path=\"/credential_types/add\">\n          <CredentialTypeAdd />\n        </Route>\n        <Route path=\"/credential_types/:id\">\n          <CredentialType setBreadcrumb={buildBreadcrumbConfig} />\n        </Route>\n        <Route path=\"/credential_types\">\n          <PersistentFilters pageKey=\"credentialTypes\">\n            <CredentialTypeList />\n          </PersistentFilters>\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default CredentialTypes;\n"]},"metadata":{},"sourceType":"module"}