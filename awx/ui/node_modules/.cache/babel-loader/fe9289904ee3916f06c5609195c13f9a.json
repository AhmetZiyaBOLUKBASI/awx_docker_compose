{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"show\"];import{i18n}from\"@lingui/core\";import React,{useState}from'react';import{Select,SelectOption,SelectVariant}from'@patternfly/react-core';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Option(_ref){var show=_ref.show,props=_objectWithoutProperties(_ref,_excluded);if(!show){return null;}return/*#__PURE__*/_jsx(SelectOption,_objectSpread({},props));}Option.defaultProps={show:true};function LookupTypeInput(_ref2){var value=_ref2.value,type=_ref2.type,setValue=_ref2.setValue,maxSelectHeight=_ref2.maxSelectHeight;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];return/*#__PURE__*/_jsxs(Select,{ouiaId:\"set-lookup-typeahead\",\"aria-label\":/*i18n*/i18n._(\"Lookup select\"),className:\"lookupSelect\",variant:SelectVariant.typeahead,typeAheadAriaLabel:/*i18n*/i18n._(\"Lookup typeahead\"),onToggle:setIsOpen,onSelect:function onSelect(event,selection){return setValue(selection);},onClear:function onClear(){return setValue(null);},selections:value,isOpen:isOpen,placeholderText:/*i18n*/i18n._(\"Lookup type\"),maxHeight:maxSelectHeight,noResultsFoundText:/*i18n*/i18n._(\"No results found\"),children:[/*#__PURE__*/_jsx(Option,{id:\"exact-option-select\",value:\"exact\",description:/*i18n*/i18n._(\"Exact match (default lookup if not specified).\")},\"exact\"),/*#__PURE__*/_jsx(Option,{id:\"iexact-option-select\",value:\"iexact\",description:/*i18n*/i18n._(\"Case-insensitive version of exact.\"),show:type==='string'},\"iexact\"),/*#__PURE__*/_jsx(Option,{id:\"contains-option-select\",value:\"contains\",description:/*i18n*/i18n._(\"Field contains value.\"),show:type==='string'},\"contains\"),/*#__PURE__*/_jsx(Option,{id:\"icontains-option-select\",value:\"icontains\",description:/*i18n*/i18n._(\"Case-insensitive version of contains\"),show:type==='string'},\"icontains\"),/*#__PURE__*/_jsx(Option,{id:\"startswith-option-select\",value:\"startswith\",description:/*i18n*/i18n._(\"Field starts with value.\"),show:type!=='datetime'},\"startswith\"),/*#__PURE__*/_jsx(Option,{id:\"istartswith-option-select\",value:\"istartswith\",description:/*i18n*/i18n._(\"Case-insensitive version of startswith.\"),show:type!=='datetime'},\"istartswith\"),/*#__PURE__*/_jsx(Option,{id:\"endswith-option-select\",value:\"endswith\",description:/*i18n*/i18n._(\"Field ends with value.\"),show:type!=='datetime'},\"endswith\"),/*#__PURE__*/_jsx(Option,{id:\"iendswith-option-select\",value:\"iendswith\",description:/*i18n*/i18n._(\"Case-insensitive version of endswith.\"),show:type!=='datetime'},\"iendswith\"),/*#__PURE__*/_jsx(Option,{id:\"regex-option-select\",value:\"regex\",description:/*i18n*/i18n._(\"Field matches the given regular expression.\")},\"regex\"),/*#__PURE__*/_jsx(Option,{id:\"iregex-option-select\",value:\"iregex\",description:/*i18n*/i18n._(\"Case-insensitive version of regex.\")},\"iregex\"),/*#__PURE__*/_jsx(Option,{id:\"gt-option-select\",value:\"gt\",description:/*i18n*/i18n._(\"Greater than comparison.\"),show:type!=='json'},\"gt\"),/*#__PURE__*/_jsx(Option,{id:\"gte-option-select\",value:\"gte\",description:/*i18n*/i18n._(\"Greater than or equal to comparison.\"),show:type!=='json'},\"gte\"),/*#__PURE__*/_jsx(Option,{id:\"lt-option-select\",value:\"lt\",description:/*i18n*/i18n._(\"Less than comparison.\"),show:type!=='json'},\"lt\"),/*#__PURE__*/_jsx(Option,{id:\"lte-option-select\",value:\"lte\",description:/*i18n*/i18n._(\"Less than or equal to comparison.\"),show:type!=='json'},\"lte\"),/*#__PURE__*/_jsx(Option,{id:\"isnull-option-select\",value:\"isnull\",description:/*i18n*/i18n._(\"Check whether the given field or related object is null; expects a boolean value.\")},\"isnull\"),/*#__PURE__*/_jsx(Option,{id:\"in-option-select\",value:\"in\",description:/*i18n*/i18n._(\"Check whether the given field's value is present in the list provided; expects a comma-separated list of items.\")},\"in\")]});}LookupTypeInput.defaultProps={type:'string',value:'',maxSelectHeight:'300px'};export default LookupTypeInput;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/Search/LookupTypeInput.js"],"names":["React","useState","Select","SelectOption","SelectVariant","Option","show","props","defaultProps","LookupTypeInput","value","type","setValue","maxSelectHeight","isOpen","setIsOpen","typeahead","event","selection"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { string, oneOfType, arrayOf, func } from 'prop-types';\nimport { t } from '@lingui/macro';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\n\nfunction Option({ show, ...props }) {\n  if (!show) {\n    return null;\n  }\n  return <SelectOption {...props} />;\n}\nOption.defaultProps = {\n  show: true,\n};\n\nfunction LookupTypeInput({ value, type, setValue, maxSelectHeight }) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <Select\n      ouiaId=\"set-lookup-typeahead\"\n      aria-label={t`Lookup select`}\n      className=\"lookupSelect\"\n      variant={SelectVariant.typeahead}\n      typeAheadAriaLabel={t`Lookup typeahead`}\n      onToggle={setIsOpen}\n      onSelect={(event, selection) => setValue(selection)}\n      onClear={() => setValue(null)}\n      selections={value}\n      isOpen={isOpen}\n      placeholderText={t`Lookup type`}\n      maxHeight={maxSelectHeight}\n      noResultsFoundText={t`No results found`}\n    >\n      <Option\n        id=\"exact-option-select\"\n        key=\"exact\"\n        value=\"exact\"\n        description={t`Exact match (default lookup if not specified).`}\n      />\n      <Option\n        id=\"iexact-option-select\"\n        key=\"iexact\"\n        value=\"iexact\"\n        description={t`Case-insensitive version of exact.`}\n        show={type === 'string'}\n      />\n      <Option\n        id=\"contains-option-select\"\n        key=\"contains\"\n        value=\"contains\"\n        description={t`Field contains value.`}\n        show={type === 'string'}\n      />\n      <Option\n        id=\"icontains-option-select\"\n        key=\"icontains\"\n        value=\"icontains\"\n        description={t`Case-insensitive version of contains`}\n        show={type === 'string'}\n      />\n      <Option\n        id=\"startswith-option-select\"\n        key=\"startswith\"\n        value=\"startswith\"\n        description={t`Field starts with value.`}\n        show={type !== 'datetime'}\n      />\n      <Option\n        id=\"istartswith-option-select\"\n        key=\"istartswith\"\n        value=\"istartswith\"\n        description={t`Case-insensitive version of startswith.`}\n        show={type !== 'datetime'}\n      />\n      <Option\n        id=\"endswith-option-select\"\n        key=\"endswith\"\n        value=\"endswith\"\n        description={t`Field ends with value.`}\n        show={type !== 'datetime'}\n      />\n      <Option\n        id=\"iendswith-option-select\"\n        key=\"iendswith\"\n        value=\"iendswith\"\n        description={t`Case-insensitive version of endswith.`}\n        show={type !== 'datetime'}\n      />\n      <Option\n        id=\"regex-option-select\"\n        key=\"regex\"\n        value=\"regex\"\n        description={t`Field matches the given regular expression.`}\n      />\n      <Option\n        id=\"iregex-option-select\"\n        key=\"iregex\"\n        value=\"iregex\"\n        description={t`Case-insensitive version of regex.`}\n      />\n      <Option\n        id=\"gt-option-select\"\n        key=\"gt\"\n        value=\"gt\"\n        description={t`Greater than comparison.`}\n        show={type !== 'json'}\n      />\n      <Option\n        id=\"gte-option-select\"\n        key=\"gte\"\n        value=\"gte\"\n        description={t`Greater than or equal to comparison.`}\n        show={type !== 'json'}\n      />\n      <Option\n        id=\"lt-option-select\"\n        key=\"lt\"\n        value=\"lt\"\n        description={t`Less than comparison.`}\n        show={type !== 'json'}\n      />\n      <Option\n        id=\"lte-option-select\"\n        key=\"lte\"\n        value=\"lte\"\n        description={t`Less than or equal to comparison.`}\n        show={type !== 'json'}\n      />\n      <Option\n        id=\"isnull-option-select\"\n        key=\"isnull\"\n        value=\"isnull\"\n        description={t`Check whether the given field or related object is null; expects a boolean value.`}\n      />\n      <Option\n        id=\"in-option-select\"\n        key=\"in\"\n        value=\"in\"\n        description={t`Check whether the given field's value is present in the list provided; expects a comma-separated list of items.`}\n      />\n    </Select>\n  );\n}\nLookupTypeInput.propTypes = {\n  type: string,\n  value: oneOfType([string, arrayOf(string)]),\n  setValue: func.isRequired,\n  maxSelectHeight: string,\n};\nLookupTypeInput.defaultProps = {\n  type: 'string',\n  value: '',\n  maxSelectHeight: '300px',\n};\n\nexport default LookupTypeInput;\n"]},"metadata":{},"sourceType":"module"}