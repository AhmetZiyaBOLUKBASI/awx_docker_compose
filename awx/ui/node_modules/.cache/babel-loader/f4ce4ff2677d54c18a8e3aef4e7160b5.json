{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _excluded=[\"initialPodSpec\",\"instanceGroup\",\"onSubmit\",\"onCancel\",\"submitError\"];import{i18n}from\"@lingui/core\";import React,{useCallback}from'react';import{Formik,useField,useFormikContext}from'formik';import{Form,FormGroup}from'@patternfly/react-core';import{jsonToYaml}from'util/yaml';import FormField,{FormSubmitError,CheckboxField}from'components/FormField';import FormActionGroup from'components/FormActionGroup';import{required}from'util/validators';import{FormColumnLayout,FormFullWidthLayout,FormCheckboxLayout,SubFormLayout}from'components/FormLayout';import CredentialLookup from'components/Lookup/CredentialLookup';import{VariablesField}from'components/CodeEditor';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ContainerGroupFormFields(_ref){var instanceGroup=_ref.instanceGroup;var _useFormikContext=useFormikContext(),setFieldValue=_useFormikContext.setFieldValue,setFieldTouched=_useFormikContext.setFieldTouched;var _useField=useField('credential'),_useField2=_slicedToArray(_useField,3),credentialField=_useField2[0],credentialMeta=_useField2[1],credentialHelpers=_useField2[2];var _useField3=useField('override'),_useField4=_slicedToArray(_useField3,1),overrideField=_useField4[0];var handleCredentialUpdate=useCallback(function(value){setFieldValue('credential',value);setFieldTouched('credential',true,false);},[setFieldValue,setFieldTouched]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FormField,{name:\"name\",id:\"container-group-name\",label:/*i18n*/i18n._(\"Name\"),type:\"text\",validate:required(null),isRequired:true}),/*#__PURE__*/_jsx(CredentialLookup,{label:/*i18n*/i18n._(\"Credential\"),credentialTypeKind:\"kubernetes\",helperTextInvalid:credentialMeta.error,isValid:!credentialMeta.touched||!credentialMeta.error,onBlur:function onBlur(){return credentialHelpers.setTouched();},onChange:handleCredentialUpdate,value:credentialField.value,tooltip:/*i18n*/i18n._(\"Credential to authenticate with Kubernetes or OpenShift. Must be of type \\\"Kubernetes/OpenShift API Bearer Token\\\". If left blank, the underlying Pod's service account will be used.\"),autoPopulate:!(instanceGroup!==null&&instanceGroup!==void 0&&instanceGroup.id)}),/*#__PURE__*/_jsx(FormGroup,{fieldId:\"container-groups-option-checkbox\",label:/*i18n*/i18n._(\"Options\"),children:/*#__PURE__*/_jsx(FormCheckboxLayout,{children:/*#__PURE__*/_jsx(CheckboxField,{name:\"override\",\"aria-label\":/*i18n*/i18n._(\"Customize pod specification\"),label:/*i18n*/i18n._(\"Customize pod specification\"),id:\"container-groups-override-pod-specification\"})})}),overrideField.value&&/*#__PURE__*/_jsx(SubFormLayout,{children:/*#__PURE__*/_jsx(FormFullWidthLayout,{children:/*#__PURE__*/_jsx(VariablesField,{tooltip:/*i18n*/i18n._(\"Field for passing a custom Kubernetes or OpenShift Pod specification.\"),id:\"custom-pod-spec\",name:\"pod_spec_override\",label:/*i18n*/i18n._(\"Custom pod spec\")})})})]});}function ContainerGroupForm(_ref2){var _instanceGroup$summar;var initialPodSpec=_ref2.initialPodSpec,instanceGroup=_ref2.instanceGroup,_onSubmit=_ref2.onSubmit,onCancel=_ref2.onCancel,submitError=_ref2.submitError,rest=_objectWithoutProperties(_ref2,_excluded);var isCheckboxChecked=Boolean(instanceGroup===null||instanceGroup===void 0?void 0:instanceGroup.pod_spec_override)||false;var initialValues={name:(instanceGroup===null||instanceGroup===void 0?void 0:instanceGroup.name)||'',credential:instanceGroup===null||instanceGroup===void 0?void 0:(_instanceGroup$summar=instanceGroup.summary_fields)===null||_instanceGroup$summar===void 0?void 0:_instanceGroup$summar.credential,pod_spec_override:isCheckboxChecked?instanceGroup===null||instanceGroup===void 0?void 0:instanceGroup.pod_spec_override:jsonToYaml(JSON.stringify(initialPodSpec)),override:isCheckboxChecked};return/*#__PURE__*/_jsx(Formik,{initialValues:initialValues,onSubmit:function onSubmit(values){_onSubmit(values);},children:function children(formik){return/*#__PURE__*/_jsx(Form,{autoComplete:\"off\",onSubmit:formik.handleSubmit,children:/*#__PURE__*/_jsxs(FormColumnLayout,{children:[/*#__PURE__*/_jsx(ContainerGroupFormFields,_objectSpread({instanceGroup:instanceGroup},rest)),submitError&&/*#__PURE__*/_jsx(FormSubmitError,{error:submitError}),/*#__PURE__*/_jsx(FormActionGroup,{onCancel:onCancel,onSubmit:formik.handleSubmit})]})});}});}ContainerGroupForm.defaultProps={instanceGroup:{},submitError:null,initialPodSpec:{}};export default ContainerGroupForm;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/InstanceGroup/shared/ContainerGroupForm.js"],"names":["React","useCallback","Formik","useField","useFormikContext","Form","FormGroup","jsonToYaml","FormField","FormSubmitError","CheckboxField","FormActionGroup","required","FormColumnLayout","FormFullWidthLayout","FormCheckboxLayout","SubFormLayout","CredentialLookup","VariablesField","ContainerGroupFormFields","instanceGroup","setFieldValue","setFieldTouched","credentialField","credentialMeta","credentialHelpers","overrideField","handleCredentialUpdate","value","error","touched","setTouched","id","ContainerGroupForm","initialPodSpec","onSubmit","onCancel","submitError","rest","isCheckboxChecked","Boolean","pod_spec_override","initialValues","name","credential","summary_fields","JSON","stringify","override","values","formik","handleSubmit","defaultProps"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport { func, shape } from 'prop-types';\nimport { Formik, useField, useFormikContext } from 'formik';\n\nimport { t } from '@lingui/macro';\nimport { Form, FormGroup } from '@patternfly/react-core';\nimport { jsonToYaml } from 'util/yaml';\n\nimport FormField, {\n  FormSubmitError,\n  CheckboxField,\n} from 'components/FormField';\nimport FormActionGroup from 'components/FormActionGroup';\nimport { required } from 'util/validators';\nimport {\n  FormColumnLayout,\n  FormFullWidthLayout,\n  FormCheckboxLayout,\n  SubFormLayout,\n} from 'components/FormLayout';\nimport CredentialLookup from 'components/Lookup/CredentialLookup';\nimport { VariablesField } from 'components/CodeEditor';\n\nfunction ContainerGroupFormFields({ instanceGroup }) {\n  const { setFieldValue, setFieldTouched } = useFormikContext();\n  const [credentialField, credentialMeta, credentialHelpers] =\n    useField('credential');\n\n  const [overrideField] = useField('override');\n\n  const handleCredentialUpdate = useCallback(\n    (value) => {\n      setFieldValue('credential', value);\n      setFieldTouched('credential', true, false);\n    },\n    [setFieldValue, setFieldTouched]\n  );\n\n  return (\n    <>\n      <FormField\n        name=\"name\"\n        id=\"container-group-name\"\n        label={t`Name`}\n        type=\"text\"\n        validate={required(null)}\n        isRequired\n      />\n      <CredentialLookup\n        label={t`Credential`}\n        credentialTypeKind=\"kubernetes\"\n        helperTextInvalid={credentialMeta.error}\n        isValid={!credentialMeta.touched || !credentialMeta.error}\n        onBlur={() => credentialHelpers.setTouched()}\n        onChange={handleCredentialUpdate}\n        value={credentialField.value}\n        tooltip={t`Credential to authenticate with Kubernetes or OpenShift. Must be of type \"Kubernetes/OpenShift API Bearer Token\". If left blank, the underlying Pod's service account will be used.`}\n        autoPopulate={!instanceGroup?.id}\n      />\n\n      <FormGroup fieldId=\"container-groups-option-checkbox\" label={t`Options`}>\n        <FormCheckboxLayout>\n          <CheckboxField\n            name=\"override\"\n            aria-label={t`Customize pod specification`}\n            label={t`Customize pod specification`}\n            id=\"container-groups-override-pod-specification\"\n          />\n        </FormCheckboxLayout>\n      </FormGroup>\n\n      {overrideField.value && (\n        <SubFormLayout>\n          <FormFullWidthLayout>\n            <VariablesField\n              tooltip={t`Field for passing a custom Kubernetes or OpenShift Pod specification.`}\n              id=\"custom-pod-spec\"\n              name=\"pod_spec_override\"\n              label={t`Custom pod spec`}\n            />\n          </FormFullWidthLayout>\n        </SubFormLayout>\n      )}\n    </>\n  );\n}\n\nfunction ContainerGroupForm({\n  initialPodSpec,\n  instanceGroup,\n  onSubmit,\n  onCancel,\n  submitError,\n  ...rest\n}) {\n  const isCheckboxChecked = Boolean(instanceGroup?.pod_spec_override) || false;\n\n  const initialValues = {\n    name: instanceGroup?.name || '',\n    credential: instanceGroup?.summary_fields?.credential,\n    pod_spec_override: isCheckboxChecked\n      ? instanceGroup?.pod_spec_override\n      : jsonToYaml(JSON.stringify(initialPodSpec)),\n    override: isCheckboxChecked,\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values) => {\n        onSubmit(values);\n      }}\n    >\n      {(formik) => (\n        <Form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n          <FormColumnLayout>\n            <ContainerGroupFormFields instanceGroup={instanceGroup} {...rest} />\n            {submitError && <FormSubmitError error={submitError} />}\n            <FormActionGroup\n              onCancel={onCancel}\n              onSubmit={formik.handleSubmit}\n            />\n          </FormColumnLayout>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nContainerGroupForm.propTypes = {\n  instanceGroup: shape({}),\n  onCancel: func.isRequired,\n  onSubmit: func.isRequired,\n  submitError: shape({}),\n  initialPodSpec: shape({}),\n};\n\nContainerGroupForm.defaultProps = {\n  instanceGroup: {},\n  submitError: null,\n  initialPodSpec: {},\n};\n\nexport default ContainerGroupForm;\n"]},"metadata":{},"sourceType":"module"}