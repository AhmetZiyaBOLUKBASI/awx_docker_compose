{"ast":null,"code":"import _taggedTemplateLiteral from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import React from'react';import{Checkbox as PFCheckbox}from'@patternfly/react-core';import styled from'styled-components';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CheckboxWrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  border: 1px solid var(--pf-global--BorderColor--200);\\n  border-radius: var(--pf-global--BorderRadius--sm);\\n  padding: 10px;\\n\"])));var Checkbox=styled(PFCheckbox)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  & label {\\n    width: 100%;\\n  }\\n\"])));function CheckboxCard(props){var name=props.name,description=props.description,isSelected=props.isSelected,onSelect=props.onSelect,itemId=props.itemId;return/*#__PURE__*/_jsx(CheckboxWrapper,{children:/*#__PURE__*/_jsx(Checkbox,{isChecked:isSelected,onChange:onSelect,\"aria-label\":name,id:\"checkbox-card-\".concat(itemId),ouiaId:\"checkbox-card-\".concat(itemId),label:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{style:{fontWeight:'bold'},children:name}),/*#__PURE__*/_jsx(\"div\",{children:description})]}),value:itemId})});}CheckboxCard.defaultProps={description:'',isSelected:false,onSelect:null};export default CheckboxCard;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/AddRole/CheckboxCard.js"],"names":["React","Checkbox","PFCheckbox","styled","CheckboxWrapper","div","CheckboxCard","props","name","description","isSelected","onSelect","itemId","fontWeight","defaultProps"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,QAAQ,GAAIC,CAAAA,UAArB,KAAuC,wBAAvC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,C,6IAEA,GAAMC,CAAAA,eAAe,CAAGD,MAAM,CAACE,GAAV,sNAArB,CAOA,GAAMJ,CAAAA,QAAQ,CAAGE,MAAM,CAACD,UAAD,CAAT,yHAAd,CAOA,QAASI,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAC3B,GAAQC,CAAAA,IAAR,CAA4DD,KAA5D,CAAQC,IAAR,CAAcC,WAAd,CAA4DF,KAA5D,CAAcE,WAAd,CAA2BC,UAA3B,CAA4DH,KAA5D,CAA2BG,UAA3B,CAAuCC,QAAvC,CAA4DJ,KAA5D,CAAuCI,QAAvC,CAAiDC,MAAjD,CAA4DL,KAA5D,CAAiDK,MAAjD,CACA,mBACE,KAAC,eAAD,wBACE,KAAC,QAAD,EACE,SAAS,CAAEF,UADb,CAEE,QAAQ,CAAEC,QAFZ,CAGE,aAAYH,IAHd,CAIE,EAAE,yBAAmBI,MAAnB,CAJJ,CAKE,MAAM,yBAAmBA,MAAnB,CALR,CAME,KAAK,cACH,wCACE,YAAK,KAAK,CAAE,CAAEC,UAAU,CAAE,MAAd,CAAZ,UAAqCL,IAArC,EADF,cAEE,qBAAMC,WAAN,EAFF,GAPJ,CAYE,KAAK,CAAEG,MAZT,EADF,EADF,CAkBD,CAUDN,YAAY,CAACQ,YAAb,CAA4B,CAC1BL,WAAW,CAAE,EADa,CAE1BC,UAAU,CAAE,KAFc,CAG1BC,QAAQ,CAAE,IAHgB,CAA5B,CAMA,cAAeL,CAAAA,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox as PFCheckbox } from '@patternfly/react-core';\nimport styled from 'styled-components';\n\nconst CheckboxWrapper = styled.div`\n  display: flex;\n  border: 1px solid var(--pf-global--BorderColor--200);\n  border-radius: var(--pf-global--BorderRadius--sm);\n  padding: 10px;\n`;\n\nconst Checkbox = styled(PFCheckbox)`\n  width: 100%;\n  & label {\n    width: 100%;\n  }\n`;\n\nfunction CheckboxCard(props) {\n  const { name, description, isSelected, onSelect, itemId } = props;\n  return (\n    <CheckboxWrapper>\n      <Checkbox\n        isChecked={isSelected}\n        onChange={onSelect}\n        aria-label={name}\n        id={`checkbox-card-${itemId}`}\n        ouiaId={`checkbox-card-${itemId}`}\n        label={\n          <>\n            <div style={{ fontWeight: 'bold' }}>{name}</div>\n            <div>{description}</div>\n          </>\n        }\n        value={itemId}\n      />\n    </CheckboxWrapper>\n  );\n}\n\nCheckboxCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  isSelected: PropTypes.bool,\n  onSelect: PropTypes.func,\n  itemId: PropTypes.number.isRequired,\n};\n\nCheckboxCard.defaultProps = {\n  description: '',\n  isSelected: false,\n  onSelect: null,\n};\n\nexport default CheckboxCard;\n"]},"metadata":{},"sourceType":"module"}