{"ast":null,"code":"import _defineProperty from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useEffect,useCallback,useState}from'react';import{useLocation}from'react-router-dom';import{getQSConfig,parseQueryString}from'util/qs';import useRequest from'hooks/useRequest';import{NotificationTemplatesAPI}from'api';import AlertModal from'../AlertModal';import ErrorDetail from'../ErrorDetail';import NotificationListItem from'./NotificationListItem';import PaginatedTable,{HeaderRow,HeaderCell,getSearchableKeys}from'../PaginatedTable';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var QS_CONFIG=getQSConfig('notification',{page:1,page_size:5,order_by:'name'});function NotificationList(_ref){var apiModel=_ref.apiModel,canToggleNotifications=_ref.canToggleNotifications,id=_ref.id,showApprovalsToggle=_ref.showApprovalsToggle;var location=useLocation();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),loadingToggleIds=_useState2[0],setLoadingToggleIds=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),toggleError=_useState4[0],setToggleError=_useState4[1];var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _actionsResponse$data,_actionsResponse$data2;var params,_yield$Promise$all,_yield$Promise$all2,_yield$Promise$all2$,notificationsResults,notificationsCount,actionsResponse,labels,idMatchParams,_yield$Promise$all3,_yield$Promise$all4,startedTemplates,successTemplates,errorTemplates,rtnObj,_yield$apiModel$readN,approvalsTemplates;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:params=parseQueryString(QS_CONFIG,location.search);_context.next=3;return Promise.all([NotificationTemplatesAPI.read(params),NotificationTemplatesAPI.readOptions()]);case 3:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);_yield$Promise$all2$=_yield$Promise$all2[0].data;notificationsResults=_yield$Promise$all2$.results;notificationsCount=_yield$Promise$all2$.count;actionsResponse=_yield$Promise$all2[1];labels=actionsResponse.data.actions.GET.notification_type.choices.reduce(function(map,notifType){return _objectSpread(_objectSpread({},map),{},_defineProperty({},notifType[0],notifType[1]));},{});idMatchParams=notificationsResults.length>0?{id__in:notificationsResults.map(function(n){return n.id;}).join(',')}:{};_context.next=13;return Promise.all([apiModel.readNotificationTemplatesStarted(id,idMatchParams),apiModel.readNotificationTemplatesSuccess(id,idMatchParams),apiModel.readNotificationTemplatesError(id,idMatchParams)]);case 13:_yield$Promise$all3=_context.sent;_yield$Promise$all4=_slicedToArray(_yield$Promise$all3,3);startedTemplates=_yield$Promise$all4[0].data;successTemplates=_yield$Promise$all4[1].data;errorTemplates=_yield$Promise$all4[2].data;rtnObj={notifications:notificationsResults,itemCount:notificationsCount,startedTemplateIds:startedTemplates.results.map(function(st){return st.id;}),successTemplateIds:successTemplates.results.map(function(su){return su.id;}),errorTemplateIds:errorTemplates.results.map(function(e){return e.id;}),typeLabels:labels,relatedSearchableKeys:((actionsResponse===null||actionsResponse===void 0?void 0:(_actionsResponse$data=actionsResponse.data)===null||_actionsResponse$data===void 0?void 0:_actionsResponse$data.related_search_fields)||[]).map(function(val){return val.slice(0,-8);}),searchableKeys:getSearchableKeys((_actionsResponse$data2=actionsResponse.data.actions)===null||_actionsResponse$data2===void 0?void 0:_actionsResponse$data2.GET)};if(!showApprovalsToggle){_context.next=27;break;}_context.next=22;return apiModel.readNotificationTemplatesApprovals(id,idMatchParams);case 22:_yield$apiModel$readN=_context.sent;approvalsTemplates=_yield$apiModel$readN.data;rtnObj.approvalsTemplateIds=approvalsTemplates.results.map(function(st){return st.id;});_context.next=28;break;case 27:rtnObj.approvalsTemplateIds=[];case 28:return _context.abrupt(\"return\",rtnObj);case 29:case\"end\":return _context.stop();}}},_callee);})),[apiModel,id,location,showApprovalsToggle]),{notifications:[],itemCount:0,approvalsTemplateIds:[],startedTemplateIds:[],successTemplateIds:[],errorTemplateIds:[],typeLabels:{},relatedSearchableKeys:[],searchableKeys:[]}),fetchNotificationsResults=_useRequest.result,_useRequest$result=_useRequest.result,notifications=_useRequest$result.notifications,itemCount=_useRequest$result.itemCount,approvalsTemplateIds=_useRequest$result.approvalsTemplateIds,startedTemplateIds=_useRequest$result.startedTemplateIds,successTemplateIds=_useRequest$result.successTemplateIds,errorTemplateIds=_useRequest$result.errorTemplateIds,typeLabels=_useRequest$result.typeLabels,relatedSearchableKeys=_useRequest$result.relatedSearchableKeys,searchableKeys=_useRequest$result.searchableKeys,contentError=_useRequest.error,isLoading=_useRequest.isLoading,fetchNotifications=_useRequest.request,setValue=_useRequest.setValue;useEffect(function(){fetchNotifications();},[fetchNotifications]);var handleNotificationToggle=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(notificationId,isCurrentlyOn,status){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setLoadingToggleIds(loadingToggleIds.concat([notificationId]));_context2.prev=1;if(!isCurrentlyOn){_context2.next=8;break;}_context2.next=5;return apiModel.disassociateNotificationTemplate(id,notificationId,status);case 5:setValue(_objectSpread(_objectSpread({},fetchNotificationsResults),{},_defineProperty({},\"\".concat(status,\"TemplateIds\"),fetchNotificationsResults[\"\".concat(status,\"TemplateIds\")].filter(function(i){return i!==notificationId;}))));_context2.next=11;break;case 8:_context2.next=10;return apiModel.associateNotificationTemplate(id,notificationId,status);case 10:setValue(_objectSpread(_objectSpread({},fetchNotificationsResults),{},_defineProperty({},\"\".concat(status,\"TemplateIds\"),fetchNotificationsResults[\"\".concat(status,\"TemplateIds\")].concat(notificationId))));case 11:_context2.next=16;break;case 13:_context2.prev=13;_context2.t0=_context2[\"catch\"](1);setToggleError(_context2.t0);case 16:_context2.prev=16;setLoadingToggleIds(loadingToggleIds.filter(function(item){return item!==notificationId;}));return _context2.finish(16);case 19:case\"end\":return _context2.stop();}}},_callee2,null,[[1,13,16,19]]);}));return function handleNotificationToggle(_x,_x2,_x3){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(PaginatedTable,{contentError:contentError,hasContentLoading:isLoading,items:notifications,itemCount:itemCount,pluralizedItemName:/*i18n*/i18n._(\"Notifications\"),qsConfig:QS_CONFIG,toolbarSearchColumns:[{name:/*i18n*/i18n._(\"Name\"),key:'name__icontains',isDefault:true},{name:/*i18n*/i18n._(\"Description\"),key:'description__icontains'},{name:/*i18n*/i18n._(\"Notification type\"),key:'or__notification_type',options:[['email',/*i18n*/i18n._(\"Email\")],['grafana',/*i18n*/i18n._(\"Grafana\")],['hipchat',/*i18n*/i18n._(\"Hipchat\")],['irc',/*i18n*/i18n._(\"IRC\")],['mattermost',/*i18n*/i18n._(\"Mattermost\")],['pagerduty',/*i18n*/i18n._(\"Pagerduty\")],['rocketchat',/*i18n*/i18n._(\"Rocket.Chat\")],['slack',/*i18n*/i18n._(\"Slack\")],['twilio',/*i18n*/i18n._(\"Twilio\")],['webhook',/*i18n*/i18n._(\"Webhook\")]]},{name:/*i18n*/i18n._(\"Created By (Username)\"),key:'created_by__username__icontains'},{name:/*i18n*/i18n._(\"Modified By (Username)\"),key:'modified_by__username__icontains'}],toolbarSearchableKeys:searchableKeys,toolbarRelatedSearchableKeys:relatedSearchableKeys,headerRow:/*#__PURE__*/_jsxs(HeaderRow,{qsConfig:QS_CONFIG,isSelectable:false,children:[/*#__PURE__*/_jsx(HeaderCell,{sortKey:\"name\",children:/*i18n*/i18n._(\"Name\")}),/*#__PURE__*/_jsx(HeaderCell,{sortKey:\"notification_type\",children:/*i18n*/i18n._(\"Type\")}),/*#__PURE__*/_jsx(HeaderCell,{children:/*i18n*/i18n._(\"Options\")})]}),renderRow:function renderRow(notification,index){return/*#__PURE__*/_jsx(NotificationListItem,{notification:notification,detailUrl:\"/notification_templates/\".concat(notification.id,\"/details\"),canToggleNotifications:canToggleNotifications&&!loadingToggleIds.includes(notification.id),toggleNotification:handleNotificationToggle,approvalsTurnedOn:approvalsTemplateIds.includes(notification.id),errorTurnedOn:errorTemplateIds.includes(notification.id),startedTurnedOn:startedTemplateIds.includes(notification.id),successTurnedOn:successTemplateIds.includes(notification.id),typeLabels:typeLabels,showApprovalsToggle:showApprovalsToggle,rowIndex:index},notification.id);}}),toggleError&&/*#__PURE__*/_jsxs(AlertModal,{variant:\"error\",title:/*i18n*/i18n._(\"Error!\"),isOpen:loadingToggleIds.length===0,onClose:function onClose(){return setToggleError(null);},children:[/*i18n*/i18n._(\"Failed to toggle notification.\"),/*#__PURE__*/_jsx(ErrorDetail,{error:toggleError})]})]});}NotificationList.defaultProps={showApprovalsToggle:false};export default NotificationList;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/NotificationList/NotificationList.js"],"names":["React","useEffect","useCallback","useState","useLocation","getQSConfig","parseQueryString","useRequest","NotificationTemplatesAPI","AlertModal","ErrorDetail","NotificationListItem","PaginatedTable","HeaderRow","HeaderCell","getSearchableKeys","QS_CONFIG","page","page_size","order_by","NotificationList","apiModel","canToggleNotifications","id","showApprovalsToggle","location","loadingToggleIds","setLoadingToggleIds","toggleError","setToggleError","params","search","Promise","all","read","readOptions","data","notificationsResults","results","notificationsCount","count","actionsResponse","labels","actions","GET","notification_type","choices","reduce","map","notifType","idMatchParams","length","id__in","n","join","readNotificationTemplatesStarted","readNotificationTemplatesSuccess","readNotificationTemplatesError","startedTemplates","successTemplates","errorTemplates","rtnObj","notifications","itemCount","startedTemplateIds","st","successTemplateIds","su","errorTemplateIds","e","typeLabels","relatedSearchableKeys","related_search_fields","val","slice","searchableKeys","readNotificationTemplatesApprovals","approvalsTemplates","approvalsTemplateIds","fetchNotificationsResults","result","contentError","error","isLoading","fetchNotifications","request","setValue","handleNotificationToggle","notificationId","isCurrentlyOn","status","concat","disassociateNotificationTemplate","filter","i","associateNotificationTemplate","item","name","key","isDefault","options","notification","index","includes","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { number, shape, bool } from 'prop-types';\n\nimport { t } from '@lingui/macro';\nimport { getQSConfig, parseQueryString } from 'util/qs';\nimport useRequest from 'hooks/useRequest';\nimport { NotificationTemplatesAPI } from 'api';\nimport AlertModal from '../AlertModal';\nimport ErrorDetail from '../ErrorDetail';\nimport NotificationListItem from './NotificationListItem';\nimport PaginatedTable, {\n  HeaderRow,\n  HeaderCell,\n  getSearchableKeys,\n} from '../PaginatedTable';\n\nconst QS_CONFIG = getQSConfig('notification', {\n  page: 1,\n  page_size: 5,\n  order_by: 'name',\n});\n\nfunction NotificationList({\n  apiModel,\n  canToggleNotifications,\n  id,\n\n  showApprovalsToggle,\n}) {\n  const location = useLocation();\n  const [loadingToggleIds, setLoadingToggleIds] = useState([]);\n  const [toggleError, setToggleError] = useState(null);\n\n  const {\n    result: fetchNotificationsResults,\n    result: {\n      notifications,\n      itemCount,\n      approvalsTemplateIds,\n      startedTemplateIds,\n      successTemplateIds,\n      errorTemplateIds,\n      typeLabels,\n      relatedSearchableKeys,\n      searchableKeys,\n    },\n    error: contentError,\n    isLoading,\n    request: fetchNotifications,\n    setValue,\n  } = useRequest(\n    useCallback(async () => {\n      const params = parseQueryString(QS_CONFIG, location.search);\n      const [\n        {\n          data: { results: notificationsResults, count: notificationsCount },\n        },\n        actionsResponse,\n      ] = await Promise.all([\n        NotificationTemplatesAPI.read(params),\n        NotificationTemplatesAPI.readOptions(),\n      ]);\n\n      const labels =\n        actionsResponse.data.actions.GET.notification_type.choices.reduce(\n          (map, notifType) => ({ ...map, [notifType[0]]: notifType[1] }),\n          {}\n        );\n\n      const idMatchParams =\n        notificationsResults.length > 0\n          ? { id__in: notificationsResults.map((n) => n.id).join(',') }\n          : {};\n\n      const [\n        { data: startedTemplates },\n        { data: successTemplates },\n        { data: errorTemplates },\n      ] = await Promise.all([\n        apiModel.readNotificationTemplatesStarted(id, idMatchParams),\n        apiModel.readNotificationTemplatesSuccess(id, idMatchParams),\n        apiModel.readNotificationTemplatesError(id, idMatchParams),\n      ]);\n\n      const rtnObj = {\n        notifications: notificationsResults,\n        itemCount: notificationsCount,\n        startedTemplateIds: startedTemplates.results.map((st) => st.id),\n        successTemplateIds: successTemplates.results.map((su) => su.id),\n        errorTemplateIds: errorTemplates.results.map((e) => e.id),\n        typeLabels: labels,\n        relatedSearchableKeys: (\n          actionsResponse?.data?.related_search_fields || []\n        ).map((val) => val.slice(0, -8)),\n        searchableKeys: getSearchableKeys(actionsResponse.data.actions?.GET),\n      };\n\n      if (showApprovalsToggle) {\n        const { data: approvalsTemplates } =\n          await apiModel.readNotificationTemplatesApprovals(id, idMatchParams);\n        rtnObj.approvalsTemplateIds = approvalsTemplates.results.map(\n          (st) => st.id\n        );\n      } else {\n        rtnObj.approvalsTemplateIds = [];\n      }\n\n      return rtnObj;\n    }, [apiModel, id, location, showApprovalsToggle]),\n    {\n      notifications: [],\n      itemCount: 0,\n      approvalsTemplateIds: [],\n      startedTemplateIds: [],\n      successTemplateIds: [],\n      errorTemplateIds: [],\n      typeLabels: {},\n      relatedSearchableKeys: [],\n      searchableKeys: [],\n    }\n  );\n\n  useEffect(() => {\n    fetchNotifications();\n  }, [fetchNotifications]);\n\n  const handleNotificationToggle = async (\n    notificationId,\n    isCurrentlyOn,\n    status\n  ) => {\n    setLoadingToggleIds(loadingToggleIds.concat([notificationId]));\n    try {\n      if (isCurrentlyOn) {\n        await apiModel.disassociateNotificationTemplate(\n          id,\n          notificationId,\n          status\n        );\n        setValue({\n          ...fetchNotificationsResults,\n          [`${status}TemplateIds`]: fetchNotificationsResults[\n            `${status}TemplateIds`\n          ].filter((i) => i !== notificationId),\n        });\n      } else {\n        await apiModel.associateNotificationTemplate(\n          id,\n          notificationId,\n          status\n        );\n        setValue({\n          ...fetchNotificationsResults,\n          [`${status}TemplateIds`]:\n            fetchNotificationsResults[`${status}TemplateIds`].concat(\n              notificationId\n            ),\n        });\n      }\n    } catch (err) {\n      setToggleError(err);\n    } finally {\n      setLoadingToggleIds(\n        loadingToggleIds.filter((item) => item !== notificationId)\n      );\n    }\n  };\n\n  return (\n    <>\n      <PaginatedTable\n        contentError={contentError}\n        hasContentLoading={isLoading}\n        items={notifications}\n        itemCount={itemCount}\n        pluralizedItemName={t`Notifications`}\n        qsConfig={QS_CONFIG}\n        toolbarSearchColumns={[\n          {\n            name: t`Name`,\n            key: 'name__icontains',\n            isDefault: true,\n          },\n          {\n            name: t`Description`,\n            key: 'description__icontains',\n          },\n          {\n            name: t`Notification type`,\n            key: 'or__notification_type',\n            options: [\n              ['email', t`Email`],\n              ['grafana', t`Grafana`],\n              ['hipchat', t`Hipchat`],\n              ['irc', t`IRC`],\n              ['mattermost', t`Mattermost`],\n              ['pagerduty', t`Pagerduty`],\n              ['rocketchat', t`Rocket.Chat`],\n              ['slack', t`Slack`],\n              ['twilio', t`Twilio`],\n              ['webhook', t`Webhook`],\n            ],\n          },\n          {\n            name: t`Created By (Username)`,\n            key: 'created_by__username__icontains',\n          },\n          {\n            name: t`Modified By (Username)`,\n            key: 'modified_by__username__icontains',\n          },\n        ]}\n        toolbarSearchableKeys={searchableKeys}\n        toolbarRelatedSearchableKeys={relatedSearchableKeys}\n        headerRow={\n          <HeaderRow qsConfig={QS_CONFIG} isSelectable={false}>\n            <HeaderCell sortKey=\"name\">{t`Name`}</HeaderCell>\n            <HeaderCell sortKey=\"notification_type\">{t`Type`}</HeaderCell>\n            <HeaderCell>{t`Options`}</HeaderCell>\n          </HeaderRow>\n        }\n        renderRow={(notification, index) => (\n          <NotificationListItem\n            key={notification.id}\n            notification={notification}\n            detailUrl={`/notification_templates/${notification.id}/details`}\n            canToggleNotifications={\n              canToggleNotifications &&\n              !loadingToggleIds.includes(notification.id)\n            }\n            toggleNotification={handleNotificationToggle}\n            approvalsTurnedOn={approvalsTemplateIds.includes(notification.id)}\n            errorTurnedOn={errorTemplateIds.includes(notification.id)}\n            startedTurnedOn={startedTemplateIds.includes(notification.id)}\n            successTurnedOn={successTemplateIds.includes(notification.id)}\n            typeLabels={typeLabels}\n            showApprovalsToggle={showApprovalsToggle}\n            rowIndex={index}\n          />\n        )}\n      />\n      {toggleError && (\n        <AlertModal\n          variant=\"error\"\n          title={t`Error!`}\n          isOpen={loadingToggleIds.length === 0}\n          onClose={() => setToggleError(null)}\n        >\n          {t`Failed to toggle notification.`}\n          <ErrorDetail error={toggleError} />\n        </AlertModal>\n      )}\n    </>\n  );\n}\n\nNotificationList.propTypes = {\n  apiModel: shape({}).isRequired,\n  id: number.isRequired,\n  canToggleNotifications: bool.isRequired,\n  showApprovalsToggle: bool,\n};\n\nNotificationList.defaultProps = {\n  showApprovalsToggle: false,\n};\n\nexport default NotificationList;\n"]},"metadata":{},"sourceType":"module"}