{"ast":null,"code":"import _toConsumableArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{useState,useEffect}from'react';import useWebsocket from'hooks/useWebsocket';import{WorkflowJobsAPI}from'api';var fetchWorkflowNodes=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(jobId){var pageNo,nodes,_yield$WorkflowJobsAP,data,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:pageNo=_args.length>1&&_args[1]!==undefined?_args[1]:1;nodes=_args.length>2&&_args[2]!==undefined?_args[2]:[];_context.next=4;return WorkflowJobsAPI.readNodes(jobId,{page_size:200,page:pageNo});case 4:_yield$WorkflowJobsAP=_context.sent;data=_yield$WorkflowJobsAP.data;if(!data.next){_context.next=8;break;}return _context.abrupt(\"return\",fetchWorkflowNodes(jobId,pageNo+1,nodes.concat(data.results)));case 8:return _context.abrupt(\"return\",nodes.concat(data.results));case 9:case\"end\":return _context.stop();}}},_callee);}));return function fetchWorkflowNodes(_x){return _ref.apply(this,arguments);};}();export default function useWsWorkflowOutput(workflowJobId,initialNodes){var _useState=useState(initialNodes),_useState2=_slicedToArray(_useState,2),nodes=_useState2[0],setNodes=_useState2[1];var lastMessage=useWebsocket({jobs:['status_changed'],control:['limit_reached_1']});useEffect(function(){setNodes(initialNodes);},[initialNodes]);useEffect(function(){function refreshNodeObjects(){return _refreshNodeObjects.apply(this,arguments);}function _refreshNodeObjects(){_refreshNodeObjects=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var refreshedNodes,updatedNodeObjects,updatedNodeObjectsMap;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:refreshedNodes=[];_context2.next=3;return fetchWorkflowNodes(workflowJobId);case 3:updatedNodeObjects=_context2.sent;updatedNodeObjectsMap=updatedNodeObjects.reduce(function(map,node){map[node.id]=node;return map;},{});nodes.forEach(function(node){if(node.id===1){// This is our artificial start node\nrefreshedNodes.push(_objectSpread({},node));}else{refreshedNodes.push(_objectSpread(_objectSpread({},node),{},{originalNodeObject:updatedNodeObjectsMap[node.originalNodeObject.id]}));}});setNodes(refreshedNodes);case 7:case\"end\":return _context2.stop();}}},_callee2);}));return _refreshNodeObjects.apply(this,arguments);}if((lastMessage===null||lastMessage===void 0?void 0:lastMessage.unified_job_id)===workflowJobId&&['successful','failed','error','cancelled'].includes(lastMessage.status)){refreshNodeObjects();}else{if(!nodes||nodes.length===0||(lastMessage===null||lastMessage===void 0?void 0:lastMessage.workflow_job_id)!==workflowJobId){return;}var index=nodes.findIndex(function(node){var _node$originalNodeObj;return(node===null||node===void 0?void 0:(_node$originalNodeObj=node.originalNodeObject)===null||_node$originalNodeObj===void 0?void 0:_node$originalNodeObj.id)===lastMessage.workflow_node_id;});if(index>-1){setNodes(updateNode(nodes,index,lastMessage));}}},[lastMessage]// eslint-disable-line react-hooks/exhaustive-deps\n);return nodes;}function updateNode(nodes,index,message){var _nodes$index,_nodes$index2,_nodes$index2$origina,_nodes$index3,_nodes$index3$origina,_nodes$index3$origina2,_nodes$index4;var node=_objectSpread(_objectSpread({},nodes[index]),{},{originalNodeObject:_objectSpread(_objectSpread({},(_nodes$index=nodes[index])===null||_nodes$index===void 0?void 0:_nodes$index.originalNodeObject),{},{job:message.unified_job_id,summary_fields:_objectSpread(_objectSpread({},(_nodes$index2=nodes[index])===null||_nodes$index2===void 0?void 0:(_nodes$index2$origina=_nodes$index2.originalNodeObject)===null||_nodes$index2$origina===void 0?void 0:_nodes$index2$origina.summary_fields),{},{job:_objectSpread(_objectSpread({},(_nodes$index3=nodes[index])===null||_nodes$index3===void 0?void 0:(_nodes$index3$origina=_nodes$index3.originalNodeObject)===null||_nodes$index3$origina===void 0?void 0:(_nodes$index3$origina2=_nodes$index3$origina.summary_fields)===null||_nodes$index3$origina2===void 0?void 0:_nodes$index3$origina2.job),{},{id:message.unified_job_id,status:message.status,type:message.type})})}),job:_objectSpread(_objectSpread({},(_nodes$index4=nodes[index])===null||_nodes$index4===void 0?void 0:_nodes$index4.job),{},{id:message.unified_job_id,status:message.status,type:message.type})});return[].concat(_toConsumableArray(nodes.slice(0,index)),[node],_toConsumableArray(nodes.slice(index+1)));}","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Job/WorkflowOutput/useWsWorkflowOutput.js"],"names":["useState","useEffect","useWebsocket","WorkflowJobsAPI","fetchWorkflowNodes","jobId","pageNo","nodes","readNodes","page_size","page","data","next","concat","results","useWsWorkflowOutput","workflowJobId","initialNodes","setNodes","lastMessage","jobs","control","refreshNodeObjects","refreshedNodes","updatedNodeObjects","updatedNodeObjectsMap","reduce","map","node","id","forEach","push","originalNodeObject","unified_job_id","includes","status","length","workflow_job_id","index","findIndex","workflow_node_id","updateNode","message","job","summary_fields","type","slice"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport useWebsocket from 'hooks/useWebsocket';\nimport { WorkflowJobsAPI } from 'api';\n\nconst fetchWorkflowNodes = async (jobId, pageNo = 1, nodes = []) => {\n  const { data } = await WorkflowJobsAPI.readNodes(jobId, {\n    page_size: 200,\n    page: pageNo,\n  });\n\n  if (data.next) {\n    return fetchWorkflowNodes(jobId, pageNo + 1, nodes.concat(data.results));\n  }\n  return nodes.concat(data.results);\n};\n\nexport default function useWsWorkflowOutput(workflowJobId, initialNodes) {\n  const [nodes, setNodes] = useState(initialNodes);\n  const lastMessage = useWebsocket({\n    jobs: ['status_changed'],\n    control: ['limit_reached_1'],\n  });\n\n  useEffect(() => {\n    setNodes(initialNodes);\n  }, [initialNodes]);\n\n  useEffect(\n    () => {\n      async function refreshNodeObjects() {\n        const refreshedNodes = [];\n        const updatedNodeObjects = await fetchWorkflowNodes(workflowJobId);\n        const updatedNodeObjectsMap = updatedNodeObjects.reduce((map, node) => {\n          map[node.id] = node;\n          return map;\n        }, {});\n        nodes.forEach((node) => {\n          if (node.id === 1) {\n            // This is our artificial start node\n            refreshedNodes.push({\n              ...node,\n            });\n          } else {\n            refreshedNodes.push({\n              ...node,\n              originalNodeObject:\n                updatedNodeObjectsMap[node.originalNodeObject.id],\n            });\n          }\n        });\n        setNodes(refreshedNodes);\n      }\n\n      if (\n        lastMessage?.unified_job_id === workflowJobId &&\n        ['successful', 'failed', 'error', 'cancelled'].includes(\n          lastMessage.status\n        )\n      ) {\n        refreshNodeObjects();\n      } else {\n        if (\n          !nodes ||\n          nodes.length === 0 ||\n          lastMessage?.workflow_job_id !== workflowJobId\n        ) {\n          return;\n        }\n\n        const index = nodes.findIndex(\n          (node) =>\n            node?.originalNodeObject?.id === lastMessage.workflow_node_id\n        );\n\n        if (index > -1) {\n          setNodes(updateNode(nodes, index, lastMessage));\n        }\n      }\n    },\n    [lastMessage] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  return nodes;\n}\n\nfunction updateNode(nodes, index, message) {\n  const node = {\n    ...nodes[index],\n    originalNodeObject: {\n      ...nodes[index]?.originalNodeObject,\n      job: message.unified_job_id,\n      summary_fields: {\n        ...nodes[index]?.originalNodeObject?.summary_fields,\n        job: {\n          ...nodes[index]?.originalNodeObject?.summary_fields?.job,\n          id: message.unified_job_id,\n          status: message.status,\n          type: message.type,\n        },\n      },\n    },\n    job: {\n      ...nodes[index]?.job,\n      id: message.unified_job_id,\n      status: message.status,\n      type: message.type,\n    },\n  };\n\n  return [...nodes.slice(0, index), node, ...nodes.slice(index + 1)];\n}\n"]},"metadata":{},"sourceType":"module"}