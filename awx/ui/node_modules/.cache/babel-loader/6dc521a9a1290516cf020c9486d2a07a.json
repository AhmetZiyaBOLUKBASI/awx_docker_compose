{"ast":null,"code":"import _slicedToArray from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { css } from '@patternfly/react-styles';\nimport { useOUIAProps } from '../../helpers';\nexport var CardContext = React.createContext({\n  cardId: '',\n  registerTitleId: function registerTitleId() {},\n  isExpanded: false\n});\nexport var Card = function Card(_a) {\n  var _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      _a$id = _a.id,\n      id = _a$id === void 0 ? '' : _a$id,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      _a$component = _a.component,\n      component = _a$component === void 0 ? 'article' : _a$component,\n      _a$isHoverable = _a.isHoverable,\n      isHoverable = _a$isHoverable === void 0 ? false : _a$isHoverable,\n      _a$isCompact = _a.isCompact,\n      isCompact = _a$isCompact === void 0 ? false : _a$isCompact,\n      _a$isSelectable = _a.isSelectable,\n      isSelectable = _a$isSelectable === void 0 ? false : _a$isSelectable,\n      _a$isSelectableRaised = _a.isSelectableRaised,\n      isSelectableRaised = _a$isSelectableRaised === void 0 ? false : _a$isSelectableRaised,\n      _a$isSelected = _a.isSelected,\n      isSelected = _a$isSelected === void 0 ? false : _a$isSelected,\n      _a$isDisabledRaised = _a.isDisabledRaised,\n      isDisabledRaised = _a$isDisabledRaised === void 0 ? false : _a$isDisabledRaised,\n      _a$isFlat = _a.isFlat,\n      isFlat = _a$isFlat === void 0 ? false : _a$isFlat,\n      _a$isExpanded = _a.isExpanded,\n      isExpanded = _a$isExpanded === void 0 ? false : _a$isExpanded,\n      _a$isRounded = _a.isRounded,\n      isRounded = _a$isRounded === void 0 ? false : _a$isRounded,\n      _a$isLarge = _a.isLarge,\n      isLarge = _a$isLarge === void 0 ? false : _a$isLarge,\n      _a$isFullHeight = _a.isFullHeight,\n      isFullHeight = _a$isFullHeight === void 0 ? false : _a$isFullHeight,\n      _a$isPlain = _a.isPlain,\n      isPlain = _a$isPlain === void 0 ? false : _a$isPlain,\n      ouiaId = _a.ouiaId,\n      _a$ouiaSafe = _a.ouiaSafe,\n      ouiaSafe = _a$ouiaSafe === void 0 ? true : _a$ouiaSafe,\n      _a$hasSelectableInput = _a.hasSelectableInput,\n      hasSelectableInput = _a$hasSelectableInput === void 0 ? false : _a$hasSelectableInput,\n      selectableInputAriaLabel = _a.selectableInputAriaLabel,\n      _a$onSelectableInputC = _a.onSelectableInputChange,\n      onSelectableInputChange = _a$onSelectableInputC === void 0 ? function () {} : _a$onSelectableInputC,\n      props = __rest(_a, [\"children\", \"id\", \"className\", \"component\", \"isHoverable\", \"isCompact\", \"isSelectable\", \"isSelectableRaised\", \"isSelected\", \"isDisabledRaised\", \"isFlat\", \"isExpanded\", \"isRounded\", \"isLarge\", \"isFullHeight\", \"isPlain\", \"ouiaId\", \"ouiaSafe\", \"hasSelectableInput\", \"selectableInputAriaLabel\", \"onSelectableInputChange\"]);\n\n  var Component = component;\n  var ouiaProps = useOUIAProps(Card.displayName, ouiaId, ouiaSafe);\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      titleId = _React$useState2[0],\n      setTitleId = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      ariaProps = _React$useState4[0],\n      setAriaProps = _React$useState4[1];\n\n  if (isCompact && isLarge) {\n    // eslint-disable-next-line no-console\n    console.warn('Card: Cannot use isCompact with isLarge. Defaulting to isCompact');\n    isLarge = false;\n  }\n\n  var getSelectableModifiers = function getSelectableModifiers() {\n    if (isDisabledRaised) {\n      return css(styles.modifiers.nonSelectableRaised);\n    }\n\n    if (isSelectableRaised) {\n      return css(styles.modifiers.selectableRaised, isSelected && styles.modifiers.selectedRaised);\n    }\n\n    if (isSelectable || isHoverable) {\n      return css(styles.modifiers.selectable, isSelected && styles.modifiers.selected);\n    }\n\n    return '';\n  };\n\n  var containsCardTitleChildRef = React.useRef(false);\n\n  var registerTitleId = function registerTitleId(id) {\n    setTitleId(id);\n    containsCardTitleChildRef.current = !!id;\n  };\n\n  React.useEffect(function () {\n    if (selectableInputAriaLabel) {\n      setAriaProps({\n        'aria-label': selectableInputAriaLabel\n      });\n    } else if (titleId) {\n      setAriaProps({\n        'aria-labelledby': titleId\n      });\n    } else if (hasSelectableInput && !containsCardTitleChildRef.current) {\n      setAriaProps({}); // eslint-disable-next-line no-console\n\n      console.warn('If no CardTitle component is passed as a child of Card the selectableInputAriaLabel prop must be passed');\n    }\n  }, [hasSelectableInput, selectableInputAriaLabel, titleId]);\n  return React.createElement(CardContext.Provider, {\n    value: {\n      cardId: id,\n      registerTitleId: registerTitleId,\n      isExpanded: isExpanded\n    }\n  }, hasSelectableInput && React.createElement(\"input\", Object.assign({\n    className: \"pf-screen-reader\",\n    id: \"\".concat(id, \"-input\")\n  }, ariaProps, {\n    type: \"checkbox\",\n    checked: isSelected,\n    onChange: function onChange(event) {\n      return onSelectableInputChange(id, event);\n    },\n    disabled: isDisabledRaised,\n    tabIndex: -1\n  })), React.createElement(Component, Object.assign({\n    id: id,\n    className: css(styles.card, isCompact && styles.modifiers.compact, isExpanded && styles.modifiers.expanded, isFlat && styles.modifiers.flat, isRounded && styles.modifiers.rounded, isLarge && styles.modifiers.displayLg, isFullHeight && styles.modifiers.fullHeight, isPlain && styles.modifiers.plain, getSelectableModifiers(), className),\n    tabIndex: isSelectable || isSelectableRaised ? '0' : undefined\n  }, props, ouiaProps), children));\n};\nCard.displayName = 'Card';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Card/Card.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { css } from '@patternfly/react-styles';\nimport { useOUIAProps, OUIAProps } from '../../helpers';\n\nexport interface CardProps extends React.HTMLProps<HTMLElement>, OUIAProps {\n  /** Content rendered inside the Card */\n  children?: React.ReactNode;\n  /** ID of the Card. Also passed back in the CardHeader onExpand callback. */\n  id?: string;\n  /** Additional classes added to the Card */\n  className?: string;\n  /** Sets the base component to render. defaults to article */\n  component?: keyof JSX.IntrinsicElements;\n  /** @deprecated to make a card hoverable, use isSelectable or isSelectableRaised. */\n  isHoverable?: boolean;\n  /** Modifies the card to include compact styling. Should not be used with isLarge. */\n  isCompact?: boolean;\n  /** Modifies the card to include selectable styling */\n  isSelectable?: boolean;\n  /** @beta Specifies the card is selectable, and applies the new raised styling on hover and select */\n  isSelectableRaised?: boolean;\n  /** Modifies the card to include selected styling */\n  isSelected?: boolean;\n  /** @beta Modifies a raised selectable card to have disabled styling */\n  isDisabledRaised?: boolean;\n  /** Modifies the card to include flat styling */\n  isFlat?: boolean;\n  /** Modifies the card to include rounded styling */\n  isRounded?: boolean;\n  /** Modifies the card to be large. Should not be used with isCompact. */\n  isLarge?: boolean;\n  /** Cause component to consume the available height of its container */\n  isFullHeight?: boolean;\n  /** Modifies the card to include plain styling; this removes border and background */\n  isPlain?: boolean;\n  /** Flag indicating if a card is expanded. Modifies the card to be expandable. */\n  isExpanded?: boolean;\n  /** Flag indicating that the card should render a hidden input to make it selectable */\n  hasSelectableInput?: boolean;\n  /** Aria label to apply to the selectable input if one is rendered */\n  selectableInputAriaLabel?: string;\n  /** Callback that executes when the selectable input is changed */\n  onSelectableInputChange?: (labelledBy: string, event: React.FormEvent<HTMLInputElement>) => void;\n}\n\ninterface CardContextProps {\n  cardId: string;\n  registerTitleId: (id: string) => void;\n  isExpanded: boolean;\n}\n\ninterface AriaProps {\n  'aria-label'?: string;\n  'aria-labelledby'?: string;\n}\n\nexport const CardContext = React.createContext<Partial<CardContextProps>>({\n  cardId: '',\n  registerTitleId: () => {},\n  isExpanded: false\n});\n\nexport const Card: React.FunctionComponent<CardProps> = ({\n  children = null,\n  id = '',\n  className = '',\n  component = 'article',\n  isHoverable = false,\n  isCompact = false,\n  isSelectable = false,\n  isSelectableRaised = false,\n  isSelected = false,\n  isDisabledRaised = false,\n  isFlat = false,\n  isExpanded = false,\n  isRounded = false,\n  isLarge = false,\n  isFullHeight = false,\n  isPlain = false,\n  ouiaId,\n  ouiaSafe = true,\n  hasSelectableInput = false,\n  selectableInputAriaLabel,\n  onSelectableInputChange = () => {},\n  ...props\n}: CardProps) => {\n  const Component = component as any;\n  const ouiaProps = useOUIAProps(Card.displayName, ouiaId, ouiaSafe);\n  const [titleId, setTitleId] = React.useState('');\n  const [ariaProps, setAriaProps] = React.useState<AriaProps>();\n\n  if (isCompact && isLarge) {\n    // eslint-disable-next-line no-console\n    console.warn('Card: Cannot use isCompact with isLarge. Defaulting to isCompact');\n    isLarge = false;\n  }\n\n  const getSelectableModifiers = () => {\n    if (isDisabledRaised) {\n      return css(styles.modifiers.nonSelectableRaised);\n    }\n    if (isSelectableRaised) {\n      return css(styles.modifiers.selectableRaised, isSelected && styles.modifiers.selectedRaised);\n    }\n    if (isSelectable || isHoverable) {\n      return css(styles.modifiers.selectable, isSelected && styles.modifiers.selected);\n    }\n    return '';\n  };\n\n  const containsCardTitleChildRef = React.useRef(false);\n\n  const registerTitleId = (id: string) => {\n    setTitleId(id);\n    containsCardTitleChildRef.current = !!id;\n  };\n\n  React.useEffect(() => {\n    if (selectableInputAriaLabel) {\n      setAriaProps({ 'aria-label': selectableInputAriaLabel });\n    } else if (titleId) {\n      setAriaProps({ 'aria-labelledby': titleId });\n    } else if (hasSelectableInput && !containsCardTitleChildRef.current) {\n      setAriaProps({});\n      // eslint-disable-next-line no-console\n      console.warn(\n        'If no CardTitle component is passed as a child of Card the selectableInputAriaLabel prop must be passed'\n      );\n    }\n  }, [hasSelectableInput, selectableInputAriaLabel, titleId]);\n\n  return (\n    <CardContext.Provider\n      value={{\n        cardId: id,\n        registerTitleId,\n        isExpanded\n      }}\n    >\n      {hasSelectableInput && (\n        <input\n          className=\"pf-screen-reader\"\n          id={`${id}-input`}\n          {...ariaProps}\n          type=\"checkbox\"\n          checked={isSelected}\n          onChange={event => onSelectableInputChange(id, event)}\n          disabled={isDisabledRaised}\n          tabIndex={-1}\n        />\n      )}\n      <Component\n        id={id}\n        className={css(\n          styles.card,\n          isCompact && styles.modifiers.compact,\n          isExpanded && styles.modifiers.expanded,\n          isFlat && styles.modifiers.flat,\n          isRounded && styles.modifiers.rounded,\n          isLarge && styles.modifiers.displayLg,\n          isFullHeight && styles.modifiers.fullHeight,\n          isPlain && styles.modifiers.plain,\n          getSelectableModifiers(),\n          className\n        )}\n        tabIndex={isSelectable || isSelectableRaised ? '0' : undefined}\n        {...props}\n        {...ouiaProps}\n      >\n        {children}\n      </Component>\n    </CardContext.Provider>\n  );\n};\nCard.displayName = 'Card';\n"]},"metadata":{},"sourceType":"module"}