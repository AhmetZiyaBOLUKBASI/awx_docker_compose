{"ast":null,"code":"import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useCallback,useEffect}from'react';import{useHistory}from'react-router-dom';import{useField}from'formik';import styled from'styled-components';import{Alert}from'@patternfly/react-core';import{InventoriesAPI}from'api';import{getSearchableKeys}from'components/PaginatedTable';import{getQSConfig,parseQueryString}from'util/qs';import useRequest from'hooks/useRequest';import OptionsList from'../../OptionsList';import ContentLoading from'../../ContentLoading';import ContentError from'../../ContentError';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var InventoryErrorAlert=styled(Alert)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin-bottom: 20px;\\n\"])));var QS_CONFIG=getQSConfig('inventory',{page:1,page_size:5,order_by:'name',role_level:'use_role'});function InventoryStep(_ref){var _ref$warningMessage=_ref.warningMessage,warningMessage=_ref$warningMessage===void 0?null:_ref$warningMessage;var _useField=useField('inventory'),_useField2=_slicedToArray(_useField,3),field=_useField2[0],meta=_useField2[1],helpers=_useField2[2];var history=useHistory();var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _actionsResponse$data,_actionsResponse$data2;var params,_yield$Promise$all,_yield$Promise$all2,data,actionsResponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:params=parseQueryString(QS_CONFIG,history.location.search);_context.next=3;return Promise.all([InventoriesAPI.read(params),InventoriesAPI.readOptions()]);case 3:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);data=_yield$Promise$all2[0].data;actionsResponse=_yield$Promise$all2[1];return _context.abrupt(\"return\",{inventories:data.results,count:data.count,relatedSearchableKeys:((actionsResponse===null||actionsResponse===void 0?void 0:(_actionsResponse$data=actionsResponse.data)===null||_actionsResponse$data===void 0?void 0:_actionsResponse$data.related_search_fields)||[]).map(function(val){return val.slice(0,-8);}),searchableKeys:getSearchableKeys((_actionsResponse$data2=actionsResponse.data.actions)===null||_actionsResponse$data2===void 0?void 0:_actionsResponse$data2.GET)});case 8:case\"end\":return _context.stop();}}},_callee);})),[history.location]),{count:0,inventories:[],relatedSearchableKeys:[],searchableKeys:[]}),isLoading=_useRequest.isLoading,error=_useRequest.error,_useRequest$result=_useRequest.result,inventories=_useRequest$result.inventories,count=_useRequest$result.count,relatedSearchableKeys=_useRequest$result.relatedSearchableKeys,searchableKeys=_useRequest$result.searchableKeys,fetchInventories=_useRequest.request;useEffect(function(){fetchInventories();},[fetchInventories]);if(isLoading){return/*#__PURE__*/_jsx(ContentLoading,{});}if(error){return/*#__PURE__*/_jsx(ContentError,{error:error});}return/*#__PURE__*/_jsxs(_Fragment,{children:[meta.touched&&meta.error&&/*#__PURE__*/_jsx(InventoryErrorAlert,{variant:\"danger\",isInline:true,title:meta.error}),warningMessage,/*#__PURE__*/_jsx(OptionsList,{value:field.value?[field.value]:[],options:inventories,optionCount:count,searchColumns:[{name:/*i18n*/i18n._(\"Name\"),key:'name__icontains',isDefault:true},{name:/*i18n*/i18n._(\"Created By (Username)\"),key:'created_by__username__icontains'},{name:/*i18n*/i18n._(\"Modified By (Username)\"),key:'modified_by__username__icontains'}],sortColumns:[{name:/*i18n*/i18n._(\"Name\"),key:'name'}],searchableKeys:searchableKeys,relatedSearchableKeys:relatedSearchableKeys,header:/*i18n*/i18n._(\"Inventory\"),name:\"inventory\",qsConfig:QS_CONFIG,readOnly:true,selectItem:helpers.setValue,deselectItem:function deselectItem(){return field.onChange(null);}})]});}export default InventoryStep;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/LaunchPrompt/steps/InventoryStep.js"],"names":["React","useCallback","useEffect","useHistory","useField","styled","Alert","InventoriesAPI","getSearchableKeys","getQSConfig","parseQueryString","useRequest","OptionsList","ContentLoading","ContentError","InventoryErrorAlert","QS_CONFIG","page","page_size","order_by","role_level","InventoryStep","warningMessage","field","meta","helpers","history","params","location","search","Promise","all","read","readOptions","data","actionsResponse","inventories","results","count","relatedSearchableKeys","related_search_fields","map","val","slice","searchableKeys","actions","GET","isLoading","error","result","fetchInventories","request","touched","value","name","key","isDefault","setValue","onChange"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { t } from '@lingui/macro';\nimport { useField } from 'formik';\nimport styled from 'styled-components';\nimport { Alert } from '@patternfly/react-core';\nimport { InventoriesAPI } from 'api';\nimport { getSearchableKeys } from 'components/PaginatedTable';\nimport { getQSConfig, parseQueryString } from 'util/qs';\nimport useRequest from 'hooks/useRequest';\nimport OptionsList from '../../OptionsList';\nimport ContentLoading from '../../ContentLoading';\nimport ContentError from '../../ContentError';\n\nconst InventoryErrorAlert = styled(Alert)`\n  margin-bottom: 20px;\n`;\n\nconst QS_CONFIG = getQSConfig('inventory', {\n  page: 1,\n  page_size: 5,\n  order_by: 'name',\n  role_level: 'use_role',\n});\n\nfunction InventoryStep({ warningMessage = null }) {\n  const [field, meta, helpers] = useField('inventory');\n\n  const history = useHistory();\n\n  const {\n    isLoading,\n    error,\n    result: { inventories, count, relatedSearchableKeys, searchableKeys },\n    request: fetchInventories,\n  } = useRequest(\n    useCallback(async () => {\n      const params = parseQueryString(QS_CONFIG, history.location.search);\n      const [{ data }, actionsResponse] = await Promise.all([\n        InventoriesAPI.read(params),\n        InventoriesAPI.readOptions(),\n      ]);\n      return {\n        inventories: data.results,\n        count: data.count,\n        relatedSearchableKeys: (\n          actionsResponse?.data?.related_search_fields || []\n        ).map((val) => val.slice(0, -8)),\n        searchableKeys: getSearchableKeys(actionsResponse.data.actions?.GET),\n      };\n    }, [history.location]),\n    {\n      count: 0,\n      inventories: [],\n      relatedSearchableKeys: [],\n      searchableKeys: [],\n    }\n  );\n\n  useEffect(() => {\n    fetchInventories();\n  }, [fetchInventories]);\n\n  if (isLoading) {\n    return <ContentLoading />;\n  }\n  if (error) {\n    return <ContentError error={error} />;\n  }\n\n  return (\n    <>\n      {meta.touched && meta.error && (\n        <InventoryErrorAlert variant=\"danger\" isInline title={meta.error} />\n      )}\n      {warningMessage}\n      <OptionsList\n        value={field.value ? [field.value] : []}\n        options={inventories}\n        optionCount={count}\n        searchColumns={[\n          {\n            name: t`Name`,\n            key: 'name__icontains',\n            isDefault: true,\n          },\n          {\n            name: t`Created By (Username)`,\n            key: 'created_by__username__icontains',\n          },\n          {\n            name: t`Modified By (Username)`,\n            key: 'modified_by__username__icontains',\n          },\n        ]}\n        sortColumns={[\n          {\n            name: t`Name`,\n            key: 'name',\n          },\n        ]}\n        searchableKeys={searchableKeys}\n        relatedSearchableKeys={relatedSearchableKeys}\n        header={t`Inventory`}\n        name=\"inventory\"\n        qsConfig={QS_CONFIG}\n        readOnly\n        selectItem={helpers.setValue}\n        deselectItem={() => field.onChange(null)}\n      />\n    </>\n  );\n}\n\nexport default InventoryStep;\n"]},"metadata":{},"sourceType":"module"}