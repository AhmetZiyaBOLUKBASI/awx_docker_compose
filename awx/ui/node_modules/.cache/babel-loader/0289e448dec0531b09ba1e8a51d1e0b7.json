{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _styled4 from\"styled-components\";import _styled3 from\"styled-components\";import _styled2 from\"styled-components\";import _styled from\"styled-components\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useState,useCallback,useEffect}from'react';import{withRouter}from'react-router-dom';import{ToolbarItem,Alert}from'@patternfly/react-core';import{CredentialsAPI,CredentialTypesAPI}from'api';import{getSearchableKeys}from'components/PaginatedTable';import useRequest from'hooks/useRequest';import{getQSConfig,parseQueryString}from'util/qs';import useIsMounted from'hooks/useIsMounted';import AnsibleSelect from'../AnsibleSelect';import CredentialChip from'../CredentialChip';import OptionsList from'../OptionsList';import Lookup from'./Lookup';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var QS_CONFIG=getQSConfig('credentials',{page:1,page_size:5,order_by:'name'});function loadCredentials(_x,_x2){return _loadCredentials.apply(this,arguments);}function _loadCredentials(){_loadCredentials=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(params,selectedCredentialTypeId){var _yield$CredentialsAPI,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:params.credential_type=selectedCredentialTypeId||1;_context3.next=3;return CredentialsAPI.read(params);case 3:_yield$CredentialsAPI=_context3.sent;data=_yield$CredentialsAPI.data;return _context3.abrupt(\"return\",data);case 6:case\"end\":return _context3.stop();}}},_callee3);}));return _loadCredentials.apply(this,arguments);}var _StyledAlert=_styled(Alert).withConfig({displayName:\"MultiCredentialsLookup___StyledAlert\",componentId:\"sc-1kjqq6e-0\"})([\"margin-bottom:20px;\"]);var _StyledToolbarItem=_styled(ToolbarItem).withConfig({displayName:\"MultiCredentialsLookup___StyledToolbarItem\",componentId:\"sc-1kjqq6e-1\"})([\" display:flex;align-items:center;\"]);var _StyledDiv=_styled(\"div\").withConfig({displayName:\"MultiCredentialsLookup___StyledDiv\",componentId:\"sc-1kjqq6e-2\"})([\"flex:0 0 25%;margin-right:32px\"]);var _StyledAnsibleSelect=_styled(AnsibleSelect).withConfig({displayName:\"MultiCredentialsLookup___StyledAnsibleSelect\",componentId:\"sc-1kjqq6e-3\"})([\"flex:1 1 75%;\"]);function MultiCredentialsLookup(_ref){var value=_ref.value,onChange=_ref.onChange,onError=_ref.onError,history=_ref.history,fieldName=_ref.fieldName,validate=_ref.validate;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),selectedType=_useState2[0],setSelectedType=_useState2[1];var isMounted=useIsMounted();var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var types,match;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return CredentialTypesAPI.loadAllTypes();case 2:types=_context.sent;match=types.find(function(type){return type.kind==='ssh';})||types[0];if(isMounted.current){setSelectedType(match);}return _context.abrupt(\"return\",types);case 6:case\"end\":return _context.stop();}}},_callee);})),[]),[]),credentialTypes=_useRequest.result,fetchTypes=_useRequest.request,typesError=_useRequest.error,isTypesLoading=_useRequest.isLoading;useEffect(function(){fetchTypes();},[fetchTypes]);var _useRequest2=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _actionsResponse$data,_actionsResponse$data2;var params,_yield$Promise$all,_yield$Promise$all2,_yield$Promise$all2$,results,count,actionsResponse;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(selectedType){_context2.next=2;break;}return _context2.abrupt(\"return\",{credentials:[],credentialsCount:0,relatedSearchableKeys:[],searchableKeys:[]});case 2:params=parseQueryString(QS_CONFIG,history.location.search);_context2.next=5;return Promise.all([loadCredentials(params,selectedType.id),CredentialsAPI.readOptions()]);case 5:_yield$Promise$all=_context2.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);_yield$Promise$all2$=_yield$Promise$all2[0];results=_yield$Promise$all2$.results;count=_yield$Promise$all2$.count;actionsResponse=_yield$Promise$all2[1];results.map(function(result){var _result$inputs;if(result.kind==='vault'&&(_result$inputs=result.inputs)!==null&&_result$inputs!==void 0&&_result$inputs.vault_id){result.label=\"\".concat(result.name,\" | \").concat(result.inputs.vault_id);return result;}result.label=\"\".concat(result.name);return result;});return _context2.abrupt(\"return\",{credentials:results,credentialsCount:count,relatedSearchableKeys:((actionsResponse===null||actionsResponse===void 0?void 0:(_actionsResponse$data=actionsResponse.data)===null||_actionsResponse$data===void 0?void 0:_actionsResponse$data.related_search_fields)||[]).map(function(val){return val.slice(0,-8);}),searchableKeys:getSearchableKeys((_actionsResponse$data2=actionsResponse.data.actions)===null||_actionsResponse$data2===void 0?void 0:_actionsResponse$data2.GET)});case 13:case\"end\":return _context2.stop();}}},_callee2);})),[selectedType,history.location]),{credentials:[],credentialsCount:0,relatedSearchableKeys:[],searchableKeys:[]}),_useRequest2$result=_useRequest2.result,credentials=_useRequest2$result.credentials,credentialsCount=_useRequest2$result.credentialsCount,relatedSearchableKeys=_useRequest2$result.relatedSearchableKeys,searchableKeys=_useRequest2$result.searchableKeys,fetchCredentials=_useRequest2.request,credentialsError=_useRequest2.error,isCredentialsLoading=_useRequest2.isLoading;useEffect(function(){fetchCredentials();},[fetchCredentials]);useEffect(function(){if(typesError||credentialsError){onError(typesError||credentialsError);}},[typesError,credentialsError,onError]);var renderChip=function renderChip(_ref4){var item=_ref4.item,removeItem=_ref4.removeItem,canDelete=_ref4.canDelete;return/*#__PURE__*/_jsx(CredentialChip,{onClick:function onClick(){return removeItem(item);},isReadOnly:!canDelete,credential:item},item.id);};var isVault=(selectedType===null||selectedType===void 0?void 0:selectedType.kind)==='vault';return/*#__PURE__*/_jsx(Lookup,{id:\"multiCredential\",header:/*i18n*/i18n._(\"Credentials\"),value:value,fieldName:fieldName,validate:validate,multiple:true,onChange:onChange,onUpdate:fetchCredentials,qsConfig:QS_CONFIG,isLoading:isTypesLoading||isCredentialsLoading,renderItemChip:renderChip,renderOptionsList:function renderOptionsList(_ref5){var state=_ref5.state,dispatch=_ref5.dispatch,canDelete=_ref5.canDelete;return/*#__PURE__*/_jsxs(_Fragment,{children:[isVault&&/*#__PURE__*/_jsx(_StyledAlert,{variant:\"info\",isInline:true,title:/*i18n*/i18n._(\"You cannot select multiple vault credentials with the same vault ID. Doing so will automatically deselect the other with the same vault ID.\"),ouiaId:\"multi-credentials-lookup-alert\"}),credentialTypes&&credentialTypes.length>0&&/*#__PURE__*/_jsxs(_StyledToolbarItem,{children:[/*#__PURE__*/_jsx(_StyledDiv,{children:/*i18n*/i18n._(\"Selected Category\")}),/*#__PURE__*/_jsx(_StyledAnsibleSelect,{id:\"multiCredentialsLookUp-select\",label:/*i18n*/i18n._(\"Selected Category\"),data:credentialTypes.map(function(type){return{key:type.id,value:type.id,label:type.name,isDisabled:false};}),value:selectedType&&selectedType.id,onChange:function onChange(e,id){setSelectedType(credentialTypes.find(function(o){return o.id===parseInt(id,10);}));}})]}),/*#__PURE__*/_jsx(OptionsList,{value:state.selectedItems,options:credentials,optionCount:credentialsCount,searchColumns:[{name:/*i18n*/i18n._(\"Name\"),key:'name__icontains',isDefault:true},{name:/*i18n*/i18n._(\"Created By (Username)\"),key:'created_by__username__icontains'},{name:/*i18n*/i18n._(\"Modified By (Username)\"),key:'modified_by__username__icontains'}],sortColumns:[{name:/*i18n*/i18n._(\"Name\"),key:'name'}],searchableKeys:searchableKeys,relatedSearchableKeys:relatedSearchableKeys,multiple:isVault,header:/*i18n*/i18n._(\"Credentials\"),displayKey:isVault?'label':'name',name:\"credentials\",qsConfig:QS_CONFIG,readOnly:!canDelete,selectItem:function selectItem(item){var hasSameVaultID=function hasSameVaultID(val){var _val$inputs,_val$inputs2,_item$inputs;return(val===null||val===void 0?void 0:(_val$inputs=val.inputs)===null||_val$inputs===void 0?void 0:_val$inputs.vault_id)!==undefined&&(val===null||val===void 0?void 0:(_val$inputs2=val.inputs)===null||_val$inputs2===void 0?void 0:_val$inputs2.vault_id)===(item===null||item===void 0?void 0:(_item$inputs=item.inputs)===null||_item$inputs===void 0?void 0:_item$inputs.vault_id);};var hasSameCredentialType=function hasSameCredentialType(val){return val.credential_type===item.credential_type;};var selectedItems=state.selectedItems.filter(function(i){return isVault?!hasSameVaultID(i):!hasSameCredentialType(i);});selectedItems.push(item);return dispatch({type:'SET_SELECTED_ITEMS',selectedItems:selectedItems});},deselectItem:function deselectItem(item){return dispatch({type:'DESELECT_ITEM',item:item});},renderItemChip:renderChip})]});}});}MultiCredentialsLookup.defaultProps={value:[],validate:function validate(){return undefined;},fieldName:'credentials'};export{MultiCredentialsLookup as _MultiCredentialsLookup};export default withRouter(MultiCredentialsLookup);","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/Lookup/MultiCredentialsLookup.js"],"names":["React","useState","useCallback","useEffect","withRouter","ToolbarItem","Alert","CredentialsAPI","CredentialTypesAPI","getSearchableKeys","useRequest","getQSConfig","parseQueryString","useIsMounted","AnsibleSelect","CredentialChip","OptionsList","Lookup","QS_CONFIG","page","page_size","order_by","loadCredentials","params","selectedCredentialTypeId","credential_type","read","data","MultiCredentialsLookup","value","onChange","onError","history","fieldName","validate","selectedType","setSelectedType","isMounted","loadAllTypes","types","match","find","type","kind","current","credentialTypes","result","fetchTypes","request","typesError","error","isTypesLoading","isLoading","credentials","credentialsCount","relatedSearchableKeys","searchableKeys","location","search","Promise","all","id","readOptions","results","count","actionsResponse","map","inputs","vault_id","label","name","related_search_fields","val","slice","actions","GET","fetchCredentials","credentialsError","isCredentialsLoading","renderChip","item","removeItem","canDelete","isVault","state","dispatch","length","key","isDisabled","e","o","parseInt","selectedItems","isDefault","hasSameVaultID","undefined","hasSameCredentialType","filter","i","push","defaultProps","_MultiCredentialsLookup"],"mappings":"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","sourcesContent":["import 'styled-components/macro';\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { t } from '@lingui/macro';\nimport { ToolbarItem, Alert } from '@patternfly/react-core';\nimport { CredentialsAPI, CredentialTypesAPI } from 'api';\nimport { getSearchableKeys } from 'components/PaginatedTable';\nimport useRequest from 'hooks/useRequest';\nimport { getQSConfig, parseQueryString } from 'util/qs';\nimport useIsMounted from 'hooks/useIsMounted';\nimport AnsibleSelect from '../AnsibleSelect';\nimport CredentialChip from '../CredentialChip';\nimport OptionsList from '../OptionsList';\nimport Lookup from './Lookup';\n\nconst QS_CONFIG = getQSConfig('credentials', {\n  page: 1,\n  page_size: 5,\n  order_by: 'name',\n});\n\nasync function loadCredentials(params, selectedCredentialTypeId) {\n  params.credential_type = selectedCredentialTypeId || 1;\n  const { data } = await CredentialsAPI.read(params);\n  return data;\n}\n\nfunction MultiCredentialsLookup({\n  value,\n  onChange,\n  onError,\n  history,\n  fieldName,\n  validate,\n}) {\n  const [selectedType, setSelectedType] = useState(null);\n  const isMounted = useIsMounted();\n\n  const {\n    result: credentialTypes,\n    request: fetchTypes,\n    error: typesError,\n    isLoading: isTypesLoading,\n  } = useRequest(\n    useCallback(async () => {\n      const types = await CredentialTypesAPI.loadAllTypes();\n      const match = types.find((type) => type.kind === 'ssh') || types[0];\n      if (isMounted.current) {\n        setSelectedType(match);\n      }\n      return types;\n      /* eslint-disable-next-line react-hooks/exhaustive-deps */\n    }, []),\n    []\n  );\n\n  useEffect(() => {\n    fetchTypes();\n  }, [fetchTypes]);\n\n  const {\n    result: {\n      credentials,\n      credentialsCount,\n      relatedSearchableKeys,\n      searchableKeys,\n    },\n    request: fetchCredentials,\n    error: credentialsError,\n    isLoading: isCredentialsLoading,\n  } = useRequest(\n    useCallback(async () => {\n      if (!selectedType) {\n        return {\n          credentials: [],\n          credentialsCount: 0,\n          relatedSearchableKeys: [],\n          searchableKeys: [],\n        };\n      }\n\n      const params = parseQueryString(QS_CONFIG, history.location.search);\n      const [{ results, count }, actionsResponse] = await Promise.all([\n        loadCredentials(params, selectedType.id),\n        CredentialsAPI.readOptions(),\n      ]);\n\n      results.map((result) => {\n        if (result.kind === 'vault' && result.inputs?.vault_id) {\n          result.label = `${result.name} | ${result.inputs.vault_id}`;\n          return result;\n        }\n        result.label = `${result.name}`;\n        return result;\n      });\n\n      return {\n        credentials: results,\n        credentialsCount: count,\n        relatedSearchableKeys: (\n          actionsResponse?.data?.related_search_fields || []\n        ).map((val) => val.slice(0, -8)),\n        searchableKeys: getSearchableKeys(actionsResponse.data.actions?.GET),\n      };\n    }, [selectedType, history.location]),\n    {\n      credentials: [],\n      credentialsCount: 0,\n      relatedSearchableKeys: [],\n      searchableKeys: [],\n    }\n  );\n\n  useEffect(() => {\n    fetchCredentials();\n  }, [fetchCredentials]);\n\n  useEffect(() => {\n    if (typesError || credentialsError) {\n      onError(typesError || credentialsError);\n    }\n  }, [typesError, credentialsError, onError]);\n\n  const renderChip = ({ item, removeItem, canDelete }) => (\n    <CredentialChip\n      key={item.id}\n      onClick={() => removeItem(item)}\n      isReadOnly={!canDelete}\n      credential={item}\n    />\n  );\n  const isVault = selectedType?.kind === 'vault';\n\n  return (\n    <Lookup\n      id=\"multiCredential\"\n      header={t`Credentials`}\n      value={value}\n      fieldName={fieldName}\n      validate={validate}\n      multiple\n      onChange={onChange}\n      onUpdate={fetchCredentials}\n      qsConfig={QS_CONFIG}\n      isLoading={isTypesLoading || isCredentialsLoading}\n      renderItemChip={renderChip}\n      renderOptionsList={({ state, dispatch, canDelete }) => (\n        <>\n          {isVault && (\n            <Alert\n              variant=\"info\"\n              isInline\n              css=\"margin-bottom: 20px;\"\n              title={t`You cannot select multiple vault credentials with the same vault ID. Doing so will automatically deselect the other with the same vault ID.`}\n              ouiaId=\"multi-credentials-lookup-alert\"\n            />\n          )}\n          {credentialTypes && credentialTypes.length > 0 && (\n            <ToolbarItem css=\" display: flex; align-items: center;\">\n              <div css=\"flex: 0 0 25%; margin-right: 32px\">\n                {t`Selected Category`}\n              </div>\n              <AnsibleSelect\n                css=\"flex: 1 1 75%;\"\n                id=\"multiCredentialsLookUp-select\"\n                label={t`Selected Category`}\n                data={credentialTypes.map((type) => ({\n                  key: type.id,\n                  value: type.id,\n                  label: type.name,\n                  isDisabled: false,\n                }))}\n                value={selectedType && selectedType.id}\n                onChange={(e, id) => {\n                  setSelectedType(\n                    credentialTypes.find((o) => o.id === parseInt(id, 10))\n                  );\n                }}\n              />\n            </ToolbarItem>\n          )}\n          <OptionsList\n            value={state.selectedItems}\n            options={credentials}\n            optionCount={credentialsCount}\n            searchColumns={[\n              {\n                name: t`Name`,\n                key: 'name__icontains',\n                isDefault: true,\n              },\n              {\n                name: t`Created By (Username)`,\n                key: 'created_by__username__icontains',\n              },\n              {\n                name: t`Modified By (Username)`,\n                key: 'modified_by__username__icontains',\n              },\n            ]}\n            sortColumns={[\n              {\n                name: t`Name`,\n                key: 'name',\n              },\n            ]}\n            searchableKeys={searchableKeys}\n            relatedSearchableKeys={relatedSearchableKeys}\n            multiple={isVault}\n            header={t`Credentials`}\n            displayKey={isVault ? 'label' : 'name'}\n            name=\"credentials\"\n            qsConfig={QS_CONFIG}\n            readOnly={!canDelete}\n            selectItem={(item) => {\n              const hasSameVaultID = (val) =>\n                val?.inputs?.vault_id !== undefined &&\n                val?.inputs?.vault_id === item?.inputs?.vault_id;\n              const hasSameCredentialType = (val) =>\n                val.credential_type === item.credential_type;\n              const selectedItems = state.selectedItems.filter((i) =>\n                isVault ? !hasSameVaultID(i) : !hasSameCredentialType(i)\n              );\n              selectedItems.push(item);\n              return dispatch({\n                type: 'SET_SELECTED_ITEMS',\n                selectedItems,\n              });\n            }}\n            deselectItem={(item) => dispatch({ type: 'DESELECT_ITEM', item })}\n            renderItemChip={renderChip}\n          />\n        </>\n      )}\n    />\n  );\n}\n\nMultiCredentialsLookup.propTypes = {\n  value: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      description: PropTypes.string,\n      kind: PropTypes.string,\n      clound: PropTypes.bool,\n    })\n  ),\n  onChange: PropTypes.func.isRequired,\n  onError: PropTypes.func.isRequired,\n  validate: PropTypes.func,\n  fieldName: PropTypes.string,\n};\n\nMultiCredentialsLookup.defaultProps = {\n  value: [],\n  validate: () => undefined,\n  fieldName: 'credentials',\n};\n\nexport { MultiCredentialsLookup as _MultiCredentialsLookup };\nexport default withRouter(MultiCredentialsLookup);\n"]},"metadata":{},"sourceType":"module"}