{"ast":null,"code":"import _taggedTemplateLiteral from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import{i18n}from\"@lingui/core\";import React from'react';import{useRouteMatch}from'react-router-dom';import styled from'styled-components';import{Switch,Checkbox,Button,Toolbar as _Toolbar,ToolbarContent,ToolbarGroup,ToolbarItem,Tooltip}from'@patternfly/react-core';import{ToolbarAddButton}from'components/PaginatedTable';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Toolbar=styled(_Toolbar)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin-left: 10px;\\n\"])));var SwitchWrapper=styled(ToolbarItem)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  padding-left: 4px;\\n\"])));function SurveyToolbar(_ref){var canEdit=_ref.canEdit,isAllSelected=_ref.isAllSelected,onSelectAll=_ref.onSelectAll,surveyEnabled=_ref.surveyEnabled,onToggleSurvey=_ref.onToggleSurvey,isDeleteDisabled=_ref.isDeleteDisabled,onToggleDeleteModal=_ref.onToggleDeleteModal,onOpenOrderModal=_ref.onOpenOrderModal,emptyList=_ref.emptyList;isDeleteDisabled=!canEdit||isDeleteDisabled;var match=useRouteMatch();return/*#__PURE__*/_jsx(Toolbar,{id:\"survey-toolbar\",ouiaId:\"survey-toolbar\",children:/*#__PURE__*/_jsxs(ToolbarContent,{children:[/*#__PURE__*/_jsx(ToolbarItem,{children:/*#__PURE__*/_jsx(Checkbox,{isDisabled:!canEdit,isChecked:isAllSelected,onChange:function onChange(isChecked){onSelectAll(isChecked);},\"aria-label\":/*i18n*/i18n._(\"Select all\"),id:\"select-all\",ouiaId:\"select-all\"})}),/*#__PURE__*/_jsxs(ToolbarGroup,{children:[/*#__PURE__*/_jsx(ToolbarItem,{children:/*#__PURE__*/_jsx(ToolbarAddButton,{isDisabled:!canEdit,linkTo:\"\".concat(match.url,\"/add\")})}),canEdit&&onOpenOrderModal&&/*#__PURE__*/_jsx(ToolbarItem,{children:/*#__PURE__*/_jsx(Tooltip,{content:/*i18n*/i18n._(\"Click to rearrange the order of the survey questions\"),children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){onOpenOrderModal();},variant:\"secondary\",ouiaId:\"edit-order\",children:/*i18n*/i18n._(\"Edit Order\")})})}),/*#__PURE__*/_jsx(ToolbarItem,{children:/*#__PURE__*/_jsx(Tooltip,{content:isDeleteDisabled?/*i18n*/i18n._(\"Select a question to delete\"):/*i18n*/i18n._(\"Delete survey question\"),children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Button,{ouiaId:\"survey-delete-button\",variant:\"secondary\",isDisabled:isDeleteDisabled,onClick:function onClick(){return onToggleDeleteModal(true);},children:/*i18n*/i18n._(\"Delete\")})})})})]}),!emptyList&&/*#__PURE__*/_jsx(SwitchWrapper,{children:/*#__PURE__*/_jsx(Switch,{\"aria-label\":/*i18n*/i18n._(\"Survey Toggle\"),id:\"survey-toggle\",label:/*i18n*/i18n._(\"Survey Enabled\"),labelOff:/*i18n*/i18n._(\"Survey Disabled\"),isChecked:surveyEnabled,isDisabled:!canEdit,onChange:function onChange(){return onToggleSurvey(!surveyEnabled);}})})]})});}export default SurveyToolbar;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Template/Survey/SurveyToolbar.js"],"names":["React","useRouteMatch","styled","Switch","Checkbox","Button","Toolbar","_Toolbar","ToolbarContent","ToolbarGroup","ToolbarItem","Tooltip","ToolbarAddButton","SwitchWrapper","SurveyToolbar","canEdit","isAllSelected","onSelectAll","surveyEnabled","onToggleSurvey","isDeleteDisabled","onToggleDeleteModal","onOpenOrderModal","emptyList","match","isChecked","url"],"mappings":"2LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,aAAT,KAA8B,kBAA9B,CAGA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,OACEC,MADF,CAEEC,QAFF,CAGEC,MAHF,CAIEC,OAAO,GAAIC,CAAAA,QAJb,CAKEC,cALF,CAMEC,YANF,CAOEC,WAPF,CAQEC,OARF,KASO,wBATP,CAUA,OAASC,gBAAT,KAAiC,2BAAjC,C,wFAEA,GAAMN,CAAAA,OAAO,CAAGJ,MAAM,CAACK,QAAD,CAAT,yFAAb,CAGA,GAAMM,CAAAA,aAAa,CAAGX,MAAM,CAACQ,WAAD,CAAT,2FAAnB,CAIA,QAASI,CAAAA,aAAT,MAUG,IATDC,CAAAA,OASC,MATDA,OASC,CARDC,aAQC,MARDA,aAQC,CAPDC,WAOC,MAPDA,WAOC,CANDC,aAMC,MANDA,aAMC,CALDC,cAKC,MALDA,cAKC,CAJDC,gBAIC,MAJDA,gBAIC,CAHDC,mBAGC,MAHDA,mBAGC,CAFDC,gBAEC,MAFDA,gBAEC,CADDC,SACC,MADDA,SACC,CACDH,gBAAgB,CAAG,CAACL,OAAD,EAAYK,gBAA/B,CACA,GAAMI,CAAAA,KAAK,CAAGvB,aAAa,EAA3B,CACA,mBACE,KAAC,OAAD,EAAS,EAAE,CAAC,gBAAZ,CAA6B,MAAM,CAAC,gBAApC,uBACE,MAAC,cAAD,yBACE,KAAC,WAAD,wBACE,KAAC,QAAD,EACE,UAAU,CAAE,CAACc,OADf,CAEE,SAAS,CAAEC,aAFb,CAGE,QAAQ,CAAE,kBAACS,SAAD,CAAe,CACvBR,WAAW,CAACQ,SAAD,CAAX,CACD,CALH,CAME,qBAAY,oBANd,CAOE,EAAE,CAAC,YAPL,CAQE,MAAM,CAAC,YART,EADF,EADF,cAaE,MAAC,YAAD,yBACE,KAAC,WAAD,wBACE,KAAC,gBAAD,EACE,UAAU,CAAE,CAACV,OADf,CAEE,MAAM,WAAKS,KAAK,CAACE,GAAX,QAFR,EADF,EADF,CAOGX,OAAO,EAAIO,gBAAX,eACC,KAAC,WAAD,wBACE,KAAC,OAAD,EACE,OAAO,SAAE,8DADX,uBAGE,KAAC,MAAD,EACE,OAAO,CAAE,kBAAM,CACbA,gBAAgB,GACjB,CAHH,CAIE,OAAO,CAAC,WAJV,CAKE,MAAM,CAAC,YALT,kBAOG,oBAPH,EAHF,EADF,EARJ,cAwBE,KAAC,WAAD,wBACE,KAAC,OAAD,EACE,OAAO,CACLF,gBAAgB,SACZ,qCADY,SAEZ,gCAJR,uBAOE,kCACE,KAAC,MAAD,EACE,MAAM,CAAC,sBADT,CAEE,OAAO,CAAC,WAFV,CAGE,UAAU,CAAEA,gBAHd,CAIE,OAAO,CAAE,yBAAMC,CAAAA,mBAAmB,CAAC,IAAD,CAAzB,EAJX,kBAMG,gBANH,EADF,EAPF,EADF,EAxBF,GAbF,CA0DG,CAACE,SAAD,eACC,KAAC,aAAD,wBACE,KAAC,MAAD,EACE,qBAAY,uBADd,CAEE,EAAE,CAAC,eAFL,CAGE,KAAK,SAAE,wBAHT,CAIE,QAAQ,SAAE,yBAJZ,CAKE,SAAS,CAAEL,aALb,CAME,UAAU,CAAE,CAACH,OANf,CAOE,QAAQ,CAAE,0BAAMI,CAAAA,cAAc,CAAC,CAACD,aAAF,CAApB,EAPZ,EADF,EA3DJ,GADF,EADF,CA4ED,CAED,cAAeJ,CAAAA,aAAf","sourcesContent":["import React from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { t } from '@lingui/macro';\n\nimport styled from 'styled-components';\n\nimport {\n  Switch,\n  Checkbox,\n  Button,\n  Toolbar as _Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n  Tooltip,\n} from '@patternfly/react-core';\nimport { ToolbarAddButton } from 'components/PaginatedTable';\n\nconst Toolbar = styled(_Toolbar)`\n  margin-left: 10px;\n`;\nconst SwitchWrapper = styled(ToolbarItem)`\n  padding-left: 4px;\n`;\n\nfunction SurveyToolbar({\n  canEdit,\n  isAllSelected,\n  onSelectAll,\n  surveyEnabled,\n  onToggleSurvey,\n  isDeleteDisabled,\n  onToggleDeleteModal,\n  onOpenOrderModal,\n  emptyList,\n}) {\n  isDeleteDisabled = !canEdit || isDeleteDisabled;\n  const match = useRouteMatch();\n  return (\n    <Toolbar id=\"survey-toolbar\" ouiaId=\"survey-toolbar\">\n      <ToolbarContent>\n        <ToolbarItem>\n          <Checkbox\n            isDisabled={!canEdit}\n            isChecked={isAllSelected}\n            onChange={(isChecked) => {\n              onSelectAll(isChecked);\n            }}\n            aria-label={t`Select all`}\n            id=\"select-all\"\n            ouiaId=\"select-all\"\n          />\n        </ToolbarItem>\n        <ToolbarGroup>\n          <ToolbarItem>\n            <ToolbarAddButton\n              isDisabled={!canEdit}\n              linkTo={`${match.url}/add`}\n            />\n          </ToolbarItem>\n          {canEdit && onOpenOrderModal && (\n            <ToolbarItem>\n              <Tooltip\n                content={t`Click to rearrange the order of the survey questions`}\n              >\n                <Button\n                  onClick={() => {\n                    onOpenOrderModal();\n                  }}\n                  variant=\"secondary\"\n                  ouiaId=\"edit-order\"\n                >\n                  {t`Edit Order`}\n                </Button>\n              </Tooltip>\n            </ToolbarItem>\n          )}\n          <ToolbarItem>\n            <Tooltip\n              content={\n                isDeleteDisabled\n                  ? t`Select a question to delete`\n                  : t`Delete survey question`\n              }\n            >\n              <div>\n                <Button\n                  ouiaId=\"survey-delete-button\"\n                  variant=\"secondary\"\n                  isDisabled={isDeleteDisabled}\n                  onClick={() => onToggleDeleteModal(true)}\n                >\n                  {t`Delete`}\n                </Button>\n              </div>\n            </Tooltip>\n          </ToolbarItem>\n        </ToolbarGroup>\n        {!emptyList && (\n          <SwitchWrapper>\n            <Switch\n              aria-label={t`Survey Toggle`}\n              id=\"survey-toggle\"\n              label={t`Survey Enabled`}\n              labelOff={t`Survey Disabled`}\n              isChecked={surveyEnabled}\n              isDisabled={!canEdit}\n              onChange={() => onToggleSurvey(!surveyEnabled)}\n            />\n          </SwitchWrapper>\n        )}\n      </ToolbarContent>\n    </Toolbar>\n  );\n}\n\nexport default SurveyToolbar;\n"]},"metadata":{},"sourceType":"module"}