{"ast":null,"code":"import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Wizard/wizard';\nimport { css } from '@patternfly/react-styles';\nimport { WizardDrawerWrapper } from './WizardDrawerWrapper';\nimport { Drawer, DrawerContent } from '../Drawer';\nexport var WizardBody = function WizardBody(_ref) {\n  var children = _ref.children,\n      _ref$hasNoBodyPadding = _ref.hasNoBodyPadding,\n      hasNoBodyPadding = _ref$hasNoBodyPadding === void 0 ? false : _ref$hasNoBodyPadding,\n      ariaLabel = _ref['aria-label'],\n      ariaLabelledBy = _ref['aria-labelledby'],\n      _ref$mainComponent = _ref.mainComponent,\n      mainComponent = _ref$mainComponent === void 0 ? 'div' : _ref$mainComponent,\n      hasDrawer = _ref.hasDrawer,\n      isDrawerExpanded = _ref.isDrawerExpanded,\n      activeStep = _ref.activeStep;\n  var MainComponent = mainComponent;\n  return React.createElement(MainComponent, {\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    className: css(styles.wizardMain)\n  }, React.createElement(WizardDrawerWrapper, {\n    hasDrawer: hasDrawer && activeStep.drawerPanelContent,\n    wrapper: function wrapper(children) {\n      return React.createElement(Drawer, {\n        isInline: true,\n        isExpanded: isDrawerExpanded\n      }, React.createElement(DrawerContent, {\n        panelContent: activeStep.drawerPanelContent\n      }, children));\n    }\n  }, React.createElement(\"div\", {\n    className: css(styles.wizardMainBody, hasNoBodyPadding && styles.modifiers.noPadding)\n  }, children)));\n};\nWizardBody.displayName = 'WizardBody';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Wizard/WizardBody.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,uDAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,SAAS,mBAAT,QAAoC,uBAApC;AACA,SAAS,MAAT,EAAiB,aAAjB,QAAsC,WAAtC;AAsBA,OAAO,IAAM,UAAU,GAA6C,SAAvD,UAAuD,OAS9C;AAAA,MARpB,QAQoB,QARpB,QAQoB;AAAA,mCAPpB,gBAOoB;AAAA,MAPpB,gBAOoB,sCAPD,KAOC;AAAA,MANN,SAMM,QANpB,YAMoB;AAAA,MALD,cAKC,QALpB,iBAKoB;AAAA,gCAJpB,aAIoB;AAAA,MAJpB,aAIoB,mCAJJ,KAII;AAAA,MAHpB,SAGoB,QAHpB,SAGoB;AAAA,MAFpB,gBAEoB,QAFpB,gBAEoB;AAAA,MADpB,UACoB,QADpB,UACoB;AACpB,MAAM,aAAa,GAAG,aAAtB;AACA,SACE,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc;AAAA,kBAAa,SAAb;AAAsB,uBAAmB,cAAzC;AAAyD,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,UAAR;AAAvE,GAAd,EACE,KAAA,CAAA,aAAA,CAAC,mBAAD,EAAoB;AAClB,IAAA,SAAS,EAAE,SAAS,IAAI,UAAU,CAAC,kBADjB;AAElB,IAAA,OAAO,EAAE,iBAAC,QAAD;AAAA,aACP,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO;AAAC,QAAA,QAAQ,EAAA,IAAT;AAAU,QAAA,UAAU,EAAE;AAAtB,OAAP,EACE,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc;AAAC,QAAA,YAAY,EAAE,UAAU,CAAC;AAA1B,OAAd,EAA6D,QAA7D,CADF,CADO;AAAA;AAFS,GAApB,EAQE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,cAAR,EAAwB,gBAAgB,IAAI,MAAM,CAAC,SAAP,CAAiB,SAA7D;AAAnB,GAAA,EAA6F,QAA7F,CARF,CADF,CADF;AAcD,CAzBM;AA0BP,UAAU,CAAC,WAAX,GAAyB,YAAzB","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Wizard/wizard';\nimport { css } from '@patternfly/react-styles';\nimport { WizardDrawerWrapper } from './WizardDrawerWrapper';\nimport { Drawer, DrawerContent } from '../Drawer';\nimport { WizardStep } from './Wizard';\n\nexport interface WizardBodyProps {\n  /** Anything that can be rendered in the Wizard body */\n  children: any;\n  /** Set to true to remove the default body padding */\n  hasNoBodyPadding: boolean;\n  /** An aria-label to use for the main element */\n  'aria-label'?: string;\n  /** Sets the aria-labelledby attribute for the main element */\n  'aria-labelledby': string;\n  /** Component used as the primary content container */\n  mainComponent?: React.ElementType;\n  /** The currently active WizardStep */\n  activeStep: WizardStep;\n  hasDrawer?: boolean;\n  /** Flag indicating the wizard drawer is expanded */\n  isDrawerExpanded?: boolean;\n  /** Callback function for when the drawer is toggled */\n}\n\nexport const WizardBody: React.FunctionComponent<WizardBodyProps> = ({\n  children,\n  hasNoBodyPadding = false,\n  'aria-label': ariaLabel,\n  'aria-labelledby': ariaLabelledBy,\n  mainComponent = 'div',\n  hasDrawer,\n  isDrawerExpanded,\n  activeStep\n}: WizardBodyProps) => {\n  const MainComponent = mainComponent;\n  return (\n    <MainComponent aria-label={ariaLabel} aria-labelledby={ariaLabelledBy} className={css(styles.wizardMain)}>\n      <WizardDrawerWrapper\n        hasDrawer={hasDrawer && activeStep.drawerPanelContent}\n        wrapper={(children: React.ReactNode) => (\n          <Drawer isInline isExpanded={isDrawerExpanded}>\n            <DrawerContent panelContent={activeStep.drawerPanelContent}>{children}</DrawerContent>\n          </Drawer>\n        )}\n      >\n        <div className={css(styles.wizardMainBody, hasNoBodyPadding && styles.modifiers.noPadding)}>{children}</div>\n      </WizardDrawerWrapper>\n    </MainComponent>\n  );\n};\nWizardBody.displayName = 'WizardBody';\n"]},"metadata":{},"sourceType":"module"}