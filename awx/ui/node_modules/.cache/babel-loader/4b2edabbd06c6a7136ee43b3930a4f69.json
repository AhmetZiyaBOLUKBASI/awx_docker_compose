{"ast":null,"code":"import _taggedTemplateLiteral from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8;import{i18n}from\"@lingui/core\";import React from'react';import styled from'styled-components';import{Button as PFButton,DescriptionList as PFDescriptionList,DescriptionListTerm,DescriptionListGroup as PFDescriptionListGroup,DescriptionListDescription as PFDescriptionListDescription,Divider,TextContent,Text as PFText,TextVariants}from'@patternfly/react-core';import{ExclamationIcon as PFExclamationIcon,CheckIcon as PFCheckIcon}from'@patternfly/react-icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Wrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: -20px;\\n  left: 0;\\n  padding: 10px;\\n  width: 150px;\\n  background-color: rgba(255, 255, 255, 0.85);\\n\"])));var Button=styled(PFButton)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  width: 20px;\\n  height: 20px;\\n  border-radius: 10px;\\n  padding: 0;\\n  font-size: 11px;\\n\"])));var DescriptionListDescription=styled(PFDescriptionListDescription)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  font-size: 11px;\\n\"])));var ExclamationIcon=styled(PFExclamationIcon)(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  fill: white;\\n  margin-left: 2px;\\n\"])));var CheckIcon=styled(PFCheckIcon)(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  fill: white;\\n  margin-left: 2px;\\n\"])));var DescriptionList=styled(PFDescriptionList)(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  gap: 7px;\\n\"])));var DescriptionListGroup=styled(PFDescriptionListGroup)(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  align-items: center;\\n\"])));var Text=styled(PFText)(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  margin: 10px 0 5px;\\n\"])));function Legend(){return/*#__PURE__*/_jsxs(Wrapper,{className:\"legend\",\"data-cy\":\"legend\",children:[/*#__PURE__*/_jsxs(TextContent,{children:[/*#__PURE__*/_jsx(Text,{component:TextVariants.small,style:{fontWeight:'bold',color:'black'},children:/*i18n*/i18n._(\"Legend\")}),/*#__PURE__*/_jsx(Divider,{component:\"div\"}),/*#__PURE__*/_jsx(Text,{component:TextVariants.small,children:/*i18n*/i18n._(\"Node types\")})]}),/*#__PURE__*/_jsxs(DescriptionList,{isHorizontal:true,isFluid:true,children:[/*#__PURE__*/_jsxs(DescriptionListGroup,{children:[/*#__PURE__*/_jsx(DescriptionListTerm,{children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",isSmall:true,children:/*i18n*/i18n._(\"C\")})}),/*#__PURE__*/_jsx(DescriptionListDescription,{children:/*i18n*/i18n._(\"Control node\")})]}),/*#__PURE__*/_jsxs(DescriptionListGroup,{children:[/*#__PURE__*/_jsx(DescriptionListTerm,{children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",isSmall:true,children:/*i18n*/i18n._(\"Ex\")})}),/*#__PURE__*/_jsx(DescriptionListDescription,{children:/*i18n*/i18n._(\"Execution node\")})]}),/*#__PURE__*/_jsxs(DescriptionListGroup,{children:[/*#__PURE__*/_jsx(DescriptionListTerm,{children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",isSmall:true,children:/*i18n*/i18n._(\"Hy\")})}),/*#__PURE__*/_jsx(DescriptionListDescription,{children:/*i18n*/i18n._(\"Hybrid node\")})]}),/*#__PURE__*/_jsxs(DescriptionListGroup,{children:[/*#__PURE__*/_jsx(DescriptionListTerm,{children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",isSmall:true,children:/*i18n*/i18n._(\"h\")})}),/*#__PURE__*/_jsx(DescriptionListDescription,{children:/*i18n*/i18n._(\"Hop node\")})]})]}),/*#__PURE__*/_jsx(TextContent,{children:/*#__PURE__*/_jsx(Text,{component:TextVariants.small,children:/*i18n*/i18n._(\"Status types\")})}),/*#__PURE__*/_jsxs(DescriptionList,{isHorizontal:true,isFluid:true,children:[/*#__PURE__*/_jsxs(DescriptionListGroup,{children:[/*#__PURE__*/_jsx(DescriptionListTerm,{children:/*#__PURE__*/_jsx(Button,{icon:/*#__PURE__*/_jsx(CheckIcon,{}),isSmall:true,style:{border:'1px solid gray',backgroundColor:'#3E8635'}})}),/*#__PURE__*/_jsx(DescriptionListDescription,{children:/*i18n*/i18n._(\"Healthy\")})]}),/*#__PURE__*/_jsxs(DescriptionListGroup,{children:[/*#__PURE__*/_jsx(DescriptionListTerm,{children:/*#__PURE__*/_jsx(Button,{variant:\"danger\",icon:/*#__PURE__*/_jsx(ExclamationIcon,{}),isSmall:true})}),/*#__PURE__*/_jsx(DescriptionListDescription,{children:/*i18n*/i18n._(\"Error\")})]}),/*#__PURE__*/_jsxs(DescriptionListGroup,{children:[/*#__PURE__*/_jsx(DescriptionListTerm,{children:/*#__PURE__*/_jsx(Button,{isSmall:true,style:{border:'1px solid gray',backgroundColor:'#e6e6e6'}})}),/*#__PURE__*/_jsx(DescriptionListDescription,{children:/*i18n*/i18n._(\"Disabled\")})]})]})]});}export default Legend;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/TopologyView/Legend.js"],"names":["React","styled","Button","PFButton","DescriptionList","PFDescriptionList","DescriptionListTerm","DescriptionListGroup","PFDescriptionListGroup","DescriptionListDescription","PFDescriptionListDescription","Divider","TextContent","Text","PFText","TextVariants","ExclamationIcon","PFExclamationIcon","CheckIcon","PFCheckIcon","Wrapper","div","Legend","small","fontWeight","color","border","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { t } from '@lingui/macro';\nimport styled from 'styled-components';\nimport {\n  Button as PFButton,\n  DescriptionList as PFDescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup as PFDescriptionListGroup,\n  DescriptionListDescription as PFDescriptionListDescription,\n  Divider,\n  TextContent,\n  Text as PFText,\n  TextVariants,\n} from '@patternfly/react-core';\n\nimport {\n  ExclamationIcon as PFExclamationIcon,\n  CheckIcon as PFCheckIcon,\n} from '@patternfly/react-icons';\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: -20px;\n  left: 0;\n  padding: 10px;\n  width: 150px;\n  background-color: rgba(255, 255, 255, 0.85);\n`;\nconst Button = styled(PFButton)`\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  padding: 0;\n  font-size: 11px;\n`;\nconst DescriptionListDescription = styled(PFDescriptionListDescription)`\n  font-size: 11px;\n`;\nconst ExclamationIcon = styled(PFExclamationIcon)`\n  fill: white;\n  margin-left: 2px;\n`;\nconst CheckIcon = styled(PFCheckIcon)`\n  fill: white;\n  margin-left: 2px;\n`;\nconst DescriptionList = styled(PFDescriptionList)`\n  gap: 7px;\n`;\nconst DescriptionListGroup = styled(PFDescriptionListGroup)`\n  align-items: center;\n`;\nconst Text = styled(PFText)`\n  margin: 10px 0 5px;\n`;\n\nfunction Legend() {\n  return (\n    <Wrapper className=\"legend\" data-cy=\"legend\">\n      <TextContent>\n        <Text\n          component={TextVariants.small}\n          style={{ fontWeight: 'bold', color: 'black' }}\n        >\n          {t`Legend`}\n        </Text>\n        <Divider component=\"div\" />\n        <Text component={TextVariants.small}>{t`Node types`}</Text>\n      </TextContent>\n      <DescriptionList isHorizontal isFluid>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            <Button variant=\"primary\" isSmall>\n              {t`C`}\n            </Button>\n          </DescriptionListTerm>\n          <DescriptionListDescription>{t`Control node`}</DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            <Button variant=\"primary\" isSmall>\n              {t`Ex`}\n            </Button>\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            {t`Execution node`}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            <Button variant=\"primary\" isSmall>\n              {t`Hy`}\n            </Button>\n          </DescriptionListTerm>\n          <DescriptionListDescription>{t`Hybrid node`}</DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            <Button variant=\"primary\" isSmall>\n              {t`h`}\n            </Button>\n          </DescriptionListTerm>\n          <DescriptionListDescription>{t`Hop node`}</DescriptionListDescription>\n        </DescriptionListGroup>\n      </DescriptionList>\n      <TextContent>\n        <Text component={TextVariants.small}>{t`Status types`}</Text>\n      </TextContent>\n      <DescriptionList isHorizontal isFluid>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            <Button\n              icon={<CheckIcon />}\n              isSmall\n              style={{ border: '1px solid gray', backgroundColor: '#3E8635' }}\n            />\n          </DescriptionListTerm>\n          <DescriptionListDescription>{t`Healthy`}</DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            <Button variant=\"danger\" icon={<ExclamationIcon />} isSmall />\n          </DescriptionListTerm>\n          <DescriptionListDescription>{t`Error`}</DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            <Button\n              isSmall\n              style={{ border: '1px solid gray', backgroundColor: '#e6e6e6' }}\n            />\n          </DescriptionListTerm>\n          <DescriptionListDescription>{t`Disabled`}</DescriptionListDescription>\n        </DescriptionListGroup>\n      </DescriptionList>\n    </Wrapper>\n  );\n}\n\nexport default Legend;\n"]},"metadata":{},"sourceType":"module"}