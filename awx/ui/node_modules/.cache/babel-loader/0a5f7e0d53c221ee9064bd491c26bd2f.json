{"ast":null,"code":"import _toConsumableArray from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/AppLauncher/app-launcher';\nimport formStyles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport ThIcon from '@patternfly/react-icons/dist/esm/icons/th-icon';\nimport { DropdownDirection, DropdownPosition, DropdownToggle, DropdownContext } from '../Dropdown';\nimport { DropdownWithContext } from '../Dropdown/DropdownWithContext';\nimport { ApplicationLauncherGroup } from './ApplicationLauncherGroup';\nimport { ApplicationLauncherSeparator } from './ApplicationLauncherSeparator';\nimport { ApplicationLauncherItem } from './ApplicationLauncherItem';\nimport { ApplicationLauncherContext } from './ApplicationLauncherContext';\nimport { createRenderableFavorites, extendItemsWithFavorite } from '../../helpers/favorites';\nexport var ApplicationLauncher = /*#__PURE__*/function (_React$Component) {\n  _inherits(ApplicationLauncher, _React$Component);\n\n  var _super = _createSuper(ApplicationLauncher);\n\n  function ApplicationLauncher() {\n    var _this;\n\n    _classCallCheck(this, ApplicationLauncher);\n\n    _this = _super.apply(this, arguments);\n\n    _this.createSearchBox = function () {\n      var _this$props = _this.props,\n          onSearch = _this$props.onSearch,\n          searchPlaceholderText = _this$props.searchPlaceholderText,\n          searchProps = _this$props.searchProps;\n      return React.createElement(\"div\", {\n        key: \"search\",\n        className: css(styles.appLauncherMenuSearch)\n      }, React.createElement(ApplicationLauncherItem, {\n        customChild: React.createElement(\"input\", Object.assign({\n          type: \"search\",\n          className: css(formStyles.formControl),\n          placeholder: searchPlaceholderText,\n          onChange: function onChange(e) {\n            return onSearch(e.target.value);\n          }\n        }, searchProps))\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(ApplicationLauncher, [{\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          ariaLabel = _a['aria-label'],\n          isOpen = _a.isOpen,\n          onToggle = _a.onToggle,\n          toggleIcon = _a.toggleIcon,\n          toggleId = _a.toggleId,\n          onSelect = _a.onSelect,\n          isDisabled = _a.isDisabled,\n          className = _a.className,\n          isGrouped = _a.isGrouped,\n          favorites = _a.favorites,\n          onFavorite = _a.onFavorite,\n          onSearch = _a.onSearch,\n          items = _a.items,\n          searchPlaceholderText = _a.searchPlaceholderText,\n          searchProps = _a.searchProps,\n          ref = _a.ref,\n          favoritesLabel = _a.favoritesLabel,\n          searchNoResultsText = _a.searchNoResultsText,\n          menuAppendTo = _a.menuAppendTo,\n          props = __rest(_a, ['aria-label', \"isOpen\", \"onToggle\", \"toggleIcon\", \"toggleId\", \"onSelect\", \"isDisabled\", \"className\", \"isGrouped\", \"favorites\", \"onFavorite\", \"onSearch\", \"items\", \"searchPlaceholderText\", \"searchProps\", \"ref\", \"favoritesLabel\", \"searchNoResultsText\", \"menuAppendTo\"]);\n\n      var renderableItems = [];\n\n      if (onFavorite) {\n        var favoritesGroup = [];\n        var renderableFavorites = [];\n\n        if (favorites.length > 0) {\n          renderableFavorites = createRenderableFavorites(items, isGrouped, favorites, true);\n          favoritesGroup = [React.createElement(ApplicationLauncherGroup, {\n            key: \"favorites\",\n            label: favoritesLabel\n          }, renderableFavorites, React.createElement(ApplicationLauncherSeparator, {\n            key: \"separator\"\n          }))];\n        }\n\n        if (renderableFavorites.length > 0) {\n          renderableItems = favoritesGroup.concat(extendItemsWithFavorite(items, isGrouped, favorites));\n        } else {\n          renderableItems = extendItemsWithFavorite(items, isGrouped, favorites);\n        }\n      } else {\n        renderableItems = items;\n      }\n\n      if (items.length === 0) {\n        renderableItems = [React.createElement(ApplicationLauncherGroup, {\n          key: \"no-results-group\"\n        }, React.createElement(ApplicationLauncherItem, {\n          key: \"no-results\"\n        }, searchNoResultsText))];\n      }\n\n      if (onSearch) {\n        renderableItems = [this.createSearchBox()].concat(_toConsumableArray(renderableItems));\n      }\n\n      return React.createElement(ApplicationLauncherContext.Provider, {\n        value: {\n          onFavorite: onFavorite\n        }\n      }, React.createElement(DropdownContext.Provider, {\n        value: {\n          onSelect: onSelect,\n          menuClass: styles.appLauncherMenu,\n          itemClass: styles.appLauncherMenuItem,\n          toggleClass: styles.appLauncherToggle,\n          baseClass: styles.appLauncher,\n          baseComponent: 'nav',\n          sectionClass: styles.appLauncherGroup,\n          sectionTitleClass: styles.appLauncherGroupTitle,\n          sectionComponent: 'section',\n          disabledClass: styles.modifiers.disabled,\n          ouiaComponentType: ApplicationLauncher.displayName\n        }\n      }, React.createElement(DropdownWithContext, Object.assign({}, props, {\n        dropdownItems: renderableItems,\n        isOpen: isOpen,\n        className: className,\n        \"aria-label\": ariaLabel,\n        menuAppendTo: menuAppendTo,\n        toggle: React.createElement(DropdownToggle, {\n          id: toggleId,\n          toggleIndicator: null,\n          isOpen: isOpen,\n          onToggle: onToggle,\n          isDisabled: isDisabled,\n          \"aria-label\": ariaLabel\n        }, toggleIcon),\n        isGrouped: isGrouped\n      }))));\n    }\n  }]);\n\n  return ApplicationLauncher;\n}(React.Component);\nApplicationLauncher.displayName = 'ApplicationLauncher';\nApplicationLauncher.defaultProps = {\n  className: '',\n  isDisabled: false,\n  direction: DropdownDirection.down,\n  favorites: [],\n  isOpen: false,\n  position: DropdownPosition.left,\n\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  onSelect: function onSelect(_event) {\n    return undefined;\n  },\n  onToggle: function onToggle(_value) {\n    return undefined;\n  },\n\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n  'aria-label': 'Application launcher',\n  isGrouped: false,\n  toggleIcon: React.createElement(ThIcon, null),\n  searchPlaceholderText: 'Filter by name...',\n  searchNoResultsText: 'No results found',\n  favoritesLabel: 'Favorites',\n  menuAppendTo: 'inline'\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/ApplicationLauncher/ApplicationLauncher.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/AppLauncher/app-launcher';\nimport formStyles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport ThIcon from '@patternfly/react-icons/dist/esm/icons/th-icon';\nimport { DropdownDirection, DropdownPosition, DropdownToggle, DropdownContext } from '../Dropdown';\nimport { DropdownWithContext } from '../Dropdown/DropdownWithContext';\nimport { ApplicationLauncherGroup } from './ApplicationLauncherGroup';\nimport { ApplicationLauncherSeparator } from './ApplicationLauncherSeparator';\nimport { ApplicationLauncherItem } from './ApplicationLauncherItem';\nimport { ApplicationLauncherContext } from './ApplicationLauncherContext';\nimport { ToggleMenuBaseProps } from '../../helpers/Popper/Popper';\nimport { createRenderableFavorites, extendItemsWithFavorite } from '../../helpers/favorites';\n\nexport interface ApplicationLauncherProps\n  extends Omit<ToggleMenuBaseProps, 'menuAppendTo'>,\n    React.HTMLProps<HTMLDivElement> {\n  /** Additional element css classes */\n  className?: string;\n  /** Display menu above or below dropdown toggle */\n  direction?: DropdownDirection | 'up' | 'down';\n  /** Array of application launcher items */\n  items?: React.ReactNode[];\n  /** Render Application launcher toggle as disabled icon */\n  isDisabled?: boolean;\n  /** open bool */\n  isOpen?: boolean;\n  /** Indicates where menu will be alligned horizontally */\n  position?: DropdownPosition | 'right' | 'left';\n  /** Function callback called when user selects item */\n  onSelect?: (event: any) => void;\n  /** Callback called when application launcher toggle is clicked */\n  onToggle?: (value: boolean) => void;\n  /** Adds accessible text to the button. Required for plain buttons */\n  'aria-label'?: string;\n  /** Flag to indicate if application launcher has groups */\n  isGrouped?: boolean;\n  /** Toggle Icon, optional to override the icon used for the toggle */\n  toggleIcon?: React.ReactNode;\n  /** The container to append the menu to. Defaults to 'inline'.\n   * If your menu is being cut off you can append it to an element higher up the DOM tree.\n   * Some examples:\n   * menuAppendTo=\"parent\"\n   * menuAppendTo={() => document.body}\n   * menuAppendTo={document.getElementById('target')}\n   */\n  menuAppendTo?: HTMLElement | (() => HTMLElement) | 'inline' | 'parent';\n  /** ID list of favorited ApplicationLauncherItems */\n  favorites?: string[];\n  /** Enables favorites. Callback called when an ApplicationLauncherItem's favorite button is clicked */\n  onFavorite?: (itemId: string, isFavorite: boolean) => void;\n  /** Enables search. Callback called when text input is entered into search box */\n  onSearch?: (textInput: string) => void;\n  /** Placeholder text for search input */\n  searchPlaceholderText?: string;\n  /** Text for search input when no results are found */\n  searchNoResultsText?: string;\n  /** Additional properties for search input */\n  searchProps?: any;\n  /** Label for the favorites group */\n  favoritesLabel?: string;\n  /** ID of toggle */\n  toggleId?: string;\n}\n\nexport class ApplicationLauncher extends React.Component<ApplicationLauncherProps> {\n  static displayName = 'ApplicationLauncher';\n  static defaultProps: ApplicationLauncherProps = {\n    className: '',\n    isDisabled: false,\n    direction: DropdownDirection.down,\n    favorites: [] as string[],\n    isOpen: false,\n    position: DropdownPosition.left,\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    onSelect: (_event: any): any => undefined,\n    onToggle: (_value: boolean): any => undefined,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    'aria-label': 'Application launcher',\n    isGrouped: false,\n    toggleIcon: <ThIcon />,\n    searchPlaceholderText: 'Filter by name...',\n    searchNoResultsText: 'No results found',\n    favoritesLabel: 'Favorites',\n    menuAppendTo: 'inline'\n  };\n\n  createSearchBox = () => {\n    const { onSearch, searchPlaceholderText, searchProps } = this.props;\n\n    return (\n      <div key=\"search\" className={css(styles.appLauncherMenuSearch)}>\n        <ApplicationLauncherItem\n          customChild={\n            <input\n              type=\"search\"\n              className={css(formStyles.formControl)}\n              placeholder={searchPlaceholderText}\n              onChange={e => onSearch(e.target.value)}\n              {...searchProps}\n            ></input>\n          }\n        ></ApplicationLauncherItem>\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      'aria-label': ariaLabel,\n      isOpen,\n      onToggle,\n      toggleIcon,\n      toggleId,\n      onSelect,\n      isDisabled,\n      className,\n      isGrouped,\n      favorites,\n      onFavorite,\n      onSearch,\n      items,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      searchPlaceholderText,\n      searchProps,\n      ref,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      favoritesLabel,\n      searchNoResultsText,\n      menuAppendTo,\n      ...props\n    } = this.props;\n    let renderableItems: React.ReactNode[] = [];\n\n    if (onFavorite) {\n      let favoritesGroup: React.ReactNode[] = [];\n      let renderableFavorites: React.ReactNode[] = [];\n      if (favorites.length > 0) {\n        renderableFavorites = createRenderableFavorites(items, isGrouped, favorites, true);\n        favoritesGroup = [\n          <ApplicationLauncherGroup key=\"favorites\" label={favoritesLabel}>\n            {renderableFavorites}\n            <ApplicationLauncherSeparator key=\"separator\" />\n          </ApplicationLauncherGroup>\n        ];\n      }\n      if (renderableFavorites.length > 0) {\n        renderableItems = favoritesGroup.concat(extendItemsWithFavorite(items, isGrouped, favorites));\n      } else {\n        renderableItems = extendItemsWithFavorite(items, isGrouped, favorites);\n      }\n    } else {\n      renderableItems = items;\n    }\n\n    if (items.length === 0) {\n      renderableItems = [\n        <ApplicationLauncherGroup key=\"no-results-group\">\n          <ApplicationLauncherItem key=\"no-results\">{searchNoResultsText}</ApplicationLauncherItem>\n        </ApplicationLauncherGroup>\n      ];\n    }\n    if (onSearch) {\n      renderableItems = [this.createSearchBox(), ...renderableItems];\n    }\n\n    return (\n      <ApplicationLauncherContext.Provider value={{ onFavorite }}>\n        <DropdownContext.Provider\n          value={{\n            onSelect,\n            menuClass: styles.appLauncherMenu,\n            itemClass: styles.appLauncherMenuItem,\n            toggleClass: styles.appLauncherToggle,\n            baseClass: styles.appLauncher,\n            baseComponent: 'nav',\n            sectionClass: styles.appLauncherGroup,\n            sectionTitleClass: styles.appLauncherGroupTitle,\n            sectionComponent: 'section',\n            disabledClass: styles.modifiers.disabled,\n            ouiaComponentType: ApplicationLauncher.displayName\n          }}\n        >\n          <DropdownWithContext\n            {...props}\n            dropdownItems={renderableItems}\n            isOpen={isOpen}\n            className={className}\n            aria-label={ariaLabel}\n            menuAppendTo={menuAppendTo}\n            toggle={\n              <DropdownToggle\n                id={toggleId}\n                toggleIndicator={null}\n                isOpen={isOpen}\n                onToggle={onToggle}\n                isDisabled={isDisabled}\n                aria-label={ariaLabel}\n              >\n                {toggleIcon}\n              </DropdownToggle>\n            }\n            isGrouped={isGrouped}\n          />\n        </DropdownContext.Provider>\n      </ApplicationLauncherContext.Provider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}