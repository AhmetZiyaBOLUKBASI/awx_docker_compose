{"ast":null,"code":"import{i18n}from\"@lingui/core\";import React from'react';import{useFormikContext}from'formik';import CredentialPasswordsStep from'./CredentialPasswordsStep';import StepName from'./StepName';import{jsx as _jsx}from\"react/jsx-runtime\";var STEP_ID='credentialPasswords';var isValueMissing=function isValueMissing(val){return!val||val==='';};export default function useCredentialPasswordsStep(launchConfig,showStep,visitedSteps){var _useFormikContext=useFormikContext(),values=_useFormikContext.values,setFieldError=_useFormikContext.setFieldError;var hasError=Object.keys(visitedSteps).includes(STEP_ID)&&checkForError(launchConfig,values);return{step:showStep?{id:STEP_ID,name:/*#__PURE__*/_jsx(StepName,{hasErrors:hasError,id:\"credential-passwords-step\",children:/*i18n*/i18n._(\"Credential passwords\")}),component:/*#__PURE__*/_jsx(CredentialPasswordsStep,{launchConfig:launchConfig}),enableNext:true}:null,initialValues:getInitialValues(launchConfig,values.credentials),isReady:true,contentError:null,hasError:hasError,setTouched:function setTouched(setFieldTouched){Object.keys(values.credential_passwords).forEach(function(credentialValueKey){return setFieldTouched(\"credential_passwords['\".concat(credentialValueKey,\"']\"),true,false);});},validate:function validate(){var setPasswordFieldError=function setPasswordFieldError(fieldName){setFieldError(fieldName,/*i18n*/i18n._(\"This field may not be blank\"));};if(!launchConfig.ask_credential_on_launch&&launchConfig.passwords_needed_to_start){launchConfig.passwords_needed_to_start.forEach(function(password){if(isValueMissing(values.credential_passwords[password])){setPasswordFieldError(\"credential_passwords['\".concat(password,\"']\"));}});}else if(values.credentials){values.credentials.forEach(function(credential){if(!credential.inputs){var launchConfigCredential=launchConfig.defaults.credentials.find(function(defaultCred){return defaultCred.id===credential.id;});if((launchConfigCredential===null||launchConfigCredential===void 0?void 0:launchConfigCredential.passwords_needed.length)>0){launchConfigCredential.passwords_needed.forEach(function(password){if(isValueMissing(values.credential_passwords[password])){setPasswordFieldError(\"credential_passwords['\".concat(password,\"']\"));}});}}else{var _credential$inputs,_credential$inputs2,_credential$inputs3,_credential$inputs4;if((credential===null||credential===void 0?void 0:(_credential$inputs=credential.inputs)===null||_credential$inputs===void 0?void 0:_credential$inputs.password)==='ASK'&&isValueMissing(values.credential_passwords.ssh_password)){setPasswordFieldError('credential_passwords.ssh_password');}if((credential===null||credential===void 0?void 0:(_credential$inputs2=credential.inputs)===null||_credential$inputs2===void 0?void 0:_credential$inputs2.become_password)==='ASK'&&isValueMissing(values.credential_passwords.become_password)){setPasswordFieldError('credential_passwords.become_password');}if((credential===null||credential===void 0?void 0:(_credential$inputs3=credential.inputs)===null||_credential$inputs3===void 0?void 0:_credential$inputs3.ssh_key_unlock)==='ASK'&&isValueMissing(values.credential_passwords.ssh_key_unlock)){setPasswordFieldError('credential_passwords.ssh_key_unlock');}if((credential===null||credential===void 0?void 0:(_credential$inputs4=credential.inputs)===null||_credential$inputs4===void 0?void 0:_credential$inputs4.vault_password)==='ASK'&&isValueMissing(values.credential_passwords[\"vault_password\".concat(credential.inputs.vault_id!==''?\".\".concat(credential.inputs.vault_id):'')])){setPasswordFieldError(\"credential_passwords['vault_password\".concat(credential.inputs.vault_id!==''?\".\".concat(credential.inputs.vault_id):'',\"']\"));}}});}}};}function getInitialValues(launchConfig){var selectedCredentials=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var initialValues={credential_passwords:{}};if(!launchConfig){return initialValues;}if(!launchConfig.ask_credential_on_launch&&launchConfig.passwords_needed_to_start){launchConfig.passwords_needed_to_start.forEach(function(password){initialValues.credential_passwords[password]='';});return initialValues;}selectedCredentials.forEach(function(credential){if(!credential.inputs){var launchConfigCredential=launchConfig.defaults.credentials.find(function(defaultCred){return defaultCred.id===credential.id;});if((launchConfigCredential===null||launchConfigCredential===void 0?void 0:launchConfigCredential.passwords_needed.length)>0){launchConfigCredential.passwords_needed.forEach(function(password){initialValues.credential_passwords[password]='';});}}else{var _credential$inputs5,_credential$inputs6,_credential$inputs7,_credential$inputs8;if((credential===null||credential===void 0?void 0:(_credential$inputs5=credential.inputs)===null||_credential$inputs5===void 0?void 0:_credential$inputs5.password)==='ASK'){initialValues.credential_passwords.ssh_password='';}if((credential===null||credential===void 0?void 0:(_credential$inputs6=credential.inputs)===null||_credential$inputs6===void 0?void 0:_credential$inputs6.become_password)==='ASK'){initialValues.credential_passwords.become_password='';}if((credential===null||credential===void 0?void 0:(_credential$inputs7=credential.inputs)===null||_credential$inputs7===void 0?void 0:_credential$inputs7.ssh_key_unlock)==='ASK'){initialValues.credential_passwords.ssh_key_unlock='';}if((credential===null||credential===void 0?void 0:(_credential$inputs8=credential.inputs)===null||_credential$inputs8===void 0?void 0:_credential$inputs8.vault_password)==='ASK'){if(!credential.inputs.vault_id||credential.inputs.vault_id===''){initialValues.credential_passwords.vault_password='';}else{initialValues.credential_passwords[\"vault_password.\".concat(credential.inputs.vault_id)]='';}}}});return initialValues;}function checkForError(launchConfig,values){var hasError=false;if(!launchConfig.ask_credential_on_launch&&launchConfig.passwords_needed_to_start){launchConfig.passwords_needed_to_start.forEach(function(password){if(isValueMissing(values.credential_passwords[password])){hasError=true;}});}else if(values.credentials){values.credentials.forEach(function(credential){if(!credential.inputs){var launchConfigCredential=launchConfig.defaults.credentials.find(function(defaultCred){return defaultCred.id===credential.id;});if((launchConfigCredential===null||launchConfigCredential===void 0?void 0:launchConfigCredential.passwords_needed.length)>0){launchConfigCredential.passwords_needed.forEach(function(password){if(isValueMissing(values.credential_passwords[password])){hasError=true;}});}}else{var _credential$inputs9,_credential$inputs10,_credential$inputs11,_credential$inputs12;if((credential===null||credential===void 0?void 0:(_credential$inputs9=credential.inputs)===null||_credential$inputs9===void 0?void 0:_credential$inputs9.password)==='ASK'&&isValueMissing(values.credential_passwords.ssh_password)){hasError=true;}if((credential===null||credential===void 0?void 0:(_credential$inputs10=credential.inputs)===null||_credential$inputs10===void 0?void 0:_credential$inputs10.become_password)==='ASK'&&isValueMissing(values.credential_passwords.become_password)){hasError=true;}if((credential===null||credential===void 0?void 0:(_credential$inputs11=credential.inputs)===null||_credential$inputs11===void 0?void 0:_credential$inputs11.ssh_key_unlock)==='ASK'&&isValueMissing(values.credential_passwords.ssh_key_unlock)){hasError=true;}if((credential===null||credential===void 0?void 0:(_credential$inputs12=credential.inputs)===null||_credential$inputs12===void 0?void 0:_credential$inputs12.vault_password)==='ASK'&&isValueMissing(values.credential_passwords[\"vault_password\".concat(credential.inputs.vault_id!==''?\".\".concat(credential.inputs.vault_id):'')])){hasError=true;}}});}return hasError;}","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/LaunchPrompt/steps/useCredentialPasswordsStep.js"],"names":["React","useFormikContext","CredentialPasswordsStep","StepName","STEP_ID","isValueMissing","val","useCredentialPasswordsStep","launchConfig","showStep","visitedSteps","values","setFieldError","hasError","Object","keys","includes","checkForError","step","id","name","component","enableNext","initialValues","getInitialValues","credentials","isReady","contentError","setTouched","setFieldTouched","credential_passwords","forEach","credentialValueKey","validate","setPasswordFieldError","fieldName","ask_credential_on_launch","passwords_needed_to_start","password","credential","inputs","launchConfigCredential","defaults","find","defaultCred","passwords_needed","length","ssh_password","become_password","ssh_key_unlock","vault_password","vault_id","selectedCredentials"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { t } from '@lingui/macro';\nimport { useFormikContext } from 'formik';\nimport CredentialPasswordsStep from './CredentialPasswordsStep';\nimport StepName from './StepName';\n\nconst STEP_ID = 'credentialPasswords';\n\nconst isValueMissing = (val) => !val || val === '';\n\nexport default function useCredentialPasswordsStep(\n  launchConfig,\n\n  showStep,\n  visitedSteps\n) {\n  const { values, setFieldError } = useFormikContext();\n  const hasError =\n    Object.keys(visitedSteps).includes(STEP_ID) &&\n    checkForError(launchConfig, values);\n\n  return {\n    step: showStep\n      ? {\n          id: STEP_ID,\n          name: (\n            <StepName hasErrors={hasError} id=\"credential-passwords-step\">\n              {t`Credential passwords`}\n            </StepName>\n          ),\n          component: <CredentialPasswordsStep launchConfig={launchConfig} />,\n          enableNext: true,\n        }\n      : null,\n    initialValues: getInitialValues(launchConfig, values.credentials),\n    isReady: true,\n    contentError: null,\n    hasError,\n    setTouched: (setFieldTouched) => {\n      Object.keys(values.credential_passwords).forEach((credentialValueKey) =>\n        setFieldTouched(\n          `credential_passwords['${credentialValueKey}']`,\n          true,\n          false\n        )\n      );\n    },\n    validate: () => {\n      const setPasswordFieldError = (fieldName) => {\n        setFieldError(fieldName, t`This field may not be blank`);\n      };\n\n      if (\n        !launchConfig.ask_credential_on_launch &&\n        launchConfig.passwords_needed_to_start\n      ) {\n        launchConfig.passwords_needed_to_start.forEach((password) => {\n          if (isValueMissing(values.credential_passwords[password])) {\n            setPasswordFieldError(`credential_passwords['${password}']`);\n          }\n        });\n      } else if (values.credentials) {\n        values.credentials.forEach((credential) => {\n          if (!credential.inputs) {\n            const launchConfigCredential =\n              launchConfig.defaults.credentials.find(\n                (defaultCred) => defaultCred.id === credential.id\n              );\n\n            if (launchConfigCredential?.passwords_needed.length > 0) {\n              launchConfigCredential.passwords_needed.forEach((password) => {\n                if (isValueMissing(values.credential_passwords[password])) {\n                  setPasswordFieldError(`credential_passwords['${password}']`);\n                }\n              });\n            }\n          } else {\n            if (\n              credential?.inputs?.password === 'ASK' &&\n              isValueMissing(values.credential_passwords.ssh_password)\n            ) {\n              setPasswordFieldError('credential_passwords.ssh_password');\n            }\n\n            if (\n              credential?.inputs?.become_password === 'ASK' &&\n              isValueMissing(values.credential_passwords.become_password)\n            ) {\n              setPasswordFieldError('credential_passwords.become_password');\n            }\n\n            if (\n              credential?.inputs?.ssh_key_unlock === 'ASK' &&\n              isValueMissing(values.credential_passwords.ssh_key_unlock)\n            ) {\n              setPasswordFieldError('credential_passwords.ssh_key_unlock');\n            }\n\n            if (\n              credential?.inputs?.vault_password === 'ASK' &&\n              isValueMissing(\n                values.credential_passwords[\n                  `vault_password${\n                    credential.inputs.vault_id !== ''\n                      ? `.${credential.inputs.vault_id}`\n                      : ''\n                  }`\n                ]\n              )\n            ) {\n              setPasswordFieldError(\n                `credential_passwords['vault_password${\n                  credential.inputs.vault_id !== ''\n                    ? `.${credential.inputs.vault_id}`\n                    : ''\n                }']`\n              );\n            }\n          }\n        });\n      }\n    },\n  };\n}\n\nfunction getInitialValues(launchConfig, selectedCredentials = []) {\n  const initialValues = {\n    credential_passwords: {},\n  };\n\n  if (!launchConfig) {\n    return initialValues;\n  }\n\n  if (\n    !launchConfig.ask_credential_on_launch &&\n    launchConfig.passwords_needed_to_start\n  ) {\n    launchConfig.passwords_needed_to_start.forEach((password) => {\n      initialValues.credential_passwords[password] = '';\n    });\n    return initialValues;\n  }\n\n  selectedCredentials.forEach((credential) => {\n    if (!credential.inputs) {\n      const launchConfigCredential = launchConfig.defaults.credentials.find(\n        (defaultCred) => defaultCred.id === credential.id\n      );\n\n      if (launchConfigCredential?.passwords_needed.length > 0) {\n        launchConfigCredential.passwords_needed.forEach((password) => {\n          initialValues.credential_passwords[password] = '';\n        });\n      }\n    } else {\n      if (credential?.inputs?.password === 'ASK') {\n        initialValues.credential_passwords.ssh_password = '';\n      }\n\n      if (credential?.inputs?.become_password === 'ASK') {\n        initialValues.credential_passwords.become_password = '';\n      }\n\n      if (credential?.inputs?.ssh_key_unlock === 'ASK') {\n        initialValues.credential_passwords.ssh_key_unlock = '';\n      }\n\n      if (credential?.inputs?.vault_password === 'ASK') {\n        if (!credential.inputs.vault_id || credential.inputs.vault_id === '') {\n          initialValues.credential_passwords.vault_password = '';\n        } else {\n          initialValues.credential_passwords[\n            `vault_password.${credential.inputs.vault_id}`\n          ] = '';\n        }\n      }\n    }\n  });\n\n  return initialValues;\n}\n\nfunction checkForError(launchConfig, values) {\n  let hasError = false;\n\n  if (\n    !launchConfig.ask_credential_on_launch &&\n    launchConfig.passwords_needed_to_start\n  ) {\n    launchConfig.passwords_needed_to_start.forEach((password) => {\n      if (isValueMissing(values.credential_passwords[password])) {\n        hasError = true;\n      }\n    });\n  } else if (values.credentials) {\n    values.credentials.forEach((credential) => {\n      if (!credential.inputs) {\n        const launchConfigCredential = launchConfig.defaults.credentials.find(\n          (defaultCred) => defaultCred.id === credential.id\n        );\n\n        if (launchConfigCredential?.passwords_needed.length > 0) {\n          launchConfigCredential.passwords_needed.forEach((password) => {\n            if (isValueMissing(values.credential_passwords[password])) {\n              hasError = true;\n            }\n          });\n        }\n      } else {\n        if (\n          credential?.inputs?.password === 'ASK' &&\n          isValueMissing(values.credential_passwords.ssh_password)\n        ) {\n          hasError = true;\n        }\n\n        if (\n          credential?.inputs?.become_password === 'ASK' &&\n          isValueMissing(values.credential_passwords.become_password)\n        ) {\n          hasError = true;\n        }\n\n        if (\n          credential?.inputs?.ssh_key_unlock === 'ASK' &&\n          isValueMissing(values.credential_passwords.ssh_key_unlock)\n        ) {\n          hasError = true;\n        }\n\n        if (\n          credential?.inputs?.vault_password === 'ASK' &&\n          isValueMissing(\n            values.credential_passwords[\n              `vault_password${\n                credential.inputs.vault_id !== ''\n                  ? `.${credential.inputs.vault_id}`\n                  : ''\n              }`\n            ]\n          )\n        ) {\n          hasError = true;\n        }\n      }\n    });\n  }\n\n  return hasError;\n}\n"]},"metadata":{},"sourceType":"module"}