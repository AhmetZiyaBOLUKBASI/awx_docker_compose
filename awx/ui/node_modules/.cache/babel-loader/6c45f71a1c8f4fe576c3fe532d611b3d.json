{"ast":null,"code":"import _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Switch/switch';\nimport { css } from '@patternfly/react-styles';\nimport CheckIcon from '@patternfly/react-icons/dist/esm/icons/check-icon';\nimport { getUniqueId } from '../../helpers/util';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport var Switch = /*#__PURE__*/function (_React$Component) {\n  _inherits(Switch, _React$Component);\n\n  var _super = _createSuper(Switch);\n\n  function Switch(props) {\n    var _this;\n\n    _classCallCheck(this, Switch);\n\n    _this = _super.call(this, props);\n\n    if (!props.label && !props['aria-label']) {\n      // eslint-disable-next-line no-console\n      console.error('Switch: Switch requires either a label or an aria-label to be specified');\n    }\n\n    _this.id = props.id || getUniqueId();\n    _this.state = {\n      ouiaStateId: getDefaultOUIAId(Switch.displayName)\n    };\n    return _this;\n  }\n\n  _createClass(Switch, [{\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          id = _a.id,\n          className = _a.className,\n          label = _a.label,\n          labelOff = _a.labelOff,\n          isChecked = _a.isChecked,\n          defaultChecked = _a.defaultChecked,\n          hasCheckIcon = _a.hasCheckIcon,\n          isDisabled = _a.isDisabled,\n          _onChange = _a.onChange,\n          isReversed = _a.isReversed,\n          ouiaId = _a.ouiaId,\n          ouiaSafe = _a.ouiaSafe,\n          props = __rest(_a, [\"id\", \"className\", \"label\", \"labelOff\", \"isChecked\", \"defaultChecked\", \"hasCheckIcon\", \"isDisabled\", \"onChange\", \"isReversed\", \"ouiaId\", \"ouiaSafe\"]);\n\n      var isAriaLabelledBy = props['aria-label'] === '';\n      return React.createElement(\"label\", Object.assign({\n        className: css(styles.switch, isReversed && styles.modifiers.reverse, className),\n        htmlFor: this.id\n      }, getOUIAProps(Switch.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)), React.createElement(\"input\", Object.assign({\n        id: this.id,\n        className: css(styles.switchInput),\n        type: \"checkbox\",\n        onChange: function onChange(event) {\n          return _onChange(event.target.checked, event);\n        }\n      }, [true, false].includes(defaultChecked) && {\n        defaultChecked: defaultChecked\n      }, ![true, false].includes(defaultChecked) && {\n        checked: isChecked\n      }, {\n        disabled: isDisabled,\n        \"aria-labelledby\": isAriaLabelledBy ? \"\".concat(this.id, \"-on\") : null\n      }, props)), label !== undefined ? React.createElement(React.Fragment, null, React.createElement(\"span\", {\n        className: css(styles.switchToggle)\n      }, hasCheckIcon && React.createElement(\"span\", {\n        className: css(styles.switchToggleIcon),\n        \"aria-hidden\": \"true\"\n      }, React.createElement(CheckIcon, {\n        noVerticalAlign: true\n      }))), React.createElement(\"span\", {\n        className: css(styles.switchLabel, styles.modifiers.on),\n        id: isAriaLabelledBy ? \"\".concat(this.id, \"-on\") : null,\n        \"aria-hidden\": \"true\"\n      }, label), React.createElement(\"span\", {\n        className: css(styles.switchLabel, styles.modifiers.off),\n        id: isAriaLabelledBy ? \"\".concat(this.id, \"-off\") : null,\n        \"aria-hidden\": \"true\"\n      }, labelOff !== undefined ? labelOff : label)) : React.createElement(\"span\", {\n        className: css(styles.switchToggle)\n      }, React.createElement(\"div\", {\n        className: css(styles.switchToggleIcon),\n        \"aria-hidden\": \"true\"\n      }, React.createElement(CheckIcon, {\n        noVerticalAlign: true\n      }))));\n    }\n  }]);\n\n  return Switch;\n}(React.Component);\nSwitch.displayName = 'Switch';\nSwitch.defaultProps = {\n  isChecked: true,\n  isDisabled: false,\n  isReversed: false,\n  'aria-label': '',\n  onChange: function onChange() {\n    return undefined;\n  }\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Switch/Switch.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Switch/switch';\nimport { css } from '@patternfly/react-styles';\nimport CheckIcon from '@patternfly/react-icons/dist/esm/icons/check-icon';\nimport { getUniqueId } from '../../helpers/util';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId } from '../../helpers';\n\nexport interface SwitchProps\n  extends Omit<React.HTMLProps<HTMLInputElement>, 'type' | 'onChange' | 'disabled' | 'label'>,\n    OUIAProps {\n  /** id for the label. */\n  id?: string;\n  /** Additional classes added to the switch */\n  className?: string;\n  /** Text value for the visible label when on */\n  label?: React.ReactNode;\n  /** Text value for the visible label when off */\n  labelOff?: React.ReactNode;\n  /** Flag to show if the switch is checked when it is controlled by React state.\n   * To make the switch uncontrolled instead use the defaultChecked prop, but do not use both.\n   */\n  isChecked?: boolean;\n  /** Flag to set the default checked value of the switch when it is uncontrolled by React state.\n   * To make the switch controlled instead use the isChecked prop, but do not use both.\n   */\n  defaultChecked?: boolean;\n  /** Flag to show if the switch has a check icon. */\n  hasCheckIcon?: boolean;\n  /** Flag to show if the switch is disabled. */\n  isDisabled?: boolean;\n  /** A callback for when the switch selection changes. (isChecked, event) => {} */\n  onChange?: (checked: boolean, event: React.FormEvent<HTMLInputElement>) => void;\n  /** Adds accessible text to the switch, and should describe the isChecked=\"true\" state. When label is defined, aria-label should be set to the text string that is visible when isChecked is true. */\n  'aria-label'?: string;\n  /** Flag to reverse the layout of toggle and label (toggle on right). */\n  isReversed?: boolean;\n}\n\nexport class Switch extends React.Component<SwitchProps & OUIAProps, { ouiaStateId: string }> {\n  static displayName = 'Switch';\n  id: string;\n\n  static defaultProps: SwitchProps = {\n    isChecked: true,\n    isDisabled: false,\n    isReversed: false,\n    'aria-label': '',\n    onChange: () => undefined as any\n  };\n\n  constructor(props: SwitchProps & OUIAProps) {\n    super(props);\n    if (!props.label && !props['aria-label']) {\n      // eslint-disable-next-line no-console\n      console.error('Switch: Switch requires either a label or an aria-label to be specified');\n    }\n\n    this.id = props.id || getUniqueId();\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(Switch.displayName)\n    };\n  }\n\n  render() {\n    const {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      id,\n      className,\n      label,\n      labelOff,\n      isChecked,\n      defaultChecked,\n      hasCheckIcon,\n      isDisabled,\n      onChange,\n      isReversed,\n      ouiaId,\n      ouiaSafe,\n      ...props\n    } = this.props;\n\n    const isAriaLabelledBy = props['aria-label'] === '';\n    return (\n      <label\n        className={css(styles.switch, isReversed && styles.modifiers.reverse, className)}\n        htmlFor={this.id}\n        {...getOUIAProps(Switch.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n      >\n        <input\n          id={this.id}\n          className={css(styles.switchInput)}\n          type=\"checkbox\"\n          onChange={event => onChange(event.target.checked, event)}\n          {...([true, false].includes(defaultChecked) && { defaultChecked })}\n          {...(![true, false].includes(defaultChecked) && { checked: isChecked })}\n          disabled={isDisabled}\n          aria-labelledby={isAriaLabelledBy ? `${this.id}-on` : null}\n          {...props}\n        />\n        {label !== undefined ? (\n          <React.Fragment>\n            <span className={css(styles.switchToggle)}>\n              {hasCheckIcon && (\n                <span className={css(styles.switchToggleIcon)} aria-hidden=\"true\">\n                  <CheckIcon noVerticalAlign />\n                </span>\n              )}\n            </span>\n            <span\n              className={css(styles.switchLabel, styles.modifiers.on)}\n              id={isAriaLabelledBy ? `${this.id}-on` : null}\n              aria-hidden=\"true\"\n            >\n              {label}\n            </span>\n            <span\n              className={css(styles.switchLabel, styles.modifiers.off)}\n              id={isAriaLabelledBy ? `${this.id}-off` : null}\n              aria-hidden=\"true\"\n            >\n              {labelOff !== undefined ? labelOff : label}\n            </span>\n          </React.Fragment>\n        ) : (\n          <span className={css(styles.switchToggle)}>\n            <div className={css(styles.switchToggleIcon)} aria-hidden=\"true\">\n              <CheckIcon noVerticalAlign />\n            </div>\n          </span>\n        )}\n      </label>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}