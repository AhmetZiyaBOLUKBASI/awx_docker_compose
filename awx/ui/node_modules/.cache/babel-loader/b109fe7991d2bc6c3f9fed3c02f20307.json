{"ast":null,"code":"import React from'react';import{Switch,Route,useRouteMatch}from'react-router-dom';import Schedule from'./Schedule';import ScheduleAdd from'./ScheduleAdd';import ScheduleList from'./ScheduleList';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Schedules(_ref){var apiModel=_ref.apiModel,loadScheduleOptions=_ref.loadScheduleOptions,loadSchedules=_ref.loadSchedules,setBreadcrumb=_ref.setBreadcrumb,launchConfig=_ref.launchConfig,surveyConfig=_ref.surveyConfig,resource=_ref.resource,resourceDefaultCredentials=_ref.resourceDefaultCredentials;var match=useRouteMatch();// For some management jobs that delete data, we want to provide an additional\n// field on the scheduler for configuring the number of days to retain.\nvar hasDaysToKeepField=['cleanup_activitystream','cleanup_jobs'].includes(resource===null||resource===void 0?void 0:resource.job_type);return/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"\".concat(match.path,\"/add\"),children:/*#__PURE__*/_jsx(ScheduleAdd,{hasDaysToKeepField:hasDaysToKeepField,apiModel:apiModel,resource:resource,launchConfig:launchConfig,surveyConfig:surveyConfig,resourceDefaultCredentials:resourceDefaultCredentials})}),/*#__PURE__*/_jsx(Route,{path:\"\".concat(match.path,\"/:scheduleId\"),children:/*#__PURE__*/_jsx(Schedule,{hasDaysToKeepField:hasDaysToKeepField,setBreadcrumb:setBreadcrumb,resource:resource,launchConfig:launchConfig,surveyConfig:surveyConfig,resourceDefaultCredentials:resourceDefaultCredentials})},\"details\"),/*#__PURE__*/_jsx(Route,{path:\"\".concat(match.path),children:/*#__PURE__*/_jsx(ScheduleList,{resource:resource,loadSchedules:loadSchedules,launchConfig:launchConfig,surveyConfig:surveyConfig,loadScheduleOptions:loadScheduleOptions})},\"list\")]});}export{Schedules as _Schedules};export default Schedules;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/Schedule/Schedules.js"],"names":["React","Switch","Route","useRouteMatch","Schedule","ScheduleAdd","ScheduleList","Schedules","apiModel","loadScheduleOptions","loadSchedules","setBreadcrumb","launchConfig","surveyConfig","resource","resourceDefaultCredentials","match","hasDaysToKeepField","includes","job_type","path","_Schedules"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,aAAxB,KAA6C,kBAA7C,CAEA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,C,wFAEA,QAASC,CAAAA,SAAT,MASG,IARDC,CAAAA,QAQC,MARDA,QAQC,CAPDC,mBAOC,MAPDA,mBAOC,CANDC,aAMC,MANDA,aAMC,CALDC,aAKC,MALDA,aAKC,CAJDC,YAIC,MAJDA,YAIC,CAHDC,YAGC,MAHDA,YAGC,CAFDC,QAEC,MAFDA,QAEC,CADDC,0BACC,MADDA,0BACC,CACD,GAAMC,CAAAA,KAAK,CAAGb,aAAa,EAA3B,CAEA;AACA;AAEA,GAAMc,CAAAA,kBAAkB,CAAG,CACzB,wBADyB,CAEzB,cAFyB,EAGzBC,QAHyB,CAGhBJ,QAHgB,SAGhBA,QAHgB,iBAGhBA,QAAQ,CAAEK,QAHM,CAA3B,CAKA,mBACE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,WAAKH,KAAK,CAACI,IAAX,QAAX,uBACE,KAAC,WAAD,EACE,kBAAkB,CAAEH,kBADtB,CAEE,QAAQ,CAAET,QAFZ,CAGE,QAAQ,CAAEM,QAHZ,CAIE,YAAY,CAAEF,YAJhB,CAKE,YAAY,CAAEC,YALhB,CAME,0BAA0B,CAAEE,0BAN9B,EADF,EADF,cAWE,KAAC,KAAD,EAAqB,IAAI,WAAKC,KAAK,CAACI,IAAX,gBAAzB,uBACE,KAAC,QAAD,EACE,kBAAkB,CAAEH,kBADtB,CAEE,aAAa,CAAEN,aAFjB,CAGE,QAAQ,CAAEG,QAHZ,CAIE,YAAY,CAAEF,YAJhB,CAKE,YAAY,CAAEC,YALhB,CAME,0BAA0B,CAAEE,0BAN9B,EADF,EAAW,SAAX,CAXF,cAqBE,KAAC,KAAD,EAAkB,IAAI,WAAKC,KAAK,CAACI,IAAX,CAAtB,uBACE,KAAC,YAAD,EACE,QAAQ,CAAEN,QADZ,CAEE,aAAa,CAAEJ,aAFjB,CAGE,YAAY,CAAEE,YAHhB,CAIE,YAAY,CAAEC,YAJhB,CAKE,mBAAmB,CAAEJ,mBALvB,EADF,EAAW,MAAX,CArBF,GADF,CAiCD,CAED,OAASF,SAAS,GAAIc,CAAAA,UAAtB,EACA,cAAed,CAAAA,SAAf","sourcesContent":["import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\n\nimport Schedule from './Schedule';\nimport ScheduleAdd from './ScheduleAdd';\nimport ScheduleList from './ScheduleList';\n\nfunction Schedules({\n  apiModel,\n  loadScheduleOptions,\n  loadSchedules,\n  setBreadcrumb,\n  launchConfig,\n  surveyConfig,\n  resource,\n  resourceDefaultCredentials,\n}) {\n  const match = useRouteMatch();\n\n  // For some management jobs that delete data, we want to provide an additional\n  // field on the scheduler for configuring the number of days to retain.\n\n  const hasDaysToKeepField = [\n    'cleanup_activitystream',\n    'cleanup_jobs',\n  ].includes(resource?.job_type);\n\n  return (\n    <Switch>\n      <Route path={`${match.path}/add`}>\n        <ScheduleAdd\n          hasDaysToKeepField={hasDaysToKeepField}\n          apiModel={apiModel}\n          resource={resource}\n          launchConfig={launchConfig}\n          surveyConfig={surveyConfig}\n          resourceDefaultCredentials={resourceDefaultCredentials}\n        />\n      </Route>\n      <Route key=\"details\" path={`${match.path}/:scheduleId`}>\n        <Schedule\n          hasDaysToKeepField={hasDaysToKeepField}\n          setBreadcrumb={setBreadcrumb}\n          resource={resource}\n          launchConfig={launchConfig}\n          surveyConfig={surveyConfig}\n          resourceDefaultCredentials={resourceDefaultCredentials}\n        />\n      </Route>\n      <Route key=\"list\" path={`${match.path}`}>\n        <ScheduleList\n          resource={resource}\n          loadSchedules={loadSchedules}\n          launchConfig={launchConfig}\n          surveyConfig={surveyConfig}\n          loadScheduleOptions={loadScheduleOptions}\n        />\n      </Route>\n    </Switch>\n  );\n}\n\nexport { Schedules as _Schedules };\nexport default Schedules;\n"]},"metadata":{},"sourceType":"module"}