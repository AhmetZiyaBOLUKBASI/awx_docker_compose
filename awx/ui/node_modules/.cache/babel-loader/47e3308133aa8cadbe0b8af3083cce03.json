{"ast":null,"code":"// @ts-nocheck\nimport format from './format';\nimport { modifierPhases } from '../enums';\nvar INVALID_MODIFIER_ERROR = 'Popper: modifier \"%s\" provided an invalid %s property, expected %s but got %s';\nvar MISSING_DEPENDENCY_ERROR = 'Popper: modifier \"%s\" requires \"%s\", but \"%s\" modifier is not available';\nvar VALID_PROPERTIES = ['name', 'enabled', 'phase', 'fn', 'effect', 'requires', 'options'];\n/**\n * @param modifiers\n */\n\nexport default function validateModifiers(modifiers) {\n  modifiers.forEach(function (modifier) {\n    Object.keys(modifier).forEach(function (key) {\n      switch (key) {\n        case 'name':\n          if (typeof modifier.name !== 'string') {\n            console.error(format(INVALID_MODIFIER_ERROR, String(modifier.name), '\"name\"', '\"string\"', \"\\\"\".concat(String(modifier.name), \"\\\"\")));\n          }\n\n          break;\n\n        case 'enabled':\n          if (typeof modifier.enabled !== 'boolean') {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"enabled\"', '\"boolean\"', \"\\\"\".concat(String(modifier.enabled), \"\\\"\")));\n          }\n\n        case 'phase':\n          if (modifierPhases.indexOf(modifier.phase) < 0) {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"phase\"', \"either \".concat(modifierPhases.join(', ')), \"\\\"\".concat(String(modifier.phase), \"\\\"\")));\n          }\n\n          break;\n\n        case 'fn':\n          if (typeof modifier.fn !== 'function') {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"fn\"', '\"function\"', \"\\\"\".concat(String(modifier.fn), \"\\\"\")));\n          }\n\n          break;\n\n        case 'effect':\n          if (typeof modifier.effect !== 'function') {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"effect\"', '\"function\"', \"\\\"\".concat(String(modifier.fn), \"\\\"\")));\n          }\n\n          break;\n\n        case 'requires':\n          if (!Array.isArray(modifier.requires)) {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"requires\"', '\"array\"', \"\\\"\".concat(String(modifier.requires), \"\\\"\")));\n          }\n\n          break;\n\n        case 'requiresIfExists':\n          if (!Array.isArray(modifier.requiresIfExists)) {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"requiresIfExists\"', '\"array\"', \"\\\"\".concat(String(modifier.requiresIfExists), \"\\\"\")));\n          }\n\n          break;\n\n        case 'options':\n        case 'data':\n          break;\n\n        default:\n          console.error(\"PopperJS: an invalid property has been provided to the \\\"\".concat(modifier.name, \"\\\" modifier, valid properties are \").concat(VALID_PROPERTIES.map(function (s) {\n            return \"\\\"\".concat(s, \"\\\"\");\n          }).join(', '), \"; but \\\"\").concat(key, \"\\\" was provided.\"));\n      }\n\n      modifier.requires && modifier.requires.forEach(function (requirement) {\n        if (modifiers.find(function (mod) {\n          return mod.name === requirement;\n        }) == null) {\n          console.error(format(MISSING_DEPENDENCY_ERROR, String(modifier.name), requirement, requirement));\n        }\n      });\n    });\n  });\n}","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/utils/validateModifiers.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport format from './format';\nimport { modifierPhases } from '../enums';\n\nconst INVALID_MODIFIER_ERROR = 'Popper: modifier \"%s\" provided an invalid %s property, expected %s but got %s';\nconst MISSING_DEPENDENCY_ERROR = 'Popper: modifier \"%s\" requires \"%s\", but \"%s\" modifier is not available';\nconst VALID_PROPERTIES = ['name', 'enabled', 'phase', 'fn', 'effect', 'requires', 'options'];\n\n/**\n * @param modifiers\n */\nexport default function validateModifiers(modifiers: any[]): void {\n  modifiers.forEach(modifier => {\n    Object.keys(modifier).forEach(key => {\n      switch (key) {\n        case 'name':\n          if (typeof modifier.name !== 'string') {\n            console.error(\n              format(INVALID_MODIFIER_ERROR, String(modifier.name), '\"name\"', '\"string\"', `\"${String(modifier.name)}\"`)\n            );\n          }\n\n          break;\n        case 'enabled':\n          if (typeof modifier.enabled !== 'boolean') {\n            console.error(\n              format(INVALID_MODIFIER_ERROR, modifier.name, '\"enabled\"', '\"boolean\"', `\"${String(modifier.enabled)}\"`)\n            );\n          }\n\n        case 'phase':\n          if (modifierPhases.indexOf(modifier.phase) < 0) {\n            console.error(\n              format(\n                INVALID_MODIFIER_ERROR,\n                modifier.name,\n                '\"phase\"',\n                `either ${modifierPhases.join(', ')}`,\n                `\"${String(modifier.phase)}\"`\n              )\n            );\n          }\n\n          break;\n        case 'fn':\n          if (typeof modifier.fn !== 'function') {\n            console.error(\n              format(INVALID_MODIFIER_ERROR, modifier.name, '\"fn\"', '\"function\"', `\"${String(modifier.fn)}\"`)\n            );\n          }\n\n          break;\n        case 'effect':\n          if (typeof modifier.effect !== 'function') {\n            console.error(\n              format(INVALID_MODIFIER_ERROR, modifier.name, '\"effect\"', '\"function\"', `\"${String(modifier.fn)}\"`)\n            );\n          }\n\n          break;\n        case 'requires':\n          if (!Array.isArray(modifier.requires)) {\n            console.error(\n              format(INVALID_MODIFIER_ERROR, modifier.name, '\"requires\"', '\"array\"', `\"${String(modifier.requires)}\"`)\n            );\n          }\n\n          break;\n        case 'requiresIfExists':\n          if (!Array.isArray(modifier.requiresIfExists)) {\n            console.error(\n              format(\n                INVALID_MODIFIER_ERROR,\n                modifier.name,\n                '\"requiresIfExists\"',\n                '\"array\"',\n                `\"${String(modifier.requiresIfExists)}\"`\n              )\n            );\n          }\n\n          break;\n        case 'options':\n        case 'data':\n          break;\n        default:\n          console.error(\n            `PopperJS: an invalid property has been provided to the \"${\n              modifier.name\n            }\" modifier, valid properties are ${VALID_PROPERTIES.map(s => `\"${s}\"`).join(\n              ', '\n            )}; but \"${key}\" was provided.`\n          );\n      }\n\n      modifier.requires &&\n        modifier.requires.forEach(requirement => {\n          if (modifiers.find(mod => mod.name === requirement) == null) {\n            console.error(format(MISSING_DEPENDENCY_ERROR, String(modifier.name), requirement, requirement));\n          }\n        });\n    });\n  });\n}\n"]},"metadata":{},"sourceType":"module"}