{"ast":null,"code":"import{i18n}from\"@lingui/core\";/* eslint-disable react/jsx-no-useless-fragment */import React from'react';import{Label,Tooltip}from'@patternfly/react-core';import icons from'../StatusIcon/icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var colors={approved:'green',denied:'red',success:'green',successful:'green',ok:'green',healthy:'green',failed:'red',error:'red',unreachable:'red',running:'blue',pending:'blue',skipped:'blue',timedOut:'red',waiting:'grey',disabled:'grey',canceled:'orange',changed:'orange'};export default function StatusLabel(_ref){var status=_ref.status,_ref$tooltipContent=_ref.tooltipContent,tooltipContent=_ref$tooltipContent===void 0?'':_ref$tooltipContent,children=_ref.children;var upperCaseStatus={approved:/*i18n*/i18n._(\"Approved\"),denied:/*i18n*/i18n._(\"Denied\"),success:/*i18n*/i18n._(\"Success\"),healthy:/*i18n*/i18n._(\"Healthy\"),successful:/*i18n*/i18n._(\"Successful\"),ok:/*i18n*/i18n._(\"OK\"),failed:/*i18n*/i18n._(\"Failed\"),error:/*i18n*/i18n._(\"Error\"),unreachable:/*i18n*/i18n._(\"Unreachable\"),running:/*i18n*/i18n._(\"Running\"),pending:/*i18n*/i18n._(\"Pending\"),skipped:/*i18n*/i18n._(\"Skipped'\"),timedOut:/*i18n*/i18n._(\"Timed out\"),waiting:/*i18n*/i18n._(\"Waiting\"),disabled:/*i18n*/i18n._(\"Disabled\"),canceled:/*i18n*/i18n._(\"Canceled\"),changed:/*i18n*/i18n._(\"Changed\")};var label=upperCaseStatus[status]||status;var color=colors[status]||'grey';var Icon=icons[status];var renderLabel=function renderLabel(){return/*#__PURE__*/_jsx(Label,{variant:\"outline\",color:color,icon:Icon?/*#__PURE__*/_jsx(Icon,{}):null,children:children||label});};return/*#__PURE__*/_jsx(_Fragment,{children:tooltipContent?/*#__PURE__*/_jsx(Tooltip,{content:tooltipContent,position:\"top\",children:renderLabel()}):renderLabel()});}","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/StatusLabel/StatusLabel.js"],"names":["React","Label","Tooltip","icons","colors","approved","denied","success","successful","ok","healthy","failed","error","unreachable","running","pending","skipped","timedOut","waiting","disabled","canceled","changed","StatusLabel","status","tooltipContent","children","upperCaseStatus","label","color","Icon","renderLabel"],"mappings":"+BAAA,kDAEA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,OAASC,KAAT,CAAgBC,OAAhB,KAA+B,wBAA/B,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,C,gGAEA,GAAMC,CAAAA,MAAM,CAAG,CACbC,QAAQ,CAAE,OADG,CAEbC,MAAM,CAAE,KAFK,CAGbC,OAAO,CAAE,OAHI,CAIbC,UAAU,CAAE,OAJC,CAKbC,EAAE,CAAE,OALS,CAMbC,OAAO,CAAE,OANI,CAObC,MAAM,CAAE,KAPK,CAQbC,KAAK,CAAE,KARM,CASbC,WAAW,CAAE,KATA,CAUbC,OAAO,CAAE,MAVI,CAWbC,OAAO,CAAE,MAXI,CAYbC,OAAO,CAAE,MAZI,CAabC,QAAQ,CAAE,KAbG,CAcbC,OAAO,CAAE,MAdI,CAebC,QAAQ,CAAE,MAfG,CAgBbC,QAAQ,CAAE,QAhBG,CAiBbC,OAAO,CAAE,QAjBI,CAAf,CAoBA,cAAe,SAASC,CAAAA,WAAT,MAAgE,IAAzCC,CAAAA,MAAyC,MAAzCA,MAAyC,0BAAjCC,cAAiC,CAAjCA,cAAiC,8BAAhB,EAAgB,qBAAZC,QAAY,MAAZA,QAAY,CAC7E,GAAMC,CAAAA,eAAe,CAAG,CACtBrB,QAAQ,SAAE,kBADY,CAEtBC,MAAM,SAAE,gBAFc,CAGtBC,OAAO,SAAE,iBAHa,CAItBG,OAAO,SAAE,iBAJa,CAKtBF,UAAU,SAAE,oBALU,CAMtBC,EAAE,SAAE,YANkB,CAOtBE,MAAM,SAAE,gBAPc,CAQtBC,KAAK,SAAE,eARe,CAStBC,WAAW,SAAE,qBATS,CAUtBC,OAAO,SAAE,iBAVa,CAWtBC,OAAO,SAAE,iBAXa,CAYtBC,OAAO,SAAE,kBAZa,CAatBC,QAAQ,SAAE,mBAbY,CActBC,OAAO,SAAE,iBAda,CAetBC,QAAQ,SAAE,kBAfY,CAgBtBC,QAAQ,SAAE,kBAhBY,CAiBtBC,OAAO,SAAE,iBAjBa,CAAxB,CAmBA,GAAMM,CAAAA,KAAK,CAAGD,eAAe,CAACH,MAAD,CAAf,EAA2BA,MAAzC,CACA,GAAMK,CAAAA,KAAK,CAAGxB,MAAM,CAACmB,MAAD,CAAN,EAAkB,MAAhC,CACA,GAAMM,CAAAA,IAAI,CAAG1B,KAAK,CAACoB,MAAD,CAAlB,CAEA,GAAMO,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,sBAClB,KAAC,KAAD,EAAO,OAAO,CAAC,SAAf,CAAyB,KAAK,CAAEF,KAAhC,CAAuC,IAAI,CAAEC,IAAI,cAAG,KAAC,IAAD,IAAH,CAAc,IAA/D,UACGJ,QAAQ,EAAIE,KADf,EADkB,EAApB,CAMA,mBACE,yBACGH,cAAc,cACb,KAAC,OAAD,EAAS,OAAO,CAAEA,cAAlB,CAAkC,QAAQ,CAAC,KAA3C,UACGM,WAAW,EADd,EADa,CAKbA,WAAW,EANf,EADF,CAWD","sourcesContent":["/* eslint-disable react/jsx-no-useless-fragment */\nimport 'styled-components/macro';\nimport React from 'react';\nimport { t } from '@lingui/macro';\nimport { oneOf } from 'prop-types';\nimport { Label, Tooltip } from '@patternfly/react-core';\nimport icons from '../StatusIcon/icons';\n\nconst colors = {\n  approved: 'green',\n  denied: 'red',\n  success: 'green',\n  successful: 'green',\n  ok: 'green',\n  healthy: 'green',\n  failed: 'red',\n  error: 'red',\n  unreachable: 'red',\n  running: 'blue',\n  pending: 'blue',\n  skipped: 'blue',\n  timedOut: 'red',\n  waiting: 'grey',\n  disabled: 'grey',\n  canceled: 'orange',\n  changed: 'orange',\n};\n\nexport default function StatusLabel({ status, tooltipContent = '', children }) {\n  const upperCaseStatus = {\n    approved: t`Approved`,\n    denied: t`Denied`,\n    success: t`Success`,\n    healthy: t`Healthy`,\n    successful: t`Successful`,\n    ok: t`OK`,\n    failed: t`Failed`,\n    error: t`Error`,\n    unreachable: t`Unreachable`,\n    running: t`Running`,\n    pending: t`Pending`,\n    skipped: t`Skipped'`,\n    timedOut: t`Timed out`,\n    waiting: t`Waiting`,\n    disabled: t`Disabled`,\n    canceled: t`Canceled`,\n    changed: t`Changed`,\n  };\n  const label = upperCaseStatus[status] || status;\n  const color = colors[status] || 'grey';\n  const Icon = icons[status];\n\n  const renderLabel = () => (\n    <Label variant=\"outline\" color={color} icon={Icon ? <Icon /> : null}>\n      {children || label}\n    </Label>\n  );\n\n  return (\n    <>\n      {tooltipContent ? (\n        <Tooltip content={tooltipContent} position=\"top\">\n          {renderLabel()}\n        </Tooltip>\n      ) : (\n        renderLabel()\n      )}\n    </>\n  );\n}\n\nStatusLabel.propTypes = {\n  status: oneOf([\n    'approved',\n    'denied',\n    'success',\n    'successful',\n    'ok',\n    'healthy',\n    'failed',\n    'error',\n    'unreachable',\n    'running',\n    'pending',\n    'skipped',\n    'timedOut',\n    'waiting',\n    'disabled',\n    'canceled',\n    'changed',\n  ]).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}