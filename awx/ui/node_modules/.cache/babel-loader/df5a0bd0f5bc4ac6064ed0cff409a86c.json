{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState}from'react';import{useHistory,useRouteMatch}from'react-router-dom';import{CardBody}from'components/Card';import SurveyQuestionForm from'./SurveyQuestionForm';import{jsx as _jsx}from\"react/jsx-runtime\";export default function SurveyQuestionAdd(_ref){var survey=_ref.survey,updateSurvey=_ref.updateSurvey;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),formError=_useState2[0],setFormError=_useState2[1];var history=useHistory();var match=useRouteMatch();var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(question){var formData,_survey$spec,choices,defaultAnswers,newSpec;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:formData=_objectSpread({},question);_context.prev=1;if(!(survey!==null&&survey!==void 0&&(_survey$spec=survey.spec)!==null&&_survey$spec!==void 0&&_survey$spec.some(function(q){return q.variable===formData.variable;}))){_context.next=5;break;}setFormError(new Error(\"Survey already contains a question with variable named \\u201C\".concat(formData.variable,\"\\u201D\")));return _context.abrupt(\"return\");case 5:if(formData.type==='multiselect'||formData.type==='multiplechoice'){choices=[];defaultAnswers='';formData.formattedChoices.forEach(function(_ref3,i){var choice=_ref3.choice,isDefault=_ref3.isDefault;choices.push(choice);if(isDefault){defaultAnswers=i===formData.formattedChoices.length-1?defaultAnswers.concat(\"\".concat(choice)):defaultAnswers.concat(\"\".concat(choice,\"\\n\"));}});formData.default=defaultAnswers.trim();formData.choices=choices;}delete formData.formattedChoices;newSpec=survey!==null&&survey!==void 0&&survey.spec?survey.spec.concat(formData):[formData];_context.next=10;return updateSurvey(newSpec);case 10:history.push(match.url.replace('/add',''));_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](1);setFormError(_context.t0);case 16:case\"end\":return _context.stop();}}},_callee,null,[[1,13]]);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleCancel=function handleCancel(){history.push(match.url.replace('/add',''));};return/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(SurveyQuestionForm,{handleSubmit:handleSubmit,handleCancel:handleCancel,submitError:formError})});}","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Template/Survey/SurveyQuestionAdd.js"],"names":["React","useState","useHistory","useRouteMatch","CardBody","SurveyQuestionForm","SurveyQuestionAdd","survey","updateSurvey","formError","setFormError","history","match","handleSubmit","question","formData","spec","some","q","variable","Error","type","choices","defaultAnswers","formattedChoices","forEach","i","choice","isDefault","push","length","concat","default","trim","newSpec","url","replace","handleCancel"],"mappings":"8ZAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,UAAT,CAAqBC,aAArB,KAA0C,kBAA1C,CACA,OAASC,QAAT,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,sBAA/B,C,2CAEA,cAAe,SAASC,CAAAA,iBAAT,MAAqD,IAAxBC,CAAAA,MAAwB,MAAxBA,MAAwB,CAAhBC,YAAgB,MAAhBA,YAAgB,CAClE,cAAkCP,QAAQ,CAAC,IAAD,CAA1C,wCAAOQ,SAAP,eAAkBC,YAAlB,eACA,GAAMC,CAAAA,OAAO,CAAGT,UAAU,EAA1B,CACA,GAAMU,CAAAA,KAAK,CAAGT,aAAa,EAA3B,CAEA,GAAMU,CAAAA,YAAY,2FAAG,iBAAOC,QAAP,2KACbC,QADa,kBACGD,QADH,uBAGbP,MAHa,SAGbA,MAHa,yBAGbA,MAAM,CAAES,IAHK,iCAGb,aAAcC,IAAd,CAAmB,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,QAAF,GAAeJ,QAAQ,CAACI,QAA/B,EAAnB,CAHa,0BAIfT,YAAY,CACV,GAAIU,CAAAA,KAAJ,wEAC6DL,QAAQ,CAACI,QADtE,WADU,CAAZ,CAJe,wCAWjB,GACEJ,QAAQ,CAACM,IAAT,GAAkB,aAAlB,EACAN,QAAQ,CAACM,IAAT,GAAkB,gBAFpB,CAGE,CACMC,OADN,CACgB,EADhB,CAEIC,cAFJ,CAEqB,EAFrB,CAGAR,QAAQ,CAACS,gBAAT,CAA0BC,OAA1B,CAAkC,eAAwBC,CAAxB,CAA8B,IAA3BC,CAAAA,MAA2B,OAA3BA,MAA2B,CAAnBC,SAAmB,OAAnBA,SAAmB,CAC9DN,OAAO,CAACO,IAAR,CAAaF,MAAb,EACA,GAAIC,SAAJ,CAAe,CACbL,cAAc,CACZG,CAAC,GAAKX,QAAQ,CAACS,gBAAT,CAA0BM,MAA1B,CAAmC,CAAzC,CACIP,cAAc,CAACQ,MAAf,WAAyBJ,MAAzB,EADJ,CAEIJ,cAAc,CAACQ,MAAf,WAAyBJ,MAAzB,OAHN,CAID,CACF,CARD,EASAZ,QAAQ,CAACiB,OAAT,CAAmBT,cAAc,CAACU,IAAf,EAAnB,CACAlB,QAAQ,CAACO,OAAT,CAAmBA,OAAnB,CACD,CACD,MAAOP,CAAAA,QAAQ,CAACS,gBAAhB,CACMU,OA9BW,CA8BD3B,MAAM,OAAN,EAAAA,MAAM,SAAN,EAAAA,MAAM,CAAES,IAAR,CAAeT,MAAM,CAACS,IAAP,CAAYe,MAAZ,CAAmBhB,QAAnB,CAAf,CAA8C,CAACA,QAAD,CA9B7C,wBA+BXP,CAAAA,YAAY,CAAC0B,OAAD,CA/BD,SAgCjBvB,OAAO,CAACkB,IAAR,CAAajB,KAAK,CAACuB,GAAN,CAAUC,OAAV,CAAkB,MAAlB,CAA0B,EAA1B,CAAb,EAhCiB,iFAkCjB1B,YAAY,aAAZ,CAlCiB,qEAAH,kBAAZG,CAAAA,YAAY,6CAAlB,CAsCA,GAAMwB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB1B,OAAO,CAACkB,IAAR,CAAajB,KAAK,CAACuB,GAAN,CAAUC,OAAV,CAAkB,MAAlB,CAA0B,EAA1B,CAAb,EACD,CAFD,CAIA,mBACE,KAAC,QAAD,wBACE,KAAC,kBAAD,EACE,YAAY,CAAEvB,YADhB,CAEE,YAAY,CAAEwB,YAFhB,CAGE,WAAW,CAAE5B,SAHf,EADF,EADF,CASD","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { CardBody } from 'components/Card';\nimport SurveyQuestionForm from './SurveyQuestionForm';\n\nexport default function SurveyQuestionAdd({ survey, updateSurvey }) {\n  const [formError, setFormError] = useState(null);\n  const history = useHistory();\n  const match = useRouteMatch();\n\n  const handleSubmit = async (question) => {\n    const formData = { ...question };\n    try {\n      if (survey?.spec?.some((q) => q.variable === formData.variable)) {\n        setFormError(\n          new Error(\n            `Survey already contains a question with variable named “${formData.variable}”`\n          )\n        );\n        return;\n      }\n      if (\n        formData.type === 'multiselect' ||\n        formData.type === 'multiplechoice'\n      ) {\n        const choices = [];\n        let defaultAnswers = '';\n        formData.formattedChoices.forEach(({ choice, isDefault }, i) => {\n          choices.push(choice);\n          if (isDefault) {\n            defaultAnswers =\n              i === formData.formattedChoices.length - 1\n                ? defaultAnswers.concat(`${choice}`)\n                : defaultAnswers.concat(`${choice}\\n`);\n          }\n        });\n        formData.default = defaultAnswers.trim();\n        formData.choices = choices;\n      }\n      delete formData.formattedChoices;\n      const newSpec = survey?.spec ? survey.spec.concat(formData) : [formData];\n      await updateSurvey(newSpec);\n      history.push(match.url.replace('/add', ''));\n    } catch (err) {\n      setFormError(err);\n    }\n  };\n\n  const handleCancel = () => {\n    history.push(match.url.replace('/add', ''));\n  };\n\n  return (\n    <CardBody>\n      <SurveyQuestionForm\n        handleSubmit={handleSubmit}\n        handleCancel={handleCancel}\n        submitError={formError}\n      />\n    </CardBody>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}