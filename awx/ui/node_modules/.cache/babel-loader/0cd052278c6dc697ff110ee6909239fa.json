{"ast":null,"code":"import _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Radio/radio';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport var Radio = /*#__PURE__*/function (_React$Component) {\n  _inherits(Radio, _React$Component);\n\n  var _super = _createSuper(Radio);\n\n  function Radio(props) {\n    var _this;\n\n    _classCallCheck(this, Radio);\n\n    _this = _super.call(this, props);\n\n    _this.handleChange = function (event) {\n      _this.props.onChange(event.currentTarget.checked, event);\n    };\n\n    if (!props.label && !props['aria-label']) {\n      // eslint-disable-next-line no-console\n      console.error('Radio:', 'Radio requires an aria-label to be specified');\n    }\n\n    _this.state = {\n      ouiaStateId: getDefaultOUIAId(Radio.displayName)\n    };\n    return _this;\n  }\n\n  _createClass(Radio, [{\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          ariaLabel = _a['aria-label'],\n          checked = _a.checked,\n          className = _a.className,\n          defaultChecked = _a.defaultChecked,\n          isLabelWrapped = _a.isLabelWrapped,\n          isLabelBeforeButton = _a.isLabelBeforeButton,\n          isChecked = _a.isChecked,\n          isDisabled = _a.isDisabled,\n          isValid = _a.isValid,\n          label = _a.label,\n          onChange = _a.onChange,\n          description = _a.description,\n          body = _a.body,\n          ouiaId = _a.ouiaId,\n          _a$ouiaSafe = _a.ouiaSafe,\n          ouiaSafe = _a$ouiaSafe === void 0 ? true : _a$ouiaSafe,\n          props = __rest(_a, ['aria-label', \"checked\", \"className\", \"defaultChecked\", \"isLabelWrapped\", \"isLabelBeforeButton\", \"isChecked\", \"isDisabled\", \"isValid\", \"label\", \"onChange\", \"description\", \"body\", \"ouiaId\", \"ouiaSafe\"]);\n\n      if (!props.id) {\n        // eslint-disable-next-line no-console\n        console.error('Radio:', 'id is required to make input accessible');\n      }\n\n      var inputRendered = React.createElement(\"input\", Object.assign({}, props, {\n        className: css(styles.radioInput),\n        type: \"radio\",\n        onChange: this.handleChange,\n        \"aria-invalid\": !isValid,\n        disabled: isDisabled,\n        checked: checked || isChecked\n      }, checked === undefined && {\n        defaultChecked: defaultChecked\n      }, !label && {\n        'aria-label': ariaLabel\n      }, getOUIAProps(Radio.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)));\n      var labelRendered = null;\n\n      if (label && isLabelWrapped) {\n        labelRendered = React.createElement(\"span\", {\n          className: css(styles.radioLabel, isDisabled && styles.modifiers.disabled)\n        }, label);\n      } else if (label) {\n        labelRendered = React.createElement(\"label\", {\n          className: css(styles.radioLabel, isDisabled && styles.modifiers.disabled),\n          htmlFor: props.id\n        }, label);\n      }\n\n      var descRender = description ? React.createElement(\"span\", {\n        className: css(styles.radioDescription)\n      }, description) : null;\n      var bodyRender = body ? React.createElement(\"span\", {\n        className: css(styles.radioBody)\n      }, body) : null;\n      var childrenRendered = isLabelBeforeButton ? React.createElement(React.Fragment, null, labelRendered, inputRendered, descRender, bodyRender) : React.createElement(React.Fragment, null, inputRendered, labelRendered, descRender, bodyRender);\n      return isLabelWrapped ? React.createElement(\"label\", {\n        className: css(styles.radio, className),\n        htmlFor: props.id\n      }, childrenRendered) : React.createElement(\"div\", {\n        className: css(styles.radio, !label && styles.modifiers.standalone, className)\n      }, childrenRendered);\n    }\n  }]);\n\n  return Radio;\n}(React.Component);\nRadio.displayName = 'Radio';\nRadio.defaultProps = {\n  className: '',\n  isDisabled: false,\n  isValid: true,\n  onChange: function onChange() {}\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Radio/Radio.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Radio/radio';\nimport { css } from '@patternfly/react-styles';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId } from '../../helpers';\n\nexport interface RadioProps\n  extends Omit<React.HTMLProps<HTMLInputElement>, 'disabled' | 'label' | 'onChange' | 'type'>,\n    OUIAProps {\n  /** Additional classes added to the radio. */\n  className?: string;\n  /** Id of the radio. */\n  id: string;\n  /** Flag to show if the radio label is wrapped on small screen. */\n  isLabelWrapped?: boolean;\n  /** Flag to show if the radio label is shown before the radio button. */\n  isLabelBeforeButton?: boolean;\n  /** Flag to show if the radio is checked. */\n  checked?: boolean;\n  /** Flag to show if the radio is checked. */\n  isChecked?: boolean;\n  /** Flag to show if the radio is disabled. */\n  isDisabled?: boolean;\n  /** Flag to show if the radio selection is valid or invalid. */\n  isValid?: boolean;\n  /** Label text of the radio. */\n  label?: React.ReactNode;\n  /** Name for group of radios */\n  name: string;\n  /** A callback for when the radio selection changes. */\n  onChange?: (checked: boolean, event: React.FormEvent<HTMLInputElement>) => void;\n  /** Aria label for the radio. */\n  'aria-label'?: string;\n  /** Description text of the radio. */\n  description?: React.ReactNode;\n  /** Body of the radio. */\n  body?: React.ReactNode;\n}\n\nexport class Radio extends React.Component<RadioProps, { ouiaStateId: string }> {\n  static displayName = 'Radio';\n  static defaultProps: PickOptional<RadioProps> = {\n    className: '',\n    isDisabled: false,\n    isValid: true,\n    onChange: () => {}\n  };\n\n  constructor(props: RadioProps) {\n    super(props);\n    if (!props.label && !props['aria-label']) {\n      // eslint-disable-next-line no-console\n      console.error('Radio:', 'Radio requires an aria-label to be specified');\n    }\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(Radio.displayName)\n    };\n  }\n\n  handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n    this.props.onChange(event.currentTarget.checked, event);\n  };\n\n  render() {\n    const {\n      'aria-label': ariaLabel,\n      checked,\n      className,\n      defaultChecked,\n      isLabelWrapped,\n      isLabelBeforeButton,\n      isChecked,\n      isDisabled,\n      isValid,\n      label,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onChange,\n      description,\n      body,\n      ouiaId,\n      ouiaSafe = true,\n      ...props\n    } = this.props;\n    if (!props.id) {\n      // eslint-disable-next-line no-console\n      console.error('Radio:', 'id is required to make input accessible');\n    }\n\n    const inputRendered = (\n      <input\n        {...props}\n        className={css(styles.radioInput)}\n        type=\"radio\"\n        onChange={this.handleChange}\n        aria-invalid={!isValid}\n        disabled={isDisabled}\n        checked={checked || isChecked}\n        {...(checked === undefined && { defaultChecked })}\n        {...(!label && { 'aria-label': ariaLabel })}\n        {...getOUIAProps(Radio.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n      />\n    );\n\n    let labelRendered: React.ReactNode = null;\n    if (label && isLabelWrapped) {\n      labelRendered = <span className={css(styles.radioLabel, isDisabled && styles.modifiers.disabled)}>{label}</span>;\n    } else if (label) {\n      labelRendered = (\n        <label className={css(styles.radioLabel, isDisabled && styles.modifiers.disabled)} htmlFor={props.id}>\n          {label}\n        </label>\n      );\n    }\n\n    const descRender = description ? <span className={css(styles.radioDescription)}>{description}</span> : null;\n    const bodyRender = body ? <span className={css(styles.radioBody)}>{body}</span> : null;\n    const childrenRendered = isLabelBeforeButton ? (\n      <>\n        {labelRendered}\n        {inputRendered}\n        {descRender}\n        {bodyRender}\n      </>\n    ) : (\n      <>\n        {inputRendered}\n        {labelRendered}\n        {descRender}\n        {bodyRender}\n      </>\n    );\n\n    return isLabelWrapped ? (\n      <label className={css(styles.radio, className)} htmlFor={props.id}>\n        {childrenRendered}\n      </label>\n    ) : (\n      <div className={css(styles.radio, !label && styles.modifiers.standalone, className)}>{childrenRendered}</div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}