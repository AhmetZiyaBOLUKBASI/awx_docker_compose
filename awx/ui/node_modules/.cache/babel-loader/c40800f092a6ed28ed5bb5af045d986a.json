{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Panel/panel';\nimport { css } from '@patternfly/react-styles';\n\nvar PanelBase = function PanelBase(_a) {\n  var className = _a.className,\n      children = _a.children,\n      variant = _a.variant,\n      isScrollable = _a.isScrollable,\n      innerRef = _a.innerRef,\n      props = __rest(_a, [\"className\", \"children\", \"variant\", \"isScrollable\", \"innerRef\"]);\n\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.panel, variant === 'raised' && styles.modifiers.raised, variant === 'bordered' && styles.modifiers.bordered, isScrollable && styles.modifiers.scrollable, className),\n    ref: innerRef\n  }, props), children);\n};\n\nexport var Panel = React.forwardRef(function (props, ref) {\n  return React.createElement(PanelBase, Object.assign({\n    innerRef: ref\n  }, props));\n});\nPanel.displayName = 'Panel';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Panel/Panel.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,qDAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;;AAeA,IAAM,SAAS,GAAwC,SAAjD,SAAiD,CAAC,EAAD,EAOtC;AAPuC,MACtD,SADsD,GAK9C,EAL8C,CACtD,SADsD;AAAA,MAEtD,QAFsD,GAK9C,EAL8C,CAEtD,QAFsD;AAAA,MAGtD,OAHsD,GAK9C,EAL8C,CAGtD,OAHsD;AAAA,MAItD,YAJsD,GAK9C,EAL8C,CAItD,YAJsD;AAAA,MAKtD,QALsD,GAK9C,EAL8C,CAKtD,QALsD;AAAA,MAMnD,KANmD,GAM9C,MAAA,CAAA,EAAA,EAN8C,CAAA,WAAA,EAAA,UAAA,EAAA,SAAA,EAAA,cAAA,EAAA,UAAA,CAM9C,CAN8C;;AAOtC,SAChB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACE,IAAA,SAAS,EAAE,GAAG,CACZ,MAAM,CAAC,KADK,EAEZ,OAAO,KAAK,QAAZ,IAAwB,MAAM,CAAC,SAAP,CAAiB,MAF7B,EAGZ,OAAO,KAAK,UAAZ,IAA0B,MAAM,CAAC,SAAP,CAAiB,QAH/B,EAIZ,YAAY,IAAI,MAAM,CAAC,SAAP,CAAiB,UAJrB,EAKZ,SALY,CADhB;AAQE,IAAA,GAAG,EAAE;AARP,GAAA,EASM,KATN,CAAA,EAWG,QAXH,CADgB;AAcjB,CArBD;;AAuBA,OAAO,IAAM,KAAK,GAAG,KAAK,CAAC,UAAN,CAAiB,UAAC,KAAD,EAAoB,GAApB;AAAA,SACpC,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,MAAA,CAAA,MAAA,CAAA;AAAC,IAAA,QAAQ,EAAE;AAAX,GAAA,EAAoB,KAApB,CAAV,CADoC;AAAA,CAAjB,CAAd;AAGP,KAAK,CAAC,WAAN,GAAoB,OAApB","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Panel/panel';\nimport { css } from '@patternfly/react-styles';\n\nexport interface PanelProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered inside the panel */\n  children?: React.ReactNode;\n  /** Class to add to outer div */\n  className?: string;\n  /** Adds panel variant styles */\n  variant?: 'raised' | 'bordered';\n  /** Flag to add scrollable styling to the panel */\n  isScrollable?: boolean;\n  /** @hide Forwarded ref */\n  innerRef?: React.Ref<any>;\n}\n\nconst PanelBase: React.FunctionComponent<PanelProps> = ({\n  className,\n  children,\n  variant,\n  isScrollable,\n  innerRef,\n  ...props\n}: PanelProps) => (\n  <div\n    className={css(\n      styles.panel,\n      variant === 'raised' && styles.modifiers.raised,\n      variant === 'bordered' && styles.modifiers.bordered,\n      isScrollable && styles.modifiers.scrollable,\n      className\n    )}\n    ref={innerRef}\n    {...props}\n  >\n    {children}\n  </div>\n);\n\nexport const Panel = React.forwardRef((props: PanelProps, ref: React.Ref<any>) => (\n  <PanelBase innerRef={ref} {...props} />\n));\nPanel.displayName = 'Panel';\n"]},"metadata":{},"sourceType":"module"}