{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Truncate/truncate';\nimport { css } from '@patternfly/react-styles';\nimport { Tooltip } from '../Tooltip';\nexport var TruncatePosition;\n\n(function (TruncatePosition) {\n  TruncatePosition[\"start\"] = \"start\";\n  TruncatePosition[\"end\"] = \"end\";\n  TruncatePosition[\"middle\"] = \"middle\";\n})(TruncatePosition || (TruncatePosition = {}));\n\nvar truncateStyles = {\n  start: styles.truncateEnd,\n  end: styles.truncateStart\n};\nvar minWidthCharacters = 12;\n\nvar sliceContent = function sliceContent(str, slice) {\n  return [str.slice(0, str.length - slice), str.slice(-slice)];\n};\n\nexport var Truncate = function Truncate(_a) {\n  var className = _a.className,\n      _a$position = _a.position,\n      position = _a$position === void 0 ? 'end' : _a$position,\n      _a$tooltipPosition = _a.tooltipPosition,\n      tooltipPosition = _a$tooltipPosition === void 0 ? 'top' : _a$tooltipPosition,\n      _a$trailingNumChars = _a.trailingNumChars,\n      trailingNumChars = _a$trailingNumChars === void 0 ? 7 : _a$trailingNumChars,\n      content = _a.content,\n      props = __rest(_a, [\"className\", \"position\", \"tooltipPosition\", \"trailingNumChars\", \"content\"]);\n\n  return React.createElement(Tooltip, {\n    position: tooltipPosition,\n    content: content\n  }, React.createElement(\"span\", Object.assign({\n    className: css(styles.truncate, className)\n  }, props), (position === TruncatePosition.end || position === TruncatePosition.start) && React.createElement(\"span\", {\n    className: truncateStyles[position]\n  }, content, position === TruncatePosition.start && React.createElement(React.Fragment, null, \"\\u200E\")), position === TruncatePosition.middle && content.slice(0, content.length - trailingNumChars).length > minWidthCharacters && React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: styles.truncateStart\n  }, sliceContent(content, trailingNumChars)[0]), React.createElement(\"span\", {\n    className: styles.truncateEnd\n  }, sliceContent(content, trailingNumChars)[1])), position === TruncatePosition.middle && content.slice(0, content.length - trailingNumChars).length <= minWidthCharacters && content));\n};\nTruncate.displayName = 'Truncate';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Truncate/Truncate.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Truncate/truncate';\nimport { css } from '@patternfly/react-styles';\nimport { Tooltip, TooltipPosition } from '../Tooltip';\n\nexport enum TruncatePosition {\n  start = 'start',\n  end = 'end',\n  middle = 'middle'\n}\n\nconst truncateStyles = {\n  start: styles.truncateEnd,\n  end: styles.truncateStart\n};\n\nconst minWidthCharacters: number = 12;\n\ninterface TruncateProps extends React.HTMLProps<HTMLSpanElement> {\n  /** Class to add to outer span */\n  className?: string;\n  /** Text to truncate */\n  content: string;\n  /** The number of characters displayed in the second half of the truncation */\n  trailingNumChars?: number;\n  /** Where the text will be truncated */\n  position?: 'start' | 'middle' | 'end';\n  /** Tooltip position */\n  tooltipPosition?:\n    | TooltipPosition\n    | 'auto'\n    | 'top'\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'left-start'\n    | 'left-end'\n    | 'right-start'\n    | 'right-end';\n}\n\nconst sliceContent = (str: string, slice: number) => [str.slice(0, str.length - slice), str.slice(-slice)];\n\nexport const Truncate: React.FunctionComponent<TruncateProps> = ({\n  className,\n  position = 'end',\n  tooltipPosition = 'top',\n  trailingNumChars = 7,\n  content,\n  ...props\n}: TruncateProps) => (\n  <Tooltip position={tooltipPosition} content={content}>\n    <span className={css(styles.truncate, className)} {...props}>\n      {(position === TruncatePosition.end || position === TruncatePosition.start) && (\n        <span className={truncateStyles[position]}>\n          {content}\n          {position === TruncatePosition.start && <React.Fragment>&lrm;</React.Fragment>}\n        </span>\n      )}\n      {position === TruncatePosition.middle &&\n        content.slice(0, content.length - trailingNumChars).length > minWidthCharacters && (\n          <React.Fragment>\n            <span className={styles.truncateStart}>{sliceContent(content, trailingNumChars)[0]}</span>\n            <span className={styles.truncateEnd}>{sliceContent(content, trailingNumChars)[1]}</span>\n          </React.Fragment>\n        )}\n      {position === TruncatePosition.middle &&\n        content.slice(0, content.length - trailingNumChars).length <= minWidthCharacters &&\n        content}\n    </span>\n  </Tooltip>\n);\nTruncate.displayName = 'Truncate';\n"]},"metadata":{},"sourceType":"module"}