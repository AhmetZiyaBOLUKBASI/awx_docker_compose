{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import{useField}from'formik';import{FormGroup,InputGroup}from'@patternfly/react-core';import Popover from'../Popover';import PasswordInput from'./PasswordInput';import{jsx as _jsx}from\"react/jsx-runtime\";function PasswordField(props){var id=props.id,name=props.name,label=props.label,validate=props.validate,isRequired=props.isRequired,helperText=props.helperText;var _useField=useField({name:name,validate:validate}),_useField2=_slicedToArray(_useField,2),meta=_useField2[1];var isValid=!(meta.touched&&meta.error);return/*#__PURE__*/_jsx(FormGroup,{fieldId:id,helperTextInvalid:meta.error,isRequired:isRequired,validated:isValid?'default':'error',label:label,labelIcon:helperText&&/*#__PURE__*/_jsx(Popover,{content:helperText}),children:/*#__PURE__*/_jsx(InputGroup,{children:/*#__PURE__*/_jsx(PasswordInput,_objectSpread({},props))})});}PasswordField.defaultProps={validate:function validate(){},isRequired:false,isDisabled:false};export default PasswordField;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/FormField/PasswordField.js"],"names":["React","useField","FormGroup","InputGroup","Popover","PasswordInput","PasswordField","props","id","name","label","validate","isRequired","helperText","meta","isValid","touched","error","defaultProps","isDisabled"],"mappings":"6MAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,QAAT,KAAyB,QAAzB,CACA,OAASC,SAAT,CAAoBC,UAApB,KAAsC,wBAAtC,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,C,2CAEA,QAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,CAC5B,GAAQC,CAAAA,EAAR,CAA8DD,KAA9D,CAAQC,EAAR,CAAYC,IAAZ,CAA8DF,KAA9D,CAAYE,IAAZ,CAAkBC,KAAlB,CAA8DH,KAA9D,CAAkBG,KAAlB,CAAyBC,QAAzB,CAA8DJ,KAA9D,CAAyBI,QAAzB,CAAmCC,UAAnC,CAA8DL,KAA9D,CAAmCK,UAAnC,CAA+CC,UAA/C,CAA8DN,KAA9D,CAA+CM,UAA/C,CACA,cAAiBZ,QAAQ,CAAC,CAAEQ,IAAI,CAAJA,IAAF,CAAQE,QAAQ,CAARA,QAAR,CAAD,CAAzB,wCAASG,IAAT,eACA,GAAMC,CAAAA,OAAO,CAAG,EAAED,IAAI,CAACE,OAAL,EAAgBF,IAAI,CAACG,KAAvB,CAAhB,CAEA,mBACE,KAAC,SAAD,EACE,OAAO,CAAET,EADX,CAEE,iBAAiB,CAAEM,IAAI,CAACG,KAF1B,CAGE,UAAU,CAAEL,UAHd,CAIE,SAAS,CAAEG,OAAO,CAAG,SAAH,CAAe,OAJnC,CAKE,KAAK,CAAEL,KALT,CAME,SAAS,CAAEG,UAAU,eAAI,KAAC,OAAD,EAAS,OAAO,CAAEA,UAAlB,EAN3B,uBAQE,KAAC,UAAD,wBACE,KAAC,aAAD,kBAAmBN,KAAnB,EADF,EARF,EADF,CAcD,CAWDD,aAAa,CAACY,YAAd,CAA6B,CAC3BP,QAAQ,CAAE,mBAAM,CAAE,CADS,CAE3BC,UAAU,CAAE,KAFe,CAG3BO,UAAU,CAAE,KAHe,CAA7B,CAMA,cAAeb,CAAAA,aAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useField } from 'formik';\nimport { FormGroup, InputGroup } from '@patternfly/react-core';\nimport Popover from '../Popover';\nimport PasswordInput from './PasswordInput';\n\nfunction PasswordField(props) {\n  const { id, name, label, validate, isRequired, helperText } = props;\n  const [, meta] = useField({ name, validate });\n  const isValid = !(meta.touched && meta.error);\n\n  return (\n    <FormGroup\n      fieldId={id}\n      helperTextInvalid={meta.error}\n      isRequired={isRequired}\n      validated={isValid ? 'default' : 'error'}\n      label={label}\n      labelIcon={helperText && <Popover content={helperText} />}\n    >\n      <InputGroup>\n        <PasswordInput {...props} />\n      </InputGroup>\n    </FormGroup>\n  );\n}\n\nPasswordField.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  validate: PropTypes.func,\n  isRequired: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n};\n\nPasswordField.defaultProps = {\n  validate: () => {},\n  isRequired: false,\n  isDisabled: false,\n};\n\nexport default PasswordField;\n"]},"metadata":{},"sourceType":"module"}