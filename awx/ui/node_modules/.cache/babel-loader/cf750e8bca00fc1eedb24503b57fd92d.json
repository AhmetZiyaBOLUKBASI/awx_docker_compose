{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import React,{useCallback}from'react';import{useField,useFormikContext}from'formik';import{useConfig}from'contexts/Config';import getDocsBaseUrl from'util/getDocsBaseUrl';import CredentialLookup from'components/Lookup/CredentialLookup';import{required}from'util/validators';import{OptionsField,SourceVarsField,VerbosityField,EnabledVarField,EnabledValueField,HostFilterField}from'./SharedFields';import helpText from'../Inventory.helptext';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SatelliteSubForm=function SatelliteSubForm(_ref){var autoPopulateCredential=_ref.autoPopulateCredential;var _useFormikContext=useFormikContext(),setFieldValue=_useFormikContext.setFieldValue,setFieldTouched=_useFormikContext.setFieldTouched;var _useField=useField('credential'),_useField2=_slicedToArray(_useField,3),credentialField=_useField2[0],credentialMeta=_useField2[1],credentialHelpers=_useField2[2];var config=useConfig();var handleCredentialUpdate=useCallback(function(value){setFieldValue('credential',value);setFieldTouched('credential',true,false);},[setFieldValue,setFieldTouched]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CredentialLookup,{credentialTypeNamespace:\"satellite6\",label:/*i18n*/i18n._(\"Credential\"),helperTextInvalid:credentialMeta.error,isValid:!credentialMeta.touched||!credentialMeta.error,onBlur:function onBlur(){return credentialHelpers.setTouched();},onChange:handleCredentialUpdate,value:credentialField.value,required:true,autoPopulate:autoPopulateCredential,validate:required(/*i18n*/i18n._(\"Select a value for this field\"))}),/*#__PURE__*/_jsx(VerbosityField,{}),/*#__PURE__*/_jsx(HostFilterField,{}),/*#__PURE__*/_jsx(EnabledVarField,{}),/*#__PURE__*/_jsx(EnabledValueField,{}),/*#__PURE__*/_jsx(OptionsField,{}),/*#__PURE__*/_jsx(SourceVarsField,{popoverContent:helpText.sourceVars(getDocsBaseUrl(config),'satellite6')})]});};export default SatelliteSubForm;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Inventory/shared/InventorySourceSubForms/SatelliteSubForm.js"],"names":["React","useCallback","useField","useFormikContext","useConfig","getDocsBaseUrl","CredentialLookup","required","OptionsField","SourceVarsField","VerbosityField","EnabledVarField","EnabledValueField","HostFilterField","helpText","SatelliteSubForm","autoPopulateCredential","setFieldValue","setFieldTouched","credentialField","credentialMeta","credentialHelpers","config","handleCredentialUpdate","value","error","touched","setTouched","sourceVars"],"mappings":"sIAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,KAAmC,OAAnC,CACA,OAASC,QAAT,CAAmBC,gBAAnB,KAA2C,QAA3C,CAEA,OAASC,SAAT,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,qBAA3B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oCAA7B,CACA,OAASC,QAAT,KAAyB,iBAAzB,CACA,OACEC,YADF,CAEEC,eAFF,CAGEC,cAHF,CAIEC,eAJF,CAKEC,iBALF,CAMEC,eANF,KAOO,gBAPP,CAQA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,C,6IAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAAgC,IAA7BC,CAAAA,sBAA6B,MAA7BA,sBAA6B,CACvD,sBAA2Cb,gBAAgB,EAA3D,CAAQc,aAAR,mBAAQA,aAAR,CAAuBC,eAAvB,mBAAuBA,eAAvB,CACA,cACEhB,QAAQ,CAAC,YAAD,CADV,wCAAOiB,eAAP,eAAwBC,cAAxB,eAAwCC,iBAAxC,eAEA,GAAMC,CAAAA,MAAM,CAAGlB,SAAS,EAAxB,CACA,GAAMmB,CAAAA,sBAAsB,CAAGtB,WAAW,CACxC,SAACuB,KAAD,CAAW,CACTP,aAAa,CAAC,YAAD,CAAeO,KAAf,CAAb,CACAN,eAAe,CAAC,YAAD,CAAe,IAAf,CAAqB,KAArB,CAAf,CACD,CAJuC,CAKxC,CAACD,aAAD,CAAgBC,eAAhB,CALwC,CAA1C,CAQA,mBACE,wCACE,KAAC,gBAAD,EACE,uBAAuB,CAAC,YAD1B,CAEE,KAAK,SAAE,oBAFT,CAGE,iBAAiB,CAAEE,cAAc,CAACK,KAHpC,CAIE,OAAO,CAAE,CAACL,cAAc,CAACM,OAAhB,EAA2B,CAACN,cAAc,CAACK,KAJtD,CAKE,MAAM,CAAE,wBAAMJ,CAAAA,iBAAiB,CAACM,UAAlB,EAAN,EALV,CAME,QAAQ,CAAEJ,sBANZ,CAOE,KAAK,CAAEJ,eAAe,CAACK,KAPzB,CAQE,QAAQ,KARV,CASE,YAAY,CAAER,sBAThB,CAUE,QAAQ,CAAET,QAAQ,SAAC,uCAAD,CAVpB,EADF,cAaE,KAAC,cAAD,IAbF,cAcE,KAAC,eAAD,IAdF,cAeE,KAAC,eAAD,IAfF,cAgBE,KAAC,iBAAD,IAhBF,cAiBE,KAAC,YAAD,IAjBF,cAkBE,KAAC,eAAD,EACE,cAAc,CAAEO,QAAQ,CAACc,UAAT,CACdvB,cAAc,CAACiB,MAAD,CADA,CAEd,YAFc,CADlB,EAlBF,GADF,CA2BD,CAxCD,CA0CA,cAAeP,CAAAA,gBAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport { useField, useFormikContext } from 'formik';\nimport { t } from '@lingui/macro';\nimport { useConfig } from 'contexts/Config';\nimport getDocsBaseUrl from 'util/getDocsBaseUrl';\nimport CredentialLookup from 'components/Lookup/CredentialLookup';\nimport { required } from 'util/validators';\nimport {\n  OptionsField,\n  SourceVarsField,\n  VerbosityField,\n  EnabledVarField,\n  EnabledValueField,\n  HostFilterField,\n} from './SharedFields';\nimport helpText from '../Inventory.helptext';\n\nconst SatelliteSubForm = ({ autoPopulateCredential }) => {\n  const { setFieldValue, setFieldTouched } = useFormikContext();\n  const [credentialField, credentialMeta, credentialHelpers] =\n    useField('credential');\n  const config = useConfig();\n  const handleCredentialUpdate = useCallback(\n    (value) => {\n      setFieldValue('credential', value);\n      setFieldTouched('credential', true, false);\n    },\n    [setFieldValue, setFieldTouched]\n  );\n\n  return (\n    <>\n      <CredentialLookup\n        credentialTypeNamespace=\"satellite6\"\n        label={t`Credential`}\n        helperTextInvalid={credentialMeta.error}\n        isValid={!credentialMeta.touched || !credentialMeta.error}\n        onBlur={() => credentialHelpers.setTouched()}\n        onChange={handleCredentialUpdate}\n        value={credentialField.value}\n        required\n        autoPopulate={autoPopulateCredential}\n        validate={required(t`Select a value for this field`)}\n      />\n      <VerbosityField />\n      <HostFilterField />\n      <EnabledVarField />\n      <EnabledValueField />\n      <OptionsField />\n      <SourceVarsField\n        popoverContent={helpText.sourceVars(\n          getDocsBaseUrl(config),\n          'satellite6'\n        )}\n      />\n    </>\n  );\n};\n\nexport default SatelliteSubForm;\n"]},"metadata":{},"sourceType":"module"}