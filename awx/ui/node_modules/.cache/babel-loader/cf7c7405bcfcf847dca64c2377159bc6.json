{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useEffect,useCallback}from'react';import{Link,Switch,Route,Redirect,useRouteMatch,useLocation}from'react-router-dom';import{CaretLeftIcon}from'@patternfly/react-icons';import useRequest from'hooks/useRequest';import{InventoriesAPI,InventorySourcesAPI,OrganizationsAPI}from'api';import{Schedules}from'components/Schedule';import ContentError from'components/ContentError';import ContentLoading from'components/ContentLoading';import RoutedTabs from'components/RoutedTabs';import NotificationList from'components/NotificationList/NotificationList';import InventorySourceDetail from'../InventorySourceDetail';import InventorySourceEdit from'../InventorySourceEdit';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function InventorySource(_ref){var inventory=_ref.inventory,_setBreadcrumb=_ref.setBreadcrumb,me=_ref.me;var location=useLocation();var match=useRouteMatch('/inventories/inventory/:id/sources/:sourceId');var sourceListUrl=\"/inventories/inventory/\".concat(inventory.id,\"/sources\");var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$Promise$all,_yield$Promise$all2,inventorySource,notifAdminRes;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Promise.all([InventoriesAPI.readSourceDetail(inventory.id,match.params.sourceId),OrganizationsAPI.read({page_size:1,role_level:'notification_admin_role'})]);case 2:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);inventorySource=_yield$Promise$all2[0];notifAdminRes=_yield$Promise$all2[1];return _context.abrupt(\"return\",{source:inventorySource,isNotifAdmin:notifAdminRes.data.results.length>0});case 7:case\"end\":return _context.stop();}}},_callee);})),[inventory.id,match.params.sourceId]),{source:null,isNotifAdmin:false}),_useRequest$result=_useRequest.result,source=_useRequest$result.source,isNotifAdmin=_useRequest$result.isNotifAdmin,error=_useRequest.error,isLoading=_useRequest.isLoading,fetchSource=_useRequest.request;useEffect(function(){fetchSource();},[fetchSource,location.pathname]);useEffect(function(){if(inventory&&source){_setBreadcrumb(inventory,source);}},[inventory,source,_setBreadcrumb]);var loadSchedules=useCallback(function(params){return InventorySourcesAPI.readSchedules(source===null||source===void 0?void 0:source.id,params);},[source]);var loadScheduleOptions=useCallback(function(){return InventorySourcesAPI.readScheduleOptions(source===null||source===void 0?void 0:source.id);},[source]);var tabsArray=[{name:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CaretLeftIcon,{}),/*i18n*/i18n._(\"Back to Sources\")]}),link:\"\".concat(sourceListUrl),id:0},{name:/*i18n*/i18n._(\"Details\"),link:\"\".concat(match.url,\"/details\"),id:1},{name:/*i18n*/i18n._(\"Schedules\"),link:\"\".concat(match.url,\"/schedules\"),id:2}];var canToggleNotifications=isNotifAdmin;var canSeeNotificationsTab=me.is_system_auditor||isNotifAdmin;if(canSeeNotificationsTab){tabsArray.push({name:/*i18n*/i18n._(\"Notifications\"),link:\"\".concat(match.url,\"/notifications\"),id:3});}if(error){return/*#__PURE__*/_jsx(ContentError,{error:error});}var showCardHeader=true;if(['edit','schedules/'].some(function(name){return location.pathname.includes(name);})){showCardHeader=false;}return/*#__PURE__*/_jsxs(_Fragment,{children:[showCardHeader&&/*#__PURE__*/_jsx(RoutedTabs,{tabsArray:tabsArray}),isLoading&&/*#__PURE__*/_jsx(ContentLoading,{}),!isLoading&&source&&/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Redirect,{from:\"/inventories/inventory/:id/sources/:sourceId\",to:\"/inventories/inventory/:id/sources/:sourceId/details\",exact:true}),/*#__PURE__*/_jsx(Route,{path:\"/inventories/inventory/:id/sources/:sourceId/details\",children:/*#__PURE__*/_jsx(InventorySourceDetail,{inventorySource:source})},\"details\"),/*#__PURE__*/_jsx(Route,{path:\"/inventories/inventory/:id/sources/:sourceId/edit\",children:/*#__PURE__*/_jsx(InventorySourceEdit,{source:source,inventory:inventory})},\"edit\"),/*#__PURE__*/_jsx(Route,{path:\"/inventories/inventory/:id/sources/:sourceId/notifications\",children:/*#__PURE__*/_jsx(NotificationList,{id:Number(match.params.sourceId),canToggleNotifications:canToggleNotifications,apiModel:InventorySourcesAPI})},\"notifications\"),/*#__PURE__*/_jsx(Route,{path:\"/inventories/inventory/:id/sources/:sourceId/schedules\",children:/*#__PURE__*/_jsx(Schedules,{apiModel:InventorySourcesAPI,setBreadcrumb:function setBreadcrumb(schedule){return _setBreadcrumb(inventory,source,schedule);},resource:source,loadSchedules:loadSchedules,loadScheduleOptions:loadScheduleOptions})},\"schedules\"),/*#__PURE__*/_jsx(Route,{path:\"*\",children:/*#__PURE__*/_jsx(ContentError,{isNotFound:true,children:/*#__PURE__*/_jsx(Link,{to:\"\".concat(match.url,\"/details\"),children:/*i18n*/i18n._(\"View inventory source details\")})})},\"not-found\")]})]});}export default InventorySource;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Inventory/InventorySource/InventorySource.js"],"names":["React","useEffect","useCallback","Link","Switch","Route","Redirect","useRouteMatch","useLocation","CaretLeftIcon","useRequest","InventoriesAPI","InventorySourcesAPI","OrganizationsAPI","Schedules","ContentError","ContentLoading","RoutedTabs","NotificationList","InventorySourceDetail","InventorySourceEdit","InventorySource","inventory","setBreadcrumb","me","location","match","sourceListUrl","id","Promise","all","readSourceDetail","params","sourceId","read","page_size","role_level","inventorySource","notifAdminRes","source","isNotifAdmin","data","results","length","result","error","isLoading","fetchSource","request","pathname","loadSchedules","readSchedules","loadScheduleOptions","readScheduleOptions","tabsArray","name","link","url","canToggleNotifications","canSeeNotificationsTab","is_system_auditor","push","showCardHeader","some","includes","Number","schedule"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from 'react';\n\nimport { t } from '@lingui/macro';\nimport {\n  Link,\n  Switch,\n  Route,\n  Redirect,\n  useRouteMatch,\n  useLocation,\n} from 'react-router-dom';\nimport { CaretLeftIcon } from '@patternfly/react-icons';\nimport useRequest from 'hooks/useRequest';\n\nimport { InventoriesAPI, InventorySourcesAPI, OrganizationsAPI } from 'api';\nimport { Schedules } from 'components/Schedule';\nimport ContentError from 'components/ContentError';\nimport ContentLoading from 'components/ContentLoading';\nimport RoutedTabs from 'components/RoutedTabs';\nimport NotificationList from 'components/NotificationList/NotificationList';\nimport InventorySourceDetail from '../InventorySourceDetail';\nimport InventorySourceEdit from '../InventorySourceEdit';\n\nfunction InventorySource({ inventory, setBreadcrumb, me }) {\n  const location = useLocation();\n  const match = useRouteMatch('/inventories/inventory/:id/sources/:sourceId');\n  const sourceListUrl = `/inventories/inventory/${inventory.id}/sources`;\n\n  const {\n    result: { source, isNotifAdmin },\n    error,\n    isLoading,\n    request: fetchSource,\n  } = useRequest(\n    useCallback(async () => {\n      const [inventorySource, notifAdminRes] = await Promise.all([\n        InventoriesAPI.readSourceDetail(inventory.id, match.params.sourceId),\n        OrganizationsAPI.read({\n          page_size: 1,\n          role_level: 'notification_admin_role',\n        }),\n      ]);\n      return {\n        source: inventorySource,\n        isNotifAdmin: notifAdminRes.data.results.length > 0,\n      };\n    }, [inventory.id, match.params.sourceId]),\n    { source: null, isNotifAdmin: false }\n  );\n\n  useEffect(() => {\n    fetchSource();\n  }, [fetchSource, location.pathname]);\n\n  useEffect(() => {\n    if (inventory && source) {\n      setBreadcrumb(inventory, source);\n    }\n  }, [inventory, source, setBreadcrumb]);\n\n  const loadSchedules = useCallback(\n    (params) => InventorySourcesAPI.readSchedules(source?.id, params),\n    [source]\n  );\n\n  const loadScheduleOptions = useCallback(\n    () => InventorySourcesAPI.readScheduleOptions(source?.id),\n    [source]\n  );\n\n  const tabsArray = [\n    {\n      name: (\n        <>\n          <CaretLeftIcon />\n          {t`Back to Sources`}\n        </>\n      ),\n      link: `${sourceListUrl}`,\n      id: 0,\n    },\n    {\n      name: t`Details`,\n      link: `${match.url}/details`,\n      id: 1,\n    },\n    {\n      name: t`Schedules`,\n      link: `${match.url}/schedules`,\n      id: 2,\n    },\n  ];\n\n  const canToggleNotifications = isNotifAdmin;\n  const canSeeNotificationsTab = me.is_system_auditor || isNotifAdmin;\n\n  if (canSeeNotificationsTab) {\n    tabsArray.push({\n      name: t`Notifications`,\n      link: `${match.url}/notifications`,\n      id: 3,\n    });\n  }\n\n  if (error) {\n    return <ContentError error={error} />;\n  }\n\n  let showCardHeader = true;\n\n  if (['edit', 'schedules/'].some((name) => location.pathname.includes(name))) {\n    showCardHeader = false;\n  }\n\n  return (\n    <>\n      {showCardHeader && <RoutedTabs tabsArray={tabsArray} />}\n\n      {isLoading && <ContentLoading />}\n\n      {!isLoading && source && (\n        <Switch>\n          <Redirect\n            from=\"/inventories/inventory/:id/sources/:sourceId\"\n            to=\"/inventories/inventory/:id/sources/:sourceId/details\"\n            exact\n          />\n          <Route\n            key=\"details\"\n            path=\"/inventories/inventory/:id/sources/:sourceId/details\"\n          >\n            <InventorySourceDetail inventorySource={source} />\n          </Route>\n          <Route\n            key=\"edit\"\n            path=\"/inventories/inventory/:id/sources/:sourceId/edit\"\n          >\n            <InventorySourceEdit source={source} inventory={inventory} />\n          </Route>\n          <Route\n            key=\"notifications\"\n            path=\"/inventories/inventory/:id/sources/:sourceId/notifications\"\n          >\n            <NotificationList\n              id={Number(match.params.sourceId)}\n              canToggleNotifications={canToggleNotifications}\n              apiModel={InventorySourcesAPI}\n            />\n          </Route>\n          <Route\n            key=\"schedules\"\n            path=\"/inventories/inventory/:id/sources/:sourceId/schedules\"\n          >\n            <Schedules\n              apiModel={InventorySourcesAPI}\n              setBreadcrumb={(schedule) =>\n                setBreadcrumb(inventory, source, schedule)\n              }\n              resource={source}\n              loadSchedules={loadSchedules}\n              loadScheduleOptions={loadScheduleOptions}\n            />\n          </Route>\n          <Route key=\"not-found\" path=\"*\">\n            <ContentError isNotFound>\n              <Link to={`${match.url}/details`}>\n                {t`View inventory source details`}\n              </Link>\n            </ContentError>\n          </Route>\n        </Switch>\n      )}\n    </>\n  );\n}\n\nexport default InventorySource;\n"]},"metadata":{},"sourceType":"module"}