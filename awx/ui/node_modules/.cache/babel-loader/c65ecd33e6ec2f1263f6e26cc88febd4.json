{"ast":null,"code":"import _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Dropdown } from '@patternfly/react-core/dist/esm/components/Dropdown';\nimport { KebabToggle } from '@patternfly/react-core/dist/esm/components/Dropdown/KebabToggle';\nimport { DropdownItem } from '@patternfly/react-core/dist/esm/components/Dropdown/DropdownItem';\nimport { DropdownSeparator } from '@patternfly/react-core/dist/esm/components/Dropdown/DropdownSeparator';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button/Button';\nimport { DropdownDirection, DropdownPosition } from '@patternfly/react-core/dist/esm/components/Dropdown/dropdownConstants';\nexport var ActionsColumn = /*#__PURE__*/function (_React$Component) {\n  _inherits(ActionsColumn, _React$Component);\n\n  var _super = _createSuper(ActionsColumn);\n\n  function ActionsColumn(props) {\n    var _this;\n\n    _classCallCheck(this, ActionsColumn);\n\n    _this = _super.call(this, props);\n    _this.toggleRef = React.createRef();\n\n    _this.onToggle = function (isOpen) {\n      _this.setState({\n        isOpen: isOpen\n      });\n    };\n\n    _this.onClick = function (event, onClick) {\n      var _this$props = _this.props,\n          rowData = _this$props.rowData,\n          extraData = _this$props.extraData; // Only prevent default if onClick is provided.  This allows href support.\n\n      if (onClick) {\n        event.preventDefault(); // tslint:disable-next-line:no-unused-expression\n\n        onClick(event, extraData && extraData.rowIndex, rowData, extraData);\n      }\n    };\n\n    _this.state = {\n      isOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(ActionsColumn, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var isOpen = this.state.isOpen;\n      var _this$props2 = this.props,\n          items = _this$props2.items,\n          children = _this$props2.children,\n          dropdownPosition = _this$props2.dropdownPosition,\n          dropdownDirection = _this$props2.dropdownDirection,\n          isDisabled = _this$props2.isDisabled,\n          rowData = _this$props2.rowData,\n          actionsToggle = _this$props2.actionsToggle;\n      var actionsToggleClone = actionsToggle ? actionsToggle({\n        onToggle: this.onToggle,\n        isOpen: isOpen,\n        isDisabled: isDisabled\n      }) : React.createElement(KebabToggle, {\n        isDisabled: isDisabled,\n        onToggle: this.onToggle\n      });\n      return React.createElement(React.Fragment, null, items.filter(function (item) {\n        return item.isOutsideDropdown;\n      }) // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      .map(function (_a, key) {\n        var title = _a.title,\n            itemKey = _a.itemKey,\n            _onClick = _a.onClick,\n            isOutsideDropdown = _a.isOutsideDropdown,\n            props = __rest(_a, [\"title\", \"itemKey\", \"onClick\", \"isOutsideDropdown\"]);\n\n        return typeof title === 'string' ? React.createElement(Button, Object.assign({\n          onClick: function onClick(event) {\n            return _this2.onClick(event, _onClick);\n          }\n        }, props, {\n          isDisabled: isDisabled,\n          key: itemKey || \"outside_dropdown_\".concat(key),\n          \"data-key\": itemKey || \"outside_dropdown_\".concat(key)\n        }), title) : React.cloneElement(title, Object.assign({\n          onClick: _onClick,\n          isDisabled: isDisabled\n        }, props));\n      }), React.createElement(Dropdown, Object.assign({\n        toggle: actionsToggleClone,\n        position: dropdownPosition,\n        direction: dropdownDirection,\n        isOpen: isOpen,\n        dropdownItems: items.filter(function (item) {\n          return !item.isOutsideDropdown;\n        }).map(function (_a, key) {\n          var title = _a.title,\n              itemKey = _a.itemKey,\n              _onClick2 = _a.onClick,\n              isSeparator = _a.isSeparator,\n              props = __rest(_a, [\"title\", \"itemKey\", \"onClick\", \"isSeparator\"]);\n\n          return isSeparator ? React.createElement(DropdownSeparator, Object.assign({}, props, {\n            key: itemKey || key,\n            \"data-key\": itemKey || key\n          })) : React.createElement(DropdownItem, Object.assign({\n            component: \"button\",\n            onClick: function onClick(event) {\n              _this2.onClick(event, _onClick2);\n\n              _this2.onToggle(!isOpen);\n            }\n          }, props, {\n            key: itemKey || key,\n            \"data-key\": itemKey || key\n          }), title);\n        }),\n        isPlain: true\n      }, rowData && rowData.actionProps)), children);\n    }\n  }]);\n\n  return ActionsColumn;\n}(React.Component);\nActionsColumn.displayName = 'ActionsColumn';\nActionsColumn.defaultProps = {\n  children: null,\n  items: [],\n  dropdownPosition: DropdownPosition.right,\n  dropdownDirection: DropdownDirection.down,\n  rowData: {},\n  extraData: {}\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/Table/ActionsColumn.tsx"],"names":[],"mappings":";;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,QAAT,QAAyB,qDAAzB;AACA,SAAS,WAAT,QAA4B,iEAA5B;AACA,SAAS,YAAT,QAA6B,kEAA7B;AACA,SAAS,iBAAT,QAAkC,uEAAlC;AACA,SAAS,MAAT,QAAuB,0DAAvB;AAEA,SACE,iBADF,EAEE,gBAFF,QAGO,uEAHP;AA4BA,WAAa,aAAb;AAAA;;AAAA;;AAWE,yBAAY,KAAZ,EAAqC;AAAA;;AAAA;;AACnC,8BAAM,KAAN;AAVM,UAAA,SAAA,GAAY,KAAK,CAAC,SAAN,EAAZ;;AAgBR,UAAA,QAAA,GAAW,UAAC,MAAD,EAA0B;AACnC,YAAK,QAAL,CAAc;AACZ,QAAA,MAAM,EAAN;AADY,OAAd;AAGD,KAJD;;AAMA,UAAA,OAAA,GAAU,UACR,KADQ,EAER,OAFQ,EAKA;AACR,wBAA+B,MAAK,KAApC;AAAA,UAAQ,OAAR,eAAQ,OAAR;AAAA,UAAiB,SAAjB,eAAiB,SAAjB,CADQ,CAER;;AACA,UAAI,OAAJ,EAAa;AACX,QAAA,KAAK,CAAC,cAAN,GADW,CAEX;;AACA,QAAA,OAAO,CAAC,KAAD,EAA4B,SAAS,IAAI,SAAS,CAAC,QAAnD,EAA6D,OAA7D,EAAsE,SAAtE,CAAP;AACD;AACF,KAbD;;AAXE,UAAK,KAAL,GAAa;AACX,MAAA,MAAM,EAAE;AADG,KAAb;AAFmC;AAKpC;;AAhBH;AAAA;AAAA,WAuCE,kBAAM;AAAA;;AACJ,UAAQ,MAAR,GAAmB,KAAK,KAAxB,CAAQ,MAAR;AACA,yBAAqG,KAAK,KAA1G;AAAA,UAAQ,KAAR,gBAAQ,KAAR;AAAA,UAAe,QAAf,gBAAe,QAAf;AAAA,UAAyB,gBAAzB,gBAAyB,gBAAzB;AAAA,UAA2C,iBAA3C,gBAA2C,iBAA3C;AAAA,UAA8D,UAA9D,gBAA8D,UAA9D;AAAA,UAA0E,OAA1E,gBAA0E,OAA1E;AAAA,UAAmF,aAAnF,gBAAmF,aAAnF;AAEA,UAAM,kBAAkB,GAAG,aAAa,GACtC,aAAa,CAAC;AAAE,QAAA,QAAQ,EAAE,KAAK,QAAjB;AAA2B,QAAA,MAAM,EAAN,MAA3B;AAAmC,QAAA,UAAU,EAAV;AAAnC,OAAD,CADyB,GAGtC,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY;AAAC,QAAA,UAAU,EAAE,UAAb;AAAyB,QAAA,QAAQ,EAAE,KAAK;AAAxC,OAAZ,CAHF;AAMA,aACE,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,QAAP,EAAe,IAAf,EACG,KAAK,CACH,MADF,CACS,UAAA,IAAI;AAAA,eAAI,IAAI,CAAC,iBAAT;AAAA,OADb,EAEC;AAFD,OAGE,GAHF,CAGM,UAAC,EAAD,EAA2D,GAA3D,EAAkE;AAAjE,YAAE,KAAF,GAA4C,EAA5C,CAAE,KAAF;AAAA,YAAS,OAAT,GAA4C,EAA5C,CAAS,OAAT;AAAA,YAAkB,QAAlB,GAA4C,EAA5C,CAAkB,OAAlB;AAAA,YAA2B,iBAA3B,GAA4C,EAA5C,CAA2B,iBAA3B;AAAA,YAAiD,KAAjD,GAAsD,MAAA,CAAA,EAAA,EAAtD,CAAA,OAAA,EAAA,SAAA,EAAA,SAAA,EAAA,mBAAA,CAAsD,CAAtD;;AACJ,eAAA,OAAO,KAAP,KAAiB,QAAjB,GACE,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO,MAAA,CAAA,MAAA,CAAA;AACL,UAAA,OAAO,EAAE,iBAAA,KAAK;AAAA,mBAAI,MAAI,CAAC,OAAL,CAAa,KAAb,EAAoB,QAApB,CAAJ;AAAA;AADT,SAAA,EAEA,KAFA,EAEa;AAClB,UAAA,UAAU,EAAE,UADM;AAElB,UAAA,GAAG,EAAE,OAAO,+BAAwB,GAAxB,CAFM;AAEuB,sBAC/B,OAAO,+BAAwB,GAAxB;AAHC,SAFb,CAAP,EAOG,KAPH,CADF,GAWE,KAAK,CAAC,YAAN,CAAmB,KAAnB,EAA8C,MAAA,CAAA,MAAA,CAAA;AAAI,UAAA,OAAO,EAAP,QAAJ;AAAa,UAAA,UAAU,EAAV;AAAb,SAAA,EAA4B,KAA5B,CAA9C,CAXF;AAYC,OAhBJ,CADH,EAmBE,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS,MAAA,CAAA,MAAA,CAAA;AACP,QAAA,MAAM,EAAE,kBADD;AAEP,QAAA,QAAQ,EAAE,gBAFH;AAGP,QAAA,SAAS,EAAE,iBAHJ;AAIP,QAAA,MAAM,EAAE,MAJD;AAKP,QAAA,aAAa,EAAE,KAAK,CACjB,MADY,CACL,UAAA,IAAI;AAAA,iBAAI,CAAC,IAAI,CAAC,iBAAV;AAAA,SADC,EAEZ,GAFY,CAER,UAAC,EAAD,EAAqD,GAArD,EAA4D;AAA3D,cAAE,KAAF,GAAsC,EAAtC,CAAE,KAAF;AAAA,cAAS,OAAT,GAAsC,EAAtC,CAAS,OAAT;AAAA,cAAkB,SAAlB,GAAsC,EAAtC,CAAkB,OAAlB;AAAA,cAA2B,WAA3B,GAAsC,EAAtC,CAA2B,WAA3B;AAAA,cAA2C,KAA3C,GAAgD,MAAA,CAAA,EAAA,EAAhD,CAAA,OAAA,EAAA,SAAA,EAAA,SAAA,EAAA,aAAA,CAAgD,CAAhD;;AACJ,iBAAA,WAAW,GACT,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAkB,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,YAAA,GAAG,EAAE,OAAO,IAAI,GAAlB;AAAqB,wBAAY,OAAO,IAAI;AAA5C,WAAV,CAAlB,CADS,GAGT,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,MAAA,CAAA,MAAA,CAAA;AACX,YAAA,SAAS,EAAC,QADC;AAEX,YAAA,OAAO,EAAE,iBAAA,KAAK,EAAG;AACf,cAAA,MAAI,CAAC,OAAL,CAAa,KAAb,EAAoB,SAApB;;AACA,cAAA,MAAI,CAAC,QAAL,CAAc,CAAC,MAAf;AACD;AALU,WAAA,EAMP,KANO,EAMF;AACT,YAAA,GAAG,EAAE,OAAO,IAAI,GADP;AACU,wBACT,OAAO,IAAI;AAFZ,WANE,CAAb,EAUG,KAVH,CAHF;AAeC,SAlBU,CALR;AAyBP,QAAA,OAAO,EAAA;AAzBA,OAAA,EA0BF,OAAO,IAAI,OAAO,CAAC,WA1BjB,CAAT,CAnBF,EA+CG,QA/CH,CADF;AAmDD;AApGH;;AAAA;AAAA,EAAmC,KAAK,CAAC,SAAzC;AACS,aAAA,CAAA,WAAA,GAAc,eAAd;AAEA,aAAA,CAAA,YAAA,GAAe;AACpB,EAAA,QAAQ,EAAE,IADU;AAEpB,EAAA,KAAK,EAAE,EAFa;AAGpB,EAAA,gBAAgB,EAAE,gBAAgB,CAAC,KAHf;AAIpB,EAAA,iBAAiB,EAAE,iBAAiB,CAAC,IAJjB;AAKpB,EAAA,OAAO,EAAE,EALW;AAMpB,EAAA,SAAS,EAAE;AANS,CAAf","sourcesContent":["import * as React from 'react';\nimport { Dropdown } from '@patternfly/react-core/dist/esm/components/Dropdown';\nimport { KebabToggle } from '@patternfly/react-core/dist/esm/components/Dropdown/KebabToggle';\nimport { DropdownItem } from '@patternfly/react-core/dist/esm/components/Dropdown/DropdownItem';\nimport { DropdownSeparator } from '@patternfly/react-core/dist/esm/components/Dropdown/DropdownSeparator';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button/Button';\n\nimport {\n  DropdownDirection,\n  DropdownPosition\n} from '@patternfly/react-core/dist/esm/components/Dropdown/dropdownConstants';\n\nimport { IAction, IExtraData, IRowData } from './TableTypes';\n\nexport interface CustomActionsToggleProps {\n  onToggle: (isOpen: boolean) => void;\n  isOpen: boolean;\n  isDisabled: boolean;\n}\n\nexport interface ActionsColumnProps {\n  children?: React.ReactNode;\n  items: IAction[];\n  isDisabled?: boolean;\n  dropdownPosition?: DropdownPosition;\n  dropdownDirection?: DropdownDirection;\n  rowData?: IRowData;\n  extraData?: IExtraData;\n  actionsToggle?: (props: CustomActionsToggleProps) => React.ReactNode;\n}\n\nexport interface ActionsColumnState {\n  isOpen: boolean;\n}\n\nexport class ActionsColumn extends React.Component<ActionsColumnProps, ActionsColumnState> {\n  static displayName = 'ActionsColumn';\n  private toggleRef = React.createRef<HTMLButtonElement>();\n  static defaultProps = {\n    children: null as React.ReactNode,\n    items: [] as IAction[],\n    dropdownPosition: DropdownPosition.right,\n    dropdownDirection: DropdownDirection.down,\n    rowData: {} as IRowData,\n    extraData: {} as IExtraData\n  };\n  constructor(props: ActionsColumnProps) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  onToggle = (isOpen: boolean): void => {\n    this.setState({\n      isOpen\n    });\n  };\n\n  onClick = (\n    event: React.MouseEvent<any> | React.KeyboardEvent | MouseEvent,\n    onClick:\n      | ((event: React.MouseEvent, rowIndex: number | undefined, rowData: IRowData, extraData: IExtraData) => void)\n      | undefined\n  ): void => {\n    const { rowData, extraData } = this.props;\n    // Only prevent default if onClick is provided.  This allows href support.\n    if (onClick) {\n      event.preventDefault();\n      // tslint:disable-next-line:no-unused-expression\n      onClick(event as React.MouseEvent, extraData && extraData.rowIndex, rowData, extraData);\n    }\n  };\n\n  render() {\n    const { isOpen } = this.state;\n    const { items, children, dropdownPosition, dropdownDirection, isDisabled, rowData, actionsToggle } = this.props;\n\n    const actionsToggleClone = actionsToggle ? (\n      actionsToggle({ onToggle: this.onToggle, isOpen, isDisabled })\n    ) : (\n      <KebabToggle isDisabled={isDisabled} onToggle={this.onToggle} />\n    );\n\n    return (\n      <React.Fragment>\n        {items\n          .filter(item => item.isOutsideDropdown)\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          .map(({ title, itemKey, onClick, isOutsideDropdown, ...props }, key) =>\n            typeof title === 'string' ? (\n              <Button\n                onClick={event => this.onClick(event, onClick)}\n                {...(props as any)}\n                isDisabled={isDisabled}\n                key={itemKey || `outside_dropdown_${key}`}\n                data-key={itemKey || `outside_dropdown_${key}`}\n              >\n                {title}\n              </Button>\n            ) : (\n              React.cloneElement(title as React.ReactElement, { onClick, isDisabled, ...props })\n            )\n          )}\n        <Dropdown\n          toggle={actionsToggleClone}\n          position={dropdownPosition}\n          direction={dropdownDirection}\n          isOpen={isOpen}\n          dropdownItems={items\n            .filter(item => !item.isOutsideDropdown)\n            .map(({ title, itemKey, onClick, isSeparator, ...props }, key) =>\n              isSeparator ? (\n                <DropdownSeparator {...props} key={itemKey || key} data-key={itemKey || key} />\n              ) : (\n                <DropdownItem\n                  component=\"button\"\n                  onClick={event => {\n                    this.onClick(event, onClick);\n                    this.onToggle(!isOpen);\n                  }}\n                  {...props}\n                  key={itemKey || key}\n                  data-key={itemKey || key}\n                >\n                  {title}\n                </DropdownItem>\n              )\n            )}\n          isPlain\n          {...(rowData && rowData.actionProps)}\n        />\n        {children}\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}