{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useCallback,useEffect}from'react';import{useLocation}from'react-router-dom';import{PageSection,Card}from'@patternfly/react-core';import useExpanded from'hooks/useExpanded';import DataListToolbar from'components/DataListToolbar';import PaginatedTable,{HeaderRow,HeaderCell,getSearchableKeys}from'components/PaginatedTable';import AlertModal from'components/AlertModal';import ErrorDetail from'components/ErrorDetail';import useRequest,{useDismissableError}from'hooks/useRequest';import useSelected from'hooks/useSelected';import{InstancesAPI}from'api';import{getQSConfig,parseQueryString}from'util/qs';import HealthCheckButton from'components/HealthCheckButton';import InstanceListItem from'./InstanceListItem';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var QS_CONFIG=getQSConfig('instance',{page:1,page_size:20,order_by:'hostname'});function InstanceList(){var location=useLocation();var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _responseActions$data,_responseActions$data2;var params,_yield$Promise$all,_yield$Promise$all2,response,responseActions;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:params=parseQueryString(QS_CONFIG,location.search);_context.next=3;return Promise.all([InstancesAPI.read(params),InstancesAPI.readOptions()]);case 3:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);response=_yield$Promise$all2[0];responseActions=_yield$Promise$all2[1];return _context.abrupt(\"return\",{instances:response.data.results,count:response.data.count,actions:responseActions.data.actions,relatedSearchableKeys:((responseActions===null||responseActions===void 0?void 0:(_responseActions$data=responseActions.data)===null||_responseActions$data===void 0?void 0:_responseActions$data.related_search_fields)||[]).map(function(val){return val.slice(0,-8);}),searchableKeys:getSearchableKeys((_responseActions$data2=responseActions.data.actions)===null||_responseActions$data2===void 0?void 0:_responseActions$data2.GET)});case 8:case\"end\":return _context.stop();}}},_callee);})),[location.search]),{instances:[],count:0,actions:{},relatedSearchableKeys:[],searchableKeys:[]}),_useRequest$result=_useRequest.result,instances=_useRequest$result.instances,count=_useRequest$result.count,relatedSearchableKeys=_useRequest$result.relatedSearchableKeys,searchableKeys=_useRequest$result.searchableKeys,contentError=_useRequest.error,isLoading=_useRequest.isLoading,fetchInstances=_useRequest.request;var _useSelected=useSelected(instances.filter(function(i){return i.node_type!=='hop';})),selected=_useSelected.selected,isAllSelected=_useSelected.isAllSelected,handleSelect=_useSelected.handleSelect,clearSelected=_useSelected.clearSelected,selectAll=_useSelected.selectAll;useEffect(function(){fetchInstances();},[fetchInstances]);var _useRequest2=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return Promise.all(selected.filter(function(_ref3){var node_type=_ref3.node_type;return node_type!=='hop';}).map(function(_ref4){var id=_ref4.id;return InstancesAPI.healthCheck(id);}));case 2:fetchInstances();case 3:case\"end\":return _context2.stop();}}},_callee2);})),[selected,fetchInstances])),healthCheckError=_useRequest2.error,fetchHealthCheck=_useRequest2.request,isHealthCheckLoading=_useRequest2.isLoading;var handleHealthCheck=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetchHealthCheck();case 2:clearSelected();case 3:case\"end\":return _context3.stop();}}},_callee3);}));return function handleHealthCheck(){return _ref5.apply(this,arguments);};}();var _useDismissableError=useDismissableError(healthCheckError),error=_useDismissableError.error,dismissError=_useDismissableError.dismissError;var _useExpanded=useExpanded(instances),expanded=_useExpanded.expanded,isAllExpanded=_useExpanded.isAllExpanded,handleExpand=_useExpanded.handleExpand,expandAll=_useExpanded.expandAll;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(PageSection,{children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(PaginatedTable,{contentError:contentError,hasContentLoading:isLoading||isHealthCheckLoading,items:instances,itemCount:count,pluralizedItemName:/*i18n*/i18n._(\"Instances\"),qsConfig:QS_CONFIG,clearSelected:clearSelected,toolbarSearchableKeys:searchableKeys,toolbarRelatedSearchableKeys:relatedSearchableKeys,toolbarSearchColumns:[{name:/*i18n*/i18n._(\"Name\"),key:'hostname__icontains',isDefault:true},{name:/*i18n*/i18n._(\"Node Type\"),key:\"or__node_type\",options:[[\"control\",/*i18n*/i18n._(\"Control\")],[\"execution\",/*i18n*/i18n._(\"Execution\")],[\"hybrid\",/*i18n*/i18n._(\"Hybrid\")],[\"hop\",/*i18n*/i18n._(\"Hop\")]]}],toolbarSortColumns:[{name:/*i18n*/i18n._(\"Name\"),key:'hostname'}],renderToolbar:function renderToolbar(props){return/*#__PURE__*/_jsx(DataListToolbar,_objectSpread(_objectSpread({},props),{},{isAllSelected:isAllSelected,onSelectAll:selectAll,isAllExpanded:isAllExpanded,onExpandAll:expandAll,qsConfig:QS_CONFIG,additionalControls:[/*#__PURE__*/_jsx(HealthCheckButton,{onClick:handleHealthCheck,selectedItems:selected})]}));},headerRow:/*#__PURE__*/_jsxs(HeaderRow,{qsConfig:QS_CONFIG,isExpandable:true,children:[/*#__PURE__*/_jsx(HeaderCell,{tooltip:/*i18n*/i18n._(\"Cannot run health check on hop nodes.\"),sortKey:\"hostname\",children:/*i18n*/i18n._(\"Name\")}),/*#__PURE__*/_jsx(HeaderCell,{sortKey:\"errors\",children:/*i18n*/i18n._(\"Status\")}),/*#__PURE__*/_jsx(HeaderCell,{sortKey:\"node_type\",children:/*i18n*/i18n._(\"Node Type\")}),/*#__PURE__*/_jsx(HeaderCell,{children:/*i18n*/i18n._(\"Capacity Adjustment\")}),/*#__PURE__*/_jsx(HeaderCell,{children:/*i18n*/i18n._(\"Used Capacity\")}),/*#__PURE__*/_jsx(HeaderCell,{children:/*i18n*/i18n._(\"Actions\")})]}),renderRow:function renderRow(instance,index){return/*#__PURE__*/_jsx(InstanceListItem,{isExpanded:expanded.some(function(row){return row.id===instance.id;}),onExpand:function onExpand(){return handleExpand(instance);},value:instance.hostname,instance:instance,onSelect:function onSelect(){return handleSelect(instance);},isSelected:selected.some(function(row){return row.id===instance.id;}),fetchInstances:fetchInstances,rowIndex:index},instance.id);}})})}),error&&/*#__PURE__*/_jsxs(AlertModal,{isOpen:error,onClose:dismissError,title:/*i18n*/i18n._(\"Error!\"),variant:\"error\",children:[/*i18n*/i18n._(\"Failed to run a health check on one or more instances.\"),/*#__PURE__*/_jsx(ErrorDetail,{error:error})]})]});}export default InstanceList;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Instances/InstanceList/InstanceList.js"],"names":["React","useCallback","useEffect","useLocation","PageSection","Card","useExpanded","DataListToolbar","PaginatedTable","HeaderRow","HeaderCell","getSearchableKeys","AlertModal","ErrorDetail","useRequest","useDismissableError","useSelected","InstancesAPI","getQSConfig","parseQueryString","HealthCheckButton","InstanceListItem","QS_CONFIG","page","page_size","order_by","InstanceList","location","params","search","Promise","all","read","readOptions","response","responseActions","instances","data","results","count","actions","relatedSearchableKeys","related_search_fields","map","val","slice","searchableKeys","GET","result","contentError","error","isLoading","fetchInstances","request","filter","i","node_type","selected","isAllSelected","handleSelect","clearSelected","selectAll","id","healthCheck","healthCheckError","fetchHealthCheck","isHealthCheckLoading","handleHealthCheck","dismissError","expanded","isAllExpanded","handleExpand","expandAll","name","key","isDefault","options","props","instance","index","some","row","hostname"],"mappings":"6bAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,SAA7B,KAA8C,OAA9C,CAEA,OAASC,WAAT,KAA4B,kBAA5B,CAEA,OAASC,WAAT,CAAsBC,IAAtB,KAAkC,wBAAlC,CAEA,MAAOC,CAAAA,WAAP,KAAwB,mBAAxB,CACA,MAAOC,CAAAA,eAAP,KAA4B,4BAA5B,CACA,MAAOC,CAAAA,cAAP,EACEC,SADF,CAEEC,UAFF,CAGEC,iBAHF,KAIO,2BAJP,CAKA,MAAOC,CAAAA,UAAP,KAAuB,uBAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,CACA,MAAOC,CAAAA,UAAP,EAAqBC,mBAArB,KAAgD,kBAAhD,CACA,MAAOC,CAAAA,WAAP,KAAwB,mBAAxB,CACA,OAASC,YAAT,KAA6B,KAA7B,CACA,OAASC,WAAT,CAAsBC,gBAAtB,KAA8C,SAA9C,CACA,MAAOC,CAAAA,iBAAP,KAA8B,8BAA9B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,C,6IAEA,GAAMC,CAAAA,SAAS,CAAGJ,WAAW,CAAC,UAAD,CAAa,CACxCK,IAAI,CAAE,CADkC,CAExCC,SAAS,CAAE,EAF6B,CAGxCC,QAAQ,CAAE,UAH8B,CAAb,CAA7B,CAMA,QAASC,CAAAA,YAAT,EAAwB,CACtB,GAAMC,CAAAA,QAAQ,CAAGxB,WAAW,EAA5B,CAEA,gBAKIW,UAAU,CACZb,WAAW,sEAAC,+PACJ2B,MADI,CACKT,gBAAgB,CAACG,SAAD,CAAYK,QAAQ,CAACE,MAArB,CADrB,uBAEgCC,CAAAA,OAAO,CAACC,GAAR,CAAY,CACpDd,YAAY,CAACe,IAAb,CAAkBJ,MAAlB,CADoD,CAEpDX,YAAY,CAACgB,WAAb,EAFoD,CAAZ,CAFhC,kGAEHC,QAFG,wBAEOC,eAFP,wDAMH,CACLC,SAAS,CAAEF,QAAQ,CAACG,IAAT,CAAcC,OADpB,CAELC,KAAK,CAAEL,QAAQ,CAACG,IAAT,CAAcE,KAFhB,CAGLC,OAAO,CAAEL,eAAe,CAACE,IAAhB,CAAqBG,OAHzB,CAILC,qBAAqB,CAAE,CACrB,CAAAN,eAAe,OAAf,EAAAA,eAAe,SAAf,+BAAAA,eAAe,CAAEE,IAAjB,sEAAuBK,qBAAvB,GAAgD,EAD3B,EAErBC,GAFqB,CAEjB,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,KAAJ,CAAU,CAAV,CAAa,CAAC,CAAd,CAAT,EAFiB,CAJlB,CAOLC,cAAc,CAAEnC,iBAAiB,yBAACwB,eAAe,CAACE,IAAhB,CAAqBG,OAAtB,iDAAC,uBAA8BO,GAA/B,CAP5B,CANG,wDAAD,GAeR,CAACpB,QAAQ,CAACE,MAAV,CAfQ,CADC,CAiBZ,CACEO,SAAS,CAAE,EADb,CAEEG,KAAK,CAAE,CAFT,CAGEC,OAAO,CAAE,EAHX,CAIEC,qBAAqB,CAAE,EAJzB,CAKEK,cAAc,CAAE,EALlB,CAjBY,CALd,gCACEE,MADF,CACYZ,SADZ,oBACYA,SADZ,CACuBG,KADvB,oBACuBA,KADvB,CAC8BE,qBAD9B,oBAC8BA,qBAD9B,CACqDK,cADrD,oBACqDA,cADrD,CAESG,YAFT,aAEEC,KAFF,CAGEC,SAHF,aAGEA,SAHF,CAIWC,cAJX,aAIEC,OAJF,CA+BA,iBACErC,WAAW,CAACoB,SAAS,CAACkB,MAAV,CAAiB,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,SAAF,GAAgB,KAAvB,EAAjB,CAAD,CADb,CAAQC,QAAR,cAAQA,QAAR,CAAkBC,aAAlB,cAAkBA,aAAlB,CAAiCC,YAAjC,cAAiCA,YAAjC,CAA+CC,aAA/C,cAA+CA,aAA/C,CAA8DC,SAA9D,cAA8DA,SAA9D,CAGA3D,SAAS,CAAC,UAAM,CACdkD,cAAc,GACf,CAFQ,CAEN,CAACA,cAAD,CAFM,CAAT,CAIA,iBAIItC,UAAU,CACZb,WAAW,sEAAC,+JACJ6B,CAAAA,OAAO,CAACC,GAAR,CACJ0B,QAAQ,CACLH,MADH,CACU,mBAAGE,CAAAA,SAAH,OAAGA,SAAH,OAAmBA,CAAAA,SAAS,GAAK,KAAjC,EADV,EAEGb,GAFH,CAEO,mBAAGmB,CAAAA,EAAH,OAAGA,EAAH,OAAY7C,CAAAA,YAAY,CAAC8C,WAAb,CAAyBD,EAAzB,CAAZ,EAFP,CADI,CADI,QAMVV,cAAc,GANJ,wDAAD,GAOR,CAACK,QAAD,CAAWL,cAAX,CAPQ,CADC,CAJd,CACSY,gBADT,cACEd,KADF,CAEWe,gBAFX,cAEEZ,OAFF,CAGaa,oBAHb,cAGEf,SAHF,CAcA,GAAMgB,CAAAA,iBAAiB,2FAAG,+JAClBF,CAAAA,gBAAgB,EADE,QAExBL,aAAa,GAFW,wDAAH,kBAAjBO,CAAAA,iBAAiB,2CAAvB,CAIA,yBAAgCpD,mBAAmB,CAACiD,gBAAD,CAAnD,CAAQd,KAAR,sBAAQA,KAAR,CAAekB,YAAf,sBAAeA,YAAf,CAEA,iBACE9D,WAAW,CAAC8B,SAAD,CADb,CAAQiC,QAAR,cAAQA,QAAR,CAAkBC,aAAlB,cAAkBA,aAAlB,CAAiCC,YAAjC,cAAiCA,YAAjC,CAA+CC,SAA/C,cAA+CA,SAA/C,CAEA,mBACE,wCACE,KAAC,WAAD,wBACE,KAAC,IAAD,wBACE,KAAC,cAAD,EACE,YAAY,CAAEvB,YADhB,CAEE,iBAAiB,CAAEE,SAAS,EAAIe,oBAFlC,CAGE,KAAK,CAAE9B,SAHT,CAIE,SAAS,CAAEG,KAJb,CAKE,kBAAkB,SAAE,mBALtB,CAME,QAAQ,CAAEjB,SANZ,CAOE,aAAa,CAAEsC,aAPjB,CAQE,qBAAqB,CAAEd,cARzB,CASE,4BAA4B,CAAEL,qBAThC,CAUE,oBAAoB,CAAE,CACpB,CACEgC,IAAI,SAAE,cADR,CAEEC,GAAG,CAAE,qBAFP,CAGEC,SAAS,CAAE,IAHb,CADoB,CAMpB,CACEF,IAAI,SAAE,mBADR,CAEEC,GAAG,gBAFL,CAGEE,OAAO,CAAE,CACP,mBAAY,iBAAZ,CADO,CAEP,qBAAc,mBAAd,CAFO,CAGP,kBAAW,gBAAX,CAHO,CAIP,eAAQ,aAAR,CAJO,CAHX,CANoB,CAVxB,CA2BE,kBAAkB,CAAE,CAClB,CACEH,IAAI,SAAE,cADR,CAEEC,GAAG,CAAE,UAFP,CADkB,CA3BtB,CAiCE,aAAa,CAAE,uBAACG,KAAD,qBACb,KAAC,eAAD,gCACMA,KADN,MAEE,aAAa,CAAEnB,aAFjB,CAGE,WAAW,CAAEG,SAHf,CAIE,aAAa,CAAES,aAJjB,CAKE,WAAW,CAAEE,SALf,CAME,QAAQ,CAAElD,SANZ,CAOE,kBAAkB,CAAE,cAClB,KAAC,iBAAD,EACE,OAAO,CAAE6C,iBADX,CAEE,aAAa,CAAEV,QAFjB,EADkB,CAPtB,GADa,EAjCjB,CAiDE,SAAS,cACP,MAAC,SAAD,EAAW,QAAQ,CAAEnC,SAArB,CAAgC,YAAY,KAA5C,wBACE,KAAC,UAAD,EACE,OAAO,SAAE,+CADX,CAEE,OAAO,CAAC,UAFV,kBAGE,cAHF,EADF,cAKE,KAAC,UAAD,EAAY,OAAO,CAAC,QAApB,kBAA8B,gBAA9B,EALF,cAME,KAAC,UAAD,EAAY,OAAO,CAAC,WAApB,kBAAiC,mBAAjC,EANF,cAOE,KAAC,UAAD,mBAAa,6BAAb,EAPF,cAQE,KAAC,UAAD,mBAAa,uBAAb,EARF,cASE,KAAC,UAAD,mBAAa,iBAAb,EATF,GAlDJ,CA8DE,SAAS,CAAE,mBAACwD,QAAD,CAAWC,KAAX,qBACT,KAAC,gBAAD,EACE,UAAU,CAAEV,QAAQ,CAACW,IAAT,CAAc,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACnB,EAAJ,GAAWgB,QAAQ,CAAChB,EAA7B,EAAd,CADd,CAEE,QAAQ,CAAE,0BAAMS,CAAAA,YAAY,CAACO,QAAD,CAAlB,EAFZ,CAIE,KAAK,CAAEA,QAAQ,CAACI,QAJlB,CAKE,QAAQ,CAAEJ,QALZ,CAME,QAAQ,CAAE,0BAAMnB,CAAAA,YAAY,CAACmB,QAAD,CAAlB,EANZ,CAOE,UAAU,CAAErB,QAAQ,CAACuB,IAAT,CAAc,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACnB,EAAJ,GAAWgB,QAAQ,CAAChB,EAA7B,EAAd,CAPd,CAQE,cAAc,CAAEV,cARlB,CASE,QAAQ,CAAE2B,KATZ,EAGOD,QAAQ,CAAChB,EAHhB,CADS,EA9Db,EADF,EADF,EADF,CAiFGZ,KAAK,eACJ,MAAC,UAAD,EACE,MAAM,CAAEA,KADV,CAEE,OAAO,CAAEkB,YAFX,CAGE,KAAK,SAAE,gBAHT,CAIE,OAAO,CAAC,OAJV,mBAMG,gEANH,cAOE,KAAC,WAAD,EAAa,KAAK,CAAElB,KAApB,EAPF,GAlFJ,GADF,CA+FD,CAED,cAAexB,CAAAA,YAAf","sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport { t } from '@lingui/macro';\nimport { useLocation } from 'react-router-dom';\nimport 'styled-components/macro';\nimport { PageSection, Card } from '@patternfly/react-core';\n\nimport useExpanded from 'hooks/useExpanded';\nimport DataListToolbar from 'components/DataListToolbar';\nimport PaginatedTable, {\n  HeaderRow,\n  HeaderCell,\n  getSearchableKeys,\n} from 'components/PaginatedTable';\nimport AlertModal from 'components/AlertModal';\nimport ErrorDetail from 'components/ErrorDetail';\nimport useRequest, { useDismissableError } from 'hooks/useRequest';\nimport useSelected from 'hooks/useSelected';\nimport { InstancesAPI } from 'api';\nimport { getQSConfig, parseQueryString } from 'util/qs';\nimport HealthCheckButton from 'components/HealthCheckButton';\nimport InstanceListItem from './InstanceListItem';\n\nconst QS_CONFIG = getQSConfig('instance', {\n  page: 1,\n  page_size: 20,\n  order_by: 'hostname',\n});\n\nfunction InstanceList() {\n  const location = useLocation();\n\n  const {\n    result: { instances, count, relatedSearchableKeys, searchableKeys },\n    error: contentError,\n    isLoading,\n    request: fetchInstances,\n  } = useRequest(\n    useCallback(async () => {\n      const params = parseQueryString(QS_CONFIG, location.search);\n      const [response, responseActions] = await Promise.all([\n        InstancesAPI.read(params),\n        InstancesAPI.readOptions(),\n      ]);\n      return {\n        instances: response.data.results,\n        count: response.data.count,\n        actions: responseActions.data.actions,\n        relatedSearchableKeys: (\n          responseActions?.data?.related_search_fields || []\n        ).map((val) => val.slice(0, -8)),\n        searchableKeys: getSearchableKeys(responseActions.data.actions?.GET),\n      };\n    }, [location.search]),\n    {\n      instances: [],\n      count: 0,\n      actions: {},\n      relatedSearchableKeys: [],\n      searchableKeys: [],\n    }\n  );\n\n  const { selected, isAllSelected, handleSelect, clearSelected, selectAll } =\n    useSelected(instances.filter((i) => i.node_type !== 'hop'));\n\n  useEffect(() => {\n    fetchInstances();\n  }, [fetchInstances]);\n\n  const {\n    error: healthCheckError,\n    request: fetchHealthCheck,\n    isLoading: isHealthCheckLoading,\n  } = useRequest(\n    useCallback(async () => {\n      await Promise.all(\n        selected\n          .filter(({ node_type }) => node_type !== 'hop')\n          .map(({ id }) => InstancesAPI.healthCheck(id))\n      );\n      fetchInstances();\n    }, [selected, fetchInstances])\n  );\n  const handleHealthCheck = async () => {\n    await fetchHealthCheck();\n    clearSelected();\n  };\n  const { error, dismissError } = useDismissableError(healthCheckError);\n\n  const { expanded, isAllExpanded, handleExpand, expandAll } =\n    useExpanded(instances);\n  return (\n    <>\n      <PageSection>\n        <Card>\n          <PaginatedTable\n            contentError={contentError}\n            hasContentLoading={isLoading || isHealthCheckLoading}\n            items={instances}\n            itemCount={count}\n            pluralizedItemName={t`Instances`}\n            qsConfig={QS_CONFIG}\n            clearSelected={clearSelected}\n            toolbarSearchableKeys={searchableKeys}\n            toolbarRelatedSearchableKeys={relatedSearchableKeys}\n            toolbarSearchColumns={[\n              {\n                name: t`Name`,\n                key: 'hostname__icontains',\n                isDefault: true,\n              },\n              {\n                name: t`Node Type`,\n                key: `or__node_type`,\n                options: [\n                  [`control`, t`Control`],\n                  [`execution`, t`Execution`],\n                  [`hybrid`, t`Hybrid`],\n                  [`hop`, t`Hop`],\n                ],\n              },\n            ]}\n            toolbarSortColumns={[\n              {\n                name: t`Name`,\n                key: 'hostname',\n              },\n            ]}\n            renderToolbar={(props) => (\n              <DataListToolbar\n                {...props}\n                isAllSelected={isAllSelected}\n                onSelectAll={selectAll}\n                isAllExpanded={isAllExpanded}\n                onExpandAll={expandAll}\n                qsConfig={QS_CONFIG}\n                additionalControls={[\n                  <HealthCheckButton\n                    onClick={handleHealthCheck}\n                    selectedItems={selected}\n                  />,\n                ]}\n              />\n            )}\n            headerRow={\n              <HeaderRow qsConfig={QS_CONFIG} isExpandable>\n                <HeaderCell\n                  tooltip={t`Cannot run health check on hop nodes.`}\n                  sortKey=\"hostname\"\n                >{t`Name`}</HeaderCell>\n                <HeaderCell sortKey=\"errors\">{t`Status`}</HeaderCell>\n                <HeaderCell sortKey=\"node_type\">{t`Node Type`}</HeaderCell>\n                <HeaderCell>{t`Capacity Adjustment`}</HeaderCell>\n                <HeaderCell>{t`Used Capacity`}</HeaderCell>\n                <HeaderCell>{t`Actions`}</HeaderCell>\n              </HeaderRow>\n            }\n            renderRow={(instance, index) => (\n              <InstanceListItem\n                isExpanded={expanded.some((row) => row.id === instance.id)}\n                onExpand={() => handleExpand(instance)}\n                key={instance.id}\n                value={instance.hostname}\n                instance={instance}\n                onSelect={() => handleSelect(instance)}\n                isSelected={selected.some((row) => row.id === instance.id)}\n                fetchInstances={fetchInstances}\n                rowIndex={index}\n              />\n            )}\n          />\n        </Card>\n      </PageSection>\n      {error && (\n        <AlertModal\n          isOpen={error}\n          onClose={dismissError}\n          title={t`Error!`}\n          variant=\"error\"\n        >\n          {t`Failed to run a health check on one or more instances.`}\n          <ErrorDetail error={error} />\n        </AlertModal>\n      )}\n    </>\n  );\n}\n\nexport default InstanceList;\n"]},"metadata":{},"sourceType":"module"}