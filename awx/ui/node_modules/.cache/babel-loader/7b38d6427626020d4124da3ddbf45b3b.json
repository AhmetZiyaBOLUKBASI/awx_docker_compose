{"ast":null,"code":"import _objectWithoutProperties from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _excluded=[\"emailOptions\"],_excluded2=[\"useCustomMessages\"];import{i18n}from\"@lingui/core\";import React,{useCallback}from'react';import{Formik,useField,useFormikContext}from'formik';import{Form,FormGroup}from'@patternfly/react-core';import AnsibleSelect from'components/AnsibleSelect';import FormField,{FormSubmitError}from'components/FormField';import FormActionGroup from'components/FormActionGroup/FormActionGroup';import{OrganizationLookup}from'components/Lookup';import{required}from'util/validators';import{FormColumnLayout}from'components/FormLayout';import TypeInputsSubForm from'./TypeInputsSubForm';import CustomMessagesSubForm from'./CustomMessagesSubForm';import hasCustomMessages from'./hasCustomMessages';import typeFieldNames,{initialConfigValues}from'./typeFieldNames';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function NotificationTemplateFormFields(_ref){var defaultMessages=_ref.defaultMessages,template=_ref.template;var _useFormikContext=useFormikContext(),setFieldValue=_useFormikContext.setFieldValue,setFieldTouched=_useFormikContext.setFieldTouched;var _useField=useField('organization'),_useField2=_slicedToArray(_useField,3),orgField=_useField2[0],orgMeta=_useField2[1],orgHelpers=_useField2[2];var _useField3=useField({name:'notification_type',validate:required(/*i18n*/i18n._(\"Select a value for this field\"))}),_useField4=_slicedToArray(_useField3,2),typeField=_useField4[0],typeMeta=_useField4[1];var handleOrganizationUpdate=useCallback(function(value){setFieldValue('organization',value);setFieldTouched('organization',true,false);},[setFieldValue,setFieldTouched]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FormField,{id:\"notification-name\",name:\"name\",type:\"text\",label:/*i18n*/i18n._(\"Name\"),validate:required(null),isRequired:true}),/*#__PURE__*/_jsx(FormField,{id:\"notification-description\",name:\"description\",type:\"text\",label:/*i18n*/i18n._(\"Description\")}),/*#__PURE__*/_jsx(OrganizationLookup,{helperTextInvalid:orgMeta.error,isValid:!orgMeta.touched||!orgMeta.error,onBlur:function onBlur(){return orgHelpers.setTouched();},onChange:handleOrganizationUpdate,value:orgField.value,touched:orgMeta.touched,error:orgMeta.error,required:true,autoPopulate:!(template!==null&&template!==void 0&&template.id),validate:required(/*i18n*/i18n._(\"Select a value for this field\"))}),/*#__PURE__*/_jsx(FormGroup,{fieldId:\"notification-type\",helperTextInvalid:typeMeta.error,isRequired:true,validated:!typeMeta.touched||!typeMeta.error?'default':'error',label:/*i18n*/i18n._(\"Type\"),children:/*#__PURE__*/_jsx(AnsibleSelect,_objectSpread(_objectSpread({},typeField),{},{id:\"notification-type\",isValid:!typeMeta.touched||!typeMeta.error,data:[{value:'',key:'none',label:/*i18n*/i18n._(\"Choose a Notification Type\"),isDisabled:true},{value:'email',key:'email',label:/*i18n*/i18n._(\"E-mail\")},{value:'grafana',key:'grafana',label:'Grafana'},{value:'irc',key:'irc',label:'IRC'},{value:'mattermost',key:'mattermost',label:'Mattermost'},{value:'pagerduty',key:'pagerduty',label:'Pagerduty'},{value:'rocketchat',key:'rocketchat',label:'Rocket.Chat'},{value:'slack',key:'slack',label:'Slack'},{value:'twilio',key:'twilio',label:'Twilio'},{value:'webhook',key:'webhook',label:'Webhook'}]}))}),typeField.value&&/*#__PURE__*/_jsx(TypeInputsSubForm,{type:typeField.value}),/*#__PURE__*/_jsx(CustomMessagesSubForm,{defaultMessages:defaultMessages,type:typeField.value})]});}function NotificationTemplateForm(_ref2){var _template$summary_fie,_messages$workflow_ap,_messages$workflow_ap2,_messages$workflow_ap3,_messages$workflow_ap4;var template=_ref2.template,defaultMessages=_ref2.defaultMessages,onSubmit=_ref2.onSubmit,onCancel=_ref2.onCancel,submitError=_ref2.submitError;var handleSubmit=function handleSubmit(values){var _values$organization;onSubmit(normalizeFields(_objectSpread(_objectSpread({},values),{},{organization:(_values$organization=values.organization)===null||_values$organization===void 0?void 0:_values$organization.id}),defaultMessages));};var messages=template.messages||{workflow_approval:{}};var defs=defaultMessages[template.notification_type||'email'];var mergeDefaultMessages=function mergeDefaultMessages(def){var templ=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return{message:(templ===null||templ===void 0?void 0:templ.message)||def.message||'',body:(templ===null||templ===void 0?void 0:templ.body)||def.body||''};};var _ref3=(template===null||template===void 0?void 0:template.notification_configuration)||{},headers=_ref3.headers;return/*#__PURE__*/_jsx(Formik,{initialValues:{name:template.name,description:template.description,notification_type:template.notification_type,notification_configuration:_objectSpread(_objectSpread(_objectSpread({},initialConfigValues),template.notification_configuration),{},{headers:headers?JSON.stringify(headers,null,2):null}),organization:(_template$summary_fie=template.summary_fields)===null||_template$summary_fie===void 0?void 0:_template$summary_fie.organization,messages:{started:_objectSpread({},mergeDefaultMessages(defs.started,messages.started)),success:_objectSpread({},mergeDefaultMessages(defs.success,messages.success)),error:_objectSpread({},mergeDefaultMessages(defs.error,messages.error)),workflow_approval:{approved:_objectSpread({},mergeDefaultMessages(defs.workflow_approval.approved,(_messages$workflow_ap=messages.workflow_approval)===null||_messages$workflow_ap===void 0?void 0:_messages$workflow_ap.approved)),denied:_objectSpread({},mergeDefaultMessages(defs.workflow_approval.denied,(_messages$workflow_ap2=messages.workflow_approval)===null||_messages$workflow_ap2===void 0?void 0:_messages$workflow_ap2.denied)),running:_objectSpread({},mergeDefaultMessages(defs.workflow_approval.running,(_messages$workflow_ap3=messages.workflow_approval)===null||_messages$workflow_ap3===void 0?void 0:_messages$workflow_ap3.running)),timed_out:_objectSpread({},mergeDefaultMessages(defs.workflow_approval.timed_out,(_messages$workflow_ap4=messages.workflow_approval)===null||_messages$workflow_ap4===void 0?void 0:_messages$workflow_ap4.timed_out))}},useCustomMessages:hasCustomMessages(messages,defs)},onSubmit:handleSubmit,children:function children(formik){return/*#__PURE__*/_jsx(Form,{autoComplete:\"off\",onSubmit:formik.handleSubmit,children:/*#__PURE__*/_jsxs(FormColumnLayout,{children:[/*#__PURE__*/_jsx(NotificationTemplateFormFields,{defaultMessages:defaultMessages,template:template}),/*#__PURE__*/_jsx(FormSubmitError,{error:submitError}),/*#__PURE__*/_jsx(FormActionGroup,{onCancel:onCancel,onSubmit:formik.handleSubmit})]})});}});}NotificationTemplateForm.defaultProps={template:{name:'',description:'',notification_type:''},submitError:null};export default NotificationTemplateForm;function normalizeFields(values,defaultMessages){return normalizeTypeFields(normalizeMessageFields(values,defaultMessages));}/* If the user filled in some of the Type Details fields, then switched\n * to a different notification type, unecessary fields may be set in the\n * notification_configuration â€” this function strips them off */function normalizeTypeFields(values){var stripped={};var fields=typeFieldNames[values.notification_type];fields.forEach(function(fieldName){if(typeof values.notification_configuration[fieldName]!=='undefined'){stripped[fieldName]=values.notification_configuration[fieldName];}});if(values.notification_type==='webhook'){stripped.headers=stripped.headers?JSON.parse(stripped.headers):{};}var emailOptions=values.emailOptions,rest=_objectWithoutProperties(values,_excluded);return _objectSpread(_objectSpread({},rest),{},{notification_configuration:stripped});}function normalizeMessageFields(values,defaults){var useCustomMessages=values.useCustomMessages,rest=_objectWithoutProperties(values,_excluded2);if(!useCustomMessages){return _objectSpread(_objectSpread({},rest),{},{messages:null});}var messages=values.messages;var defs=defaults[values.notification_type];var nullIfDefault=function nullIfDefault(m,d){return{message:m.message===d.message?null:m.message,body:m.body===d.body?null:m.body};};var nonDefaultMessages={started:nullIfDefault(messages.started,defs.started),success:nullIfDefault(messages.success,defs.success),error:nullIfDefault(messages.error,defs.error),workflow_approval:{approved:nullIfDefault(messages.workflow_approval.approved,defs.workflow_approval.approved),denied:nullIfDefault(messages.workflow_approval.denied,defs.workflow_approval.denied),running:nullIfDefault(messages.workflow_approval.running,defs.workflow_approval.running),timed_out:nullIfDefault(messages.workflow_approval.timed_out,defs.workflow_approval.timed_out)}};return _objectSpread(_objectSpread({},rest),{},{messages:nonDefaultMessages});}","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/NotificationTemplate/shared/NotificationTemplateForm.js"],"names":["React","useCallback","Formik","useField","useFormikContext","Form","FormGroup","AnsibleSelect","FormField","FormSubmitError","FormActionGroup","OrganizationLookup","required","FormColumnLayout","TypeInputsSubForm","CustomMessagesSubForm","hasCustomMessages","typeFieldNames","initialConfigValues","NotificationTemplateFormFields","defaultMessages","template","setFieldValue","setFieldTouched","orgField","orgMeta","orgHelpers","name","validate","typeField","typeMeta","handleOrganizationUpdate","value","error","touched","setTouched","id","key","label","isDisabled","NotificationTemplateForm","onSubmit","onCancel","submitError","handleSubmit","values","normalizeFields","organization","messages","workflow_approval","defs","notification_type","mergeDefaultMessages","def","templ","message","body","notification_configuration","headers","description","JSON","stringify","summary_fields","started","success","approved","denied","running","timed_out","useCustomMessages","formik","defaultProps","normalizeTypeFields","normalizeMessageFields","stripped","fields","forEach","fieldName","parse","emailOptions","rest","defaults","nullIfDefault","m","d","nonDefaultMessages"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport { shape, func } from 'prop-types';\nimport { Formik, useField, useFormikContext } from 'formik';\n\nimport { t } from '@lingui/macro';\nimport { Form, FormGroup } from '@patternfly/react-core';\n\nimport AnsibleSelect from 'components/AnsibleSelect';\nimport FormField, { FormSubmitError } from 'components/FormField';\nimport FormActionGroup from 'components/FormActionGroup/FormActionGroup';\nimport { OrganizationLookup } from 'components/Lookup';\nimport { required } from 'util/validators';\nimport { FormColumnLayout } from 'components/FormLayout';\nimport TypeInputsSubForm from './TypeInputsSubForm';\nimport CustomMessagesSubForm from './CustomMessagesSubForm';\nimport hasCustomMessages from './hasCustomMessages';\nimport typeFieldNames, { initialConfigValues } from './typeFieldNames';\n\nfunction NotificationTemplateFormFields({ defaultMessages, template }) {\n  const { setFieldValue, setFieldTouched } = useFormikContext();\n  const [orgField, orgMeta, orgHelpers] = useField('organization');\n  const [typeField, typeMeta] = useField({\n    name: 'notification_type',\n    validate: required(t`Select a value for this field`),\n  });\n\n  const handleOrganizationUpdate = useCallback(\n    (value) => {\n      setFieldValue('organization', value);\n      setFieldTouched('organization', true, false);\n    },\n    [setFieldValue, setFieldTouched]\n  );\n\n  return (\n    <>\n      <FormField\n        id=\"notification-name\"\n        name=\"name\"\n        type=\"text\"\n        label={t`Name`}\n        validate={required(null)}\n        isRequired\n      />\n      <FormField\n        id=\"notification-description\"\n        name=\"description\"\n        type=\"text\"\n        label={t`Description`}\n      />\n      <OrganizationLookup\n        helperTextInvalid={orgMeta.error}\n        isValid={!orgMeta.touched || !orgMeta.error}\n        onBlur={() => orgHelpers.setTouched()}\n        onChange={handleOrganizationUpdate}\n        value={orgField.value}\n        touched={orgMeta.touched}\n        error={orgMeta.error}\n        required\n        autoPopulate={!template?.id}\n        validate={required(t`Select a value for this field`)}\n      />\n      <FormGroup\n        fieldId=\"notification-type\"\n        helperTextInvalid={typeMeta.error}\n        isRequired\n        validated={!typeMeta.touched || !typeMeta.error ? 'default' : 'error'}\n        label={t`Type`}\n      >\n        <AnsibleSelect\n          {...typeField}\n          id=\"notification-type\"\n          isValid={!typeMeta.touched || !typeMeta.error}\n          data={[\n            {\n              value: '',\n              key: 'none',\n              label: t`Choose a Notification Type`,\n              isDisabled: true,\n            },\n            { value: 'email', key: 'email', label: t`E-mail` },\n            { value: 'grafana', key: 'grafana', label: 'Grafana' },\n            { value: 'irc', key: 'irc', label: 'IRC' },\n            { value: 'mattermost', key: 'mattermost', label: 'Mattermost' },\n            { value: 'pagerduty', key: 'pagerduty', label: 'Pagerduty' },\n            { value: 'rocketchat', key: 'rocketchat', label: 'Rocket.Chat' },\n            { value: 'slack', key: 'slack', label: 'Slack' },\n            { value: 'twilio', key: 'twilio', label: 'Twilio' },\n            { value: 'webhook', key: 'webhook', label: 'Webhook' },\n          ]}\n        />\n      </FormGroup>\n      {typeField.value && <TypeInputsSubForm type={typeField.value} />}\n      <CustomMessagesSubForm\n        defaultMessages={defaultMessages}\n        type={typeField.value}\n      />\n    </>\n  );\n}\n\nfunction NotificationTemplateForm({\n  template,\n  defaultMessages,\n  onSubmit,\n  onCancel,\n  submitError,\n}) {\n  const handleSubmit = (values) => {\n    onSubmit(\n      normalizeFields(\n        {\n          ...values,\n          organization: values.organization?.id,\n        },\n        defaultMessages\n      )\n    );\n  };\n\n  const messages = template.messages || { workflow_approval: {} };\n  const defs = defaultMessages[template.notification_type || 'email'];\n  const mergeDefaultMessages = (def, templ = {}) => ({\n    message: templ?.message || def.message || '',\n    body: templ?.body || def.body || '',\n  });\n\n  const { headers } = template?.notification_configuration || {};\n\n  return (\n    <Formik\n      initialValues={{\n        name: template.name,\n        description: template.description,\n        notification_type: template.notification_type,\n        notification_configuration: {\n          ...initialConfigValues,\n          ...template.notification_configuration,\n          headers: headers ? JSON.stringify(headers, null, 2) : null,\n        },\n        organization: template.summary_fields?.organization,\n        messages: {\n          started: { ...mergeDefaultMessages(defs.started, messages.started) },\n          success: { ...mergeDefaultMessages(defs.success, messages.success) },\n          error: { ...mergeDefaultMessages(defs.error, messages.error) },\n          workflow_approval: {\n            approved: {\n              ...mergeDefaultMessages(\n                defs.workflow_approval.approved,\n                messages.workflow_approval?.approved\n              ),\n            },\n            denied: {\n              ...mergeDefaultMessages(\n                defs.workflow_approval.denied,\n                messages.workflow_approval?.denied\n              ),\n            },\n            running: {\n              ...mergeDefaultMessages(\n                defs.workflow_approval.running,\n                messages.workflow_approval?.running\n              ),\n            },\n            timed_out: {\n              ...mergeDefaultMessages(\n                defs.workflow_approval.timed_out,\n                messages.workflow_approval?.timed_out\n              ),\n            },\n          },\n        },\n        useCustomMessages: hasCustomMessages(messages, defs),\n      }}\n      onSubmit={handleSubmit}\n    >\n      {(formik) => (\n        <Form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n          <FormColumnLayout>\n            <NotificationTemplateFormFields\n              defaultMessages={defaultMessages}\n              template={template}\n            />\n            <FormSubmitError error={submitError} />\n            <FormActionGroup\n              onCancel={onCancel}\n              onSubmit={formik.handleSubmit}\n            />\n          </FormColumnLayout>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nNotificationTemplateForm.propTypes = {\n  template: shape(),\n  defaultMessages: shape().isRequired,\n  onSubmit: func.isRequired,\n  onCancel: func.isRequired,\n  submitError: shape(),\n};\n\nNotificationTemplateForm.defaultProps = {\n  template: {\n    name: '',\n    description: '',\n    notification_type: '',\n  },\n  submitError: null,\n};\n\nexport default NotificationTemplateForm;\n\nfunction normalizeFields(values, defaultMessages) {\n  return normalizeTypeFields(normalizeMessageFields(values, defaultMessages));\n}\n\n/* If the user filled in some of the Type Details fields, then switched\n * to a different notification type, unecessary fields may be set in the\n * notification_configuration â€” this function strips them off */\nfunction normalizeTypeFields(values) {\n  const stripped = {};\n  const fields = typeFieldNames[values.notification_type];\n\n  fields.forEach((fieldName) => {\n    if (typeof values.notification_configuration[fieldName] !== 'undefined') {\n      stripped[fieldName] = values.notification_configuration[fieldName];\n    }\n  });\n  if (values.notification_type === 'webhook') {\n    stripped.headers = stripped.headers ? JSON.parse(stripped.headers) : {};\n  }\n  const { emailOptions, ...rest } = values;\n\n  return {\n    ...rest,\n    notification_configuration: stripped,\n  };\n}\n\nfunction normalizeMessageFields(values, defaults) {\n  const { useCustomMessages, ...rest } = values;\n  if (!useCustomMessages) {\n    return {\n      ...rest,\n      messages: null,\n    };\n  }\n  const { messages } = values;\n  const defs = defaults[values.notification_type];\n\n  const nullIfDefault = (m, d) => ({\n    message: m.message === d.message ? null : m.message,\n    body: m.body === d.body ? null : m.body,\n  });\n\n  const nonDefaultMessages = {\n    started: nullIfDefault(messages.started, defs.started),\n    success: nullIfDefault(messages.success, defs.success),\n    error: nullIfDefault(messages.error, defs.error),\n    workflow_approval: {\n      approved: nullIfDefault(\n        messages.workflow_approval.approved,\n        defs.workflow_approval.approved\n      ),\n      denied: nullIfDefault(\n        messages.workflow_approval.denied,\n        defs.workflow_approval.denied\n      ),\n      running: nullIfDefault(\n        messages.workflow_approval.running,\n        defs.workflow_approval.running\n      ),\n      timed_out: nullIfDefault(\n        messages.workflow_approval.timed_out,\n        defs.workflow_approval.timed_out\n      ),\n    },\n  };\n\n  return {\n    ...rest,\n    messages: nonDefaultMessages,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}