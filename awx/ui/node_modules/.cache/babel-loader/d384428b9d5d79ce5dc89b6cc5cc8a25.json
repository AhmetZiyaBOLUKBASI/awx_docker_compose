{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Badge/badge';\nexport var Badge = function Badge(_a) {\n  var _a$isRead = _a.isRead,\n      isRead = _a$isRead === void 0 ? false : _a$isRead,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      _a$children = _a.children,\n      children = _a$children === void 0 ? '' : _a$children,\n      props = __rest(_a, [\"isRead\", \"className\", \"children\"]);\n\n  return React.createElement(\"span\", Object.assign({}, props, {\n    className: css(styles.badge, isRead ? styles.modifiers.read : styles.modifiers.unread, className)\n  }), children);\n};\nBadge.displayName = 'Badge';","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-core/src/components/Badge/Badge.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,qDAAnB;AAWA,OAAO,IAAM,KAAK,GAAwC,SAA7C,KAA6C,CAAC,EAAD,EAKzC;AAL0C,kBAG5C,EAH4C,CACzD,MADyD;AAAA,MACzD,MADyD,0BAChD,KADgD;AAAA,qBAG5C,EAH4C,CAEzD,SAFyD;AAAA,MAEzD,SAFyD,6BAE7C,EAF6C;AAAA,oBAG5C,EAH4C,CAGzD,QAHyD;AAAA,MAGzD,QAHyD,4BAG9C,EAH8C;AAAA,MAItD,KAJsD,GAIjD,MAAA,CAAA,EAAA,EAJiD,CAAA,QAAA,EAAA,WAAA,EAAA,UAAA,CAIjD,CAJiD;;AAKzC,SAChB,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACM,KADN,EACW;AACT,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,KAAR,EAAgB,MAAM,GAAG,MAAM,CAAC,SAAP,CAAiB,IAApB,GAA2B,MAAM,CAAC,SAAP,CAAiB,MAAlE,EAAkF,SAAlF;AADL,GADX,CAAA,EAIG,QAJH,CADgB;AAOjB,CAZM;AAaP,KAAK,CAAC,WAAN,GAAoB,OAApB","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Badge/badge';\n\nexport interface BadgeProps extends React.HTMLProps<HTMLSpanElement> {\n  /**  Adds styling to the badge to indicate it has been read */\n  isRead?: boolean;\n  /** content rendered inside the Badge */\n  children?: React.ReactNode;\n  /** additional classes added to the Badge */\n  className?: string;\n}\n\nexport const Badge: React.FunctionComponent<BadgeProps> = ({\n  isRead = false,\n  className = '',\n  children = '',\n  ...props\n}: BadgeProps) => (\n  <span\n    {...props}\n    className={css(styles.badge, (isRead ? styles.modifiers.read : styles.modifiers.unread) as any, className)}\n  >\n    {children}\n  </span>\n);\nBadge.displayName = 'Badge';\n"]},"metadata":{},"sourceType":"module"}