{"ast":null,"code":"import _taggedTemplateLiteral from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import{i18n}from\"@lingui/core\";import React from'react';import styled from'styled-components';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var GridDL=styled.dl(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  column-gap: 15px;\\n  display: grid;\\n  grid-template-columns: max-content;\\n  row-gap: 0px;\\n  dt {\\n    grid-column-start: 1;\\n  }\\n  dd {\\n    grid-column-start: 2;\\n  }\\n\"])));function WorkflowLinkHelp(_ref){var link=_ref.link;var linkType;switch(link.linkType){case'always':linkType=/*i18n*/i18n._(\"Always\");break;case'success':linkType=/*i18n*/i18n._(\"On Success\");break;case'failure':linkType=/*i18n*/i18n._(\"On Failure\");break;default:linkType='';}return/*#__PURE__*/_jsxs(GridDL,{children:[/*#__PURE__*/_jsx(\"dt\",{children:/*#__PURE__*/_jsx(\"b\",{children:/*i18n*/i18n._(\"Run\")})}),/*#__PURE__*/_jsx(\"dd\",{id:\"workflow-link-help-type\",children:linkType})]});}export default WorkflowLinkHelp;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/Workflow/WorkflowLinkHelp.js"],"names":["React","styled","GridDL","dl","WorkflowLinkHelp","link","linkType"],"mappings":"0KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,C,wFAGA,GAAMC,CAAAA,MAAM,CAAGD,MAAM,CAACE,EAAV,kPAAZ,CAaA,QAASC,CAAAA,gBAAT,MAAoC,IAARC,CAAAA,IAAQ,MAARA,IAAQ,CAClC,GAAIC,CAAAA,QAAJ,CACA,OAAQD,IAAI,CAACC,QAAb,EACE,IAAK,QAAL,CACEA,QAAQ,SAAG,gBAAX,CACA,MACF,IAAK,SAAL,CACEA,QAAQ,SAAG,oBAAX,CACA,MACF,IAAK,SAAL,CACEA,QAAQ,SAAG,oBAAX,CACA,MACF,QACEA,QAAQ,CAAG,EAAX,CAXJ,CAcA,mBACE,MAAC,MAAD,yBACE,iCACE,2BAAI,aAAJ,EADF,EADF,cAIE,WAAI,EAAE,CAAC,yBAAP,UAAkCA,QAAlC,EAJF,GADF,CAQD,CAMD,cAAeF,CAAAA,gBAAf","sourcesContent":["import React from 'react';\n\nimport { t } from '@lingui/macro';\nimport styled from 'styled-components';\nimport { shape } from 'prop-types';\n\nconst GridDL = styled.dl`\n  column-gap: 15px;\n  display: grid;\n  grid-template-columns: max-content;\n  row-gap: 0px;\n  dt {\n    grid-column-start: 1;\n  }\n  dd {\n    grid-column-start: 2;\n  }\n`;\n\nfunction WorkflowLinkHelp({ link }) {\n  let linkType;\n  switch (link.linkType) {\n    case 'always':\n      linkType = t`Always`;\n      break;\n    case 'success':\n      linkType = t`On Success`;\n      break;\n    case 'failure':\n      linkType = t`On Failure`;\n      break;\n    default:\n      linkType = '';\n  }\n\n  return (\n    <GridDL>\n      <dt>\n        <b>{t`Run`}</b>\n      </dt>\n      <dd id=\"workflow-link-help-type\">{linkType}</dd>\n    </GridDL>\n  );\n}\n\nWorkflowLinkHelp.propTypes = {\n  link: shape().isRequired,\n};\n\nexport default WorkflowLinkHelp;\n"]},"metadata":{},"sourceType":"module"}