{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"credential\"];import{i18n}from\"@lingui/core\";import React from'react';import{Chip}from'@patternfly/react-core';import{Credential}from'types';import{toTitleCase}from'util/strings';import{jsxs as _jsxs}from\"react/jsx-runtime\";function CredentialChip(_ref){var credential=_ref.credential,props=_objectWithoutProperties(_ref,_excluded);var type;if(credential.cloud){type=/*i18n*/i18n._(\"Cloud\");}else if(credential.kind==='aws'||credential.kind==='ssh'){type=credential.kind.toUpperCase();}else{type=toTitleCase(credential.kind);}var buildCredentialName=function buildCredentialName(){var _credential$inputs;if(credential.kind==='vault'&&(_credential$inputs=credential.inputs)!==null&&_credential$inputs!==void 0&&_credential$inputs.vault_id){return\"\".concat(credential.name,\" | \").concat(credential.inputs.vault_id);}return\"\".concat(credential.name);};return/*#__PURE__*/_jsxs(Chip,_objectSpread(_objectSpread({},props),{},{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[type,\": \"]}),buildCredentialName()]}));}export{CredentialChip as _CredentialChip};export default CredentialChip;","map":{"version":3,"sources":["/awx_devel/awx/ui/src/components/CredentialChip/CredentialChip.js"],"names":["React","Chip","Credential","toTitleCase","CredentialChip","credential","props","type","cloud","kind","toUpperCase","buildCredentialName","inputs","vault_id","name","_CredentialChip"],"mappings":"6RAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,OAASC,IAAT,KAAqB,wBAArB,CACA,OAASC,UAAT,KAA2B,OAA3B,CACA,OAASC,WAAT,KAA4B,cAA5B,C,6CAEA,QAASC,CAAAA,cAAT,MAAkD,IAAxBC,CAAAA,UAAwB,MAAxBA,UAAwB,CAATC,KAAS,0CAChD,GAAIC,CAAAA,IAAJ,CACA,GAAIF,UAAU,CAACG,KAAf,CAAsB,CACpBD,IAAI,SAAG,eAAP,CACD,CAFD,IAEO,IAAIF,UAAU,CAACI,IAAX,GAAoB,KAApB,EAA6BJ,UAAU,CAACI,IAAX,GAAoB,KAArD,CAA4D,CACjEF,IAAI,CAAGF,UAAU,CAACI,IAAX,CAAgBC,WAAhB,EAAP,CACD,CAFM,IAEA,CACLH,IAAI,CAAGJ,WAAW,CAACE,UAAU,CAACI,IAAZ,CAAlB,CACD,CAED,GAAME,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,wBAChC,GAAIN,UAAU,CAACI,IAAX,GAAoB,OAApB,sBAA+BJ,UAAU,CAACO,MAA1C,uCAA+B,mBAAmBC,QAAtD,CAAgE,CAC9D,gBAAUR,UAAU,CAACS,IAArB,eAA+BT,UAAU,CAACO,MAAX,CAAkBC,QAAjD,EACD,CACD,gBAAUR,UAAU,CAACS,IAArB,EACD,CALD,CAOA,mBACE,MAAC,IAAD,gCAAUR,KAAV,6BACE,0BAASC,IAAT,QADF,CAEGI,mBAAmB,EAFtB,IADF,CAMD,CAKD,OAASP,cAAc,GAAIW,CAAAA,eAA3B,EACA,cAAeX,CAAAA,cAAf","sourcesContent":["import React from 'react';\n\nimport { t } from '@lingui/macro';\nimport { Chip } from '@patternfly/react-core';\nimport { Credential } from 'types';\nimport { toTitleCase } from 'util/strings';\n\nfunction CredentialChip({ credential, ...props }) {\n  let type;\n  if (credential.cloud) {\n    type = t`Cloud`;\n  } else if (credential.kind === 'aws' || credential.kind === 'ssh') {\n    type = credential.kind.toUpperCase();\n  } else {\n    type = toTitleCase(credential.kind);\n  }\n\n  const buildCredentialName = () => {\n    if (credential.kind === 'vault' && credential.inputs?.vault_id) {\n      return `${credential.name} | ${credential.inputs.vault_id}`;\n    }\n    return `${credential.name}`;\n  };\n\n  return (\n    <Chip {...props}>\n      <strong>{type}: </strong>\n      {buildCredentialName()}\n    </Chip>\n  );\n}\nCredentialChip.propTypes = {\n  credential: Credential.isRequired,\n};\n\nexport { CredentialChip as _CredentialChip };\nexport default CredentialChip;\n"]},"metadata":{},"sourceType":"module"}