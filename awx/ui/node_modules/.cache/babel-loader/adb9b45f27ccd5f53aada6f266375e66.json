{"ast":null,"code":"export var emptyTD = function emptyTD() {\n  return {\n    component: 'td'\n  };\n};\nexport var scopeColTransformer = function scopeColTransformer() {\n  return {\n    scope: 'col'\n  };\n};\nexport var emptyCol = function emptyCol(label) {\n  return Object.assign({}, label ? {} : {\n    scope: ''\n  });\n};\nexport var parentId = function parentId(_value, _ref) {\n  var rowData = _ref.rowData;\n  return {\n    parentId: rowData.parent\n  };\n};\nexport var mapProps = function mapProps(_label, _ref2) {\n  var property = _ref2.property,\n      rowData = _ref2.rowData;\n  return Object.assign({}, rowData[property] && rowData[property].props);\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/Table/utils/transformers.tsx"],"names":[],"mappings":"AAEA,OAAO,IAAM,OAAO,GAAe,SAAtB,OAAsB;AAAA,SAAO;AACxC,IAAA,SAAS,EAAE;AAD6B,GAAP;AAAA,CAA5B;AAIP,OAAO,IAAM,mBAAmB,GAAe,SAAlC,mBAAkC;AAAA,SAAO;AACpD,IAAA,KAAK,EAAE;AAD6C,GAAP;AAAA,CAAxC;AAIP,OAAO,IAAM,QAAQ,GAAe,SAAvB,QAAuB,CAAC,KAAD;AAAA,SAAgC,MAAA,CAAA,MAAA,CAAA,EAAA,EAC9D,KAAK,GAAG,EAAH,GAAQ;AAAE,IAAA,KAAK,EAAE;AAAT,GADiD,CAAhC;AAAA,CAA7B;AAIP,OAAO,IAAM,QAAQ,GAAe,SAAvB,QAAuB,CAAC,MAAD;AAAA,MAAgC,OAAhC,QAAgC,OAAhC;AAAA,SAAuD;AACzF,IAAA,QAAQ,EAAE,OAAO,CAAC;AADuE,GAAvD;AAAA,CAA7B;AAIP,OAAO,IAAM,QAAQ,GAAe,SAAvB,QAAuB,CAAC,MAAD;AAAA,MAAgC,QAAhC,SAAgC,QAAhC;AAAA,MAA0C,OAA1C,SAA0C,OAA1C;AAAA,SAAgE,MAAA,CAAA,MAAA,CAAA,EAAA,EAC9F,OAAO,CAAC,QAAD,CAAP,IAAqB,OAAO,CAAC,QAAD,CAAP,CAAkB,KADuD,CAAhE;AAAA,CAA7B","sourcesContent":["import { IFormatterValueType, IExtra, ITransform } from '../TableTypes';\n\nexport const emptyTD: ITransform = () => ({\n  component: 'td'\n});\n\nexport const scopeColTransformer: ITransform = () => ({\n  scope: 'col'\n});\n\nexport const emptyCol: ITransform = (label: IFormatterValueType) => ({\n  ...(label ? {} : { scope: '' })\n});\n\nexport const parentId: ITransform = (_value: IFormatterValueType, { rowData }: IExtra) => ({\n  parentId: rowData.parent\n});\n\nexport const mapProps: ITransform = (_label: IFormatterValueType, { property, rowData }: IExtra) => ({\n  ...(rowData[property] && rowData[property].props)\n});\n"]},"metadata":{},"sourceType":"module"}