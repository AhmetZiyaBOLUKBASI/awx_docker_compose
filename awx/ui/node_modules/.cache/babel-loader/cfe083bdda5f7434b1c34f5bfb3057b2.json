{"ast":null,"code":"import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { FavoritesCell } from '../../FavoritesCell';\nexport var favoritable = function favoritable(value, _ref) {\n  var rowIndex = _ref.rowIndex,\n      columnIndex = _ref.columnIndex,\n      rowData = _ref.rowData,\n      column = _ref.column,\n      property = _ref.property;\n  var onFavorite = column.extraParams.onFavorite;\n  var extraData = {\n    rowIndex: rowIndex,\n    columnIndex: columnIndex,\n    column: column,\n    property: property\n  }; // this is a child row which should not display the favorites icon\n\n  if (rowData && rowData.hasOwnProperty('parent') && !rowData.fullWidth) {\n    return {\n      component: 'td',\n      isVisible: true\n    };\n  }\n  /**\n   * @param {React.MouseEvent} event - Mouse event\n   */\n\n\n  function favoritesClick(event) {\n    // tslint:disable-next-line:no-unused-expression\n    onFavorite && onFavorite(event, rowData && !rowData.favorited, rowIndex, rowData, extraData);\n  }\n\n  var additionalProps = rowData.favoritesProps || {};\n  return {\n    className: css(styles.tableFavorite, rowData && rowData.favorited && styles.modifiers.favorited),\n    isVisible: !rowData || !rowData.fullWidth,\n    children: React.createElement(FavoritesCell, Object.assign({\n      rowIndex: rowIndex,\n      onFavorite: favoritesClick,\n      isFavorited: rowData && rowData.favorited\n    }, additionalProps))\n  };\n};","map":{"version":3,"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/Table/utils/decorators/favoritable.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,qDAAnB;AAEA,SAAS,aAAT,QAA8B,qBAA9B;AAEA,OAAO,IAAM,WAAW,GAAe,SAA1B,WAA0B,CACrC,KADqC,QAGnC;AAAA,MADA,QACA,QADA,QACA;AAAA,MADU,WACV,QADU,WACV;AAAA,MADuB,OACvB,QADuB,OACvB;AAAA,MADgC,MAChC,QADgC,MAChC;AAAA,MADwC,QACxC,QADwC,QACxC;AACF,MACiB,UADjB,GAEI,MAFJ,CACE,WADF,CACiB,UADjB;AAGA,MAAM,SAAS,GAAG;AAChB,IAAA,QAAQ,EAAR,QADgB;AAEhB,IAAA,WAAW,EAAX,WAFgB;AAGhB,IAAA,MAAM,EAAN,MAHgB;AAIhB,IAAA,QAAQ,EAAR;AAJgB,GAAlB,CAJE,CAWF;;AACA,MAAI,OAAO,IAAI,OAAO,CAAC,cAAR,CAAuB,QAAvB,CAAX,IAA+C,CAAC,OAAO,CAAC,SAA5D,EAAuE;AACrE,WAAO;AACL,MAAA,SAAS,EAAE,IADN;AAEL,MAAA,SAAS,EAAE;AAFN,KAAP;AAID;AAED;;AAEG;;;AACH,WAAS,cAAT,CAAwB,KAAxB,EAAkE;AAChE;AACA,IAAA,UAAU,IAAI,UAAU,CAAC,KAAD,EAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,SAA5B,EAAuC,QAAvC,EAAiD,OAAjD,EAA0D,SAA1D,CAAxB;AACD;;AAED,MAAM,eAAe,GAAG,OAAO,CAAC,cAAR,IAA0B,EAAlD;AAEA,SAAO;AACL,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,aAAR,EAAuB,OAAO,IAAI,OAAO,CAAC,SAAnB,IAAgC,MAAM,CAAC,SAAP,CAAiB,SAAxE,CADT;AAEL,IAAA,SAAS,EAAE,CAAC,OAAD,IAAY,CAAC,OAAO,CAAC,SAF3B;AAGL,IAAA,QAAQ,EACN,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc,MAAA,CAAA,MAAA,CAAA;AACZ,MAAA,QAAQ,EAAE,QADE;AAEZ,MAAA,UAAU,EAAE,cAFA;AAGZ,MAAA,WAAW,EAAE,OAAO,IAAI,OAAO,CAAC;AAHpB,KAAA,EAIR,eAJQ,CAAd;AAJG,GAAP;AAYD,CA5CM","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { IExtra, IFormatterValueType, ITransform } from '../../TableTypes';\nimport { FavoritesCell } from '../../FavoritesCell';\n\nexport const favoritable: ITransform = (\n  value: IFormatterValueType,\n  { rowIndex, columnIndex, rowData, column, property }: IExtra\n) => {\n  const {\n    extraParams: { onFavorite }\n  } = column;\n  const extraData = {\n    rowIndex,\n    columnIndex,\n    column,\n    property\n  };\n\n  // this is a child row which should not display the favorites icon\n  if (rowData && rowData.hasOwnProperty('parent') && !rowData.fullWidth) {\n    return {\n      component: 'td',\n      isVisible: true\n    };\n  }\n\n  /**\n   * @param {React.MouseEvent} event - Mouse event\n   */\n  function favoritesClick(event: React.MouseEvent<HTMLButtonElement>) {\n    // tslint:disable-next-line:no-unused-expression\n    onFavorite && onFavorite(event, rowData && !rowData.favorited, rowIndex, rowData, extraData);\n  }\n\n  const additionalProps = rowData.favoritesProps || {};\n\n  return {\n    className: css(styles.tableFavorite, rowData && rowData.favorited && styles.modifiers.favorited),\n    isVisible: !rowData || !rowData.fullWidth,\n    children: (\n      <FavoritesCell\n        rowIndex={rowIndex}\n        onFavorite={favoritesClick}\n        isFavorited={rowData && rowData.favorited}\n        {...additionalProps}\n      />\n    )\n  };\n};\n"]},"metadata":{},"sourceType":"module"}