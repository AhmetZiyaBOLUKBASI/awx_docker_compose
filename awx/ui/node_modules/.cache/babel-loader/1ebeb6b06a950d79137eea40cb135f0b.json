{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{getJobModel}from'util/jobs';export function fetchCount(_x,_x2){return _fetchCount.apply(this,arguments);}function _fetchCount(){_fetchCount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(job,params){var _yield$getJobModel$re,_yield$getJobModel$re2,lastEvents;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getJobModel(job.type).readEvents(job.id,_objectSpread(_objectSpread({},params),{},{order_by:'-counter',limit:1}));case 2:_yield$getJobModel$re=_context.sent;_yield$getJobModel$re2=_yield$getJobModel$re.data.results;lastEvents=_yield$getJobModel$re2===void 0?[]:_yield$getJobModel$re2;return _context.abrupt(\"return\",lastEvents.length>=1?lastEvents[0].counter:0);case 6:case\"end\":return _context.stop();}}},_callee);}));return _fetchCount.apply(this,arguments);}export function prependTraceback(job,events){var _events$firstIndex;var countOffset=0;if(!(job!==null&&job!==void 0&&job.result_traceback)){return{events:events,countOffset:countOffset};}var tracebackEvent={counter:1,created:null,event:null,type:null,stdout:job===null||job===void 0?void 0:job.result_traceback,start_line:0};var firstIndex=events.findIndex(function(jobEvent){return jobEvent.counter===1;});if(firstIndex&&(_events$firstIndex=events[firstIndex])!==null&&_events$firstIndex!==void 0&&_events$firstIndex.stdout){var stdoutLines=events[firstIndex].stdout.split('\\r\\n');stdoutLines[0]=tracebackEvent.stdout;events[firstIndex].stdout=stdoutLines.join('\\r\\n');}else{countOffset+=1;events.unshift(tracebackEvent);}return{events:events,countOffset:countOffset};}","map":{"version":3,"sources":["/awx_devel/awx/ui/src/screens/Job/JobOutput/loadJobEvents.js"],"names":["getJobModel","fetchCount","job","params","type","readEvents","id","order_by","limit","data","results","lastEvents","length","counter","prependTraceback","events","countOffset","result_traceback","tracebackEvent","created","event","stdout","start_line","firstIndex","findIndex","jobEvent","stdoutLines","split","join","unshift"],"mappings":"uTAAA,OAASA,WAAT,KAA4B,WAA5B,CAEA,eAAsBC,CAAAA,UAAtB,mD,2FAAO,iBAA0BC,GAA1B,CAA+BC,MAA/B,oMAGKH,CAAAA,WAAW,CAACE,GAAG,CAACE,IAAL,CAAX,CAAsBC,UAAtB,CAAiCH,GAAG,CAACI,EAArC,gCACLH,MADK,MAERI,QAAQ,CAAE,UAFF,CAGRC,KAAK,CAAE,CAHC,GAHL,yFAEHC,IAFG,CAEKC,OAFL,CAEcC,UAFd,iCAE2B,EAF3B,wDAQEA,UAAU,CAACC,MAAX,EAAqB,CAArB,CAAyBD,UAAU,CAAC,CAAD,CAAV,CAAcE,OAAvC,CAAiD,CARnD,wD,6CAWP,MAAO,SAASC,CAAAA,gBAAT,CAA0BZ,GAA1B,CAA+Ba,MAA/B,CAAuC,wBAC5C,GAAIC,CAAAA,WAAW,CAAG,CAAlB,CACA,GAAI,EAACd,GAAD,SAACA,GAAD,WAACA,GAAG,CAAEe,gBAAN,CAAJ,CAA4B,CAC1B,MAAO,CACLF,MAAM,CAANA,MADK,CAELC,WAAW,CAAXA,WAFK,CAAP,CAID,CAED,GAAME,CAAAA,cAAc,CAAG,CACrBL,OAAO,CAAE,CADY,CAErBM,OAAO,CAAE,IAFY,CAGrBC,KAAK,CAAE,IAHc,CAIrBhB,IAAI,CAAE,IAJe,CAKrBiB,MAAM,CAAEnB,GAAF,SAAEA,GAAF,iBAAEA,GAAG,CAAEe,gBALQ,CAMrBK,UAAU,CAAE,CANS,CAAvB,CAQA,GAAMC,CAAAA,UAAU,CAAGR,MAAM,CAACS,SAAP,CAAiB,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACZ,OAAT,GAAqB,CAAnC,EAAjB,CAAnB,CACA,GAAIU,UAAU,sBAAIR,MAAM,CAACQ,UAAD,CAAV,uCAAI,mBAAoBF,MAAtC,CAA8C,CAC5C,GAAMK,CAAAA,WAAW,CAAGX,MAAM,CAACQ,UAAD,CAAN,CAAmBF,MAAnB,CAA0BM,KAA1B,CAAgC,MAAhC,CAApB,CACAD,WAAW,CAAC,CAAD,CAAX,CAAiBR,cAAc,CAACG,MAAhC,CACAN,MAAM,CAACQ,UAAD,CAAN,CAAmBF,MAAnB,CAA4BK,WAAW,CAACE,IAAZ,CAAiB,MAAjB,CAA5B,CACD,CAJD,IAIO,CACLZ,WAAW,EAAI,CAAf,CACAD,MAAM,CAACc,OAAP,CAAeX,cAAf,EACD,CAED,MAAO,CACLH,MAAM,CAANA,MADK,CAELC,WAAW,CAAXA,WAFK,CAAP,CAID","sourcesContent":["import { getJobModel } from 'util/jobs';\n\nexport async function fetchCount(job, params) {\n  const {\n    data: { results: lastEvents = [] },\n  } = await getJobModel(job.type).readEvents(job.id, {\n    ...params,\n    order_by: '-counter',\n    limit: 1,\n  });\n  return lastEvents.length >= 1 ? lastEvents[0].counter : 0;\n}\n\nexport function prependTraceback(job, events) {\n  let countOffset = 0;\n  if (!job?.result_traceback) {\n    return {\n      events,\n      countOffset,\n    };\n  }\n\n  const tracebackEvent = {\n    counter: 1,\n    created: null,\n    event: null,\n    type: null,\n    stdout: job?.result_traceback,\n    start_line: 0,\n  };\n  const firstIndex = events.findIndex((jobEvent) => jobEvent.counter === 1);\n  if (firstIndex && events[firstIndex]?.stdout) {\n    const stdoutLines = events[firstIndex].stdout.split('\\r\\n');\n    stdoutLines[0] = tracebackEvent.stdout;\n    events[firstIndex].stdout = stdoutLines.join('\\r\\n');\n  } else {\n    countOffset += 1;\n    events.unshift(tracebackEvent);\n  }\n\n  return {\n    events,\n    countOffset,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}